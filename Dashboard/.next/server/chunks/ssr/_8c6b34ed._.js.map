{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///D:/Docs/Computer/Inkosei/App/frontend/src/components/dashboard/layout/dashboard-layout.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DashboardLayout = registerClientReference(\n    function() { throw new Error(\"Attempted to call DashboardLayout() from the server but DashboardLayout is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/layout/dashboard-layout.tsx <module evaluation>\",\n    \"DashboardLayout\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,sFACA","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///D:/Docs/Computer/Inkosei/App/frontend/src/components/dashboard/layout/dashboard-layout.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DashboardLayout = registerClientReference(\n    function() { throw new Error(\"Attempted to call DashboardLayout() from the server but DashboardLayout is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/layout/dashboard-layout.tsx\",\n    \"DashboardLayout\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,kEACA","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///D:/Docs/Computer/Inkosei/App/frontend/src/components/dashboard/messages/messages-content.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const MessagesContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call MessagesContent() from the server but MessagesContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/messages/messages-content.tsx <module evaluation>\",\n    \"MessagesContent\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,wFACA","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///D:/Docs/Computer/Inkosei/App/frontend/src/components/dashboard/messages/messages-content.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const MessagesContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call MessagesContent() from the server but MessagesContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/messages/messages-content.tsx\",\n    \"MessagesContent\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,oEACA","debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///D:/Docs/Computer/Inkosei/App/frontend/src/components/dashboard/messages/messages-header.tsx"],"sourcesContent":["/**\r\n * Messages Header Component\r\n * \r\n * Displays the main header for the messages page including:\r\n * - Page title and description\r\n * \r\n * This component is purely presentational and receives its data via props.\r\n */\r\n\r\nexport function MessagesHeader() {\r\n  return (\r\n    <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\r\n      <div>\r\n        <h1 className=\"text-3xl font-bold gradient-heading\">Messages & Notifications</h1>\r\n        <p className=\"text-muted-foreground mt-1\">Stay updated with your novel activity and platform updates</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"AAAA;;;;;;;CAOC;;;;;AAEM,SAAS;IACd,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;;8BACC,8OAAC;oBAAG,WAAU;8BAAsC;;;;;;8BACpD,8OAAC;oBAAE,WAAU;8BAA6B;;;;;;;;;;;;;;;;;AAIlD","debugId":null}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file:///D:/Docs/Computer/Inkosei/App/frontend/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":["file:///D:/Docs/Computer/Inkosei/App/frontend/src/components/dashboard/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card\"\r\n      className={cn(\r\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-header\"\r\n      className={cn(\r\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-title\"\r\n      className={cn(\"leading-none font-semibold\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-action\"\r\n      className={cn(\r\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-content\"\r\n      className={cn(\"px-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-footer\"\r\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport {\r\n  Card,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardTitle,\r\n  CardAction,\r\n  CardDescription,\r\n  CardContent,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///D:/Docs/Computer/Inkosei/App/frontend/src/components/dashboard/messages/category-overview.tsx"],"sourcesContent":["/**\r\n * Category Overview Cards Component\r\n * \r\n * Displays a grid of interactive cards showing message categories with:\r\n * - Category icon and color\r\n * - Message count\r\n * - Category name and description\r\n * - Click functionality to filter messages\r\n * \r\n * Features neumorphic design with hover effects and smooth transitions.\r\n */\r\n\r\nimport { Card, CardContent } from \"@/components/dashboard/ui/card\"\r\nimport type { MessageCategory } from \"@/types/messages\"\r\n\r\ninterface CategoryOverviewProps {\r\n  categories: MessageCategory[]\r\n  onCategorySelect: (categoryId: string) => void\r\n}\r\n\r\nexport function CategoryOverview({ categories, onCategorySelect }: CategoryOverviewProps) {\r\n  return (\r\n    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n      {categories.map((category) => (\r\n        <Card\r\n          key={category.id}\r\n          className=\"neumorphic cursor-pointer hover:shadow-lg transition-all duration-300 group\"\r\n          onClick={() => onCategorySelect(category.id)}\r\n        >\r\n          <CardContent className=\"p-4 text-center\">\r\n            <div\r\n              className={`${category.color} w-12 h-12 rounded-xl flex items-center justify-center mx-auto mb-3 group-hover:scale-110 transition-transform`}\r\n            >\r\n              <category.icon className=\"h-6 w-6 text-white\" />\r\n            </div>\r\n            <div className=\"text-lg font-bold\">{category.count}</div>\r\n            <div className=\"text-xs text-muted-foreground font-medium\">{category.name}</div>\r\n          </CardContent>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"AAAA;;;;;;;;;;CAUC;;;;AAED;;;AAQO,SAAS,iBAAiB,EAAE,UAAU,EAAE,gBAAgB,EAAyB;IACtF,qBACE,8OAAC;QAAI,WAAU;kBACZ,WAAW,GAAG,CAAC,CAAC,yBACf,8OAAC,6IAAA,CAAA,OAAI;gBAEH,WAAU;gBACV,SAAS,IAAM,iBAAiB,SAAS,EAAE;0BAE3C,cAAA,8OAAC,6IAAA,CAAA,cAAW;oBAAC,WAAU;;sCACrB,8OAAC;4BACC,WAAW,GAAG,SAAS,KAAK,CAAC,8GAA8G,CAAC;sCAE5I,cAAA,8OAAC,SAAS,IAAI;gCAAC,WAAU;;;;;;;;;;;sCAE3B,8OAAC;4BAAI,WAAU;sCAAqB,SAAS,KAAK;;;;;;sCAClD,8OAAC;4BAAI,WAAU;sCAA6C,SAAS,IAAI;;;;;;;;;;;;eAXtE,SAAS,EAAE;;;;;;;;;;AAiB1B","debugId":null}},
    {"offset": {"line": 343, "column": 0}, "map": {"version":3,"sources":["file:///D:/Docs/Computer/Inkosei/App/frontend/src/components/dashboard/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\r\n  return (\r\n    <input\r\n      type={type}\r\n      data-slot=\"input\"\r\n      className={cn(\r\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\r\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":["file:///D:/Docs/Computer/Inkosei/App/frontend/src/components/dashboard/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\r\n        outline:\r\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Badge({\r\n  className,\r\n  variant,\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<\"span\"> &\r\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\r\n  const Comp = asChild ? Slot : \"span\"\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"badge\"\r\n      className={cn(badgeVariants({ variant }), className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 415, "column": 0}, "map": {"version":3,"sources":["file:///D:/Docs/Computer/Inkosei/App/frontend/src/components/dashboard/messages/messages-sidebar.tsx"],"sourcesContent":["/**\r\n * Messages Sidebar Component\r\n * \r\n * Left sidebar containing:\r\n * - Search functionality for filtering messages\r\n * - List of message categories with counts and previews\r\n * - Category selection and highlighting\r\n * \r\n * Provides the main navigation interface for browsing different\r\n * types of messages and notifications.\r\n */\r\n\r\nimport { Search } from \"lucide-react\"\r\nimport { Card, CardContent } from \"@/components/dashboard/ui/card\"\r\nimport { Input } from \"@/components/dashboard/ui/input\"\r\nimport { Badge } from \"@/components/dashboard/ui/badge\"\r\nimport type { SidebarCategory } from \"@/types/messages\"\r\n\r\ninterface MessagesSidebarProps {\r\n  categories: SidebarCategory[]\r\n  selectedCategory: string | null\r\n  searchQuery: string\r\n  onCategorySelect: (categoryId: string) => void\r\n  onSearchChange: (query: string) => void\r\n}\r\n\r\nexport function MessagesSidebar({\r\n  categories,\r\n  selectedCategory,\r\n  searchQuery,\r\n  onCategorySelect,\r\n  onSearchChange,\r\n}: MessagesSidebarProps) {\r\n  return (\r\n    <Card className=\"neumorphic\">\r\n      <CardContent className=\"p-0\">\r\n        {/* Search Header */}\r\n        <div className=\"p-4 border-b\">\r\n          <div className=\"relative\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\r\n            <Input\r\n              placeholder=\"Search messages...\"\r\n              value={searchQuery}\r\n              onChange={(e) => onSearchChange(e.target.value)}\r\n              className=\"pl-10\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Categories List */}\r\n        <div className=\"space-y-1 p-2\">\r\n          {categories.map((category) => (\r\n            <div\r\n              key={category.id}\r\n              className={`p-3 rounded-lg cursor-pointer transition-all duration-200 hover:bg-secondary ${\r\n                selectedCategory === category.id ? \"bg-primary/10 border border-primary/20\" : \"\"\r\n              }`}\r\n              onClick={() => onCategorySelect(category.id)}\r\n            >\r\n              <div className=\"flex items-center gap-3\">\r\n                <div className={`w-10 h-10 rounded-lg ${category.color} flex items-center justify-center`}>\r\n                  <category.icon className=\"h-5 w-5\" />\r\n                </div>\r\n                <div className=\"flex-1 min-w-0\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <h3 className=\"font-medium text-sm\">{category.name}</h3>\r\n                    <div className=\"flex items-center gap-1\">\r\n                      {category.unreadCount > 0 ? (\r\n                        <Badge variant=\"default\" className=\"text-xs bg-primary text-primary-foreground\">\r\n                          {category.unreadCount}\r\n                        </Badge>\r\n                      ) : category.count > 0 ? (\r\n                        <Badge variant=\"outline\" className=\"text-xs\">\r\n                          {category.count}\r\n                        </Badge>\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                  <p className=\"text-xs text-muted-foreground truncate\">{category.lastMessage}</p>\r\n                  <p className=\"text-xs text-muted-foreground\">{category.timestamp}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n"],"names":[],"mappings":"AAAA;;;;;;;;;;CAUC;;;;AAED;AACA;AACA;AACA;;;;;;AAWO,SAAS,gBAAgB,EAC9B,UAAU,EACV,gBAAgB,EAChB,WAAW,EACX,gBAAgB,EAChB,cAAc,EACO;IACrB,qBACE,8OAAC,6IAAA,CAAA,OAAI;QAAC,WAAU;kBACd,cAAA,8OAAC,6IAAA,CAAA,cAAW;YAAC,WAAU;;8BAErB,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,sMAAA,CAAA,SAAM;gCAAC,WAAU;;;;;;0CAClB,8OAAC,8IAAA,CAAA,QAAK;gCACJ,aAAY;gCACZ,OAAO;gCACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;gCAC9C,WAAU;;;;;;;;;;;;;;;;;8BAMhB,8OAAC;oBAAI,WAAU;8BACZ,WAAW,GAAG,CAAC,CAAC,yBACf,8OAAC;4BAEC,WAAW,CAAC,6EAA6E,EACvF,qBAAqB,SAAS,EAAE,GAAG,2CAA2C,IAC9E;4BACF,SAAS,IAAM,iBAAiB,SAAS,EAAE;sCAE3C,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAW,CAAC,qBAAqB,EAAE,SAAS,KAAK,CAAC,iCAAiC,CAAC;kDACvF,cAAA,8OAAC,SAAS,IAAI;4CAAC,WAAU;;;;;;;;;;;kDAE3B,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAG,WAAU;kEAAuB,SAAS,IAAI;;;;;;kEAClD,8OAAC;wDAAI,WAAU;kEACZ,SAAS,WAAW,GAAG,kBACtB,8OAAC,8IAAA,CAAA,QAAK;4DAAC,SAAQ;4DAAU,WAAU;sEAChC,SAAS,WAAW;;;;;mEAErB,SAAS,KAAK,GAAG,kBACnB,8OAAC,8IAAA,CAAA,QAAK;4DAAC,SAAQ;4DAAU,WAAU;sEAChC,SAAS,KAAK;;;;;mEAEf;;;;;;;;;;;;0DAGR,8OAAC;gDAAE,WAAU;0DAA0C,SAAS,WAAW;;;;;;0DAC3E,8OAAC;gDAAE,WAAU;0DAAiC,SAAS,SAAS;;;;;;;;;;;;;;;;;;2BA1B/D,SAAS,EAAE;;;;;;;;;;;;;;;;;;;;;AAmC9B","debugId":null}},
    {"offset": {"line": 599, "column": 0}, "map": {"version":3,"sources":["file:///D:/Docs/Computer/Inkosei/App/frontend/src/components/dashboard/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\r\n        outline:\r\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\r\n        ghost:\r\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\r\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\r\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\r\n        icon: \"size-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Button({\r\n  className,\r\n  variant,\r\n  size,\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<\"button\"> &\r\n  VariantProps<typeof buttonVariants> & {\r\n    asChild?: boolean\r\n  }) {\r\n  const Comp = asChild ? Slot : \"button\"\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"button\"\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 656, "column": 0}, "map": {"version":3,"sources":["file:///D:/Docs/Computer/Inkosei/App/frontend/src/components/dashboard/ui/dropdown-menu.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DropdownMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenu() from the server but DropdownMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenu\",\n);\nexport const DropdownMenuCheckboxItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuCheckboxItem() from the server but DropdownMenuCheckboxItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuCheckboxItem\",\n);\nexport const DropdownMenuContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuContent() from the server but DropdownMenuContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuContent\",\n);\nexport const DropdownMenuGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuGroup() from the server but DropdownMenuGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuGroup\",\n);\nexport const DropdownMenuItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuItem() from the server but DropdownMenuItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuItem\",\n);\nexport const DropdownMenuLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuLabel() from the server but DropdownMenuLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuLabel\",\n);\nexport const DropdownMenuPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuPortal() from the server but DropdownMenuPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuPortal\",\n);\nexport const DropdownMenuRadioGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioGroup() from the server but DropdownMenuRadioGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuRadioGroup\",\n);\nexport const DropdownMenuRadioItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioItem() from the server but DropdownMenuRadioItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuRadioItem\",\n);\nexport const DropdownMenuSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSeparator() from the server but DropdownMenuSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuSeparator\",\n);\nexport const DropdownMenuShortcut = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuShortcut() from the server but DropdownMenuShortcut is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuShortcut\",\n);\nexport const DropdownMenuSub = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSub() from the server but DropdownMenuSub is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuSub\",\n);\nexport const DropdownMenuSubContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubContent() from the server but DropdownMenuSubContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuSubContent\",\n);\nexport const DropdownMenuSubTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubTrigger() from the server but DropdownMenuSubTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuSubTrigger\",\n);\nexport const DropdownMenuTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuTrigger() from the server but DropdownMenuTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuTrigger\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,+EACA;AAEG,MAAM,2BAA2B,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1D;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,+EACA;AAEG,MAAM,sBAAsB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,+EACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,+EACA;AAEG,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,+EACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,+EACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,+EACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,+EACA;AAEG,MAAM,wBAAwB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,+EACA;AAEG,MAAM,wBAAwB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,+EACA;AAEG,MAAM,uBAAuB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,+EACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,+EACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,+EACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,+EACA;AAEG,MAAM,sBAAsB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,+EACA","debugId":null}},
    {"offset": {"line": 726, "column": 0}, "map": {"version":3,"sources":["file:///D:/Docs/Computer/Inkosei/App/frontend/src/components/dashboard/ui/dropdown-menu.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DropdownMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenu() from the server but DropdownMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx\",\n    \"DropdownMenu\",\n);\nexport const DropdownMenuCheckboxItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuCheckboxItem() from the server but DropdownMenuCheckboxItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx\",\n    \"DropdownMenuCheckboxItem\",\n);\nexport const DropdownMenuContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuContent() from the server but DropdownMenuContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx\",\n    \"DropdownMenuContent\",\n);\nexport const DropdownMenuGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuGroup() from the server but DropdownMenuGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx\",\n    \"DropdownMenuGroup\",\n);\nexport const DropdownMenuItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuItem() from the server but DropdownMenuItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx\",\n    \"DropdownMenuItem\",\n);\nexport const DropdownMenuLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuLabel() from the server but DropdownMenuLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx\",\n    \"DropdownMenuLabel\",\n);\nexport const DropdownMenuPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuPortal() from the server but DropdownMenuPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx\",\n    \"DropdownMenuPortal\",\n);\nexport const DropdownMenuRadioGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioGroup() from the server but DropdownMenuRadioGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx\",\n    \"DropdownMenuRadioGroup\",\n);\nexport const DropdownMenuRadioItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioItem() from the server but DropdownMenuRadioItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx\",\n    \"DropdownMenuRadioItem\",\n);\nexport const DropdownMenuSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSeparator() from the server but DropdownMenuSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSeparator\",\n);\nexport const DropdownMenuShortcut = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuShortcut() from the server but DropdownMenuShortcut is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx\",\n    \"DropdownMenuShortcut\",\n);\nexport const DropdownMenuSub = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSub() from the server but DropdownMenuSub is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSub\",\n);\nexport const DropdownMenuSubContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubContent() from the server but DropdownMenuSubContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSubContent\",\n);\nexport const DropdownMenuSubTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubTrigger() from the server but DropdownMenuSubTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSubTrigger\",\n);\nexport const DropdownMenuTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuTrigger() from the server but DropdownMenuTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dropdown-menu.tsx\",\n    \"DropdownMenuTrigger\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,2DACA;AAEG,MAAM,2BAA2B,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1D;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,2DACA;AAEG,MAAM,sBAAsB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,2DACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,2DACA;AAEG,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,2DACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,2DACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,2DACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,2DACA;AAEG,MAAM,wBAAwB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,2DACA;AAEG,MAAM,wBAAwB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,2DACA;AAEG,MAAM,uBAAuB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,2DACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,2DACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,2DACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,2DACA;AAEG,MAAM,sBAAsB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,2DACA","debugId":null}},
    {"offset": {"line": 796, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 806, "column": 0}, "map": {"version":3,"sources":["file:///D:/Docs/Computer/Inkosei/App/frontend/src/lib/message-utils.ts"],"sourcesContent":["/**\r\n * Message Utilities\r\n * \r\n * Utility functions for message processing and display:\r\n * - Message type icon mapping\r\n * - Message filtering and sorting\r\n * - Status calculations\r\n * \r\n * Centralizes message-related business logic for reuse across components.\r\n */\r\n\r\nimport React from \"react\"\r\nimport {\r\n  MessageSquare,\r\n  Star,\r\n  Heart,\r\n  Bell,\r\n  Users,\r\n  Mail,\r\n  Settings,\r\n  AlertCircle,\r\n  Gift,\r\n  GraduationCap,\r\n  Zap,\r\n} from \"lucide-react\"\r\nimport type { Message } from \"@/types/messages\"\r\n\r\n/**\r\n * Returns the appropriate icon component for a message type\r\n */\r\nexport function getMessageIcon(type: string): React.ReactElement {\r\n  switch (type) {\r\n    case \"comment\":\r\n      return React.createElement(MessageSquare, { className: \"h-4 w-4 text-blue-500\" })\r\n    case \"review\":\r\n      return React.createElement(Star, { className: \"h-4 w-4 text-amber-500\" })\r\n    case \"reaction\":\r\n      return React.createElement(Heart, { className: \"h-4 w-4 text-red-500\" })\r\n    case \"reply\":\r\n      return React.createElement(MessageSquare, { className: \"h-4 w-4 text-green-500\" })\r\n    case \"mention\":\r\n      return React.createElement(Bell, { className: \"h-4 w-4 text-purple-500\" })\r\n    case \"follower\":\r\n      return React.createElement(Users, { className: \"h-4 w-4 text-green-500\" })\r\n    case \"message\":\r\n      return React.createElement(Mail, { className: \"h-4 w-4 text-blue-500\" })\r\n    case \"maintenance\":\r\n      return React.createElement(Settings, { className: \"h-4 w-4 text-gray-500\" })\r\n    case \"reward\":\r\n      return React.createElement(Gift, { className: \"h-4 w-4 text-pink-500\" })\r\n    case \"security\":\r\n      return React.createElement(AlertCircle, { className: \"h-4 w-4 text-red-500\" })\r\n    case \"course\":\r\n      return React.createElement(GraduationCap, { className: \"h-4 w-4 text-green-500\" })\r\n    case \"feature\":\r\n      return React.createElement(Zap, { className: \"h-4 w-4 text-purple-500\" })\r\n    default:\r\n      return React.createElement(Bell, { className: \"h-4 w-4 text-muted-foreground\" })\r\n  }\r\n}\r\n\r\n/**\r\n * Filters messages based on category and search query\r\n */\r\nexport function filterMessages(\r\n  messages: Message[],\r\n  category?: string,\r\n  searchQuery?: string\r\n): Message[] {\r\n  let filtered = messages\r\n\r\n  if (category) {\r\n    // Filter by the exact category (subcategory)\r\n    filtered = filtered.filter((message) => message.category === category)\r\n  }\r\n\r\n  if (searchQuery && searchQuery.trim()) {\r\n    const query = searchQuery.toLowerCase()\r\n    filtered = filtered.filter(\r\n      (message) =>\r\n        message.title.toLowerCase().includes(query) ||\r\n        message.message.toLowerCase().includes(query) ||\r\n        message.novelTitle?.toLowerCase().includes(query) ||\r\n        message.chapterTitle?.toLowerCase().includes(query)\r\n    )\r\n  }\r\n\r\n  return filtered\r\n}\r\n\r\n/**\r\n * Filters messages by main category (includes all subcategories)\r\n */\r\nexport function filterMessagesByMainCategory(\r\n  messages: Message[],\r\n  mainCategory: string,\r\n  subcategories: { id: string; parentCategory: string }[]\r\n): Message[] {\r\n  const relevantSubcategoryIds = subcategories\r\n    .filter(sub => sub.parentCategory === mainCategory)\r\n    .map(sub => sub.id)\r\n  \r\n  return messages.filter(message => relevantSubcategoryIds.includes(message.category))\r\n}\r\n\r\n/**\r\n * Calculates message statistics\r\n */\r\nexport function calculateMessageStats(messages: Message[]) {\r\n  const totalMessages = messages.length\r\n  \r\n  const categoryCounts = messages.reduce((acc, message) => {\r\n    acc[message.category] = (acc[message.category] || 0) + 1\r\n    return acc\r\n  }, {} as Record<string, number>)\r\n\r\n  return {\r\n    totalMessages,\r\n    unreadMessages: 0, // Removed unread functionality\r\n    categoryCounts,\r\n  }\r\n}\r\n\r\n/**\r\n * Sorts messages by priority and timestamp\r\n */\r\nexport function sortMessages(messages: Message[]): Message[] {\r\n  const priorityOrder = { high: 3, medium: 2, low: 1 }\r\n  \r\n  return [...messages].sort((a, b) => {\r\n    // Sort by priority\r\n    const priorityDiff = priorityOrder[b.priority] - priorityOrder[a.priority]\r\n    if (priorityDiff !== 0) {\r\n      return priorityDiff\r\n    }\r\n    \r\n    // Finally by timestamp (newest first)\r\n    return new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime()\r\n  })\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 944, "column": 0}, "map": {"version":3,"sources":["file:///D:/Docs/Computer/Inkosei/App/frontend/src/components/dashboard/messages/message-item.tsx"],"sourcesContent":["/**\r\n * Individual Message Item Component\r\n * \r\n * Renders a single message with:\r\n * - Message type icon and styling\r\n * - Read/unread visual indicators\r\n * - Message content and metadata\r\n * - Novel/chapter context information\r\n * - Action dropdown menu\r\n * \r\n * Handles individual message interactions and state management.\r\n */\r\n\r\nimport { Clock, MoreHorizontal, Archive, Trash2 } from \"lucide-react\"\r\nimport { Button } from \"@/components/dashboard/ui/button\"\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger,\r\n} from \"@/components/dashboard/ui/dropdown-menu\"\r\nimport type { Message } from \"@/types/messages\"\r\nimport { getMessageIcon } from \"@/lib/message-utils\"\r\n\r\ninterface MessageItemProps {\r\n  message: Message\r\n  onArchive: (messageId: number) => void\r\n  onDelete: (messageId: number) => void\r\n  onMessageClick?: (messageId: number) => void\r\n}\r\n\r\nexport function MessageItem({ message, onArchive, onDelete, onMessageClick }: MessageItemProps) {\r\n  const handleItemClick = () => {\r\n    if (onMessageClick) {\r\n      onMessageClick(message.id)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div \r\n      className={`p-4 rounded-lg border transition-all duration-200 hover:bg-secondary/50 bg-card ${\r\n        onMessageClick ? 'cursor-pointer' : ''\r\n      }`}\r\n      onClick={handleItemClick}\r\n    >\r\n      <div className=\"flex items-start gap-4\">\r\n        <div className=\"flex-shrink-0 mt-1\">{getMessageIcon(message.type)}</div>\r\n\r\n        <div className=\"flex-1 min-w-0\">\r\n          <div className=\"flex items-start justify-between gap-4\">\r\n            <div className=\"flex-1\">\r\n              {/* Message Header */}\r\n              <div className=\"flex items-center gap-2 mb-1\">\r\n                <h3 className=\"font-medium text-sm\">\r\n                  {message.title}\r\n                </h3>\r\n              </div>\r\n\r\n              {/* Message Content */}\r\n              <p className=\"text-sm text-muted-foreground mb-2 line-clamp-2\">{message.message}</p>\r\n\r\n              {/* Novel/Chapter Context */}\r\n              {(message.novelTitle || message.chapterTitle) && (\r\n                <div className=\"mb-2 p-2 rounded-md bg-secondary/50\">\r\n                  {message.novelTitle && (\r\n                    <div className=\"text-xs text-muted-foreground\">\r\n                      <span className=\"font-medium\">Novel:</span> {message.novelTitle}\r\n                    </div>\r\n                  )}\r\n                  {message.chapterTitle && (\r\n                    <div className=\"text-xs text-muted-foreground\">\r\n                      <span className=\"font-medium\">Chapter:</span> {message.chapterTitle}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n              {/* Timestamp */}\r\n              <div className=\"flex items-center gap-2 text-xs text-muted-foreground\">\r\n                <Clock className=\"h-3 w-3\" />\r\n                <span>{message.timestamp}</span>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Actions Dropdown */}\r\n            <DropdownMenu>\r\n              <DropdownMenuTrigger asChild>\r\n                <Button \r\n                  variant=\"ghost\" \r\n                  size=\"sm\"\r\n                  onClick={(e) => e.stopPropagation()}\r\n                >\r\n                  <MoreHorizontal className=\"h-4 w-4\" />\r\n                </Button>\r\n              </DropdownMenuTrigger>\r\n              <DropdownMenuContent>\r\n                <DropdownMenuItem onClick={() => onArchive(message.id)}>\r\n                  <Archive className=\"h-4 w-4 mr-2\" />\r\n                  Archive\r\n                </DropdownMenuItem>\r\n                <DropdownMenuItem className=\"text-destructive\" onClick={() => onDelete(message.id)}>\r\n                  <Trash2 className=\"h-4 w-4 mr-2\" />\r\n                  Delete\r\n                </DropdownMenuItem>\r\n              </DropdownMenuContent>\r\n            </DropdownMenu>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;CAWC;;;;AAED;AAAA;AAAA;AAAA;AACA;AACA;AAOA;;;;;;AASO,SAAS,YAAY,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,cAAc,EAAoB;IAC5F,MAAM,kBAAkB;QACtB,IAAI,gBAAgB;YAClB,eAAe,QAAQ,EAAE;QAC3B;IACF;IAEA,qBACE,8OAAC;QACC,WAAW,CAAC,gFAAgF,EAC1F,iBAAiB,mBAAmB,IACpC;QACF,SAAS;kBAET,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;8BAAsB,CAAA,GAAA,8HAAA,CAAA,iBAAc,AAAD,EAAE,QAAQ,IAAI;;;;;;8BAEhE,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDAEb,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC;4CAAG,WAAU;sDACX,QAAQ,KAAK;;;;;;;;;;;kDAKlB,8OAAC;wCAAE,WAAU;kDAAmD,QAAQ,OAAO;;;;;;oCAG9E,CAAC,QAAQ,UAAU,IAAI,QAAQ,YAAY,mBAC1C,8OAAC;wCAAI,WAAU;;4CACZ,QAAQ,UAAU,kBACjB,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAK,WAAU;kEAAc;;;;;;oDAAa;oDAAE,QAAQ,UAAU;;;;;;;4CAGlE,QAAQ,YAAY,kBACnB,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAK,WAAU;kEAAc;;;;;;oDAAe;oDAAE,QAAQ,YAAY;;;;;;;;;;;;;kDAO3E,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,oMAAA,CAAA,QAAK;gDAAC,WAAU;;;;;;0DACjB,8OAAC;0DAAM,QAAQ,SAAS;;;;;;;;;;;;;;;;;;0CAK5B,8OAAC,yJAAA,CAAA,eAAY;;kDACX,8OAAC,yJAAA,CAAA,sBAAmB;wCAAC,OAAO;kDAC1B,cAAA,8OAAC,+IAAA,CAAA,SAAM;4CACL,SAAQ;4CACR,MAAK;4CACL,SAAS,CAAC,IAAM,EAAE,eAAe;sDAEjC,cAAA,8OAAC,gNAAA,CAAA,iBAAc;gDAAC,WAAU;;;;;;;;;;;;;;;;kDAG9B,8OAAC,yJAAA,CAAA,sBAAmB;;0DAClB,8OAAC,yJAAA,CAAA,mBAAgB;gDAAC,SAAS,IAAM,UAAU,QAAQ,EAAE;;kEACnD,8OAAC,wMAAA,CAAA,UAAO;wDAAC,WAAU;;;;;;oDAAiB;;;;;;;0DAGtC,8OAAC,yJAAA,CAAA,mBAAgB;gDAAC,WAAU;gDAAmB,SAAS,IAAM,SAAS,QAAQ,EAAE;;kEAC/E,8OAAC,0MAAA,CAAA,SAAM;wDAAC,WAAU;;;;;;oDAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUrD","debugId":null}},
    {"offset": {"line": 1201, "column": 0}, "map": {"version":3,"sources":["file:///D:/Docs/Computer/Inkosei/App/frontend/src/components/dashboard/messages/messages-list.tsx"],"sourcesContent":["/**\r\n * Messages List Component\r\n * \r\n * Main content area displaying:\r\n * - List of filtered messages\r\n * - Empty states when no messages\r\n * - Category header with actions\r\n * \r\n * Handles message list rendering and bulk actions.\r\n */\r\n\r\nimport { Mail, Bell, CheckCircle, Circle, Gift } from \"lucide-react\"\r\nimport { Card, CardContent } from \"@/components/dashboard/ui/card\"\r\nimport { Button } from \"@/components/dashboard/ui/button\"\r\nimport { MessageItem } from \"./message-item\"\r\nimport type { Message, SidebarCategory } from \"@/types/messages\"\r\n\r\ninterface MessagesListProps {\r\n  messages: Message[]\r\n  selectedCategory: string | null\r\n  categories: SidebarCategory[]\r\n  onArchive: (messageId: number) => void\r\n  onDelete: (messageId: number) => void\r\n  onMarkAllRead: () => void\r\n  onMarkAllUnread: () => void\r\n  onMessageClick?: (messageId: number) => void\r\n}\r\n\r\nexport function MessagesList({\r\n  messages,\r\n  selectedCategory,\r\n  categories,\r\n  onArchive,\r\n  onDelete,\r\n  onMarkAllRead,\r\n  onMarkAllUnread,\r\n  onMessageClick\r\n}: MessagesListProps) {\r\n  const selectedCategoryName = categories.find((cat) => cat.id === selectedCategory)?.name\r\n\r\n  return (\r\n    <Card className=\"neumorphic\">\r\n      <CardContent className=\"p-6\">\r\n        {!selectedCategory ? (\r\n          /* Empty State - No Category Selected */\r\n          <div className=\"text-center py-12\">\r\n            <Mail className=\"h-16 w-16 text-muted-foreground mx-auto mb-4\" />\r\n            <h3 className=\"text-lg font-semibold mb-2\">Select a category to view messages</h3>\r\n            <p className=\"text-muted-foreground\">Choose a category from above to see your messages</p>\r\n          </div>\r\n        ) : selectedCategory === \"gifts-rewards\" ? (\r\n          /* Coming Soon State - Gifts & Rewards */\r\n          <div className=\"text-center py-16\">\r\n            <div className=\"mb-6\">\r\n              <Gift className=\"h-20 w-20 text-muted-foreground mx-auto mb-4 opacity-50\" />\r\n            </div>\r\n            <h3 className=\"text-2xl font-semibold mb-3 text-foreground\">Gifts & Rewards</h3>\r\n            <h4 className=\"text-xl mb-4 text-muted-foreground\">Coming Soon</h4>\r\n            <p className=\"text-muted-foreground max-w-md mx-auto\">\r\n              We&apos;re working on an exciting rewards system for our authors!\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"space-y-4\">\r\n            {/* Category Header */}\r\n            <div className=\"flex items-center justify-between\">\r\n              <h2 className=\"text-xl font-semibold\">{selectedCategoryName}</h2>\r\n              <div className=\"flex items-center gap-2\">\r\n                <Button variant=\"outline\" size=\"sm\" className=\"gap-2 bg-transparent\" onClick={onMarkAllRead}>\r\n                  <CheckCircle className=\"h-4 w-4\" />\r\n                  Mark All Read\r\n                </Button>\r\n                <Button variant=\"outline\" size=\"sm\" className=\"gap-2 bg-transparent\" onClick={onMarkAllUnread}>\r\n                  <Circle className=\"h-4 w-4\" />\r\n                  Mark All Unread\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Messages List */}\r\n            {messages.length === 0 ? (\r\n              /* Empty State - No Messages in Category */\r\n              <div className=\"text-center py-8\">\r\n                <Bell className=\"h-12 w-12 text-muted-foreground mx-auto mb-3\" />\r\n                <p className=\"text-muted-foreground\">No messages in this category</p>\r\n              </div>\r\n            ) : (\r\n              <div className=\"space-y-3\">\r\n                {messages.map((message) => (\r\n                  <MessageItem\r\n                    key={message.id}\r\n                    message={message}\r\n                    onArchive={onArchive}\r\n                    onDelete={onDelete}\r\n                    onMessageClick={onMessageClick}\r\n                  />\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n"],"names":[],"mappings":"AAAA;;;;;;;;;CASC;;;;AAED;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;AAcO,SAAS,aAAa,EAC3B,QAAQ,EACR,gBAAgB,EAChB,UAAU,EACV,SAAS,EACT,QAAQ,EACR,aAAa,EACb,eAAe,EACf,cAAc,EACI;IAClB,MAAM,uBAAuB,WAAW,IAAI,CAAC,CAAC,MAAQ,IAAI,EAAE,KAAK,mBAAmB;IAEpF,qBACE,8OAAC,6IAAA,CAAA,OAAI;QAAC,WAAU;kBACd,cAAA,8OAAC,6IAAA,CAAA,cAAW;YAAC,WAAU;sBACpB,CAAC,mBACA,sCAAsC,iBACtC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,kMAAA,CAAA,OAAI;wBAAC,WAAU;;;;;;kCAChB,8OAAC;wBAAG,WAAU;kCAA6B;;;;;;kCAC3C,8OAAC;wBAAE,WAAU;kCAAwB;;;;;;;;;;;uBAErC,qBAAqB,kBACvB,uCAAuC,iBACvC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,kMAAA,CAAA,OAAI;4BAAC,WAAU;;;;;;;;;;;kCAElB,8OAAC;wBAAG,WAAU;kCAA8C;;;;;;kCAC5D,8OAAC;wBAAG,WAAU;kCAAqC;;;;;;kCACnD,8OAAC;wBAAE,WAAU;kCAAyC;;;;;;;;;;;qCAKxD,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAyB;;;;;;0CACvC,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,+IAAA,CAAA,SAAM;wCAAC,SAAQ;wCAAU,MAAK;wCAAK,WAAU;wCAAuB,SAAS;;0DAC5E,8OAAC,2NAAA,CAAA,cAAW;gDAAC,WAAU;;;;;;4CAAY;;;;;;;kDAGrC,8OAAC,+IAAA,CAAA,SAAM;wCAAC,SAAQ;wCAAU,MAAK;wCAAK,WAAU;wCAAuB,SAAS;;0DAC5E,8OAAC,sMAAA,CAAA,SAAM;gDAAC,WAAU;;;;;;4CAAY;;;;;;;;;;;;;;;;;;;oBAOnC,SAAS,MAAM,KAAK,IACnB,yCAAyC,iBACzC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,kMAAA,CAAA,OAAI;gCAAC,WAAU;;;;;;0CAChB,8OAAC;gCAAE,WAAU;0CAAwB;;;;;;;;;;;6CAGvC,8OAAC;wBAAI,WAAU;kCACZ,SAAS,GAAG,CAAC,CAAC,wBACb,8OAAC,8JAAA,CAAA,cAAW;gCAEV,SAAS;gCACT,WAAW;gCACX,UAAU;gCACV,gBAAgB;+BAJX,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;AAcnC","debugId":null}},
    {"offset": {"line": 1442, "column": 0}, "map": {"version":3,"sources":["file:///D:/Docs/Computer/Inkosei/App/frontend/src/components/dashboard/ui/dialog.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Dialog = registerClientReference(\n    function() { throw new Error(\"Attempted to call Dialog() from the server but Dialog is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dialog.tsx <module evaluation>\",\n    \"Dialog\",\n);\nexport const DialogClose = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogClose() from the server but DialogClose is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dialog.tsx <module evaluation>\",\n    \"DialogClose\",\n);\nexport const DialogContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogContent() from the server but DialogContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dialog.tsx <module evaluation>\",\n    \"DialogContent\",\n);\nexport const DialogDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogDescription() from the server but DialogDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dialog.tsx <module evaluation>\",\n    \"DialogDescription\",\n);\nexport const DialogFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogFooter() from the server but DialogFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dialog.tsx <module evaluation>\",\n    \"DialogFooter\",\n);\nexport const DialogHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogHeader() from the server but DialogHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dialog.tsx <module evaluation>\",\n    \"DialogHeader\",\n);\nexport const DialogOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogOverlay() from the server but DialogOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dialog.tsx <module evaluation>\",\n    \"DialogOverlay\",\n);\nexport const DialogPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogPortal() from the server but DialogPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dialog.tsx <module evaluation>\",\n    \"DialogPortal\",\n);\nexport const DialogTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogTitle() from the server but DialogTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dialog.tsx <module evaluation>\",\n    \"DialogTitle\",\n);\nexport const DialogTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogTrigger() from the server but DialogTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dialog.tsx <module evaluation>\",\n    \"DialogTrigger\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,wEACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,wEACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,wEACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,wEACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,wEACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,wEACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,wEACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,wEACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,wEACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,wEACA","debugId":null}},
    {"offset": {"line": 1492, "column": 0}, "map": {"version":3,"sources":["file:///D:/Docs/Computer/Inkosei/App/frontend/src/components/dashboard/ui/dialog.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Dialog = registerClientReference(\n    function() { throw new Error(\"Attempted to call Dialog() from the server but Dialog is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dialog.tsx\",\n    \"Dialog\",\n);\nexport const DialogClose = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogClose() from the server but DialogClose is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dialog.tsx\",\n    \"DialogClose\",\n);\nexport const DialogContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogContent() from the server but DialogContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dialog.tsx\",\n    \"DialogContent\",\n);\nexport const DialogDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogDescription() from the server but DialogDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dialog.tsx\",\n    \"DialogDescription\",\n);\nexport const DialogFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogFooter() from the server but DialogFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dialog.tsx\",\n    \"DialogFooter\",\n);\nexport const DialogHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogHeader() from the server but DialogHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dialog.tsx\",\n    \"DialogHeader\",\n);\nexport const DialogOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogOverlay() from the server but DialogOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dialog.tsx\",\n    \"DialogOverlay\",\n);\nexport const DialogPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogPortal() from the server but DialogPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dialog.tsx\",\n    \"DialogPortal\",\n);\nexport const DialogTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogTitle() from the server but DialogTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dialog.tsx\",\n    \"DialogTitle\",\n);\nexport const DialogTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogTrigger() from the server but DialogTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/dialog.tsx\",\n    \"DialogTrigger\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,oDACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,oDACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,oDACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,oDACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,oDACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,oDACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,oDACA;AAEG,MAAM,eAAe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,oDACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,oDACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,oDACA","debugId":null}},
    {"offset": {"line": 1542, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1552, "column": 0}, "map": {"version":3,"sources":["file:///D:/Docs/Computer/Inkosei/App/frontend/src/components/dashboard/ui/scroll-area.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ScrollArea = registerClientReference(\n    function() { throw new Error(\"Attempted to call ScrollArea() from the server but ScrollArea is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/scroll-area.tsx <module evaluation>\",\n    \"ScrollArea\",\n);\nexport const ScrollBar = registerClientReference(\n    function() { throw new Error(\"Attempted to call ScrollBar() from the server but ScrollBar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/scroll-area.tsx <module evaluation>\",\n    \"ScrollBar\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,6EACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,6EACA","debugId":null}},
    {"offset": {"line": 1570, "column": 0}, "map": {"version":3,"sources":["file:///D:/Docs/Computer/Inkosei/App/frontend/src/components/dashboard/ui/scroll-area.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ScrollArea = registerClientReference(\n    function() { throw new Error(\"Attempted to call ScrollArea() from the server but ScrollArea is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/scroll-area.tsx\",\n    \"ScrollArea\",\n);\nexport const ScrollBar = registerClientReference(\n    function() { throw new Error(\"Attempted to call ScrollBar() from the server but ScrollBar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/ui/scroll-area.tsx\",\n    \"ScrollBar\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,yDACA;AAEG,MAAM,YAAY,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,yDACA","debugId":null}},
    {"offset": {"line": 1588, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1598, "column": 0}, "map": {"version":3,"sources":["file:///D:/Docs/Computer/Inkosei/App/frontend/src/components/dashboard/messages/comment-thread-dialog.tsx"],"sourcesContent":["/**\r\n * Comment Thread Dialog Component\r\n * \r\n * Modal dialog that displays a full comment thread for paragraph comments.\r\n * Shows the original comment, all replies, and allows interaction.\r\n * \r\n * Features:\r\n * - Original comment with context (novel, chapter, paragraph)\r\n * - Threaded replies with author highlights\r\n * - Like/reply buttons\r\n * - Close and view chapter actions\r\n */\r\n\r\nimport { ExternalLink, Heart, MessageCircle, Book } from \"lucide-react\"\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/dashboard/ui/dialog\"\r\nimport { Button } from \"@/components/dashboard/ui/button\"\r\nimport { Badge } from \"@/components/dashboard/ui/badge\"\r\nimport { ScrollArea } from \"@/components/dashboard/ui/scroll-area\"\r\n\r\ninterface CommentThread {\r\n  id: string\r\n  originalComment: {\r\n    id: string\r\n    user: string\r\n    content: string\r\n    timestamp: string\r\n    likes: number\r\n    isLiked: boolean\r\n  }\r\n  replies: Array<{\r\n    id: string\r\n    user: string\r\n    content: string\r\n    timestamp: string\r\n    likes: number\r\n    isLiked: boolean\r\n    isAuthor: boolean\r\n  }>\r\n  context: {\r\n    novelTitle: string\r\n    chapterTitle: string\r\n    chapterNumber: number\r\n    paragraphSnippet: string\r\n    author: string\r\n  }\r\n}\r\n\r\ninterface CommentThreadDialogProps {\r\n  isOpen: boolean\r\n  onClose: () => void\r\n  thread: CommentThread | null\r\n  onViewChapter?: () => void\r\n  onLike?: (commentId: string) => void\r\n  // onReply?: (commentId: string, content: string) => void // TODO: Future iteration\r\n}\r\n\r\nexport function CommentThreadDialog({\r\n  isOpen,\r\n  onClose,\r\n  thread,\r\n  onViewChapter,\r\n  onLike\r\n}: CommentThreadDialogProps) {\r\n  if (!thread) return null\r\n\r\n  const formatTimestamp = (timestamp: string) => {\r\n    const date = new Date(timestamp)\r\n    const now = new Date()\r\n    const diffMs = now.getTime() - date.getTime()\r\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60))\r\n    \r\n    if (diffHours < 1) return \"Just now\"\r\n    if (diffHours < 24) return `${diffHours} hour${diffHours > 1 ? 's' : ''} ago`\r\n    \r\n    const diffDays = Math.floor(diffHours / 24)\r\n    if (diffDays < 30) return `${diffDays} day${diffDays > 1 ? 's' : ''} ago`\r\n    \r\n    return date.toLocaleDateString()\r\n  }\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"max-w-4xl h-[80vh] p-0 bg-background border overflow-hidden flex flex-col\" showCloseButton={false}>\r\n        <DialogHeader className=\"p-6 pb-4 border-b flex-shrink-0\">\r\n          <div className=\"flex items-start justify-between\">\r\n            <div className=\"space-y-3 flex-1\">\r\n              <DialogTitle className=\"flex items-center gap-2 text-xl font-semibold\">\r\n                <MessageCircle className=\"h-6 w-6 text-primary\" />\r\n                Comment Thread\r\n              </DialogTitle>\r\n              <div className=\"flex items-center gap-2 text-sm text-muted-foreground bg-secondary/30 rounded-lg px-3 py-2\">\r\n                <Book className=\"h-4 w-4\" />\r\n                <span className=\"font-medium text-foreground\">{thread.context.novelTitle}</span>\r\n                <span>•</span>\r\n                <span>{thread.context.chapterTitle}</span>\r\n                <span className=\"text-xs opacity-75\">by {thread.context.author}</span>\r\n              </div>\r\n            </div>\r\n            <Button \r\n              variant=\"outline\" \r\n              size=\"sm\" \r\n              onClick={onViewChapter}\r\n              className=\"gap-2 ml-4\"\r\n            >\r\n              <ExternalLink className=\"h-4 w-4\" />\r\n              View Chapter\r\n            </Button>\r\n          </div>\r\n        </DialogHeader>\r\n\r\n        <div className=\"flex-1 overflow-hidden\">\r\n          <ScrollArea className=\"h-full w-full\">\r\n            <div className=\"py-6 px-6 space-y-6\">\r\n            {/* Context/Paragraph Snippet */}\r\n            <div className=\"p-4 bg-gradient-to-r from-primary/5 to-primary/10 rounded-xl border border-primary/20\">\r\n              <p className=\"text-xs font-medium text-primary mb-2 uppercase tracking-wide\">Referenced paragraph</p>\r\n              <p className=\"text-sm italic text-muted-foreground leading-relaxed\">\r\n                &ldquo;{thread.context.paragraphSnippet}...&rdquo;\r\n              </p>\r\n            </div>\r\n\r\n            {/* Original Comment */}\r\n            <div className=\"space-y-4\">\r\n              <div className=\"flex items-start gap-4 p-4 bg-card rounded-xl border\">\r\n                <div className=\"w-12 h-12 rounded-full bg-gradient-to-br from-primary/20 to-primary/30 flex items-center justify-center text-sm font-semibold border border-primary/20\">\r\n                  {thread.originalComment.user.charAt(0).toUpperCase()}\r\n                </div>\r\n                <div className=\"flex-1 space-y-3\">\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <span className=\"font-semibold text-foreground\">{thread.originalComment.user}</span>\r\n                    <span className=\"text-sm text-muted-foreground\">\r\n                      {formatTimestamp(thread.originalComment.timestamp)}\r\n                    </span>\r\n                  </div>\r\n                  <p className=\"text-sm leading-relaxed text-foreground\">{thread.originalComment.content}</p>\r\n                  <div className=\"flex items-center gap-4 pt-2\">\r\n                    <Button \r\n                      variant=\"ghost\" \r\n                      size=\"sm\" \r\n                      className={`gap-2 h-9 px-4 rounded-lg transition-colors ${\r\n                        thread.originalComment.isLiked \r\n                          ? 'text-red-500 bg-red-50 hover:bg-red-100 dark:bg-red-500/10 dark:hover:bg-red-500/20' \r\n                          : 'hover:bg-secondary'\r\n                      }`}\r\n                      onClick={() => onLike?.(thread.originalComment.id)}\r\n                    >\r\n                      <Heart className={`h-4 w-4 ${thread.originalComment.isLiked ? 'fill-current' : ''}`} />\r\n                      {thread.originalComment.likes}\r\n                    </Button>\r\n                    <Button variant=\"ghost\" size=\"sm\" className=\"gap-2 h-9 px-4 rounded-lg hover:bg-secondary\">\r\n                      <MessageCircle className=\"h-4 w-4\" />\r\n                      Reply\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Replies */}\r\n              {thread.replies.length > 0 && (\r\n                <div className=\"ml-6 space-y-4 border-l-2 border-primary/20 pl-6\">\r\n                  {thread.replies.map((reply) => (\r\n                    <div key={reply.id} className=\"flex items-start gap-3 p-3 bg-secondary/30 rounded-lg\">\r\n                      <div className=\"w-10 h-10 rounded-full bg-gradient-to-br from-secondary to-secondary/60 flex items-center justify-center text-xs font-semibold border\">\r\n                        {reply.user.charAt(0).toUpperCase()}\r\n                      </div>\r\n                      <div className=\"flex-1 space-y-2\">\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <span className=\"font-medium text-foreground\">{reply.user}</span>\r\n                          {reply.isAuthor && (\r\n                            <Badge variant=\"secondary\" className=\"text-xs bg-primary/10 text-primary border-primary/20\">\r\n                              Author\r\n                            </Badge>\r\n                          )}\r\n                          <span className=\"text-sm text-muted-foreground\">\r\n                            {formatTimestamp(reply.timestamp)}\r\n                          </span>\r\n                        </div>\r\n                        <p className=\"text-sm leading-relaxed text-foreground\">{reply.content}</p>\r\n                        <div className=\"flex items-center gap-4 pt-1\">\r\n                          <Button \r\n                            variant=\"ghost\" \r\n                            size=\"sm\" \r\n                            className={`gap-1 h-8 px-3 text-xs rounded-md transition-colors ${\r\n                              reply.isLiked \r\n                                ? 'text-red-500 bg-red-50 hover:bg-red-100 dark:bg-red-500/10 dark:hover:bg-red-500/20' \r\n                                : 'hover:bg-background'\r\n                            }`}\r\n                            onClick={() => onLike?.(reply.id)}\r\n                          >\r\n                            <Heart className={`h-3 w-3 ${reply.isLiked ? 'fill-current' : ''}`} />\r\n                            {reply.likes}\r\n                          </Button>\r\n                          <Button variant=\"ghost\" size=\"sm\" className=\"gap-1 h-8 px-3 text-xs rounded-md hover:bg-background\">\r\n                            <MessageCircle className=\"h-3 w-3\" />\r\n                            Reply\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Add some bottom padding for better scrolling */}\r\n            <div className=\"pb-4\">\r\n              <p className=\"text-center text-sm text-muted-foreground\">\r\n                {thread.replies.length + 1} comment{thread.replies.length !== 0 ? 's' : ''} in this thread\r\n              </p>\r\n            </div>\r\n            </div>\r\n          </ScrollArea>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2087, "column": 0}, "map": {"version":3,"sources":["file:///D:/Docs/Computer/Inkosei/App/frontend/src/components/dashboard/messages/index.ts"],"sourcesContent":["/**\r\n * Messages Module Barrel Export\r\n * \r\n * Centralizes all exports from the messages module for clean imports.\r\n * This follows the barrel export pattern used throughout the application\r\n * for better organization and easier imports.\r\n */\r\n\r\n// Main component\r\nexport { MessagesContent } from \"./messages-content\"\r\n\r\n// Subcomponents\r\nexport { MessagesHeader } from \"./messages-header\"\r\nexport { CategoryOverview } from \"./category-overview\"\r\nexport { MessagesSidebar } from \"./messages-sidebar\"\r\nexport { MessagesList } from \"./messages-list\"\r\nexport { MessageItem } from \"./message-item\"\r\nexport { CommentThreadDialog } from \"./comment-thread-dialog\"\r\n"],"names":[],"mappings":"AAAA;;;;;;CAMC,GAED,iBAAiB;;AACjB;AAEA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA","debugId":null}},
    {"offset": {"line": 2131, "column": 0}, "map": {"version":3,"sources":["file:///D:/Docs/Computer/Inkosei/App/frontend/src/app/dashboard/messages/page.tsx"],"sourcesContent":["import { DashboardLayout } from \"@/components/dashboard/layout/dashboard-layout\"\r\nimport { MessagesContent } from \"@/components/dashboard/messages\"\r\n\r\nexport default function MessagesPage() {\r\n  return (\r\n    <DashboardLayout>\r\n      <MessagesContent />\r\n    </DashboardLayout>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;;;;AAEe,SAAS;IACtB,qBACE,8OAAC,gKAAA,CAAA,kBAAe;kBACd,cAAA,8OAAC,kKAAA,CAAA,kBAAe;;;;;;;;;;AAGtB","debugId":null}}]
}