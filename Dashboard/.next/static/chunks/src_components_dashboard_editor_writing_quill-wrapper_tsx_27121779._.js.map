{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///d:/Docs/Computer/Inkosei/App/frontend/src/components/dashboard/editor/writing/quill-wrapper.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useMemo, useRef, useEffect, useState } from \"react\";\r\nimport dynamic from \"next/dynamic\";\r\n\r\n// Import ReactQuill with proper error handling\r\nconst ReactQuill = dynamic(() => import(\"react-quill-new\"), {\r\n  ssr: false,\r\n  loading: () => (\r\n    <div className=\"flex items-center justify-center h-96 bg-muted rounded-lg\">\r\n      <div className=\"text-center\">\r\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary mx-auto mb-2\"></div>\r\n        <p className=\"text-muted-foreground\">Loading editor...</p>\r\n      </div>\r\n    </div>\r\n  ),\r\n});\r\n\r\n// Import Quill CSS\r\nimport \"quill/dist/quill.snow.css\";\r\n\r\ninterface QuillWrapperProps {\r\n  value?: string;\r\n  initialValue?: string;\r\n  height?: number;\r\n  width?: string | number;\r\n  onEditorChange?: (content: string) => void;\r\n  onInit?: (evt: any, editor: any) => void;\r\n  init?: Record<string, any>;\r\n  disabled?: boolean;\r\n}\r\n\r\n// Naive markdown<->html conversion helpers (replace with markdown-it + turndown as needed)\r\nfunction markdownToHtml(md: string): string {\r\n  return md\r\n    .replace(/^### (.*$)/gim, \"<h3>$1</h3>\")\r\n    .replace(/^## (.*$)/gim, \"<h2>$1</h2>\")\r\n    .replace(/^# (.*$)/gim, \"<h1>$1</h1>\")\r\n    .replace(/\\*\\*(.*?)\\*\\*/gim, \"<strong>$1</strong>\")\r\n    .replace(/\\*(.*?)\\*/gim, \"<em>$1</em>\")\r\n    .replace(/`([^`]+)`/gim, \"<code>$1</code>\")\r\n    .replace(/\\n$/gim, \"<br/>\");\r\n}\r\n\r\nfunction htmlToMarkdown(html: string): string {\r\n  return html\r\n    .replace(/<h1>(.*?)<\\/h1>/gim, \"# $1\\n\")\r\n    .replace(/<h2>(.*?)<\\/h2>/gim, \"## $1\\n\")\r\n    .replace(/<h3>(.*?)<\\/h3>/gim, \"### $1\\n\")\r\n    .replace(/<strong>(.*?)<\\/strong>/gim, \"**$1**\")\r\n    .replace(/<b>(.*?)<\\/b>/gim, \"**$1**\")\r\n    .replace(/<em>(.*?)<\\/em>/gim, \"*$1*\")\r\n    .replace(/<i>(.*?)<\\/i>/gim, \"*$1*\")\r\n    .replace(/<code>(.*?)<\\/code>/gim, \"`$1`\")\r\n    .replace(/<br\\s*\\/?>/gim, \"\\n\")\r\n    .replace(/<\\/p>/gim, \"\\n\\n\")\r\n    .replace(/<[^>]+>/g, \"\");\r\n}\r\n\r\nexport default function QuillWrapper({\r\n  value,\r\n  initialValue = \"\",\r\n  height = 400,\r\n  width = \"100%\",\r\n  onEditorChange,\r\n  onInit,\r\n  init = {},\r\n  disabled = false,\r\n}: QuillWrapperProps) {\r\n  const [isReady, setIsReady] = useState(false);\r\n  const [isClient, setIsClient] = useState(false);\r\n\r\n  // Ensure we're on the client side\r\n  useEffect(() => {\r\n    setIsClient(true);\r\n  }, []);\r\n\r\n  // Register custom glow formats with Quill only on client side\r\n  useEffect(() => {\r\n    if (!isClient) return;\r\n\r\n    import('quill').then(({ default: Quill }) => {\r\n      const Inline = Quill.import('blots/inline') as any;\r\n      const Scope = Quill.import('parchment').Scope;\r\n\r\n      class GlowFormat extends Inline {\r\n        static blotName = 'glow';\r\n        static tagName = 'span';\r\n        static className = 'glow-text';\r\n        static scope = Scope.INLINE;\r\n\r\n        static create(color: string) {\r\n          const node = super.create();\r\n          if (color && color !== 'false') {\r\n            node.classList.add(`glow-${color}`);\r\n            node.setAttribute('data-glow', color);\r\n          }\r\n          return node;\r\n        }\r\n\r\n        static formats(node: HTMLElement) {\r\n          // Check for data attribute first\r\n          const dataGlow = node.getAttribute('data-glow');\r\n          if (dataGlow) return dataGlow;\r\n          \r\n          // Check for class-based glow\r\n          const classList = Array.from(node.classList);\r\n          for (const className of classList) {\r\n            if (className.startsWith('glow-')) {\r\n              return className.replace('glow-', '');\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n\r\n        optimize(context: any) {\r\n          // Prevent optimization that might remove the glow format\r\n          return this;\r\n        }\r\n      }\r\n\r\n      Quill.register('formats/glow', GlowFormat);\r\n    });\r\n  }, [isClient]);\r\n\r\n  // Call onInit when component mounts (simplified for react-quill-new)\r\n  useEffect(() => {\r\n    if (isReady) {\r\n      // For react-quill-new, we pass a mock editor object\r\n      onInit?.(null, {\r\n        getContent: () => value || initialValue,\r\n        setContent: (content: string) => onEditorChange?.(content),\r\n      });\r\n    }\r\n  }, [isReady, onInit, value, initialValue, onEditorChange]);\r\n\r\n  const toolbar = [\r\n    [{ header: [1, 2, 3, false] }],\r\n    [{ font: [] }, { size: [] }],\r\n    [\"bold\", \"italic\", \"underline\", \"strike\"],\r\n    [{ color: [] }, { background: [] }],\r\n    [{ script: \"sub\" }, { script: \"super\" }],\r\n    [{ align: [] }],\r\n    [\r\n      { list: \"ordered\" },\r\n      { list: \"bullet\" },\r\n      { indent: \"-1\" },\r\n      { indent: \"+1\" },\r\n    ],\r\n    [\"blockquote\", \"code-block\"],\r\n    [\"link\", \"image\", \"video\"],\r\n    [{ glow: [\"blue\", \"purple\", \"green\", \"gold\", \"red\", false] }], // glow dropdown only\r\n    [\"importmd\", \"exportmd\"],\r\n    [\"clean\"],\r\n  ];\r\n\r\n  const modules = useMemo(() => {\r\n    return {\r\n      toolbar: {\r\n        container: toolbar,\r\n        handlers: {\r\n          // Fixed link handler as per Quill 2.x documentation\r\n          link: function (value) {\r\n            if (value) {\r\n              const href = window.prompt(\"Enter the URL:\");\r\n              if (href) {\r\n                this.quill.format(\"link\", href);\r\n              }\r\n            } else {\r\n              this.quill.format(\"link\", false);\r\n            }\r\n          },\r\n          // Enhanced image handler with file upload support\r\n          image: function () {\r\n            const input = document.createElement(\"input\");\r\n            input.type = \"file\";\r\n            input.accept = \"image/*\";\r\n            input.style.display = \"none\";\r\n\r\n            input.onchange = async (e: any) => {\r\n              const file = e.target.files?.[0];\r\n              if (!file) return;\r\n\r\n              // Check file size (limit to 5MB)\r\n              if (file.size > 5 * 1024 * 1024) {\r\n                alert(\"Image size must be less than 5MB\");\r\n                return;\r\n              }\r\n\r\n              // Convert to base64 for embedding (for local files)\r\n              const reader = new FileReader();\r\n              reader.onload = (event) => {\r\n                const quill = this.quill;\r\n                const range = quill.getSelection(true);\r\n                const base64 = event.target?.result as string;\r\n                quill.insertEmbed(range.index, \"image\", base64, \"user\");\r\n              };\r\n              reader.readAsDataURL(file);\r\n            };\r\n\r\n            // Show file picker dialog\r\n            document.body.appendChild(input);\r\n            input.click();\r\n            document.body.removeChild(input);\r\n          },\r\n          // Glow dropdown handler - applies different colors based on selection\r\n          glow: function (value: string | false) {\r\n            const quill = this.quill;\r\n            const range = quill.getSelection();\r\n\r\n            if (!range || range.length === 0) {\r\n              alert(\"Please select text first to apply glow effect\");\r\n              return;\r\n            }\r\n\r\n            console.log('Applying glow:', value, 'to range:', range);\r\n            \r\n            // Apply the glow format to the selected text\r\n            if (value === false || value === 'false') {\r\n              quill.removeFormat(range.index, range.length);\r\n            } else {\r\n              quill.formatText(range.index, range.length, 'glow', value);\r\n            }\r\n            \r\n            // Force a re-render to ensure the format sticks\r\n            setTimeout(() => {\r\n              const delta = quill.getContents();\r\n              console.log('Current delta after glow:', delta);\r\n            }, 100);\r\n          },\r\n          importmd: function () {\r\n            const input = document.createElement(\"input\");\r\n            input.type = \"file\";\r\n            input.accept = \".md\";\r\n            input.style.display = \"none\";\r\n            input.onchange = async (e: any) => {\r\n              const file = e.target.files?.[0];\r\n              if (!file) return;\r\n              const text = await file.text();\r\n              const html = markdownToHtml(text);\r\n\r\n              const quill = this.quill;\r\n              quill.clipboard.dangerouslyPasteHTML(html);\r\n              onEditorChange?.(quill.root.innerHTML);\r\n            };\r\n            document.body.appendChild(input);\r\n            input.click();\r\n            document.body.removeChild(input);\r\n          },\r\n          exportmd: function () {\r\n            const quill = this.quill;\r\n            const html = quill.root.innerHTML;\r\n            const md = htmlToMarkdown(html);\r\n            const blob = new Blob([md], {\r\n              type: \"text/markdown;charset=utf-8\",\r\n            });\r\n            const url = URL.createObjectURL(blob);\r\n            const a = document.createElement(\"a\");\r\n            a.href = url;\r\n            a.download = \"chapter.md\";\r\n            a.click();\r\n            URL.revokeObjectURL(url);\r\n          },\r\n        },\r\n      },\r\n      keyboard: {\r\n        bindings: {\r\n          save: {\r\n            key: \"s\",\r\n            shortKey: true,\r\n            handler: () => {\r\n              window.dispatchEvent(new CustomEvent(\"editorSaveRequest\"));\r\n              return false;\r\n            },\r\n          },\r\n        },\r\n      },\r\n      ...init.modules,\r\n    };\r\n  }, [toolbar, init.modules, onEditorChange]);\r\n\r\n  const formats = useMemo(\r\n    () => [\r\n      \"header\",\r\n      \"font\",\r\n      \"size\",\r\n      \"bold\",\r\n      \"italic\",\r\n      \"underline\",\r\n      \"strike\",\r\n      \"color\",\r\n      \"background\",\r\n      \"script\",\r\n      \"align\",\r\n      \"list\",\r\n      \"indent\",\r\n      \"blockquote\",\r\n      \"code-block\",\r\n      \"link\",\r\n      \"image\",\r\n      \"video\",\r\n      \"glow\",\r\n    ],\r\n    []\r\n  );\r\n\r\n  const baseContentStyle = useMemo(() => {\r\n    const h = typeof height === \"number\" ? `${height}px` : String(height);\r\n    return `\r\n      .ql-container { min-height: ${h}; }\r\n      .ql-editor { \r\n        font-family: Georgia, serif;\r\n        font-size: 16px;\r\n        line-height: 1.7;\r\n        direction: ltr;\r\n        text-align: left;\r\n        padding: 20px;\r\n        background: hsl(var(--background,0 0% 100%));\r\n        color: hsl(var(--foreground,222 47% 11%));\r\n        transition: background 0.25s, color 0.25s;\r\n      }\r\n      .ql-editor.glow-mode {\r\n        background: radial-gradient(circle at 50% 30%, hsl(var(--primary,221 83% 53%) / 0.08), transparent 70%) hsl(var(--background,0 0% 100%));\r\n      }\r\n      .theme-dark .ql-editor.glow-mode {\r\n        background: radial-gradient(circle at 50% 30%, hsl(var(--primary,217 91% 60%) / 0.15), transparent 70%) hsl(var(--background,222 30% 12%));\r\n      }\r\n      \r\n      /* Glow text classes - these apply to selected text */\r\n      .ql-editor .glow-blue { \r\n        color: #3b82f6 !important; \r\n        text-shadow: 0 0 10px #3b82f6, 0 0 20px #3b82f6, 0 0 30px #3b82f6 !important; \r\n        font-weight: 500; \r\n      }\r\n      .ql-editor .glow-purple { \r\n        color: #8b5cf6 !important; \r\n        text-shadow: 0 0 10px #8b5cf6, 0 0 20px #8b5cf6, 0 0 30px #8b5cf6 !important; \r\n        font-weight: 500; \r\n      }\r\n      .ql-editor .glow-green { \r\n        color: #10b981 !important; \r\n        text-shadow: 0 0 10px #10b981, 0 0 20px #10b981, 0 0 30px #10b981 !important; \r\n        font-weight: 500; \r\n      }\r\n      .ql-editor .glow-red { \r\n        color: #ef4444 !important; \r\n        text-shadow: 0 0 10px #ef4444, 0 0 20px #ef4444, 0 0 30px #ef4444 !important; \r\n        font-weight: 500; \r\n      }\r\n      .ql-editor .glow-gold { \r\n        color: #f59e0b !important; \r\n        text-shadow: 0 0 10px #f59e0b, 0 0 20px #f59e0b, 0 0 30px #f59e0b !important; \r\n        font-weight: 500; \r\n      }\r\n      \r\n      /* Custom toolbar button styles */\r\n      .ql-toolbar .ql-importmd:after { content: \"📥\"; }\r\n      .ql-toolbar .ql-exportmd:after { content: \"📤\"; }\r\n      \r\n      /* Style the glow dropdown options */\r\n      .ql-toolbar .ql-picker.ql-glow .ql-picker-label::before {\r\n        content: \"✨\";\r\n      }\r\n      \r\n      /* Move the dropdown arrow slightly to the left */\r\n      .ql-toolbar .ql-picker.ql-glow .ql-picker-label::after {\r\n        transform: translateX(-6px) !important;\r\n        position: relative !important;\r\n      }\r\n      \r\n      .ql-toolbar .ql-picker.ql-glow .ql-picker-options {\r\n        width: 120px;\r\n      }\r\n      \r\n      .ql-toolbar .ql-picker.ql-glow .ql-picker-item[data-value=\"blue\"]::before {\r\n        content: \"Blue Glow\";\r\n        color: #3b82f6;\r\n      }\r\n      \r\n      .ql-toolbar .ql-picker.ql-glow .ql-picker-item[data-value=\"purple\"]::before {\r\n        content: \"Purple Glow\";\r\n        color: #8b5cf6;\r\n      }\r\n      \r\n      .ql-toolbar .ql-picker.ql-glow .ql-picker-item[data-value=\"green\"]::before {\r\n        content: \"Green Glow\";\r\n        color: #10b981;\r\n      }\r\n      \r\n      .ql-toolbar .ql-picker.ql-glow .ql-picker-item[data-value=\"gold\"]::before {\r\n        content: \"Gold Glow\";\r\n        color: #f59e0b;\r\n      }\r\n      \r\n      .ql-toolbar .ql-picker.ql-glow .ql-picker-item[data-value=\"red\"]::before {\r\n        content: \"Red Glow\";\r\n        color: #ef4444;\r\n      }\r\n      \r\n      .ql-toolbar .ql-picker.ql-glow .ql-picker-item[data-value=\"false\"]::before {\r\n        content: \"Remove Glow\";\r\n      }\r\n      \r\n      /* Tooltips for custom buttons */\r\n      .ql-toolbar .ql-importmd { position: relative; }\r\n      .ql-toolbar .ql-importmd:hover:before {\r\n        content: \"Import Markdown file\";\r\n        position: absolute;\r\n        top: -30px;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        background: rgba(0,0,0,0.8);\r\n        color: white;\r\n        padding: 4px 8px;\r\n        border-radius: 4px;\r\n        font-size: 12px;\r\n        white-space: nowrap;\r\n        z-index: 1000;\r\n      }\r\n      \r\n      .ql-toolbar .ql-exportmd { position: relative; }\r\n      .ql-toolbar .ql-exportmd:hover:before {\r\n        content: \"Export as Markdown\";\r\n        position: absolute;\r\n        top: -30px;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        background: rgba(0,0,0,0.8);\r\n        color: white;\r\n        padding: 4px 8px;\r\n        border-radius: 4px;\r\n        font-size: 12px;\r\n        white-space: nowrap;\r\n        z-index: 1000;\r\n      }\r\n      \r\n      /* Glow button tooltip */\r\n      .ql-toolbar .ql-glow { position: relative; }\r\n      .ql-toolbar .ql-glow:hover:before {\r\n        content: \"Text Glow Effects\";\r\n        position: absolute;\r\n        top: -30px;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        background: rgba(0,0,0,0.8);\r\n        color: white;\r\n        padding: 4px 8px;\r\n        border-radius: 4px;\r\n        font-size: 12px;\r\n        white-space: nowrap;\r\n        z-index: 1000;\r\n      }\r\n      \r\n      /* Additional tooltips for common tools */\r\n      .ql-toolbar .ql-clean:hover:before {\r\n        content: \"Remove formatting\";\r\n        position: absolute;\r\n        top: -30px;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        background: rgba(0,0,0,0.8);\r\n        color: white;\r\n        padding: 4px 8px;\r\n        border-radius: 4px;\r\n        font-size: 12px;\r\n        white-space: nowrap;\r\n        z-index: 1000;\r\n      }\r\n      \r\n      .ql-toolbar .ql-link:hover:before {\r\n        content: \"Insert link\";\r\n        position: absolute;\r\n        top: -30px;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        background: rgba(0,0,0,0.8);\r\n        color: white;\r\n        padding: 4px 8px;\r\n        border-radius: 4px;\r\n        font-size: 12px;\r\n        white-space: nowrap;\r\n        z-index: 1000;\r\n      }\r\n      \r\n      .ql-toolbar .ql-image:hover:before {\r\n        content: \"Upload Image\";\r\n        position: absolute;\r\n        top: -30px;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        background: rgba(0,0,0,0.8);\r\n        color: white;\r\n        padding: 4px 8px;\r\n        border-radius: 4px;\r\n        font-size: 12px;\r\n        white-space: nowrap;\r\n        z-index: 1000;\r\n      }\r\n      \r\n      .ql-toolbar .ql-video:hover:before {\r\n        content: \"Insert video\";\r\n        position: absolute;\r\n        top: -30px;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        background: rgba(0,0,0,0.8);\r\n        color: white;\r\n        padding: 4px 8px;\r\n        border-radius: 4px;\r\n        font-size: 12px;\r\n        white-space: nowrap;\r\n        z-index: 1000;\r\n      }\r\n      \r\n      /* Ensure all toolbar buttons have proper position for tooltips */\r\n      .ql-toolbar button { position: relative; }\r\n      .ql-toolbar button:before { z-index: 1000; }\r\n    `;\r\n  }, [height]);\r\n\r\n  const handleChange = (html: string) => {\r\n    // Set ready state on first change if not already set\r\n    if (!isReady) {\r\n      setIsReady(true);\r\n    }\r\n    onEditorChange?.(html);\r\n  };\r\n\r\n  // Don't render until we're on the client side to prevent hydration errors\r\n  if (!isClient) {\r\n    return (\r\n      <div\r\n        style={{\r\n          minHeight:\r\n            typeof height === \"number\" ? `${height}px` : String(height),\r\n          width: typeof width === \"number\" ? `${width}px` : String(width),\r\n        }}\r\n        className=\"flex items-center justify-center bg-muted rounded-lg\"\r\n      >\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary mx-auto mb-2\"></div>\r\n          <p className=\"text-muted-foreground\">Loading editor...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        minHeight: typeof height === \"number\" ? `${height}px` : String(height),\r\n        width: typeof width === \"number\" ? `${width}px` : String(width),\r\n      }}\r\n    >\r\n      <style dangerouslySetInnerHTML={{ __html: baseContentStyle }} />\r\n      <ReactQuill\r\n        theme=\"snow\"\r\n        readOnly={disabled}\r\n        value={value !== undefined ? value : initialValue}\r\n        onChange={handleChange}\r\n        modules={modules}\r\n        formats={formats}\r\n        placeholder={init.placeholder}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}