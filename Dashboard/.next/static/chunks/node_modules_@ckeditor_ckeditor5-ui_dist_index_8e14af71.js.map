{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"index.js.map","sources":["file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/dist/index.js","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/viewcollection.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/template.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/view.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/arialiveannouncer.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/bindings/clickoutsidehandler.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/bindings/csstransitiondisablermixin.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/bindings/draggableviewmixin.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/bindings/submithandler.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/bindings/addkeyboardhandlingforgrid.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/label/labelview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/editorui/accessibilityhelp/accessibilityhelpcontentview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/icon/iconview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/button/buttonlabelview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/button/buttonview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/formheader/formheaderview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/focuscycler.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/dialog/dialogactionsview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/dialog/dialogcontentview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/dialog/dialogview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/dialog/dialog.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/button/listitembuttonview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/menubar/menubarmenulistitembuttonview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/editorui/accessibilityhelp/accessibilityhelp.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/editorui/bodycollection.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/panel/balloon/balloonpanelview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/badge/badge.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/editorui/poweredby.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/button/switchbuttonview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/button/filedialogbuttonview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/collapsible/collapsibleview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/colorgrid/utils.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/colorgrid/colortileview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/colorgrid/colorgridview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/colorpicker/utils.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/labeledfield/labeledfieldview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/input/inputbase.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/input/inputview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/inputtext/inputtextview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/inputnumber/inputnumberview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/textarea/textareaview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/dropdown/dropdownpanelview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/dropdown/dropdownview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/dropdown/button/dropdownbuttonview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/dropdown/menu/dropdownmenulistitembuttonview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/dropdown/menu/dropdownmenubuttonview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/list/listitemview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/list/listseparatorview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/list/listitemgroupview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/list/listview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/dropdown/menu/dropdownmenulistview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/dropdown/menu/utils.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/dropdown/menu/dropdownmenulistitemview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/dropdown/menu/dropdownmenubehaviors.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/dropdown/menu/dropdownmenunestedmenupanelview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/dropdown/menu/dropdownmenunestedmenuview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/dropdown/menu/dropdownmenurootlistview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/toolbar/toolbarseparatorview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/toolbar/toolbarlinebreakview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/bindings/preventdefault.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/toolbar/normalizetoolbarconfig.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/toolbar/toolbarview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/dropdown/button/splitbuttonview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/dropdown/utils.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/labeledfield/utils.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/colorpicker/colorpickerview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/colorselector/documentcolorcollection.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/colorselector/colorgridsfragmentview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/colorselector/colorpickerfragmentview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/colorselector/colorselectorview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/componentfactory.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/tooltipmanager.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/editorui/evaluationbadge.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/menubar/menubarmenulistitemview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/menubar/utils.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/editorui/editorui.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/editorui/editoruiview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/editorui/boxed/boxededitoruiview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/editableui/editableuiview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/editableui/inline/inlineeditableuiview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/formrow/formrowview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/iframe/iframeview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/labeledinput/labeledinputview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/search/filtergroupanditemnames.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/notification/notification.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/model.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/panel/balloon/contextualballoon.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/panel/sticky/stickypanelview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/search/text/searchtextqueryview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/search/searchinfoview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/search/searchresultsview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/search/text/searchtextview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/autocomplete/autocompleteview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/highlightedtext/highlightedtextview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/highlightedtext/buttonlabelwithhighlightview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/highlightedtext/labelwithhighlightview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/spinner/spinnerview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/toolbar/balloon/balloontoolbar.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/toolbar/block/blockbuttonview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/toolbar/block/blocktoolbar.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/menubar/menubarmenubuttonview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/menubar/menubarmenupanelview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/menubar/menubarmenuview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/menubar/menubarmenulistview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/menubar/menubarmenulistitemfiledialogbuttonview.ts","file:///home/matei/NovelPedia/App/frontend/node_modules/%40ckeditor/ckeditor5-ui/src/menubar/menubarview.ts"],"sourcesContent":["import { Collection, CKEditorError, EmitterMixin, isNode, toArray, DomEmitterMixin, ObservableMixin, isIterable, global, uid, createElement, env, getEnvKeystrokeText, delay, isVisible, KeystrokeHandler, FocusTracker, toUnit, Rect, isText, ResizeObserver, getOptimalPosition, isRange, parseBase64EncodedObject, getBorderWidths, logWarning, priorities, first, getVisualViewportOffset, getAncestors } from '@ckeditor/ckeditor5-utils/dist/index.js';\nimport { cloneDeepWith, isObject, isElement, throttle, debounce, cloneDeep, extend, escapeRegExp, escape } from 'es-toolkit/compat';\nimport { Plugin, ContextPlugin } from '@ckeditor/ckeditor5-core/dist/index.js';\nimport { IconCancel, IconCheck, IconAccessibility, IconProjectLogo, IconDropdownArrow, IconColorTileCheck, IconDragIndicator, IconPilcrow, IconThreeVerticalDots, IconText, IconPlus, IconParagraph, IconImportExport, IconBold, IconAlignLeft, IconColorPalette, IconEraser, IconPreviousArrow, IconNextArrow, IconLoupe } from '@ckeditor/ckeditor5-icons/dist/index.js';\nimport parse from 'color-parse';\nimport convert from 'color-convert';\nimport { HexBase } from 'vanilla-colorful/lib/entrypoints/hex';\nimport { Observer } from '@ckeditor/ckeditor5-engine/dist/index.js';\n\n/**\n * Collects {@link module:ui/view~View} instances.\n *\n * ```ts\n * const parentView = new ParentView( locale );\n * const collection = new ViewCollection( locale );\n *\n * collection.setParent( parentView.element );\n *\n * const viewA = new ChildView( locale );\n * const viewB = new ChildView( locale );\n * ```\n *\n * View collection renders and manages view {@link module:ui/view~View#element elements}:\n *\n * ```ts\n * collection.add( viewA );\n * collection.add( viewB );\n *\n * console.log( parentView.element.firsChild ); // -> viewA.element\n * console.log( parentView.element.lastChild ); // -> viewB.element\n * ```\n *\n * It {@link module:ui/viewcollection~ViewCollection#delegate propagates} DOM events too:\n *\n * ```ts\n * // Delegate #click and #keydown events from viewA and viewB to the parentView.\n * collection.delegate( 'click' ).to( parentView );\n *\n * parentView.on( 'click', ( evt ) => {\n * \tconsole.log( `${ evt.source } has been clicked.` );\n * } );\n *\n * // This event will be delegated to the parentView.\n * viewB.fire( 'click' );\n * ```\n *\n * **Note**: A view collection can be used directly in the {@link module:ui/template~TemplateDefinition definition}\n * of a {@link module:ui/template~Template template}.\n */ class ViewCollection extends Collection {\n    /**\n\t * A parent element within which child views are rendered and managed in DOM.\n\t */ _parentElement;\n    /**\n\t * Creates a new instance of the {@link module:ui/viewcollection~ViewCollection}.\n\t *\n\t * @param initialItems The initial items of the collection.\n\t */ constructor(initialItems = []){\n        super(initialItems, {\n            // An #id Number attribute should be legal and not break the `ViewCollection` instance.\n            // https://github.com/ckeditor/ckeditor5-ui/issues/93\n            idProperty: 'viewUid'\n        });\n        // Handle {@link module:ui/view~View#element} in DOM when a new view is added to the collection.\n        this.on('add', (evt, view, index)=>{\n            this._renderViewIntoCollectionParent(view, index);\n        });\n        // Handle {@link module:ui/view~View#element} in DOM when a view is removed from the collection.\n        this.on('remove', (evt, view)=>{\n            if (view.element && this._parentElement) {\n                view.element.remove();\n            }\n        });\n        this._parentElement = null;\n    }\n    /**\n\t * Destroys the view collection along with child views.\n\t * See the view {@link module:ui/view~View#destroy} method.\n\t */ destroy() {\n        this.map((view)=>view.destroy());\n    }\n    /**\n\t * Sets the parent HTML element of this collection. When parent is set, {@link #add adding} and\n\t * {@link #remove removing} views in the collection synchronizes their\n\t * {@link module:ui/view~View#element elements} in the parent element.\n\t *\n\t * @param elementOrDocFragment A new parent element or document fragment.\n\t */ setParent(elementOrDocFragment) {\n        this._parentElement = elementOrDocFragment;\n        // Take care of the initial collection items passed to the constructor.\n        for (const view of this){\n            this._renderViewIntoCollectionParent(view);\n        }\n    }\n    /**\n\t * Delegates selected events coming from within views in the collection to any\n\t * {@link module:utils/emittermixin~Emitter}.\n\t *\n\t * For the following views and collection:\n\t *\n\t * ```ts\n\t * const viewA = new View();\n\t * const viewB = new View();\n\t * const viewC = new View();\n\t *\n\t * const views = parentView.createCollection();\n\t *\n\t * views.delegate( 'eventX' ).to( viewB );\n\t * views.delegate( 'eventX', 'eventY' ).to( viewC );\n\t *\n\t * views.add( viewA );\n\t * ```\n\t *\n\t * the `eventX` is delegated (fired by) `viewB` and `viewC` along with `customData`:\n\t *\n\t * ```ts\n\t * viewA.fire( 'eventX', customData );\n\t * ```\n\t *\n\t * and `eventY` is delegated (fired by) `viewC` along with `customData`:\n\t *\n\t * ```ts\n\t * viewA.fire( 'eventY', customData );\n\t * ```\n\t *\n\t * See {@link module:utils/emittermixin~Emitter#delegate}.\n\t *\n\t * @param events {@link module:ui/view~View} event names to be delegated to another\n\t * {@link module:utils/emittermixin~Emitter}.\n\t * @returns Object with `to` property, a function which accepts the destination\n\t * of {@link module:utils/emittermixin~Emitter#delegate delegated} events.\n\t */ delegate(...events) {\n        if (!events.length || !isStringArray(events)) {\n            /**\n\t\t\t * All event names must be strings.\n\t\t\t *\n\t\t\t * @error ui-viewcollection-delegate-wrong-events\n\t\t\t */ throw new CKEditorError('ui-viewcollection-delegate-wrong-events', this);\n        }\n        return {\n            to: (dest)=>{\n                // Activate delegating on existing views in this collection.\n                for (const view of this){\n                    for (const evtName of events){\n                        view.delegate(evtName).to(dest);\n                    }\n                }\n                // Activate delegating on future views in this collection.\n                this.on('add', (evt, view)=>{\n                    for (const evtName of events){\n                        view.delegate(evtName).to(dest);\n                    }\n                });\n                // Deactivate delegating when view is removed from this collection.\n                this.on('remove', (evt, view)=>{\n                    for (const evtName of events){\n                        view.stopDelegating(evtName, dest);\n                    }\n                });\n            }\n        };\n    }\n    /**\n\t * This method {@link module:ui/view~View#render renders} a new view added to the collection.\n\t *\n\t * If the {@link #_parentElement parent element} of the collection is set, this method also adds\n\t * the view's {@link module:ui/view~View#element} as a child of the parent in DOM at a specified index.\n\t *\n\t * **Note**: If index is not specified, the view's element is pushed as the last child\n\t * of the parent element.\n\t *\n\t * @param view A new view added to the collection.\n\t * @param index An index the view holds in the collection. When not specified,\n\t * the view is added at the end.\n\t */ _renderViewIntoCollectionParent(view, index) {\n        if (!view.isRendered) {\n            view.render();\n        }\n        if (view.element && this._parentElement) {\n            this._parentElement.insertBefore(view.element, this._parentElement.children[index]);\n        }\n    }\n    /**\n\t * Removes a child view from the collection. If the {@link #setParent parent element} of the\n\t * collection has been set, the {@link module:ui/view~View#element element} of the view is also removed\n\t * in DOM, reflecting the order of the collection.\n\t *\n\t * See the {@link #add} method.\n\t *\n\t * @param subject The view to remove, its id or index in the collection.\n\t * @returns The removed view.\n\t */ remove(subject) {\n        return super.remove(subject);\n    }\n}\n/**\n * Check if all entries of the array are of `String` type.\n *\n * @param arr An array to be checked.\n */ function isStringArray(arr) {\n    return arr.every((a)=>typeof a == 'string');\n}\n\nconst xhtmlNs = 'http://www.w3.org/1999/xhtml';\n/**\n * A basic Template class. It renders a DOM HTML element or text from a\n * {@link module:ui/template~TemplateDefinition definition} and supports element attributes, children,\n * bindings to {@link module:utils/observablemixin~Observable observables} and DOM event propagation.\n *\n * A simple template can look like this:\n *\n * ```ts\n * const bind = Template.bind( observable, emitter );\n *\n * new Template( {\n * \ttag: 'p',\n * \tattributes: {\n * \t\tclass: 'foo',\n * \t\tstyle: {\n * \t\t\tbackgroundColor: 'yellow'\n * \t\t}\n * \t},\n * \ton: {\n * \t\tclick: bind.to( 'clicked' )\n * \t},\n * \tchildren: [\n * \t\t'A paragraph.'\n * \t]\n * } ).render();\n * ```\n *\n * and it will render the following HTML element:\n *\n * ```html\n * <p class=\"foo\" style=\"background-color: yellow;\">A paragraph.</p>\n * ```\n *\n * Additionally, the `observable` will always fire `clicked` upon clicking `<p>` in the DOM.\n *\n * See {@link module:ui/template~TemplateDefinition} to know more about templates and complex\n * template definitions.\n */ class Template extends /* #__PURE__ */ EmitterMixin() {\n    ns;\n    /**\n\t * The tag (`tagName`) of this template, e.g. `div`. It also indicates that the template\n\t * renders to an HTML element.\n\t */ tag;\n    /**\n\t * The text of the template. It also indicates that the template renders to a DOM text node.\n\t */ text;\n    /**\n\t * The attributes of the template, e.g. `{ id: [ 'ck-id' ] }`, corresponding with\n\t * the attributes of an HTML element.\n\t *\n\t * **Note**: This property only makes sense when {@link #tag} is defined.\n\t */ attributes;\n    /**\n\t * The children of the template. They can be either:\n\t * * independent instances of {@link ~Template} (sub–templates),\n\t * * native DOM Nodes.\n\t *\n\t * **Note**: This property only makes sense when {@link #tag} is defined.\n\t */ children;\n    /**\n\t * The DOM event listeners of the template.\n\t */ eventListeners;\n    /**\n\t * Indicates whether this particular Template instance has been\n\t * {@link #render rendered}.\n\t */ _isRendered;\n    /**\n\t * The data used by the {@link #revert} method to restore a node to its original state.\n\t *\n\t * See: {@link #apply}.\n\t */ _revertData;\n    /**\n\t * Creates an instance of the {@link ~Template} class.\n\t *\n\t * @param def The definition of the template.\n\t */ constructor(def){\n        super();\n        Object.assign(this, normalize(clone(def)));\n        this._isRendered = false;\n        this._revertData = null;\n    }\n    /**\n\t * Renders a DOM Node (an HTML element or text) out of the template.\n\t *\n\t * ```ts\n\t * const domNode = new Template( { ... } ).render();\n\t * ```\n\t *\n\t * See: {@link #apply}.\n\t */ render() {\n        const node = this._renderNode({\n            intoFragment: true\n        });\n        this._isRendered = true;\n        return node;\n    }\n    /**\n\t * Applies the template to an existing DOM Node, either HTML element or text.\n\t *\n\t * **Note:** No new DOM nodes will be created. Applying extends:\n\t *\n\t * {@link module:ui/template~TemplateDefinition attributes},\n\t * {@link module:ui/template~TemplateDefinition event listeners}, and\n\t * `textContent` of {@link module:ui/template~TemplateDefinition children} only.\n\t *\n\t * **Note:** Existing `class` and `style` attributes are extended when a template\n\t * is applied to an HTML element, while other attributes and `textContent` are overridden.\n\t *\n\t * **Note:** The process of applying a template can be easily reverted using the\n\t * {@link module:ui/template~Template#revert} method.\n\t *\n\t * ```ts\n\t * const element = document.createElement( 'div' );\n\t * const observable = new Model( { divClass: 'my-div' } );\n\t * const emitter = Object.create( EmitterMixin );\n\t * const bind = Template.bind( observable, emitter );\n\t *\n\t * new Template( {\n\t * \tattributes: {\n\t * \t\tid: 'first-div',\n\t * \t\tclass: bind.to( 'divClass' )\n\t * \t},\n\t * \ton: {\n\t * \t\tclick: bind( 'elementClicked' ) // Will be fired by the observable.\n\t * \t},\n\t * \tchildren: [\n\t * \t\t'Div text.'\n\t * \t]\n\t * } ).apply( element );\n\t *\n\t * console.log( element.outerHTML ); // -> '<div id=\"first-div\" class=\"my-div\"></div>'\n\t * ```\n\t *\n\t * @see module:ui/template~Template#render\n\t * @see module:ui/template~Template#revert\n\t * @param node Root node for the template to apply.\n\t */ apply(node) {\n        this._revertData = getEmptyRevertData();\n        this._renderNode({\n            node,\n            intoFragment: false,\n            isApplying: true,\n            revertData: this._revertData\n        });\n        return node;\n    }\n    /**\n\t * Reverts a template {@link module:ui/template~Template#apply applied} to a DOM node.\n\t *\n\t * @param node The root node for the template to revert. In most of the cases, it is the\n\t * same node used by {@link module:ui/template~Template#apply}.\n\t */ revert(node) {\n        if (!this._revertData) {\n            /**\n\t\t\t * Attempting to revert a template which has not been applied yet.\n\t\t\t *\n\t\t\t * @error ui-template-revert-not-applied\n\t\t\t */ throw new CKEditorError('ui-template-revert-not-applied', [\n                this,\n                node\n            ]);\n        }\n        this._revertTemplateFromNode(node, this._revertData);\n    }\n    /**\n\t * Returns an iterator which traverses the template in search of {@link module:ui/view~View}\n\t * instances and returns them one by one.\n\t *\n\t * ```ts\n\t * const viewFoo = new View();\n\t * const viewBar = new View();\n\t * const viewBaz = new View();\n\t * const template = new Template( {\n\t * \ttag: 'div',\n\t * \tchildren: [\n\t * \t\tviewFoo,\n\t * \t\t{\n\t * \t\t\ttag: 'div',\n\t * \t\t\tchildren: [\n\t * \t\t\t\tviewBar\n\t * \t\t\t]\n\t * \t\t},\n\t * \t\tviewBaz\n\t * \t]\n\t * } );\n\t *\n\t * // Logs: viewFoo, viewBar, viewBaz\n\t * for ( const view of template.getViews() ) {\n\t * \tconsole.log( view );\n\t * }\n\t * ```\n\t */ *getViews() {\n        function* search(def) {\n            if (def.children) {\n                for (const child of def.children){\n                    if (isView(child)) {\n                        yield child;\n                    } else if (isTemplate(child)) {\n                        yield* search(child);\n                    }\n                }\n            }\n        }\n        yield* search(this);\n    }\n    /**\n\t * An entry point to the interface which binds DOM nodes to\n\t * {@link module:utils/observablemixin~Observable observables}.\n\t * There are two types of bindings:\n\t *\n\t * * HTML element attributes or text `textContent` synchronized with attributes of an\n\t * {@link module:utils/observablemixin~Observable}. Learn more about {@link module:ui/template~BindChain#to}\n\t * and {@link module:ui/template~BindChain#if}.\n\t *\n\t * ```ts\n\t * const bind = Template.bind( observable, emitter );\n\t *\n\t * new Template( {\n\t * \tattributes: {\n\t * \t\t// Binds the element \"class\" attribute to observable#classAttribute.\n\t * \t\tclass: bind.to( 'classAttribute' )\n\t * \t}\n\t * } ).render();\n\t * ```\n\t *\n\t * * DOM events fired on HTML element propagated through\n\t * {@link module:utils/observablemixin~Observable}. Learn more about {@link module:ui/template~BindChain#to}.\n\t *\n\t * ```ts\n\t * const bind = Template.bind( observable, emitter );\n\t *\n\t * new Template( {\n\t * \ton: {\n\t * \t\t// Will be fired by the observable.\n\t * \t\tclick: bind( 'elementClicked' )\n\t * \t}\n\t * } ).render();\n\t * ```\n\t *\n\t * Also see {@link module:ui/view~View#bindTemplate}.\n\t *\n\t * @param observable An observable which provides boundable attributes.\n\t * @param emitter An emitter that listens to observable attribute\n\t * changes or DOM Events (depending on the kind of the binding). Usually, a {@link module:ui/view~View} instance.\n\t */ static bind(observable, emitter) {\n        return {\n            to (eventNameOrFunctionOrAttribute, callback) {\n                return new TemplateToBinding({\n                    eventNameOrFunction: eventNameOrFunctionOrAttribute,\n                    attribute: eventNameOrFunctionOrAttribute,\n                    observable,\n                    emitter,\n                    callback\n                });\n            },\n            if (attribute, valueIfTrue, callback) {\n                return new TemplateIfBinding({\n                    observable,\n                    emitter,\n                    attribute,\n                    valueIfTrue,\n                    callback\n                });\n            }\n        };\n    }\n    /**\n\t * Extends an existing {@link module:ui/template~Template} instance with some additional content\n\t * from another {@link module:ui/template~TemplateDefinition}.\n\t *\n\t * ```ts\n\t * const bind = Template.bind( observable, emitter );\n\t *\n\t * const template = new Template( {\n\t * \ttag: 'p',\n\t * \tattributes: {\n\t * \t\tclass: 'a',\n\t * \t\tdata-x: bind.to( 'foo' )\n\t * \t},\n\t * \tchildren: [\n\t * \t\t{\n\t * \t\t\ttag: 'span',\n\t * \t\t\tattributes: {\n\t * \t\t\t\tclass: 'b'\n\t * \t\t\t},\n\t * \t\t\tchildren: [\n\t * \t\t\t\t'Span'\n\t * \t\t\t]\n\t * \t\t}\n\t * \t]\n\t *  } );\n\t *\n\t * // Instance-level extension.\n\t * Template.extend( template, {\n\t * \tattributes: {\n\t * \t\tclass: 'b',\n\t * \t\tdata-x: bind.to( 'bar' )\n\t * \t},\n\t * \tchildren: [\n\t * \t\t{\n\t * \t\t\tattributes: {\n\t * \t\t\t\tclass: 'c'\n\t * \t\t\t}\n\t * \t\t}\n\t * \t]\n\t * } );\n\t *\n\t * // Child extension.\n\t * Template.extend( template.children[ 0 ], {\n\t * \tattributes: {\n\t * \t\tclass: 'd'\n\t * \t}\n\t * } );\n\t * ```\n\t *\n\t * the `outerHTML` of `template.render()` is:\n\t *\n\t * ```html\n\t * <p class=\"a b\" data-x=\"{ observable.foo } { observable.bar }\">\n\t * \t<span class=\"b c d\">Span</span>\n\t * </p>\n\t * ```\n\t *\n\t * @param template An existing template instance to be extended.\n\t * @param def Additional definition to be applied to a template.\n\t */ static extend(template, def) {\n        if (template._isRendered) {\n            /**\n\t\t\t * Extending a template after rendering may not work as expected. To make sure\n\t\t\t * the {@link module:ui/template~Template.extend extending} works for an element,\n\t\t\t * make sure it happens before {@link module:ui/template~Template#render} is called.\n\t\t\t *\n\t\t\t * @error template-extend-render\n\t\t\t */ throw new CKEditorError('template-extend-render', [\n                this,\n                template\n            ]);\n        }\n        extendTemplate(template, normalize(clone(def)));\n    }\n    /**\n\t * Renders a DOM Node (either an HTML element or text) out of the template.\n\t *\n\t * @param data Rendering data.\n\t */ _renderNode(data) {\n        let isInvalid;\n        if (data.node) {\n            // When applying, a definition cannot have \"tag\" and \"text\" at the same time.\n            isInvalid = this.tag && this.text;\n        } else {\n            // When rendering, a definition must have either \"tag\" or \"text\": XOR( this.tag, this.text ).\n            isInvalid = this.tag ? this.text : !this.text;\n        }\n        if (isInvalid) {\n            /**\n\t\t\t * Node definition cannot have the \"tag\" and \"text\" properties at the same time.\n\t\t\t * Node definition must have either \"tag\" or \"text\" when rendering a new Node.\n\t\t\t *\n\t\t\t * @error ui-template-wrong-syntax\n\t\t\t */ throw new CKEditorError('ui-template-wrong-syntax', this);\n        }\n        if (this.text) {\n            return this._renderText(data);\n        } else {\n            return this._renderElement(data);\n        }\n    }\n    /**\n\t * Renders an HTML element out of the template.\n\t *\n\t * @param data Rendering data.\n\t */ _renderElement(data) {\n        let node = data.node;\n        if (!node) {\n            node = data.node = document.createElementNS(this.ns || xhtmlNs, this.tag);\n        }\n        this._renderAttributes(data);\n        this._renderElementChildren(data);\n        this._setUpListeners(data);\n        return node;\n    }\n    /**\n\t * Renders a text node out of {@link module:ui/template~Template#text}.\n\t *\n\t * @param data Rendering data.\n\t */ _renderText(data) {\n        let node = data.node;\n        // Save the original textContent to revert it in #revert().\n        if (node) {\n            data.revertData.text = node.textContent;\n        } else {\n            node = data.node = document.createTextNode('');\n        }\n        // Check if this Text Node is bound to Observable. Cases:\n        //\n        //\t\ttext: [ Template.bind( ... ).to( ... ) ]\n        //\n        //\t\ttext: [\n        //\t\t\t'foo',\n        //\t\t\tTemplate.bind( ... ).to( ... ),\n        //\t\t\t...\n        //\t\t]\n        //\n        if (hasTemplateBinding(this.text)) {\n            this._bindToObservable({\n                schema: this.text,\n                updater: getTextUpdater(node),\n                data\n            });\n        } else {\n            node.textContent = this.text.join('');\n        }\n        return node;\n    }\n    /**\n\t * Renders HTML element attributes out of {@link module:ui/template~Template#attributes}.\n\t *\n\t * @param data Rendering data.\n\t */ _renderAttributes(data) {\n        if (!this.attributes) {\n            return;\n        }\n        const node = data.node;\n        const revertData = data.revertData;\n        for(const attrName in this.attributes){\n            // Current attribute value in DOM.\n            const domAttrValue = node.getAttribute(attrName);\n            // The value to be set.\n            const attrValue = this.attributes[attrName];\n            // Save revert data.\n            if (revertData) {\n                revertData.attributes[attrName] = domAttrValue;\n            }\n            // Detect custom namespace:\n            //\n            //\t\tclass: {\n            //\t\t\tns: 'abc',\n            //\t\t\tvalue: Template.bind( ... ).to( ... )\n            //\t\t}\n            //\n            const attrNs = isNamespaced(attrValue) ? attrValue[0].ns : null;\n            // Activate binding if one is found. Cases:\n            //\n            //\t\tclass: [\n            //\t\t\tTemplate.bind( ... ).to( ... )\n            //\t\t]\n            //\n            //\t\tclass: [\n            //\t\t\t'bar',\n            //\t\t\tTemplate.bind( ... ).to( ... ),\n            //\t\t\t'baz'\n            //\t\t]\n            //\n            //\t\tclass: {\n            //\t\t\tns: 'abc',\n            //\t\t\tvalue: Template.bind( ... ).to( ... )\n            //\t\t}\n            //\n            if (hasTemplateBinding(attrValue)) {\n                // Normalize attributes with additional data like namespace:\n                //\n                //\t\tclass: {\n                //\t\t\tns: 'abc',\n                //\t\t\tvalue: [ ... ]\n                //\t\t}\n                //\n                const valueToBind = isNamespaced(attrValue) ? attrValue[0].value : attrValue;\n                // Extend the original value of attributes like \"style\" and \"class\",\n                // don't override them.\n                if (revertData && shouldExtend(attrName)) {\n                    valueToBind.unshift(domAttrValue);\n                }\n                this._bindToObservable({\n                    schema: valueToBind,\n                    updater: getAttributeUpdater(node, attrName, attrNs),\n                    data\n                });\n            } else if (attrName == 'style' && typeof attrValue[0] !== 'string') {\n                this._renderStyleAttribute(attrValue[0], data);\n            } else {\n                // Extend the original value of attributes like \"style\" and \"class\",\n                // don't override them.\n                if (revertData && domAttrValue && shouldExtend(attrName)) {\n                    attrValue.unshift(domAttrValue);\n                }\n                const value = attrValue// Retrieve \"values\" from:\n                //\n                //\t\tclass: [\n                //\t\t\t{\n                //\t\t\t\tns: 'abc',\n                //\t\t\t\tvalue: [ ... ]\n                //\t\t\t}\n                //\t\t]\n                //\n                .map((val)=>val ? val.value || val : val)// Flatten the array.\n                .reduce((prev, next)=>prev.concat(next), [])// Convert into string.\n                .reduce(arrayValueReducer, '');\n                if (!isFalsy(value)) {\n                    node.setAttributeNS(attrNs, attrName, value);\n                }\n            }\n        }\n    }\n    /**\n\t * Renders the `style` attribute of an HTML element based on\n\t * {@link module:ui/template~Template#attributes}.\n\t *\n\t * A style attribute is an object with static values:\n\t *\n\t * ```ts\n\t * attributes: {\n\t * \tstyle: {\n\t * \t\tcolor: 'red'\n\t * \t}\n\t * }\n\t * ```\n\t *\n\t * or values bound to {@link module:ui/model~UIModel} properties:\n\t *\n\t * ```ts\n\t * attributes: {\n\t * \tstyle: {\n\t * \t\tcolor: bind.to( ... )\n\t * \t}\n\t * }\n\t * ```\n\t *\n\t * Note: The `style` attribute is rendered without setting the namespace. It does not seem to be\n\t * needed.\n\t *\n\t * @param styles Styles located in `attributes.style` of {@link module:ui/template~TemplateDefinition}.\n\t * @param data Rendering data.\n\t */ _renderStyleAttribute(styles, data) {\n        const node = data.node;\n        for(const styleName in styles){\n            const styleValue = styles[styleName];\n            // Cases:\n            //\n            //\t\tstyle: {\n            //\t\t\tcolor: bind.to( 'attribute' )\n            //\t\t}\n            //\n            if (hasTemplateBinding(styleValue)) {\n                this._bindToObservable({\n                    schema: [\n                        styleValue\n                    ],\n                    updater: getStyleUpdater(node, styleName),\n                    data\n                });\n            } else {\n                node.style[styleName] = styleValue;\n            }\n        }\n    }\n    /**\n\t * Recursively renders HTML element's children from {@link module:ui/template~Template#children}.\n\t *\n\t * @param data Rendering data.\n\t */ _renderElementChildren(data) {\n        const node = data.node;\n        const container = data.intoFragment ? document.createDocumentFragment() : node;\n        const isApplying = data.isApplying;\n        let childIndex = 0;\n        for (const child of this.children){\n            if (isViewCollection(child)) {\n                if (!isApplying) {\n                    child.setParent(node);\n                    // Note: ViewCollection renders its children.\n                    for (const view of child){\n                        container.appendChild(view.element);\n                    }\n                }\n            } else if (isView(child)) {\n                if (!isApplying) {\n                    if (!child.isRendered) {\n                        child.render();\n                    }\n                    container.appendChild(child.element);\n                }\n            } else if (isNode(child)) {\n                container.appendChild(child);\n            } else {\n                if (isApplying) {\n                    const revertData = data.revertData;\n                    const childRevertData = getEmptyRevertData();\n                    revertData.children.push(childRevertData);\n                    child._renderNode({\n                        intoFragment: false,\n                        node: container.childNodes[childIndex++],\n                        isApplying: true,\n                        revertData: childRevertData\n                    });\n                } else {\n                    container.appendChild(child.render());\n                }\n            }\n        }\n        if (data.intoFragment) {\n            node.appendChild(container);\n        }\n    }\n    /**\n\t * Activates `on` event listeners from the {@link module:ui/template~TemplateDefinition}\n\t * on an HTML element.\n\t *\n\t * @param data Rendering data.\n\t */ _setUpListeners(data) {\n        if (!this.eventListeners) {\n            return;\n        }\n        for(const key in this.eventListeners){\n            const revertBindings = this.eventListeners[key].map((schemaItem)=>{\n                const [domEvtName, domSelector] = key.split('@');\n                return schemaItem.activateDomEventListener(domEvtName, domSelector, data);\n            });\n            if (data.revertData) {\n                data.revertData.bindings.push(revertBindings);\n            }\n        }\n    }\n    /**\n\t * For a given {@link module:ui/template~TemplateValueSchema} containing {@link module:ui/template~TemplateBinding}\n\t * activates the binding and sets its initial value.\n\t *\n\t * Note: {@link module:ui/template~TemplateValueSchema} can be for HTML element attributes or\n\t * text node `textContent`.\n\t *\n\t * @param options Binding options.\n\t * @param options.updater A function which updates the DOM (like attribute or text).\n\t * @param options.data Rendering data.\n\t */ _bindToObservable({ schema, updater, data }) {\n        const revertData = data.revertData;\n        // Set initial values.\n        syncValueSchemaValue(schema, updater, data);\n        const revertBindings = schema// Filter \"falsy\" (false, undefined, null, '') value schema components out.\n        .filter((item)=>!isFalsy(item))// Filter inactive bindings from schema, like static strings ('foo'), numbers (42), etc.\n        .filter((item)=>item.observable)// Once only the actual binding are left, let the emitter listen to observable change:attribute event.\n        // TODO: Reduce the number of listeners attached as many bindings may listen\n        // to the same observable attribute.\n        .map((templateBinding)=>templateBinding.activateAttributeListener(schema, updater, data));\n        if (revertData) {\n            revertData.bindings.push(revertBindings);\n        }\n    }\n    /**\n\t * Reverts {@link module:ui/template~RenderData#revertData template data} from a node to\n\t * return it to the original state.\n\t *\n\t * @param node A node to be reverted.\n\t * @param revertData An object that stores information about what changes have been made by\n\t * {@link #apply} to the node. See {@link module:ui/template~RenderData#revertData} for more information.\n\t */ _revertTemplateFromNode(node, revertData) {\n        for (const binding of revertData.bindings){\n            // Each binding may consist of several observable+observable#attribute.\n            // like the following has 2:\n            //\n            //\t\tclass: [\n            //\t\t\t'x',\n            //\t\t\tbind.to( 'foo' ),\n            //\t\t\t'y',\n            //\t\t\tbind.to( 'bar' )\n            //\t\t]\n            //\n            for (const revertBinding of binding){\n                revertBinding();\n            }\n        }\n        if (revertData.text) {\n            node.textContent = revertData.text;\n            return;\n        }\n        const element = node;\n        for(const attrName in revertData.attributes){\n            const attrValue = revertData.attributes[attrName];\n            // When the attribute has **not** been set before #apply().\n            if (attrValue === null) {\n                element.removeAttribute(attrName);\n            } else {\n                element.setAttribute(attrName, attrValue);\n            }\n        }\n        for(let i = 0; i < revertData.children.length; ++i){\n            this._revertTemplateFromNode(element.childNodes[i], revertData.children[i]);\n        }\n    }\n}\n/**\n * Describes a binding created by the {@link module:ui/template~Template.bind} interface.\n *\n * @internal\n */ class TemplateBinding {\n    /**\n\t * The name of the {@link module:ui/template~TemplateBinding#observable observed attribute}.\n\t */ attribute;\n    /**\n\t * An observable instance of the binding. It either:\n\t *\n\t * * provides the attribute with the value,\n\t * * or passes the event when a corresponding DOM event is fired.\n\t */ observable;\n    /**\n\t * An {@link module:utils/emittermixin~Emitter} used by the binding to:\n\t *\n\t * * listen to the attribute change in the {@link module:ui/template~TemplateBinding#observable},\n\t * * or listen to the event in the DOM.\n\t */ emitter;\n    /**\n\t * A custom function to process the value of the {@link module:ui/template~TemplateBinding#attribute}.\n\t */ callback;\n    /**\n\t * Creates an instance of the {@link module:ui/template~TemplateBinding} class.\n\t *\n\t * @param def The definition of the binding.\n\t */ constructor(def){\n        this.attribute = def.attribute;\n        this.observable = def.observable;\n        this.emitter = def.emitter;\n        this.callback = def.callback;\n    }\n    /**\n\t * Returns the value of the binding. It is the value of the {@link module:ui/template~TemplateBinding#attribute} in\n\t * {@link module:ui/template~TemplateBinding#observable}. The value may be processed by the\n\t * {@link module:ui/template~TemplateBinding#callback}, if such has been passed to the binding.\n\t *\n\t * @param node A native DOM node, passed to the custom {@link module:ui/template~TemplateBinding#callback}.\n\t * @returns The value of {@link module:ui/template~TemplateBinding#attribute} in\n\t * {@link module:ui/template~TemplateBinding#observable}.\n\t */ getValue(node) {\n        const value = this.observable[this.attribute];\n        return this.callback ? this.callback(value, node) : value;\n    }\n    /**\n\t * Activates the listener which waits for changes of the {@link module:ui/template~TemplateBinding#attribute} in\n\t * {@link module:ui/template~TemplateBinding#observable}, then updates the DOM with the aggregated\n\t * value of {@link module:ui/template~TemplateValueSchema}.\n\t *\n\t * @param schema A full schema to generate an attribute or text in the DOM.\n\t * @param updater A DOM updater function used to update the native DOM attribute or text.\n\t * @param data Rendering data.\n\t * @returns A function to sever the listener binding.\n\t */ activateAttributeListener(schema, updater, data) {\n        const callback = ()=>syncValueSchemaValue(schema, updater, data);\n        this.emitter.listenTo(this.observable, `change:${this.attribute}`, callback);\n        // Allows revert of the listener.\n        return ()=>{\n            this.emitter.stopListening(this.observable, `change:${this.attribute}`, callback);\n        };\n    }\n}\n/**\n * Describes either:\n *\n * * a binding to an {@link module:utils/observablemixin~Observable},\n * * or a native DOM event binding.\n *\n * It is created by the {@link module:ui/template~BindChain#to} method.\n *\n * @internal\n */ class TemplateToBinding extends TemplateBinding {\n    eventNameOrFunction;\n    constructor(def){\n        super(def);\n        this.eventNameOrFunction = def.eventNameOrFunction;\n    }\n    /**\n\t * Activates the listener for the native DOM event, which when fired, is propagated by\n\t * the {@link module:ui/template~TemplateBinding#emitter}.\n\t *\n\t * @param domEvtName The name of the native DOM event.\n\t * @param domSelector The selector in the DOM to filter delegated events.\n\t * @param data Rendering data.\n\t * @returns A function to sever the listener binding.\n\t */ activateDomEventListener(domEvtName, domSelector, data) {\n        const callback = (evt, domEvt)=>{\n            if (!domSelector || domEvt.target.matches(domSelector)) {\n                if (typeof this.eventNameOrFunction == 'function') {\n                    this.eventNameOrFunction(domEvt);\n                } else {\n                    this.observable.fire(this.eventNameOrFunction, domEvt);\n                }\n            }\n        };\n        this.emitter.listenTo(data.node, domEvtName, callback);\n        // Allows revert of the listener.\n        return ()=>{\n            this.emitter.stopListening(data.node, domEvtName, callback);\n        };\n    }\n}\n/**\n * Describes a binding to {@link module:utils/observablemixin~Observable} created by the {@link module:ui/template~BindChain#if}\n * method.\n *\n * @internal\n */ class TemplateIfBinding extends TemplateBinding {\n    /**\n\t * The value of the DOM attribute or text to be set if the {@link module:ui/template~TemplateBinding#attribute} in\n\t * {@link module:ui/template~TemplateBinding#observable} is `true`.\n\t */ valueIfTrue;\n    constructor(def){\n        super(def);\n        this.valueIfTrue = def.valueIfTrue;\n    }\n    /**\n\t * @inheritDoc\n\t */ getValue(node) {\n        const value = super.getValue(node);\n        return isFalsy(value) ? false : this.valueIfTrue || true;\n    }\n}\n/**\n * Checks whether given {@link module:ui/template~TemplateValueSchema} contains a\n * {@link module:ui/template~TemplateBinding}.\n */ function hasTemplateBinding(schema) {\n    if (!schema) {\n        return false;\n    }\n    // Normalize attributes with additional data like namespace:\n    //\n    //\t\tclass: {\n    //\t\t\tns: 'abc',\n    //\t\t\tvalue: [ ... ]\n    //\t\t}\n    //\n    if (schema.value) {\n        schema = schema.value;\n    }\n    if (Array.isArray(schema)) {\n        return schema.some(hasTemplateBinding);\n    } else if (schema instanceof TemplateBinding) {\n        return true;\n    }\n    return false;\n}\n/**\n * Assembles the value using {@link module:ui/template~TemplateValueSchema} and stores it in a form of\n * an Array. Each entry of the Array corresponds to one of {@link module:ui/template~TemplateValueSchema}\n * items.\n *\n * @param node DOM Node updated when {@link module:utils/observablemixin~Observable} changes.\n */ function getValueSchemaValue(schema, node) {\n    return schema.map((schemaItem)=>{\n        // Process {@link module:ui/template~TemplateBinding} bindings.\n        if (schemaItem instanceof TemplateBinding) {\n            return schemaItem.getValue(node);\n        }\n        // All static values like strings, numbers, and \"falsy\" values (false, null, undefined, '', etc.) just pass.\n        return schemaItem;\n    });\n}\n/**\n * A function executed each time the bound Observable attribute changes, which updates the DOM with a value\n * constructed from {@link module:ui/template~TemplateValueSchema}.\n *\n * @param updater A function which updates the DOM (like attribute or text).\n * @param node DOM Node updated when {@link module:utils/observablemixin~Observable} changes.\n */ function syncValueSchemaValue(schema, updater, { node }) {\n    const values = getValueSchemaValue(schema, node);\n    let value;\n    // Check if schema is a single Template.bind.if, like:\n    //\n    //\t\tclass: Template.bind.if( 'foo' )\n    //\n    if (schema.length == 1 && schema[0] instanceof TemplateIfBinding) {\n        value = values[0];\n    } else {\n        value = values.reduce(arrayValueReducer, '');\n    }\n    if (isFalsy(value)) {\n        updater.remove();\n    } else {\n        updater.set(value);\n    }\n}\n/**\n * Returns an object consisting of `set` and `remove` functions, which\n * can be used in the context of DOM Node to set or reset `textContent`.\n * @see module:ui/view~View#_bindToObservable\n *\n * @param node DOM Node to be modified.\n */ function getTextUpdater(node) {\n    return {\n        set (value) {\n            node.textContent = value;\n        },\n        remove () {\n            node.textContent = '';\n        }\n    };\n}\n/**\n * Returns an object consisting of `set` and `remove` functions, which\n * can be used in the context of DOM Node to set or reset an attribute.\n * @see module:ui/view~View#_bindToObservable\n *\n * @param el DOM Node to be modified.\n * @param attrName Name of the attribute to be modified.\n * @param ns Namespace to use.\n */ function getAttributeUpdater(el, attrName, ns) {\n    return {\n        set (value) {\n            el.setAttributeNS(ns, attrName, value);\n        },\n        remove () {\n            el.removeAttributeNS(ns, attrName);\n        }\n    };\n}\n/**\n * Returns an object consisting of `set` and `remove` functions, which\n * can be used in the context of CSSStyleDeclaration to set or remove a style.\n * @see module:ui/view~View#_bindToObservable\n *\n * @param el DOM Node to be modified.\n * @param styleName Name of the style to be modified.\n */ function getStyleUpdater(el, styleName) {\n    return {\n        set (value) {\n            el.style[styleName] = value;\n        },\n        remove () {\n            el.style[styleName] = null;\n        }\n    };\n}\n/**\n * Clones definition of the template.\n */ function clone(def) {\n    const clone = cloneDeepWith(def, (value)=>{\n        // Don't clone the `Template.bind`* bindings because of the references to Observable\n        // and DomEmitterMixin instances inside, which would also be traversed and cloned by greedy\n        // cloneDeepWith algorithm. There's no point in cloning Observable/DomEmitterMixins\n        // along with the definition.\n        //\n        // Don't clone Template instances if provided as a child. They're simply #render()ed\n        // and nothing should interfere.\n        //\n        // Also don't clone View instances if provided as a child of the Template. The template\n        // instance will be extracted from the View during the normalization and there's no need\n        // to clone it.\n        if (value && (value instanceof TemplateBinding || isTemplate(value) || isView(value) || isViewCollection(value))) {\n            return value;\n        }\n    });\n    return clone;\n}\n/**\n * Normalizes given {@link module:ui/template~TemplateDefinition}.\n *\n * See:\n *  * {@link normalizeAttributes}\n *  * {@link normalizeListeners}\n *  * {@link normalizePlainTextDefinition}\n *  * {@link normalizeTextDefinition}\n *\n * @param def A template definition.\n * @returns Normalized definition.\n */ function normalize(def) {\n    if (typeof def == 'string') {\n        def = normalizePlainTextDefinition(def);\n    } else if (def.text) {\n        normalizeTextDefinition(def);\n    }\n    if (def.on) {\n        def.eventListeners = normalizeListeners(def.on);\n        // Template mixes EmitterMixin, so delete #on to avoid collision.\n        delete def.on;\n    }\n    if (!def.text) {\n        if (def.attributes) {\n            normalizeAttributes(def.attributes);\n        }\n        const children = [];\n        if (def.children) {\n            if (isViewCollection(def.children)) {\n                children.push(def.children);\n            } else {\n                for (const child of def.children){\n                    if (isTemplate(child) || isView(child) || isNode(child)) {\n                        children.push(child);\n                    } else {\n                        children.push(new Template(child));\n                    }\n                }\n            }\n        }\n        def.children = children;\n    }\n    return def;\n}\n/**\n * Normalizes \"attributes\" section of {@link module:ui/template~TemplateDefinition}.\n *\n * ```\n * attributes: {\n * \ta: 'bar',\n * \tb: {@link module:ui/template~TemplateBinding},\n * \tc: {\n * \t\tvalue: 'bar'\n * \t}\n * }\n * ```\n *\n * becomes\n *\n * ```\n * attributes: {\n * \ta: [ 'bar' ],\n * \tb: [ {@link module:ui/template~TemplateBinding} ],\n * \tc: {\n * \t\tvalue: [ 'bar' ]\n * \t}\n * }\n * ```\n */ function normalizeAttributes(attributes) {\n    for(const a in attributes){\n        if (attributes[a].value) {\n            attributes[a].value = toArray(attributes[a].value);\n        }\n        arrayify(attributes, a);\n    }\n}\n/**\n * Normalizes \"on\" section of {@link module:ui/template~TemplateDefinition}.\n *\n * ```\n * on: {\n * \ta: 'bar',\n * \tb: {@link module:ui/template~TemplateBinding},\n * \tc: [ {@link module:ui/template~TemplateBinding}, () => { ... } ]\n * }\n * ```\n *\n * becomes\n *\n * ```\n * on: {\n * \ta: [ 'bar' ],\n * \tb: [ {@link module:ui/template~TemplateBinding} ],\n * \tc: [ {@link module:ui/template~TemplateBinding}, () => { ... } ]\n * }\n * ```\n *\n * @returns Object containing normalized listeners.\n */ function normalizeListeners(listeners) {\n    for(const l in listeners){\n        arrayify(listeners, l);\n    }\n    return listeners;\n}\n/**\n * Normalizes \"string\" {@link module:ui/template~TemplateDefinition}.\n *\n * ```\n * \"foo\"\n * ```\n *\n * becomes\n *\n * ```\n * { text: [ 'foo' ] },\n * ```\n *\n * @returns Normalized template definition.\n */ function normalizePlainTextDefinition(def) {\n    return {\n        text: [\n            def\n        ]\n    };\n}\n/**\n * Normalizes text {@link module:ui/template~TemplateDefinition}.\n *\n * ```\n * children: [\n * \t{ text: 'def' },\n * \t{ text: {@link module:ui/template~TemplateBinding} }\n * ]\n * ```\n *\n * becomes\n *\n * ```\n * children: [\n * \t{ text: [ 'def' ] },\n * \t{ text: [ {@link module:ui/template~TemplateBinding} ] }\n * ]\n * ```\n */ function normalizeTextDefinition(def) {\n    def.text = toArray(def.text);\n}\n/**\n * Wraps an entry in Object in an Array, if not already one.\n *\n * ```\n * {\n * \tx: 'y',\n * \ta: [ 'b' ]\n * }\n * ```\n *\n * becomes\n *\n * ```\n * {\n * \tx: [ 'y' ],\n * \ta: [ 'b' ]\n * }\n * ```\n */ function arrayify(obj, key) {\n    obj[key] = toArray(obj[key]);\n}\n/**\n * A helper which concatenates the value avoiding unwanted\n * leading white spaces.\n */ function arrayValueReducer(prev, cur) {\n    if (isFalsy(cur)) {\n        return prev;\n    } else if (isFalsy(prev)) {\n        return cur;\n    } else {\n        return `${prev} ${cur}`;\n    }\n}\n/**\n * Extends one object defined in the following format:\n *\n * ```\n * {\n * \tkey1: [Array1],\n * \tkey2: [Array2],\n * \t...\n * \tkeyN: [ArrayN]\n * }\n * ```\n *\n * with another object of the same data format.\n *\n * @param obj Base object.\n * @param ext Object extending base.\n */ function extendObjectValueArray(obj, ext) {\n    for(const a in ext){\n        if (obj[a]) {\n            obj[a].push(...ext[a]);\n        } else {\n            obj[a] = ext[a];\n        }\n    }\n}\n/**\n * A helper for {@link module:ui/template~Template#extend}. Recursively extends {@link module:ui/template~Template} instance\n * with content from {@link module:ui/template~TemplateDefinition}. See {@link module:ui/template~Template#extend} to learn more.\n *\n * @param def A template instance to be extended.\n * @param def A definition which is to extend the template instance.\n * @param Error context.\n */ function extendTemplate(template, def) {\n    if (def.attributes) {\n        if (!template.attributes) {\n            template.attributes = {};\n        }\n        extendObjectValueArray(template.attributes, def.attributes);\n    }\n    if (def.eventListeners) {\n        if (!template.eventListeners) {\n            template.eventListeners = {};\n        }\n        extendObjectValueArray(template.eventListeners, def.eventListeners);\n    }\n    if (def.text) {\n        template.text.push(...def.text);\n    }\n    if (def.children && def.children.length) {\n        if (template.children.length != def.children.length) {\n            /**\n\t\t\t * The number of children in extended definition does not match.\n\t\t\t *\n\t\t\t * @error ui-template-extend-children-mismatch\n\t\t\t */ throw new CKEditorError('ui-template-extend-children-mismatch', template);\n        }\n        let childIndex = 0;\n        for (const childDef of def.children){\n            extendTemplate(template.children[childIndex++], childDef);\n        }\n    }\n}\n/**\n * Checks if value is \"falsy\".\n * Note: 0 (Number) is not \"falsy\" in this context.\n *\n * @param value Value to be checked.\n */ function isFalsy(value) {\n    return !value && value !== 0;\n}\n/**\n * Checks if the item is an instance of {@link module:ui/view~View}\n *\n * @param value Value to be checked.\n */ function isView(item) {\n    return item instanceof View;\n}\n/**\n * Checks if the item is an instance of {@link module:ui/template~Template}\n *\n * @param value Value to be checked.\n */ function isTemplate(item) {\n    return item instanceof Template;\n}\n/**\n * Checks if the item is an instance of {@link module:ui/viewcollection~ViewCollection}\n *\n * @param value Value to be checked.\n */ function isViewCollection(item) {\n    return item instanceof ViewCollection;\n}\n/**\n * Checks if value array contains the one with namespace.\n */ function isNamespaced(attrValue) {\n    return isObject(attrValue[0]) && attrValue[0].ns;\n}\n/**\n * Creates an empty skeleton for {@link module:ui/template~Template#revert}\n * data.\n */ function getEmptyRevertData() {\n    return {\n        children: [],\n        bindings: [],\n        attributes: {}\n    };\n}\n/**\n * Checks whether an attribute should be extended when\n * {@link module:ui/template~Template#apply} is called.\n *\n * @param attrName Attribute name to check.\n */ function shouldExtend(attrName) {\n    return attrName == 'class' || attrName == 'style';\n}\n\n/**\n * The basic view class, which represents an HTML element created out of a\n * {@link module:ui/view~View#template}. Views are building blocks of the user interface and handle\n * interaction\n *\n * Views {@link module:ui/view~View#registerChild aggregate} children in\n * {@link module:ui/view~View#createCollection collections} and manage the life cycle of DOM\n * listeners e.g. by handling rendering and destruction.\n *\n * See the {@link module:ui/template~TemplateDefinition} syntax to learn more about shaping view\n * elements, attributes and listeners.\n *\n * ```ts\n * class SampleView extends View {\n * \tconstructor( locale ) {\n * \t\tsuper( locale );\n *\n * \t\tconst bind = this.bindTemplate;\n *\n * \t\t// Views define their interface (state) using observable attributes.\n * \t\tthis.set( 'elementClass', 'bar' );\n *\n * \t\tthis.setTemplate( {\n * \t\t\ttag: 'p',\n *\n * \t\t\t// The element of the view can be defined with its children.\n * \t\t\tchildren: [\n * \t\t\t\t'Hello',\n * \t\t\t\t{\n * \t\t\t\t\ttag: 'b',\n * \t\t\t\t\tchildren: [ 'world!' ]\n * \t\t\t\t}\n * \t\t\t],\n * \t\t\tattributes: {\n * \t\t\t\tclass: [\n * \t\t\t\t\t'foo',\n *\n * \t\t\t\t\t// Observable attributes control the state of the view in DOM.\n * \t\t\t\t\tbind.to( 'elementClass' )\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\ton: {\n * \t\t\t\t// Views listen to DOM events and propagate them.\n * \t\t\t\tclick: bind.to( 'clicked' )\n * \t\t\t}\n * \t\t} );\n * \t}\n * }\n *\n * const view = new SampleView( locale );\n *\n * view.render();\n *\n * // Append <p class=\"foo bar\">Hello<b>world</b></p> to the <body>\n * document.body.appendChild( view.element );\n *\n * // Change the class attribute to <p class=\"foo baz\">Hello<b>world</b></p>\n * view.elementClass = 'baz';\n *\n * // Respond to the \"click\" event in DOM by executing a custom action.\n * view.on( 'clicked', () => {\n * \tconsole.log( 'The view has been clicked!' );\n * } );\n * ```\n */ class View extends /* #__PURE__ */ DomEmitterMixin(/* #__PURE__ */ ObservableMixin()) {\n    /**\n\t * An HTML element of the view. `null` until {@link #render rendered}\n\t * from the {@link #template}.\n\t *\n\t * ```ts\n\t * class SampleView extends View {\n\t * \tconstructor() {\n\t * \t\tsuper();\n\t *\n\t * \t\t// A template instance the #element will be created from.\n\t * \t\tthis.setTemplate( {\n\t * \t\t\ttag: 'p'\n\t *\n\t * \t\t\t// ...\n\t * \t\t} );\n\t * \t}\n\t * }\n\t *\n\t * const view = new SampleView();\n\t *\n\t * // Renders the #template.\n\t * view.render();\n\t *\n\t * // Append the HTML element of the view to <body>.\n\t * document.body.appendChild( view.element );\n\t * ```\n\t *\n\t * **Note**: The element of the view can also be assigned directly:\n\t *\n\t * ```ts\n\t * view.element = document.querySelector( '#my-container' );\n\t * ```\n\t */ element;\n    /**\n\t * Set `true` when the view has already been {@link module:ui/view~View#render rendered}.\n\t *\n\t * @readonly\n\t */ isRendered;\n    /**\n\t * A set of tools to localize the user interface.\n\t *\n\t * Also see {@link module:core/editor/editor~Editor#locale}.\n\t *\n\t * @readonly\n\t */ locale;\n    /**\n\t * Shorthand for {@link module:utils/locale~Locale#t}.\n\t *\n\t * Note: If {@link #locale} instance hasn't been passed to the view this method may not\n\t * be available.\n\t *\n\t * @see module:utils/locale~Locale#t\n\t */ t;\n    /**\n\t * Template of this view. It provides the {@link #element} representing\n\t * the view in DOM, which is {@link #render rendered}.\n\t */ template;\n    /**\n\t * Collections registered with {@link #createCollection}.\n\t */ _viewCollections;\n    /**\n\t * A collection of view instances, which have been added directly\n\t * into the {@link module:ui/template~Template#children}.\n\t */ _unboundChildren;\n    /**\n\t * Cached {@link module:ui/template~BindChain bind chain} object created by the\n\t * {@link #template}. See {@link #bindTemplate}.\n\t */ _bindTemplate;\n    /**\n\t * Creates an instance of the {@link module:ui/view~View} class.\n\t *\n\t * Also see {@link #render}.\n\t *\n\t * @param locale The localization services instance.\n\t */ constructor(locale){\n        super();\n        this.element = null;\n        this.isRendered = false;\n        this.locale = locale;\n        this.t = locale && locale.t;\n        this._viewCollections = new Collection();\n        this._unboundChildren = this.createCollection();\n        // Pass parent locale to its children.\n        this._viewCollections.on('add', (evt, collection)=>{\n            collection.locale = locale;\n            collection.t = locale && locale.t;\n        });\n        this.decorate('render');\n    }\n    /**\n\t * Shorthand for {@link module:ui/template~Template.bind}, a binding\n\t * {@link module:ui/template~BindChain interface} pre–configured for the view instance.\n\t *\n\t * It provides {@link module:ui/template~BindChain#to `to()`} and\n\t * {@link module:ui/template~BindChain#if `if()`} methods that initialize bindings with\n\t * observable attributes and attach DOM listeners.\n\t *\n\t * ```ts\n\t * class SampleView extends View {\n\t * \tconstructor( locale ) {\n\t * \t\tsuper( locale );\n\t *\n\t * \t\tconst bind = this.bindTemplate;\n\t *\n\t * \t\t// These {@link module:utils/observablemixin~Observable observable} attributes will control\n\t * \t\t// the state of the view in DOM.\n\t * \t\tthis.set( {\n\t * \t\t\telementClass: 'foo',\n\t * \t\t \tisEnabled: true\n\t * \t\t } );\n\t *\n\t * \t\tthis.setTemplate( {\n\t * \t\t\ttag: 'p',\n\t *\n\t * \t\t\tattributes: {\n\t * \t\t\t\t// The class HTML attribute will follow elementClass\n\t * \t\t\t\t// and isEnabled view attributes.\n\t * \t\t\t\tclass: [\n\t * \t\t\t\t\tbind.to( 'elementClass' )\n\t * \t\t\t\t\tbind.if( 'isEnabled', 'present-when-enabled' )\n\t * \t\t\t\t]\n\t * \t\t\t},\n\t *\n\t * \t\t\ton: {\n\t * \t\t\t\t// The view will fire the \"clicked\" event upon clicking <p> in DOM.\n\t * \t\t\t\tclick: bind.to( 'clicked' )\n\t * \t\t\t}\n\t * \t\t} );\n\t * \t}\n\t * }\n\t * ```\n\t */ get bindTemplate() {\n        if (this._bindTemplate) {\n            return this._bindTemplate;\n        }\n        return this._bindTemplate = Template.bind(this, this);\n    }\n    /**\n\t * Creates a new collection of views, which can be used as\n\t * {@link module:ui/template~Template#children} of this view.\n\t *\n\t * ```ts\n\t * class SampleView extends View {\n\t * \tconstructor( locale ) {\n\t * \t\tsuper( locale );\n\t *\n\t * \t\tconst child = new ChildView( locale );\n\t * \t\tthis.items = this.createCollection( [ child ] );\n \t *\n\t * \t\tthis.setTemplate( {\n\t * \t\t\ttag: 'p',\n\t *\n\t * \t\t\t// `items` collection will render here.\n\t * \t\t\tchildren: this.items\n\t * \t\t} );\n\t * \t}\n\t * }\n\t *\n\t * const view = new SampleView( locale );\n\t * view.render();\n\t *\n\t * // It will append <p><child#element></p> to the <body>.\n\t * document.body.appendChild( view.element );\n\t * ```\n\t *\n\t * @param views Initial views of the collection.\n\t * @returns A new collection of view instances.\n\t */ createCollection(views) {\n        const collection = new ViewCollection(views);\n        this._viewCollections.add(collection);\n        return collection;\n    }\n    /**\n\t * Registers a new child view under the view instance. Once registered, a child\n\t * view is managed by its parent, including {@link #render rendering}\n\t * and {@link #destroy destruction}.\n\t *\n\t * To revert this, use {@link #deregisterChild}.\n\t *\n\t * ```ts\n\t * class SampleView extends View {\n\t * \tconstructor( locale ) {\n\t * \t\tsuper( locale );\n\t *\n\t * \t\tthis.childA = new SomeChildView( locale );\n\t * \t\tthis.childB = new SomeChildView( locale );\n\t *\n\t * \t\tthis.setTemplate( { tag: 'p' } );\n\t *\n\t * \t\t// Register the children.\n\t * \t\tthis.registerChild( [ this.childA, this.childB ] );\n\t * \t}\n\t *\n\t * \trender() {\n\t * \t\tsuper.render();\n\t *\n\t * \t\tthis.element.appendChild( this.childA.element );\n\t * \t\tthis.element.appendChild( this.childB.element );\n\t * \t}\n\t * }\n\t *\n\t * const view = new SampleView( locale );\n\t *\n\t * view.render();\n\t *\n\t * // Will append <p><childA#element><b></b><childB#element></p>.\n\t * document.body.appendChild( view.element );\n\t * ```\n\t *\n\t * **Note**: There's no need to add child views if they're already referenced in the\n\t * {@link #template}:\n\t *\n\t * ```ts\n\t * class SampleView extends View {\n\t * \tconstructor( locale ) {\n\t * \t\tsuper( locale );\n\t *\n\t * \t\tthis.childA = new SomeChildView( locale );\n\t * \t\tthis.childB = new SomeChildView( locale );\n\t *\n\t * \t\tthis.setTemplate( {\n\t * \t\t\ttag: 'p',\n\t *\n \t * \t\t\t// These children will be added automatically. There's no\n \t * \t\t\t// need to call {@link #registerChild} for any of them.\n\t * \t\t\tchildren: [ this.childA, this.childB ]\n\t * \t\t} );\n\t * \t}\n\t *\n\t * \t// ...\n\t * }\n\t * ```\n\t *\n\t * @param children Children views to be registered.\n\t */ registerChild(children) {\n        if (!isIterable(children)) {\n            children = [\n                children\n            ];\n        }\n        for (const child of children){\n            this._unboundChildren.add(child);\n        }\n    }\n    /**\n\t * The opposite of {@link #registerChild}. Removes a child view from this view instance.\n\t * Once removed, the child is no longer managed by its parent, e.g. it can safely\n\t * become a child of another parent view.\n\t *\n\t * @see #registerChild\n\t * @param children Child views to be removed.\n\t */ deregisterChild(children) {\n        if (!isIterable(children)) {\n            children = [\n                children\n            ];\n        }\n        for (const child of children){\n            this._unboundChildren.remove(child);\n        }\n    }\n    /**\n\t * Sets the {@link #template} of the view with with given definition.\n\t *\n\t * A shorthand for:\n\t *\n\t * ```ts\n\t * view.setTemplate( definition );\n\t * ```\n\t *\n\t * @param definition Definition of view's template.\n\t */ setTemplate(definition) {\n        this.template = new Template(definition);\n    }\n    /**\n\t * {@link module:ui/template~Template.extend Extends} the {@link #template} of the view with\n\t * with given definition.\n\t *\n\t * A shorthand for:\n\t *\n\t * ```ts\n\t * Template.extend( view.template, definition );\n\t * ```\n\t *\n\t * **Note**: Is requires the {@link #template} to be already set. See {@link #setTemplate}.\n\t *\n\t * @param definition Definition which extends the {@link #template}.\n\t */ extendTemplate(definition) {\n        Template.extend(this.template, definition);\n    }\n    /**\n\t * Recursively renders the view.\n\t *\n\t * Once the view is rendered:\n\t * * the {@link #element} becomes an HTML element out of {@link #template},\n\t * * the {@link #isRendered} flag is set `true`.\n\t *\n\t * **Note**: The children of the view:\n\t * * defined directly in the {@link #template}\n\t * * residing in collections created by the {@link #createCollection} method,\n\t * * and added by {@link #registerChild}\n\t * are also rendered in the process.\n\t *\n\t * In general, `render()` method is the right place to keep the code which refers to the\n\t * {@link #element} and should be executed at the very beginning of the view's life cycle.\n\t *\n\t * It is possible to {@link module:ui/template~Template.extend} the {@link #template} before\n\t * the view is rendered. To allow an early customization of the view (e.g. by its parent),\n\t * such references should be done in `render()`.\n\t *\n\t * ```ts\n\t * class SampleView extends View {\n\t * \tconstructor() {\n\t * \t\tthis.setTemplate( {\n\t * \t\t\t// ...\n\t * \t\t} );\n\t * \t},\n\t *\n\t * \trender() {\n\t * \t\t// View#element becomes available.\n\t * \t\tsuper.render();\n\t *\n\t * \t\t// The \"scroll\" listener depends on #element.\n\t * \t\tthis.listenTo( window, 'scroll', () => {\n\t * \t\t\t// A reference to #element would render the #template and make it non-extendable.\n\t * \t\t\tif ( window.scrollY > 0 ) {\n\t * \t\t\t\tthis.element.scrollLeft = 100;\n\t * \t\t\t} else {\n\t * \t\t\t\tthis.element.scrollLeft = 0;\n\t * \t\t\t}\n\t * \t\t} );\n\t * \t}\n\t * }\n\t *\n\t * const view = new SampleView();\n\t *\n\t * // Let's customize the view before it gets rendered.\n\t * view.extendTemplate( {\n\t * \tattributes: {\n\t * \t\tclass: [\n\t * \t\t\t'additional-class'\n\t * \t\t]\n\t * \t}\n\t * } );\n\t *\n\t * // Late rendering allows customization of the view.\n\t * view.render();\n\t * ```\n\t */ render() {\n        if (this.isRendered) {\n            /**\n\t\t\t * This View has already been rendered.\n\t\t\t *\n\t\t\t * @error ui-view-render-already-rendered\n\t\t\t */ throw new CKEditorError('ui-view-render-already-rendered', this);\n        }\n        // Render #element of the view.\n        if (this.template) {\n            this.element = this.template.render();\n            // Auto–register view children from #template.\n            this.registerChild(this.template.getViews());\n        }\n        this.isRendered = true;\n    }\n    /**\n\t * Recursively destroys the view instance and child views added by {@link #registerChild} and\n\t * residing in collections created by the {@link #createCollection}.\n\t *\n\t * Destruction disables all event listeners:\n\t * * created on the view, e.g. `view.on( 'event', () => {} )`,\n\t * * defined in the {@link #template} for DOM events.\n\t */ destroy() {\n        this.stopListening();\n        this._viewCollections.map((c)=>c.destroy());\n        // Template isn't obligatory for views.\n        if (this.template && this.template._revertData) {\n            this.template.revert(this.element);\n        }\n    }\n}\n\n/**\n * The politeness level of an `aria-live` announcement.\n *\n * Available keys are:\n * * `AriaLiveAnnouncerPoliteness.POLITE`,\n * * `AriaLiveAnnouncerPoliteness.ASSERTIVE`\n *\n * [Learn more](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions#Politeness_levels).\n */ const AriaLiveAnnouncerPoliteness = {\n    POLITE: 'polite',\n    ASSERTIVE: 'assertive'\n};\n/**\n * An accessibility helper that manages all ARIA live regions associated with an editor instance. ARIA live regions announce changes\n * to the state of the editor features.\n *\n * These announcements are consumed and propagated by screen readers and give users a better understanding of the current\n * state of the editor.\n *\n * To announce a state change to an editor use the {@link #announce} method:\n *\n * ```ts\n * editor.ui.ariaLiveAnnouncer.announce( 'Text of an announcement.' );\n * ```\n */ class AriaLiveAnnouncer {\n    /**\n\t * The editor instance.\n\t */ editor;\n    /**\n\t * The view that aggregates all `aria-live` regions.\n\t */ view;\n    /**\n\t * @inheritDoc\n\t */ constructor(editor){\n        this.editor = editor;\n        /**\n\t\t * Some screen readers only look at changes in the aria-live region.\n\t\t * They might not read a region that already has content when it is added.\n\t\t * To stop this problem, make sure to set up regions for all politeness settings when the editor starts.\n\t\t */ editor.once('ready', ()=>{\n            for (const politeness of Object.values(AriaLiveAnnouncerPoliteness)){\n                this.announce('', politeness);\n            }\n        });\n    }\n    /**\n\t * Sets an announcement text to an aria region that is then announced by a screen reader to the user.\n\t *\n\t * If the aria region of a specified politeness does not exist, it will be created and can be re-used later.\n\t *\n\t * The default announcement politeness level is `'polite'`.\n\t *\n\t * ```ts\n\t * // Most screen readers will queue announcements from multiple aria-live regions and read them out in the order they were emitted.\n \t * editor.ui.ariaLiveAnnouncer.announce( 'Image uploaded.' );\n \t * editor.ui.ariaLiveAnnouncer.announce( 'Connection lost. Reconnecting.' );\n \t * ```\n\t */ announce(announcement, attributes = AriaLiveAnnouncerPoliteness.POLITE) {\n        const editor = this.editor;\n        if (!editor.ui.view) {\n            return;\n        }\n        if (!this.view) {\n            this.view = new AriaLiveAnnouncerView(editor.locale);\n            editor.ui.view.body.add(this.view);\n        }\n        const { politeness, isUnsafeHTML } = typeof attributes === 'string' ? {\n            politeness: attributes\n        } : attributes;\n        let politenessRegionView = this.view.regionViews.find((view)=>view.politeness === politeness);\n        if (!politenessRegionView) {\n            politenessRegionView = new AriaLiveAnnouncerRegionView(editor, politeness);\n            this.view.regionViews.add(politenessRegionView);\n        }\n        politenessRegionView.announce({\n            announcement,\n            isUnsafeHTML\n        });\n    }\n}\n/**\n * The view that aggregates all `aria-live` regions.\n */ class AriaLiveAnnouncerView extends View {\n    /**\n\t * A collection of all views that represent individual `aria-live` regions.\n\t */ regionViews;\n    constructor(locale){\n        super(locale);\n        this.regionViews = this.createCollection();\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-aria-live-announcer'\n                ]\n            },\n            children: this.regionViews\n        });\n    }\n}\n/**\n * The view that represents a single `aria-live`.\n */ class AriaLiveAnnouncerRegionView extends View {\n    /**\n\t * Current politeness level of the region.\n\t */ politeness;\n    /**\n\t * DOM converter used to sanitize unsafe HTML passed to {@link #announce} method.\n\t */ _domConverter;\n    /**\n\t * Interval used to remove additions. It prevents accumulation of added nodes in region.\n\t */ _pruneAnnouncementsInterval;\n    constructor(editor, politeness){\n        super(editor.locale);\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                'aria-live': politeness,\n                'aria-relevant': 'additions'\n            },\n            children: [\n                {\n                    tag: 'ul',\n                    attributes: {\n                        class: [\n                            'ck',\n                            'ck-aria-live-region-list'\n                        ]\n                    }\n                }\n            ]\n        });\n        editor.on('destroy', ()=>{\n            if (this._pruneAnnouncementsInterval !== null) {\n                clearInterval(this._pruneAnnouncementsInterval);\n                this._pruneAnnouncementsInterval = null;\n            }\n        });\n        this.politeness = politeness;\n        this._domConverter = editor.data.htmlProcessor.domConverter;\n        this._pruneAnnouncementsInterval = setInterval(()=>{\n            if (this.element && this._listElement.firstChild) {\n                this._listElement.firstChild.remove();\n            }\n        }, 5000);\n    }\n    /**\n\t * Appends new announcement to region.\n\t */ announce({ announcement, isUnsafeHTML }) {\n        if (!announcement.trim().length) {\n            return;\n        }\n        const messageListItem = document.createElement('li');\n        if (isUnsafeHTML) {\n            this._domConverter.setContentOf(messageListItem, announcement);\n        } else {\n            messageListItem.innerText = announcement;\n        }\n        this._listElement.appendChild(messageListItem);\n    }\n    /**\n\t * Return current announcements list HTML element.\n\t */ get _listElement() {\n        return this.element.querySelector('ul');\n    }\n}\n\n/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */ /**\n * @module ui/bindings/clickoutsidehandler\n */ /**\n * Handles clicking **outside** of a specified set of elements, then fires an action.\n *\n * **Note**: Actually, the action is executed upon `mousedown`, not `click`. It prevents\n * certain issues when the user keeps holding the mouse button and the UI cannot react\n * properly.\n *\n * @param options Configuration options.\n * @param options.emitter The emitter to which this behavior should be added.\n * @param options.activator Function returning a `Boolean`, to determine whether the handler is active.\n * @param options.contextElements Array of HTML elements or a callback returning an array of HTML elements\n * that determine the scope of the handler. Clicking any of them or their descendants will **not** fire the callback.\n * @param options.callback An action executed by the handler.\n * @param options.listenerOptions Additional options for the listener (like priority).\n */ function clickOutsideHandler({ emitter, activator, callback, contextElements, listenerOptions }) {\n    emitter.listenTo(document, 'mousedown', (evt, domEvt)=>{\n        if (!activator()) {\n            return;\n        }\n        // Check if `composedPath` is `undefined` in case the browser does not support native shadow DOM.\n        // Can be removed when all supported browsers support native shadow DOM.\n        const path = typeof domEvt.composedPath == 'function' ? domEvt.composedPath() : [];\n        const contextElementsList = typeof contextElements == 'function' ? contextElements() : contextElements;\n        for (const contextElement of contextElementsList){\n            if (contextElement.contains(domEvt.target) || path.includes(contextElement)) {\n                return;\n            }\n        }\n        callback();\n    }, listenerOptions);\n}\n\n/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */ /**\n * @module ui/bindings/csstransitiondisablermixin\n */ /**\n * A mixin that brings the possibility to temporarily disable CSS transitions using\n * {@link module:ui/view~View} methods. It is helpful when, for instance, the transitions should not happen\n * when the view is first displayed but they should work normal in other cases.\n *\n * The methods to control the CSS transitions are:\n * * `disableCssTransitions()` – Adds the `.ck-transitions-disabled` class to the\n * {@link module:ui/view~View#element view element}.\n * * `enableCssTransitions()` – Removes the `.ck-transitions-disabled` class from the\n * {@link module:ui/view~View#element view element}.\n *\n * The usage comes down to:\n *\n * ```ts\n * const MyViewWithCssTransitionDisabler = CssTransitionDisablerMixin( MyView );\n * const view = new MyViewWithCssTransitionDisabler();\n *\n * // ...\n *\n * view.disableCssTransitions();\n * view.show();\n * view.enableCssTransitions();\n * ```\n *\n * @param view View instance that should get this functionality.\n */ function CssTransitionDisablerMixin(view) {\n    class Mixin extends view {\n        disableCssTransitions() {\n            this._isCssTransitionsDisabled = true;\n        }\n        enableCssTransitions() {\n            this._isCssTransitionsDisabled = false;\n        }\n        constructor(...args){\n            super(...args);\n            this.set('_isCssTransitionsDisabled', false);\n            this.initializeCssTransitionDisablerMixin();\n        }\n        initializeCssTransitionDisablerMixin() {\n            if (this.template) {\n                this.extendTemplate({\n                    attributes: {\n                        class: [\n                            this.bindTemplate.if('_isCssTransitionsDisabled', 'ck-transitions-disabled')\n                        ]\n                    }\n                });\n            }\n        }\n    }\n    return Mixin;\n}\n\n/**\n * A mixin that brings the possibility to observe dragging of the view element.\n * The view has to implement the {@link ~DraggableView} interface to use it:\n *\n * ```js\n * export class MyDraggableView extends DraggableViewMixin( View ) implements DraggableView {\n * \t\t// ...\n * }\n * ```\n *\n * Creating a class extending it attaches a set of mouse and touch listeners allowing to observe dragging of the view element:\n * * `mousedown` and `touchstart` on the view element - starting the dragging.\n * * `mousemove` and `touchmove` on the document - updating the view coordinates.\n * * `mouseup` and `touchend` on the document - stopping the dragging.\n *\n * The mixin itself does not provide a visual feedback (that is, the dragged element does not change its position) -\n * it is up to the developer to implement it.\n */ function DraggableViewMixin(view) {\n    class DraggableMixin extends view {\n        /**\n\t\t * A bound version of {@link #_onDrag}.\n\t\t */ _onDragBound = this._onDrag.bind(this);\n        /**\n\t\t * A bound version of {@link #_onDragEnd}.\n\t\t */ _onDragEndBound = this._onDragEnd.bind(this);\n        /**\n\t\t * The last coordinates of the view. It is updated on every mouse move.\n\t\t */ _lastDraggingCoordinates = {\n            x: 0,\n            y: 0\n        };\n        /**\n\t\t * @inheritDoc\n\t\t */ constructor(...args){\n            super(...args);\n            this.on('render', ()=>{\n                this._attachListeners();\n            });\n            this.set('isDragging', false);\n        }\n        /**\n\t\t * Attaches the listeners for the drag start.\n\t\t */ _attachListeners() {\n            this.listenTo(this.element, 'mousedown', this._onDragStart.bind(this));\n            this.listenTo(this.element, 'touchstart', this._onDragStart.bind(this));\n        }\n        /**\n\t\t * Attaches the listeners for the dragging and drag end.\n\t\t */ _attachDragListeners() {\n            this.listenTo(global.document, 'mouseup', this._onDragEndBound);\n            this.listenTo(global.document, 'touchend', this._onDragEndBound);\n            this.listenTo(global.document, 'mousemove', this._onDragBound);\n            this.listenTo(global.document, 'touchmove', this._onDragBound);\n        }\n        /**\n\t\t * Detaches the listeners after the drag end.\n\t\t */ _detachDragListeners() {\n            this.stopListening(global.document, 'mouseup', this._onDragEndBound);\n            this.stopListening(global.document, 'touchend', this._onDragEndBound);\n            this.stopListening(global.document, 'mousemove', this._onDragBound);\n            this.stopListening(global.document, 'touchmove', this._onDragBound);\n        }\n        /**\n\t\t * Starts the dragging listeners and sets the initial view coordinates.\n\t\t */ _onDragStart(evt, domEvt) {\n            if (!this._isHandleElementPressed(domEvt)) {\n                return;\n            }\n            this._attachDragListeners();\n            let x = 0;\n            let y = 0;\n            // If dragging is performed with a mouse, there is only one set of coordinates available.\n            // But when using a touch device, there may be many of them, so use the coordinates from the first touch.\n            if (domEvt instanceof MouseEvent) {\n                x = domEvt.clientX;\n                y = domEvt.clientY;\n            } else {\n                x = domEvt.touches[0].clientX;\n                y = domEvt.touches[0].clientY;\n            }\n            this._lastDraggingCoordinates = {\n                x,\n                y\n            };\n            this.isDragging = true;\n        }\n        /**\n\t\t * Updates the view coordinates and fires the `drag` event.\n\t\t */ _onDrag(evt, domEvt) {\n            // If dragging was stopped by some external intervention, stop listening.\n            if (!this.isDragging) {\n                this._detachDragListeners();\n                return;\n            }\n            let newX = 0;\n            let newY = 0;\n            // If dragging is performed with a mouse, there is only one set of coordinates available.\n            // But when using a touch device, there may be many of them, so use the coordinates from the first touch.\n            if (domEvt instanceof MouseEvent) {\n                newX = domEvt.clientX;\n                newY = domEvt.clientY;\n            } else {\n                newX = domEvt.touches[0].clientX;\n                newY = domEvt.touches[0].clientY;\n            }\n            // Prevents selection of text while dragging on Safari.\n            domEvt.preventDefault();\n            this.fire('drag', {\n                deltaX: Math.round(newX - this._lastDraggingCoordinates.x),\n                deltaY: Math.round(newY - this._lastDraggingCoordinates.y)\n            });\n            this._lastDraggingCoordinates = {\n                x: newX,\n                y: newY\n            };\n        }\n        /**\n\t\t * Stops the dragging and detaches the listeners.\n\t\t */ _onDragEnd() {\n            this._detachDragListeners();\n            this.isDragging = false;\n        }\n        /**\n\t\t * Checks if the drag handle element was pressed.\n\t\t */ _isHandleElementPressed(domEvt) {\n            if (!this.dragHandleElement) {\n                return false;\n            }\n            return this.dragHandleElement === domEvt.target || domEvt.target instanceof HTMLElement && this.dragHandleElement.contains(domEvt.target);\n        }\n    }\n    return DraggableMixin;\n}\n\n/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */ /**\n * @module ui/bindings/submithandler\n */ /**\n * A handler useful for {@link module:ui/view~View views} working as HTML forms. It intercepts a native DOM\n * `submit` event, prevents the default web browser behavior (navigation and page reload) and\n * fires the `submit` event on a view instead. Such a custom event can be then used by any\n * {@link module:utils/dom/emittermixin~DomEmitter emitter}, e.g. to serialize the form data.\n *\n * ```ts\n * import { submitHandler } from '@ckeditor/ckeditor5-ui/src/bindings/submithandler';\n *\n * // ...\n *\n * class AnyFormView extends View {\n * \tconstructor() {\n * \t\tsuper();\n *\n * \t\t// ...\n *\n * \t\tsubmitHandler( {\n * \t\t\tview: this\n * \t\t} );\n * \t}\n * }\n *\n * // ...\n *\n * const view = new AnyFormView();\n *\n * // A sample listener attached by an emitter working with the view.\n * this.listenTo( view, 'submit', () => {\n * \tsaveTheFormData();\n * \thideTheForm();\n * } );\n * ```\n *\n * @param options Configuration options.\n * @param options.view The view which DOM `submit` events should be handled.\n */ function submitHandler({ view }) {\n    view.listenTo(view.element, 'submit', (evt, domEvt)=>{\n        domEvt.preventDefault();\n        view.fire('submit');\n    }, {\n        useCapture: true\n    });\n}\n\n/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */ /**\n * @module ui/bindings/addkeyboardhandlingforgrid\n */ /**\n * A helper that adds a keyboard navigation support (arrow up/down/left/right) for grids.\n *\n * @param options Configuration options.\n * @param options.keystrokeHandler Keystroke handler to register navigation with arrow keys.\n * @param options.focusTracker A focus tracker for grid elements.\n * @param options.gridItems A collection of grid items.\n * @param options.numberOfColumns Number of columns in the grid. Can be specified as a function that returns\n * the number (e.g. for responsive grids).\n * @param options.uiLanguageDirection String of ui language direction.\n */ function addKeyboardHandlingForGrid({ keystrokeHandler, focusTracker, gridItems, numberOfColumns, uiLanguageDirection }) {\n    const getNumberOfColumns = typeof numberOfColumns === 'number' ? ()=>numberOfColumns : numberOfColumns;\n    keystrokeHandler.set('arrowright', getGridItemFocuser((focusedElementIndex, gridItems)=>{\n        return uiLanguageDirection === 'rtl' ? getLeftElementIndex(focusedElementIndex, gridItems.length) : getRightElementIndex(focusedElementIndex, gridItems.length);\n    }));\n    keystrokeHandler.set('arrowleft', getGridItemFocuser((focusedElementIndex, gridItems)=>{\n        return uiLanguageDirection === 'rtl' ? getRightElementIndex(focusedElementIndex, gridItems.length) : getLeftElementIndex(focusedElementIndex, gridItems.length);\n    }));\n    keystrokeHandler.set('arrowup', getGridItemFocuser((focusedElementIndex, gridItems)=>{\n        let nextIndex = focusedElementIndex - getNumberOfColumns();\n        if (nextIndex < 0) {\n            nextIndex = focusedElementIndex + getNumberOfColumns() * Math.floor(gridItems.length / getNumberOfColumns());\n            if (nextIndex > gridItems.length - 1) {\n                nextIndex -= getNumberOfColumns();\n            }\n        }\n        return nextIndex;\n    }));\n    keystrokeHandler.set('arrowdown', getGridItemFocuser((focusedElementIndex, gridItems)=>{\n        let nextIndex = focusedElementIndex + getNumberOfColumns();\n        if (nextIndex > gridItems.length - 1) {\n            nextIndex = focusedElementIndex % getNumberOfColumns();\n        }\n        return nextIndex;\n    }));\n    function getGridItemFocuser(getIndexToFocus) {\n        return (evt)=>{\n            const focusedElement = gridItems.find((item)=>item.element === focusTracker.focusedElement);\n            const focusedElementIndex = gridItems.getIndex(focusedElement);\n            const nextIndexToFocus = getIndexToFocus(focusedElementIndex, gridItems);\n            gridItems.get(nextIndexToFocus).focus();\n            evt.stopPropagation();\n            evt.preventDefault();\n        };\n    }\n    /**\n\t * Function returning the next index.\n\t *\n\t * ```\n\t * before: [ ][x][ ]\tafter: [ ][ ][x]\n\t * index = 1            index = 2\n\t * ```\n\t *\n\t * If current index is last, function returns first index.\n\t *\n\t * ```\n\t * before: [ ][ ][x]\tafter: [x][ ][ ]\n\t * index = 2            index = 0\n\t * ```\n\t *\n\t * @param elementIndex Number of current index.\n\t * @param collectionLength A count of collection items.\n\t */ function getRightElementIndex(elementIndex, collectionLength) {\n        if (elementIndex === collectionLength - 1) {\n            return 0;\n        } else {\n            return elementIndex + 1;\n        }\n    }\n    /**\n\t * Function returning the previous index.\n\t *\n\t * ```\n\t * before: [ ][x][ ]\tafter: [x][ ][ ]\n\t * index = 1            index = 0\n\t * ```\n\t *\n\t * If current index is first, function returns last index.\n\t *\n\t * ```\n\t * before: [x][ ][ ]\tafter: [ ][ ][x]\n\t * index = 0            index = 2\n\t * ```\n\t *\n\t * @param elementIndex Number of current index.\n\t * @param collectionLength A count of collection items.\n\t */ function getLeftElementIndex(elementIndex, collectionLength) {\n        if (elementIndex === 0) {\n            return collectionLength - 1;\n        } else {\n            return elementIndex - 1;\n        }\n    }\n}\n\n/**\n * The label view class.\n */ class LabelView extends View {\n    /**\n\t * An unique id of the label. It can be used by other UI components to reference\n\t * the label, for instance, using the `aria-describedby` DOM attribute.\n\t */ id;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale){\n        super(locale);\n        this.set('text', undefined);\n        this.set('for', undefined);\n        this.id = `ck-editor__label_${uid()}`;\n        const bind = this.bindTemplate;\n        this.setTemplate({\n            tag: 'label',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-label'\n                ],\n                id: this.id,\n                for: bind.to('for')\n            },\n            children: [\n                {\n                    text: bind.to('text')\n                }\n            ]\n        });\n    }\n}\n\n/**\n * The view displaying keystrokes in the Accessibility help dialog.\n */ class AccessibilityHelpContentView extends View {\n    /**\n\t * @inheritDoc\n\t */ constructor(locale, keystrokes){\n        super(locale);\n        const t = locale.t;\n        const helpLabel = new LabelView();\n        helpLabel.text = t('Help Contents. To close this dialog press ESC.');\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-accessibility-help-dialog__content'\n                ],\n                'aria-labelledby': helpLabel.id,\n                role: 'document',\n                tabindex: -1\n            },\n            children: [\n                createElement(document, 'p', {}, t('Below, you can find a list of keyboard shortcuts that can be used in the editor.')),\n                ...this._createCategories(Array.from(keystrokes.values())),\n                helpLabel\n            ]\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ focus() {\n        this.element.focus();\n    }\n    /**\n\t * Creates `<section><h3>Category label</h3>...</section>` elements for each category of keystrokes.\n\t */ _createCategories(categories) {\n        return categories.map((categoryDefinition)=>{\n            const elements = [\n                // Category header.\n                createElement(document, 'h3', {}, categoryDefinition.label),\n                // Category definitions (<dl>) and their optional headers (<h4>).\n                ...Array.from(categoryDefinition.groups.values()).map((groupDefinition)=>this._createGroup(groupDefinition)).flat()\n            ];\n            // Category description (<p>).\n            if (categoryDefinition.description) {\n                elements.splice(1, 0, createElement(document, 'p', {}, categoryDefinition.description));\n            }\n            return createElement(document, 'section', {}, elements);\n        });\n    }\n    /**\n\t * Creates `[<h4>Optional label</h4>]<dl>...</dl>` elements for each group of keystrokes in a category.\n\t */ _createGroup(groupDefinition) {\n        const definitionAndDescriptionElements = groupDefinition.keystrokes.sort((a, b)=>a.label.localeCompare(b.label)).map((keystrokeDefinition)=>this._createGroupRow(keystrokeDefinition)).flat();\n        const elements = [\n            createElement(document, 'dl', {}, definitionAndDescriptionElements)\n        ];\n        if (groupDefinition.label) {\n            elements.unshift(createElement(document, 'h4', {}, groupDefinition.label));\n        }\n        return elements;\n    }\n    /**\n\t * Creates `<dt>Keystroke label</dt><dd>Keystroke definition</dd>` elements for each keystroke in a group.\n\t */ _createGroupRow(keystrokeDefinition) {\n        const t = this.locale.t;\n        const dt = createElement(document, 'dt');\n        const dd = createElement(document, 'dd');\n        const normalizedKeystrokeDefinition = normalizeKeystrokeDefinition(keystrokeDefinition.keystroke);\n        const keystrokeAlternativeHTMLs = [];\n        for (const keystrokeAlternative of normalizedKeystrokeDefinition){\n            keystrokeAlternativeHTMLs.push(keystrokeAlternative.map(keystrokeToEnvKbd).join(''));\n        }\n        dt.innerHTML = keystrokeDefinition.label;\n        dd.innerHTML = keystrokeAlternativeHTMLs.join(', ') + (keystrokeDefinition.mayRequireFn && env.isMac ? ` ${t('(may require <kbd>Fn</kbd>)')}` : '');\n        return [\n            dt,\n            dd\n        ];\n    }\n}\nfunction keystrokeToEnvKbd(keystroke) {\n    return getEnvKeystrokeText(keystroke).split('+').map((part)=>`<kbd>${part}</kbd>`).join('+');\n}\nfunction normalizeKeystrokeDefinition(definition) {\n    if (typeof definition === 'string') {\n        return [\n            [\n                definition\n            ]\n        ];\n    }\n    if (typeof definition[0] === 'string') {\n        return [\n            definition\n        ];\n    }\n    return definition;\n}\n\n/**\n * The icon view class.\n */ class IconView extends View {\n    /**\n\t * A list of presentational attributes that can be set on the `<svg>` element and should be preserved\n\t * when the icon {@link module:ui/icon/iconview~IconView#content content} is loaded.\n\t *\n\t * See the [specification](https://www.w3.org/TR/SVG/styling.html#TermPresentationAttribute) to learn more.\n\t */ static presentationalAttributeNames = [\n        'alignment-baseline',\n        'baseline-shift',\n        'clip-path',\n        'clip-rule',\n        'color',\n        'color-interpolation',\n        'color-interpolation-filters',\n        'color-rendering',\n        'cursor',\n        'direction',\n        'display',\n        'dominant-baseline',\n        'fill',\n        'fill-opacity',\n        'fill-rule',\n        'filter',\n        'flood-color',\n        'flood-opacity',\n        'font-family',\n        'font-size',\n        'font-size-adjust',\n        'font-stretch',\n        'font-style',\n        'font-variant',\n        'font-weight',\n        'image-rendering',\n        'letter-spacing',\n        'lighting-color',\n        'marker-end',\n        'marker-mid',\n        'marker-start',\n        'mask',\n        'opacity',\n        'overflow',\n        'paint-order',\n        'pointer-events',\n        'shape-rendering',\n        'stop-color',\n        'stop-opacity',\n        'stroke',\n        'stroke-dasharray',\n        'stroke-dashoffset',\n        'stroke-linecap',\n        'stroke-linejoin',\n        'stroke-miterlimit',\n        'stroke-opacity',\n        'stroke-width',\n        'text-anchor',\n        'text-decoration',\n        'text-overflow',\n        'text-rendering',\n        'transform',\n        'unicode-bidi',\n        'vector-effect',\n        'visibility',\n        'white-space',\n        'word-spacing',\n        'writing-mode'\n    ];\n    /**\n\t * @inheritDoc\n\t */ constructor(){\n        super();\n        const bind = this.bindTemplate;\n        this.set('content', '');\n        this.set('viewBox', '0 0 20 20');\n        this.set('fillColor', '');\n        this.set('isColorInherited', true);\n        this.set('isVisible', true);\n        this.setTemplate({\n            tag: 'svg',\n            ns: 'http://www.w3.org/2000/svg',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-icon',\n                    bind.if('isVisible', 'ck-hidden', (value)=>!value),\n                    // Exclude icon internals from the CSS reset to allow rich (non-monochromatic) icons\n                    // (https://github.com/ckeditor/ckeditor5/issues/12599).\n                    'ck-reset_all-excluded',\n                    // The class to remove the dynamic color inheritance is toggleable\n                    // (https://github.com/ckeditor/ckeditor5/issues/12599).\n                    bind.if('isColorInherited', 'ck-icon_inherit-color')\n                ],\n                viewBox: bind.to('viewBox'),\n                'aria-hidden': true\n            }\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        this._updateXMLContent();\n        this._colorFillPaths();\n        // This is a hack for lack of innerHTML binding.\n        // See: https://github.com/ckeditor/ckeditor5-ui/issues/99.\n        this.on('change:content', ()=>{\n            this._updateXMLContent();\n            this._colorFillPaths();\n        });\n        this.on('change:fillColor', ()=>{\n            this._colorFillPaths();\n        });\n    }\n    /**\n\t * Updates the {@link #element} with the value of {@link #content}.\n\t */ _updateXMLContent() {\n        if (this.content) {\n            const parsed = new DOMParser().parseFromString(this.content.trim(), 'image/svg+xml');\n            const svg = parsed.querySelector('svg');\n            if (!svg) {\n                /**\n\t\t\t\t * The provided icon content is not a valid SVG.\n\t\t\t\t *\n\t\t\t\t * @error ui-iconview-invalid-svg\n\t\t\t\t */ throw new CKEditorError('ui-iconview-invalid-svg', this);\n            }\n            const viewBox = svg.getAttribute('viewBox');\n            if (viewBox) {\n                this.viewBox = viewBox;\n            }\n            // Preserve presentational attributes of the <svg> element from the source.\n            // They can affect rendering of the entire icon (https://github.com/ckeditor/ckeditor5/issues/12597).\n            for (const { name, value } of Array.from(svg.attributes)){\n                if (IconView.presentationalAttributeNames.includes(name)) {\n                    this.element.setAttribute(name, value);\n                }\n            }\n            while(this.element.firstChild){\n                this.element.removeChild(this.element.firstChild);\n            }\n            while(svg.childNodes.length > 0){\n                this.element.appendChild(svg.childNodes[0]);\n            }\n        }\n    }\n    /**\n\t * Fills all child `path.ck-icon__fill` with the `#fillColor`.\n\t */ _colorFillPaths() {\n        if (this.fillColor) {\n            this.element.querySelectorAll('.ck-icon__fill').forEach((path)=>{\n                path.style.fill = this.fillColor;\n            });\n        }\n    }\n}\n\n/**\n * A default implementation of the button view's label. It comes with a dynamic text support\n * via {@link module:ui/button/buttonlabelview~ButtonLabelView#text} property.\n */ class ButtonLabelView extends View {\n    /**\n\t * @inheritDoc\n\t */ constructor(){\n        super();\n        this.set({\n            style: undefined,\n            text: undefined,\n            id: undefined\n        });\n        const bind = this.bindTemplate;\n        this.setTemplate({\n            tag: 'span',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-button__label'\n                ],\n                style: bind.to('style'),\n                id: bind.to('id')\n            },\n            children: [\n                {\n                    text: bind.to('text')\n                }\n            ]\n        });\n    }\n}\n\n/**\n * The button view class.\n *\n * ```ts\n * const view = new ButtonView();\n *\n * view.set( {\n * \tlabel: 'A button',\n * \tkeystroke: 'Ctrl+B',\n * \ttooltip: true,\n * \twithText: true\n * } );\n *\n * view.render();\n *\n * document.body.append( view.element );\n * ```\n */ class ButtonView extends View {\n    /**\n\t * Collection of the child views inside of the button {@link #element}.\n\t */ children;\n    /**\n\t * Label of the button view. Its text is configurable using the {@link #label label attribute}.\n\t *\n\t * If not configured otherwise in the `constructor()`, by default the label is an instance\n\t * of {@link module:ui/button/buttonlabelview~ButtonLabelView}.\n\t */ labelView;\n    /**\n\t * The icon view of the button. Will be added to {@link #children} when the\n\t * {@link #icon icon attribute} is defined.\n\t */ iconView;\n    /**\n\t * A view displaying the keystroke of the button next to the {@link #labelView label}.\n\t * Added to {@link #children} when the {@link #withKeystroke `withKeystroke` attribute}\n\t * is defined.\n\t */ keystrokeView;\n    /**\n\t * Delayed focus function for focus handling in Safari.\n\t */ _focusDelayed = null;\n    /**\n\t * Creates an instance of the button view class.\n\t *\n\t * @param locale The {@link module:core/editor/editor~Editor#locale} instance.\n\t * @param labelView The instance of the button's label. If not provided, an instance of\n\t * {@link module:ui/button/buttonlabelview~ButtonLabelView} is used.\n\t */ constructor(locale, labelView = new ButtonLabelView()){\n        super(locale);\n        const bind = this.bindTemplate;\n        const ariaLabelUid = uid();\n        // Implement the Button interface.\n        this.set('_ariaPressed', false);\n        this.set('_ariaChecked', false);\n        this.set('ariaLabel', undefined);\n        this.set('ariaLabelledBy', `ck-editor__aria-label_${ariaLabelUid}`);\n        this.set('class', undefined);\n        this.set('labelStyle', undefined);\n        this.set('icon', undefined);\n        this.set('isEnabled', true);\n        this.set('isOn', false);\n        this.set('isVisible', true);\n        this.set('isToggleable', false);\n        this.set('keystroke', undefined);\n        this.set('label', undefined);\n        this.set('role', undefined);\n        this.set('tabindex', -1);\n        this.set('tooltip', false);\n        this.set('tooltipPosition', 's');\n        this.set('type', 'button');\n        this.set('withText', false);\n        this.set('withKeystroke', false);\n        this.children = this.createCollection();\n        this.labelView = this._setupLabelView(labelView);\n        this.iconView = new IconView();\n        this.iconView.extendTemplate({\n            attributes: {\n                class: 'ck-button__icon'\n            }\n        });\n        this.iconView.bind('content').to(this, 'icon');\n        this.keystrokeView = this._createKeystrokeView();\n        this.bind('_tooltipString').to(this, 'tooltip', this, 'label', this, 'keystroke', this._getTooltipString.bind(this));\n        const template = {\n            tag: 'button',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-button',\n                    bind.to('class'),\n                    bind.if('isEnabled', 'ck-disabled', (value)=>!value),\n                    bind.if('isVisible', 'ck-hidden', (value)=>!value),\n                    bind.to('isOn', (value)=>value ? 'ck-on' : 'ck-off'),\n                    bind.if('withText', 'ck-button_with-text'),\n                    bind.if('withKeystroke', 'ck-button_with-keystroke')\n                ],\n                role: bind.to('role'),\n                type: bind.to('type', (value)=>value ? value : 'button'),\n                tabindex: bind.to('tabindex'),\n                'aria-checked': bind.to('_ariaChecked'),\n                'aria-pressed': bind.to('_ariaPressed'),\n                'aria-label': bind.to('ariaLabel'),\n                'aria-labelledby': bind.to('ariaLabelledBy'),\n                'aria-disabled': bind.if('isEnabled', true, (value)=>!value),\n                'data-cke-tooltip-text': bind.to('_tooltipString'),\n                'data-cke-tooltip-position': bind.to('tooltipPosition')\n            },\n            children: this.children,\n            on: {\n                click: bind.to((evt)=>{\n                    // We can't make the button disabled using the disabled attribute, because it won't be focusable.\n                    // Though, shouldn't this condition be moved to the button controller?\n                    if (this.isEnabled) {\n                        this.fire('execute');\n                    } else {\n                        // Prevent the default when button is disabled, to block e.g.\n                        // automatic form submitting. See ckeditor/ckeditor5-link#74.\n                        evt.preventDefault();\n                    }\n                })\n            }\n        };\n        this.bind('_ariaPressed').to(this, 'isOn', this, 'isToggleable', this, 'role', (isOn, isToggleable, role)=>{\n            if (!isToggleable || isCheckableRole(role)) {\n                return false;\n            }\n            return String(!!isOn);\n        });\n        this.bind('_ariaChecked').to(this, 'isOn', this, 'isToggleable', this, 'role', (isOn, isToggleable, role)=>{\n            if (!isToggleable || !isCheckableRole(role)) {\n                return false;\n            }\n            return String(!!isOn);\n        });\n        // On Safari we have to force the focus on a button on click as it's the only browser\n        // that doesn't do that automatically. See #12115.\n        if (env.isSafari) {\n            if (!this._focusDelayed) {\n                this._focusDelayed = delay(()=>this.focus(), 0);\n            }\n            template.on.mousedown = bind.to(()=>{\n                this._focusDelayed();\n            });\n            template.on.mouseup = bind.to(()=>{\n                this._focusDelayed.cancel();\n            });\n        }\n        this.setTemplate(template);\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        if (this.icon) {\n            this.children.add(this.iconView);\n        }\n        this.on('change:icon', (evt, prop, newIcon, oldIcon)=>{\n            if (newIcon && !oldIcon) {\n                this.children.add(this.iconView, 0);\n            } else if (!newIcon && oldIcon) {\n                this.children.remove(this.iconView);\n            }\n        });\n        this.children.add(this.labelView);\n        if (this.withKeystroke && this.keystroke) {\n            this.children.add(this.keystrokeView);\n        }\n    }\n    /**\n\t * Focuses the {@link #element} of the button.\n\t */ focus() {\n        this.element.focus();\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        if (this._focusDelayed) {\n            this._focusDelayed.cancel();\n        }\n        super.destroy();\n    }\n    /**\n\t * Binds the label view instance it with button attributes.\n\t */ _setupLabelView(labelView) {\n        labelView.bind('text', 'style', 'id').to(this, 'label', 'labelStyle', 'ariaLabelledBy');\n        return labelView;\n    }\n    /**\n\t * Creates a view that displays a keystroke next to a {@link #labelView label }\n\t * and binds it with button attributes.\n\t */ _createKeystrokeView() {\n        const keystrokeView = new View();\n        keystrokeView.setTemplate({\n            tag: 'span',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-button__keystroke'\n                ]\n            },\n            children: [\n                {\n                    text: this.bindTemplate.to('keystroke', (text)=>getEnvKeystrokeText(text))\n                }\n            ]\n        });\n        return keystrokeView;\n    }\n    /**\n\t * Gets the text for the tooltip from the combination of\n\t * {@link #tooltip}, {@link #label} and {@link #keystroke} attributes.\n\t *\n\t * @see #tooltip\n\t * @see #_tooltipString\n\t * @param tooltip Button tooltip.\n\t * @param label Button label.\n\t * @param keystroke Button keystroke.\n\t */ _getTooltipString(tooltip, label, keystroke) {\n        if (tooltip) {\n            if (typeof tooltip == 'string') {\n                return tooltip;\n            } else {\n                if (keystroke) {\n                    keystroke = getEnvKeystrokeText(keystroke);\n                }\n                if (tooltip instanceof Function) {\n                    return tooltip(label, keystroke);\n                } else {\n                    return `${label}${keystroke ? ` (${keystroke})` : ''}`;\n                }\n            }\n        }\n        return '';\n    }\n}\n/**\n * Checks if `aria-checkbox` can be used with specified role.\n */ function isCheckableRole(role) {\n    switch(role){\n        case 'radio':\n        case 'checkbox':\n        case 'option':\n        case 'switch':\n        case 'menuitemcheckbox':\n        case 'menuitemradio':\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n * The class component representing a form header view. It should be used in more advanced forms to\n * describe the main purpose of the form.\n *\n * By default the component contains a bolded label view that has to be set. The label is usually a short (at most 3-word) string.\n * The component can also be extended by any other elements, like: icons, dropdowns, etc.\n *\n * It is used i.a.\n * by {@link module:table/tablecellproperties/ui/tablecellpropertiesview~TableCellPropertiesView}.\n *\n * The latter is an example, where the component has been extended by {@link module:ui/dropdown/dropdownview~DropdownView} view.\n */ class FormHeaderView extends View {\n    /**\n\t * A collection of header items.\n\t */ children;\n    /**\n\t * The icon view instance. Defined only if icon was passed in the constructor's options.\n\t */ iconView;\n    /**\n\t * Creates an instance of the form header class.\n\t *\n\t * @param locale The locale instance.\n\t * @param options.label A label.\n\t * @param options.class An additional class.\n\t */ constructor(locale, options = {}){\n        super(locale);\n        const bind = this.bindTemplate;\n        this.set('label', options.label || '');\n        this.set('class', options.class || null);\n        this.children = this.createCollection();\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-form__header',\n                    bind.to('class')\n                ]\n            },\n            children: this.children\n        });\n        if (options.icon) {\n            this.iconView = new IconView();\n            this.iconView.content = options.icon;\n            this.children.add(this.iconView);\n        }\n        const label = new View(locale);\n        label.setTemplate({\n            tag: 'h2',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-form__header__label'\n                ],\n                role: 'presentation'\n            },\n            children: [\n                {\n                    text: bind.to('label')\n                }\n            ]\n        });\n        this.children.add(label);\n    }\n}\n\n/**\n * A utility class that helps cycling over {@link module:ui/focuscycler~FocusableView focusable views} in a\n * {@link module:ui/viewcollection~ViewCollection} when the focus is tracked by the\n * {@link module:utils/focustracker~FocusTracker} instance. It helps implementing keyboard\n * navigation in HTML forms, toolbars, lists and the like.\n *\n * To work properly it requires:\n * * a collection of focusable (HTML `tabindex` attribute) views that implement the `focus()` method,\n * * an associated focus tracker to determine which view is focused.\n *\n * A simple cycler setup can look like this:\n *\n * ```ts\n * const focusables = new ViewCollection<FocusableView>();\n * const focusTracker = new FocusTracker();\n *\n * // Add focusable views to the focus tracker.\n * focusTracker.add( ... );\n * ```\n *\n * Then, the cycler can be used manually:\n *\n * ```ts\n * const cycler = new FocusCycler( { focusables, focusTracker } );\n *\n * // Will focus the first focusable view in #focusables.\n * cycler.focusFirst();\n *\n * // Will log the next focusable item in #focusables.\n * console.log( cycler.next );\n * ```\n *\n * Alternatively, it can work side by side with the {@link module:utils/keystrokehandler~KeystrokeHandler}:\n *\n * ```ts\n * const keystrokeHandler = new KeystrokeHandler();\n *\n * // Activate the keystroke handler.\n * keystrokeHandler.listenTo( sourceOfEvents );\n *\n * const cycler = new FocusCycler( {\n * \tfocusables, focusTracker, keystrokeHandler,\n * \tactions: {\n * \t\t// When arrowup of arrowleft is detected by the #keystrokeHandler,\n * \t\t// focusPrevious() will be called on the cycler.\n * \t\tfocusPrevious: [ 'arrowup', 'arrowleft' ],\n * \t}\n * } );\n * ```\n *\n * Check out the {@glink framework/deep-dive/ui/focus-tracking \"Deep dive into focus tracking\"} guide to learn more.\n */ class FocusCycler extends /* #__PURE__ */ EmitterMixin() {\n    /**\n\t * A {@link module:ui/focuscycler~FocusableView focusable views} collection that the cycler operates on.\n\t */ focusables;\n    /**\n\t * A focus tracker instance that the cycler uses to determine the current focus\n\t * state in {@link #focusables}.\n\t */ focusTracker;\n    /**\n\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}\n\t * which can respond to certain keystrokes and cycle the focus.\n\t */ keystrokeHandler;\n    /**\n\t * Actions that the cycler can take when a keystroke is pressed. Requires\n\t * `options.keystrokeHandler` to be passed and working. When an action is\n\t * performed, `preventDefault` and `stopPropagation` will be called on the event\n\t * the keystroke fired in the DOM.\n\t *\n\t * ```ts\n\t * actions: {\n\t * \t// Will call #focusPrevious() when arrowleft or arrowup is pressed.\n\t * \tfocusPrevious: [ 'arrowleft', 'arrowup' ],\n\t *\n\t * \t// Will call #focusNext() when arrowdown is pressed.\n\t * \tfocusNext: 'arrowdown'\n\t * }\n\t * ```\n\t */ actions;\n    /**\n\t * Creates an instance of the focus cycler utility.\n\t *\n\t * @param options Configuration options.\n\t */ constructor(options){\n        super();\n        this.focusables = options.focusables;\n        this.focusTracker = options.focusTracker;\n        this.keystrokeHandler = options.keystrokeHandler;\n        this.actions = options.actions;\n        if (options.actions && options.keystrokeHandler) {\n            for(const methodName in options.actions){\n                let actions = options.actions[methodName];\n                if (typeof actions == 'string') {\n                    actions = [\n                        actions\n                    ];\n                }\n                for (const keystroke of actions){\n                    options.keystrokeHandler.set(keystroke, (data, cancel)=>{\n                        this[methodName]();\n                        cancel();\n                    }, options.keystrokeHandlerOptions);\n                }\n            }\n        }\n        this.on('forwardCycle', ()=>this.focusFirst(), {\n            priority: 'low'\n        });\n        this.on('backwardCycle', ()=>this.focusLast(), {\n            priority: 'low'\n        });\n    }\n    /**\n\t * Returns the first focusable view in {@link #focusables}.\n\t * Returns `null` if there is none.\n\t *\n\t * **Note**: Hidden views (e.g. with `display: none`) are ignored.\n\t */ get first() {\n        return this.focusables.find(isDomFocusable) || null;\n    }\n    /**\n\t * Returns the last focusable view in {@link #focusables}.\n\t * Returns `null` if there is none.\n\t *\n\t * **Note**: Hidden views (e.g. with `display: none`) are ignored.\n\t */ get last() {\n        return this.focusables.filter(isDomFocusable).slice(-1)[0] || null;\n    }\n    /**\n\t * Returns the next focusable view in {@link #focusables} based on {@link #current}.\n\t * Returns `null` if there is none.\n\t *\n\t * **Note**: Hidden views (e.g. with `display: none`) are ignored.\n\t */ get next() {\n        return this._getDomFocusableItem(1);\n    }\n    /**\n\t * Returns the previous focusable view in {@link #focusables} based on {@link #current}.\n\t * Returns `null` if there is none.\n\t *\n\t * **Note**: Hidden views (e.g. with `display: none`) are ignored.\n\t */ get previous() {\n        return this._getDomFocusableItem(-1);\n    }\n    /**\n\t * An index of the view in the {@link #focusables} which is focused according\n\t * to {@link #focusTracker}. Returns `null` when there is no such view.\n\t */ get current() {\n        let index = null;\n        // There's no focused view in the focusables.\n        if (this.focusTracker.focusedElement === null) {\n            return null;\n        }\n        this.focusables.find((view, viewIndex)=>{\n            const focused = view.element === this.focusTracker.focusedElement;\n            if (focused) {\n                index = viewIndex;\n            }\n            return focused;\n        });\n        return index;\n    }\n    /**\n\t * Focuses the {@link #first} item in {@link #focusables}.\n\t *\n\t * **Note**: Hidden views (e.g. with `display: none`) are ignored.\n\t */ focusFirst() {\n        this._focus(this.first, 1);\n    }\n    /**\n\t * Focuses the {@link #last} item in {@link #focusables}.\n\t *\n\t * **Note**: Hidden views (e.g. with `display: none`) are ignored.\n\t */ focusLast() {\n        this._focus(this.last, -1);\n    }\n    /**\n\t * Focuses the {@link #next} item in {@link #focusables}.\n\t *\n\t * **Note**: Hidden views (e.g. with `display: none`) are ignored.\n\t */ focusNext() {\n        const next = this.next;\n        // If there's only one focusable item, we need to let the outside world know\n        // that the next cycle is about to happen. This may be useful\n        // e.g. if you want to move the focus to the parent focus cycler.\n        // Note that the focus is not actually moved in this case.\n        if (next && this.focusables.getIndex(next) === this.current) {\n            this.fire('forwardCycle');\n            return;\n        }\n        if (next === this.first) {\n            this.fire('forwardCycle');\n        } else {\n            this._focus(next, 1);\n        }\n    }\n    /**\n\t * Focuses the {@link #previous} item in {@link #focusables}.\n\t *\n\t * **Note**: Hidden views (e.g. with `display: none`) are ignored.\n\t */ focusPrevious() {\n        const previous = this.previous;\n        if (previous && this.focusables.getIndex(previous) === this.current) {\n            this.fire('backwardCycle');\n            return;\n        }\n        if (previous === this.last) {\n            this.fire('backwardCycle');\n        } else {\n            this._focus(previous, -1);\n        }\n    }\n    /**\n\t * Allows for creating continuous focus cycling across multiple focus cyclers and their collections of {@link #focusables}.\n\t *\n\t * It starts listening to the {@link module:ui/focuscycler~FocusCyclerForwardCycleEvent} and\n\t * {@link module:ui/focuscycler~FocusCyclerBackwardCycleEvent} events of the chained focus cycler and engages,\n\t * whenever the user reaches the last (forwards navigation) or first (backwards navigation) focusable view\n\t * and would normally start over. Instead, the navigation continues on the higher level (flattens).\n\t *\n\t * For instance, for the following nested focus navigation structure, the focus would get stuck the moment\n\t * the AB gets focused and its focus cycler starts managing it:\n\t *\n\t *\t   ┌────────────┐   ┌──────────────────────────────────┐   ┌────────────┐\n\t *\t   │ AA         │   │ AB                               │   │ AC         │\n\t *\t   │            │   │                                  │   │            │\n\t *\t   │            │   │    ┌─────┐  ┌─────┐  ┌─────┐     │   │            │\n\t *\t   │            │   │ ┌──► ABA ├──► ABB ├──► ABC ├───┐ │   │            │\n\t *\t   │            ├───► │  └─────┘  └─────┘  └─────┘   │ │   │            │\n\t *\t   │            │   │ │                              │ │   │            │\n\t *\t   │            │   │ │                              │ │   │            │\n\t *\t   │            │   │ └──────────────────────────────┘ │   │            │\n\t *\t   │            │   │                                  │   │            │\n\t *\t   └────────────┘   └──────────────────────────────────┘   └────────────┘\n\t *\n\t * Chaining a focus tracker that manages AA, AB, and AC with the focus tracker that manages ABA, ABB, and ABC\n\t * creates a seamless navigation experience instead:\n\t *\n\t *\t   ┌────────────┐   ┌──────────────────────────────────┐   ┌────────────┐\n\t *\t   │ AA         │   │ AB                               │   │ AC         │\n\t *\t   │            │   │                                  │   │            │\n\t *\t   │            │   │    ┌─────┐  ┌─────┐  ┌─────┐     │   │            │\n\t *\t   │            │   │ ┌──► ABA ├──► ABB ├──► ABC ├──┐  │   │            │\n\t *\t┌──►            ├───┼─┘  └─────┘  └─────┘  └─────┘  └──┼───►            ├──┐\n\t *\t│  │            │   │                                  │   │            │  │\n\t *\t│  │            │   │                                  │   │            │  │\n\t *\t│  │            │   │                                  │   │            │  │\n\t *\t│  │            │   │                                  │   │            │  │\n\t *\t│  └────────────┘   └──────────────────────────────────┘   └────────────┘  │\n\t *\t│                                                                          │\n\t *\t│                                                                          │\n\t *\t└──────────────────────────────────────────────────────────────────────────┘\n\t *\n\t * See {@link #unchain} to reverse the chaining.\n\t */ chain(chainedFocusCycler) {\n        const getCurrentFocusedView = ()=>{\n            // This may happen when one focus cycler does not include focusables of the other (horizontal case).\n            if (this.current === null) {\n                return null;\n            }\n            return this.focusables.get(this.current);\n        };\n        this.listenTo(chainedFocusCycler, 'forwardCycle', (evt)=>{\n            const oldCurrent = getCurrentFocusedView();\n            this.focusNext();\n            // Stop the event propagation only if an attempt at focusing the view actually moved the focus.\n            // If not, let the otherFocusCycler handle the event.\n            if (oldCurrent !== getCurrentFocusedView()) {\n                evt.stop();\n            }\n        // The priority is critical for cycling across multiple chain levels when there's a single view at some of them only.\n        }, {\n            priority: 'low'\n        });\n        this.listenTo(chainedFocusCycler, 'backwardCycle', (evt)=>{\n            const oldCurrent = getCurrentFocusedView();\n            this.focusPrevious();\n            // Stop the event propagation only if an attempt at focusing the view actually moved the focus.\n            // If not, let the otherFocusCycler handle the event.\n            if (oldCurrent !== getCurrentFocusedView()) {\n                evt.stop();\n            }\n        // The priority is critical for cycling across multiple chain levels when there's a single view at some of them only.\n        }, {\n            priority: 'low'\n        });\n    }\n    /**\n\t * Reverses a chaining made by {@link #chain}.\n\t */ unchain(otherFocusCycler) {\n        this.stopListening(otherFocusCycler);\n    }\n    /**\n\t * Focuses the given view if it exists.\n\t *\n\t * @param view The view to be focused\n\t * @param direction The direction of the focus if the view has focusable children.\n\t * @returns\n\t */ _focus(view, direction) {\n        // Don't fire focus events if the view is already focused.\n        // Such attempt may occur when cycling with only one focusable item:\n        // even though `focusNext()` method returns without changing focus,\n        // the `forwardCycle` event is fired, triggering the `focusFirst()` method.\n        if (view && this.focusTracker.focusedElement !== view.element) {\n            view.focus(direction);\n        }\n    }\n    /**\n\t * Returns the next or previous focusable view in {@link #focusables} with respect\n\t * to {@link #current}.\n\t *\n\t * @param step Either `1` for checking forward from {@link #current} or `-1` for checking backwards.\n\t */ _getDomFocusableItem(step) {\n        // Cache for speed.\n        const collectionLength = this.focusables.length;\n        if (!collectionLength) {\n            return null;\n        }\n        const current = this.current;\n        // Start from the beginning if no view is focused.\n        // https://github.com/ckeditor/ckeditor5-ui/issues/206\n        if (current === null) {\n            return this[step === 1 ? 'first' : 'last'];\n        }\n        // Note: If current is the only focusable view, it will also be returned for the given step.\n        let focusableItem = this.focusables.get(current);\n        // Cycle in both directions.\n        let index = (current + collectionLength + step) % collectionLength;\n        do {\n            const focusableItemCandidate = this.focusables.get(index);\n            if (isDomFocusable(focusableItemCandidate)) {\n                focusableItem = focusableItemCandidate;\n                break;\n            }\n            // Cycle in both directions.\n            index = (index + collectionLength + step) % collectionLength;\n        }while (index !== current)\n        return focusableItem;\n    }\n}\n/**\n * Checks whether a view can be focused (has `focus()` method and is visible).\n *\n * @param view A view to be checked.\n */ function isDomFocusable(view) {\n    return isFocusable(view) && isVisible(view.element);\n}\n/**\n * Checks whether a view is {@link ~FocusableView}.\n *\n * @param view A view to be checked.\n */ function isFocusable(view) {\n    return !!('focus' in view && typeof view.focus == 'function');\n}\n/**\n * Checks whether a view is an instance of {@link ~ViewWithFocusCycler}.\n *\n * @param view A view to be checked.\n */ function isViewWithFocusCycler(view) {\n    return isFocusable(view) && 'focusCycler' in view && view.focusCycler instanceof FocusCycler;\n}\n\n/**\n * A dialog actions view class. It contains button views which are used to execute dialog actions.\n */ class DialogActionsView extends View {\n    /**\n\t * A collection of button views.\n\t */ children;\n    /**\n\t * A keystroke handler instance.\n\t */ keystrokes;\n    /**\n\t * A focus cycler instance.\n\t */ focusCycler;\n    /**\n\t * A focus tracker instance.\n\t */ _focusTracker;\n    /**\n\t * A collection of focusable views.\n\t */ _focusables;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale){\n        super(locale);\n        this.children = this.createCollection();\n        this.keystrokes = new KeystrokeHandler();\n        this._focusTracker = new FocusTracker();\n        this._focusables = new ViewCollection();\n        this.focusCycler = new FocusCycler({\n            focusables: this._focusables,\n            focusTracker: this._focusTracker,\n            keystrokeHandler: this.keystrokes,\n            actions: {\n                // Navigate form fields backwards using the Shift + Tab keystroke.\n                focusPrevious: 'shift + tab',\n                // Navigate form fields forwards using the Tab key.\n                focusNext: 'tab'\n            }\n        });\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-dialog__actions'\n                ]\n            },\n            children: this.children\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        this.keystrokes.listenTo(this.element);\n    }\n    /**\n\t * Creates the button views based on the given definitions.\n\t * Then adds them to the {@link #children} collection and to the focus cycler.\n\t */ setButtons(definitions) {\n        for (const definition of definitions){\n            const button = new ButtonView(this.locale);\n            let property;\n            button.on('execute', ()=>definition.onExecute());\n            if (definition.onCreate) {\n                definition.onCreate(button);\n            }\n            for(property in definition){\n                if (property != 'onExecute' && property != 'onCreate') {\n                    button.set(property, definition[property]);\n                }\n            }\n            this.children.add(button);\n        }\n        this._updateFocusCyclableItems();\n    }\n    /**\n\t * @inheritDoc\n\t */ focus(direction) {\n        if (direction === -1) {\n            this.focusCycler.focusLast();\n        } else {\n            this.focusCycler.focusFirst();\n        }\n    }\n    /**\n\t * Adds all elements from the {@link #children} collection to the {@link #_focusables} collection\n\t * and to the {@link #_focusTracker} instance.\n\t */ _updateFocusCyclableItems() {\n        Array.from(this.children).forEach((v)=>{\n            this._focusables.add(v);\n            this._focusTracker.add(v.element);\n        });\n    }\n}\n\n/**\n * A dialog content view class.\n */ class DialogContentView extends View {\n    /**\n\t * A collection of content items.\n\t */ children;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale){\n        super(locale);\n        this.children = this.createCollection();\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-dialog__content'\n                ]\n            },\n            children: this.children\n        });\n    }\n    /**\n\t * Removes all the child views.\n\t */ reset() {\n        while(this.children.length){\n            this.children.remove(0);\n        }\n    }\n}\n\n// @if CK_DEBUG_DIALOG // const RectDrawer = require( '@ckeditor/ckeditor5-utils/tests/_utils/rectdrawer' ).default;\n/**\n * Available dialog view positions:\n *\n * * `DialogViewPosition.SCREEN_CENTER` &ndash; A fixed position in the center of the screen.\n * * `DialogViewPosition.EDITOR_CENTER` &ndash; A dynamic position in the center of the editor editable area.\n * * `DialogViewPosition.EDITOR_TOP_SIDE` &ndash; A dynamic position at the top-right (for the left-to-right languages)\n * or top-left (for right-to-left languages) corner of the editor editable area.\n * * `DialogViewPosition.EDITOR_TOP_CENTER` &ndash; A dynamic position at the top-center of the editor editable area.\n * * `DialogViewPosition.EDITOR_BOTTOM_CENTER` &ndash; A dynamic position at the bottom-center of the editor editable area.\n * * `DialogViewPosition.EDITOR_ABOVE_CENTER` &ndash; A dynamic position centered above the editor editable area.\n * * `DialogViewPosition.EDITOR_BELOW_CENTER` &ndash; A dynamic position centered below the editor editable area.\n *\n * The position of a dialog is specified by a {@link module:ui/dialog/dialog~DialogDefinition#position `position` property} of a\n * definition passed to the {@link module:ui/dialog/dialog~Dialog#show} method.\n */ const DialogViewPosition = {\n    SCREEN_CENTER: 'screen-center',\n    EDITOR_CENTER: 'editor-center',\n    EDITOR_TOP_SIDE: 'editor-top-side',\n    EDITOR_TOP_CENTER: 'editor-top-center',\n    EDITOR_BOTTOM_CENTER: 'editor-bottom-center',\n    EDITOR_ABOVE_CENTER: 'editor-above-center',\n    EDITOR_BELOW_CENTER: 'editor-below-center'\n};\nconst toPx$6 = /* #__PURE__ */ toUnit('px');\n/**\n * A dialog view class.\n */ class DialogView extends /* #__PURE__ */ DraggableViewMixin(View) {\n    /**\n\t * A collection of the child views inside of the dialog.\n\t * A dialog can have 3 optional parts: header, content, and actions.\n\t */ parts;\n    /**\n\t * A header view of the dialog. It is also a drag handle of the dialog.\n\t */ headerView;\n    /**\n\t * A close button view. It is automatically added to the header view if present.\n\t */ closeButtonView;\n    /**\n\t * A view with the action buttons available to the user.\n\t */ actionsView;\n    /**\n\t * A default dialog element offset from the reference element (e.g. editor editable area).\n\t */ static defaultOffset = 15;\n    /**\n\t * A view with the dialog content.\n\t */ contentView;\n    /**\n\t * A keystroke handler instance.\n\t */ keystrokes;\n    /**\n\t * A focus tracker instance.\n\t */ focusTracker;\n    /**\n\t * A flag indicating if the dialog was moved manually. If so, its position\n\t * will not be updated automatically upon window resize or document scroll.\n\t */ wasMoved = false;\n    /**\n\t * A callback returning the DOM root that requested the dialog.\n\t */ _getCurrentDomRoot;\n    /**\n\t * A callback returning the configured editor viewport offset.\n\t */ _getViewportOffset;\n    /**\n\t * The list of the focusable elements inside the dialog view.\n\t */ _focusables;\n    /**\n\t * The focus cycler instance.\n\t */ _focusCycler;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale, { getCurrentDomRoot, getViewportOffset, keystrokeHandlerOptions }){\n        super(locale);\n        const bind = this.bindTemplate;\n        const t = locale.t;\n        this.set('className', '');\n        this.set('ariaLabel', t('Editor dialog'));\n        this.set('isModal', false);\n        this.set('position', DialogViewPosition.SCREEN_CENTER);\n        this.set('_isVisible', false);\n        this.set('_isTransparent', false);\n        this.set('_top', 0);\n        this.set('_left', 0);\n        this._getCurrentDomRoot = getCurrentDomRoot;\n        this._getViewportOffset = getViewportOffset;\n        this.decorate('moveTo');\n        this.parts = this.createCollection();\n        this.keystrokes = new KeystrokeHandler();\n        this.focusTracker = new FocusTracker();\n        this._focusables = new ViewCollection();\n        this._focusCycler = new FocusCycler({\n            focusables: this._focusables,\n            focusTracker: this.focusTracker,\n            keystrokeHandler: this.keystrokes,\n            actions: {\n                // Navigate form fields backwards using the Shift + Tab keystroke.\n                focusPrevious: 'shift + tab',\n                // Navigate form fields forwards using the Tab key.\n                focusNext: 'tab'\n            },\n            keystrokeHandlerOptions\n        });\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-dialog-overlay',\n                    bind.if('isModal', 'ck-dialog-overlay__transparent', (isModal)=>!isModal),\n                    bind.if('_isVisible', 'ck-hidden', (value)=>!value)\n                ],\n                // Prevent from editor losing focus when clicking on the modal overlay.\n                tabindex: '-1'\n            },\n            children: [\n                {\n                    tag: 'div',\n                    attributes: {\n                        tabindex: '-1',\n                        class: [\n                            'ck',\n                            'ck-dialog',\n                            bind.if('isModal', 'ck-dialog_modal'),\n                            bind.to('className')\n                        ],\n                        role: 'dialog',\n                        'aria-label': bind.to('ariaLabel'),\n                        style: {\n                            top: bind.to('_top', (top)=>toPx$6(top)),\n                            left: bind.to('_left', (left)=>toPx$6(left)),\n                            visibility: bind.if('_isTransparent', 'hidden')\n                        }\n                    },\n                    children: this.parts\n                }\n            ]\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        this.keystrokes.set('Esc', (data, cancel)=>{\n            // Do not react to the Esc key if the event has already been handled and defaultPrevented\n            // by some logic of the dialog guest (child) view (https://github.com/ckeditor/ckeditor5/issues/17343).\n            if (!data.defaultPrevented) {\n                this.fire('close', {\n                    source: 'escKeyPress'\n                });\n                cancel();\n            }\n        });\n        // Support for dragging the modal.\n        this.on('drag', (evt, { deltaX, deltaY })=>{\n            this.wasMoved = true;\n            this.moveBy(deltaX, deltaY);\n        });\n        // Update dialog position upon window resize, if the position was not changed manually.\n        this.listenTo(global.window, 'resize', ()=>{\n            if (this._isVisible && !this.wasMoved) {\n                this.updatePosition();\n            }\n        });\n        // Update dialog position upon document scroll, if the position was not changed manually.\n        this.listenTo(global.document, 'scroll', ()=>{\n            if (this._isVisible && !this.wasMoved) {\n                this.updatePosition();\n            }\n        });\n        this.on('change:_isVisible', (evt, name, isVisible)=>{\n            if (isVisible) {\n                // Let the content render first, then apply the position. Otherwise, the calculated DOM Rects\n                // will not reflect the final look of the dialog. Note that we're not using #_moveOffScreen() here because\n                // it causes a violent movement of the viewport on iOS (because the dialog still keeps the DOM focus).\n                this._isTransparent = true;\n                // FYI: RAF is too short. We need to wait a bit longer.\n                setTimeout(()=>{\n                    this.updatePosition();\n                    this._isTransparent = false;\n                    // The view must get the focus after it gets visible. But this is only possible\n                    // after the dialog is no longer transparent.\n                    this.focus();\n                }, 10);\n            }\n        });\n        this.keystrokes.listenTo(this.element);\n    }\n    /**\n\t * Returns the element that should be used as a drag handle.\n\t */ get dragHandleElement() {\n        // Modals should not be draggable.\n        if (this.headerView && !this.isModal) {\n            return this.headerView.element;\n        } else {\n            return null;\n        }\n    }\n    /**\n\t * Creates the dialog parts. Which of them are created depends on the arguments passed to the method.\n\t * There are no rules regarding the dialog construction, that is, no part is mandatory.\n\t * Each part can only be created once.\n\t *\n\t * @internal\n\t */ setupParts({ icon, title, hasCloseButton = true, content, actionButtons }) {\n        if (title) {\n            this.headerView = new FormHeaderView(this.locale, {\n                icon\n            });\n            if (hasCloseButton) {\n                this.closeButtonView = this._createCloseButton();\n                this.headerView.children.add(this.closeButtonView);\n            }\n            this.headerView.label = title;\n            this.ariaLabel = title;\n            this.parts.add(this.headerView, 0);\n        }\n        if (content) {\n            // Normalize the content specified in the arguments.\n            if (content instanceof View) {\n                content = [\n                    content\n                ];\n            }\n            this.contentView = new DialogContentView(this.locale);\n            this.contentView.children.addMany(content);\n            this.parts.add(this.contentView);\n        }\n        if (actionButtons) {\n            this.actionsView = new DialogActionsView(this.locale);\n            this.actionsView.setButtons(actionButtons);\n            this.parts.add(this.actionsView);\n        }\n        this._updateFocusCyclableItems();\n    }\n    /**\n\t * Focuses the first focusable element inside the dialog.\n\t */ focus() {\n        this._focusCycler.focusFirst();\n    }\n    /**\n\t * Normalizes the passed coordinates to make sure the dialog view\n\t * is displayed within the visible viewport and moves it there.\n\t *\n\t * @internal\n\t */ moveTo(left, top) {\n        const viewportRect = this._getViewportRect();\n        const dialogRect = this._getDialogRect();\n        // Don't let the dialog go beyond the right edge of the viewport.\n        if (left + dialogRect.width > viewportRect.right) {\n            left = viewportRect.right - dialogRect.width;\n        }\n        // Don't let the dialog go beyond the left edge of the viewport.\n        if (left < viewportRect.left) {\n            left = viewportRect.left;\n        }\n        // Don't let the dialog go beyond the top edge of the viewport.\n        if (top < viewportRect.top) {\n            top = viewportRect.top;\n        }\n        // Note: We don't do the same for the bottom edge to allow users to resize the window vertically\n        // and let the dialog to stay put instead of covering the editing root.\n        this._moveTo(left, top);\n    }\n    /**\n\t * Moves the dialog to the specified coordinates.\n\t */ _moveTo(left, top) {\n        this._left = left;\n        this._top = top;\n    }\n    /**\n\t * Moves the dialog by the specified offset.\n\t *\n\t * @internal\n\t */ moveBy(left, top) {\n        this.moveTo(this._left + left, this._top + top);\n    }\n    /**\n\t * Moves the dialog view to the off-screen position.\n\t * Used when there is no space to display the dialog.\n\t */ _moveOffScreen() {\n        this._moveTo(-9999, -9999);\n    }\n    /**\n\t * Recalculates the dialog according to the set position and viewport,\n\t * and moves it to the new position.\n\t */ updatePosition() {\n        if (!this.element || !this.element.parentNode) {\n            return;\n        }\n        const viewportRect = this._getViewportRect();\n        // Actual position may be different from the configured one if there's no DOM root.\n        let configuredPosition = this.position;\n        let domRootRect;\n        if (!this._getCurrentDomRoot()) {\n            configuredPosition = DialogViewPosition.SCREEN_CENTER;\n        } else {\n            domRootRect = this._getVisibleDomRootRect(viewportRect);\n        }\n        const defaultOffset = DialogView.defaultOffset;\n        const dialogRect = this._getDialogRect();\n        // @if CK_DEBUG_DIALOG // RectDrawer.clear();\n        // @if CK_DEBUG_DIALOG // RectDrawer.draw( viewportRect, { outlineColor: 'blue' }, 'Viewport' );\n        switch(configuredPosition){\n            case DialogViewPosition.EDITOR_TOP_SIDE:\n                {\n                    // @if CK_DEBUG_DIALOG // if ( domRootRect ) {\n                    // @if CK_DEBUG_DIALOG // \tRectDrawer.draw( domRootRect, { outlineColor: 'red', zIndex: 9999999 }, 'DOM ROOT' );\n                    // @if CK_DEBUG_DIALOG // }\n                    if (domRootRect) {\n                        const leftCoordinate = this.locale.contentLanguageDirection === 'ltr' ? domRootRect.right - dialogRect.width - defaultOffset : domRootRect.left + defaultOffset;\n                        this.moveTo(leftCoordinate, domRootRect.top + defaultOffset);\n                    } else {\n                        this._moveOffScreen();\n                    }\n                    break;\n                }\n            case DialogViewPosition.EDITOR_CENTER:\n                {\n                    if (domRootRect) {\n                        this.moveTo(Math.round(domRootRect.left + domRootRect.width / 2 - dialogRect.width / 2), Math.round(domRootRect.top + domRootRect.height / 2 - dialogRect.height / 2));\n                    } else {\n                        this._moveOffScreen();\n                    }\n                    break;\n                }\n            case DialogViewPosition.SCREEN_CENTER:\n                {\n                    this.moveTo(Math.round((viewportRect.width - dialogRect.width) / 2), Math.round((viewportRect.height - dialogRect.height) / 2));\n                    break;\n                }\n            case DialogViewPosition.EDITOR_TOP_CENTER:\n                {\n                    // @if CK_DEBUG_DIALOG // if ( domRootRect ) {\n                    // @if CK_DEBUG_DIALOG // \tRectDrawer.draw( domRootRect, { outlineColor: 'red', zIndex: 9999999 }, 'DOM ROOT' );\n                    // @if CK_DEBUG_DIALOG // }\n                    if (domRootRect) {\n                        this.moveTo(Math.round(domRootRect.left + domRootRect.width / 2 - dialogRect.width / 2), domRootRect.top + defaultOffset);\n                    } else {\n                        this._moveOffScreen();\n                    }\n                    break;\n                }\n            case DialogViewPosition.EDITOR_BOTTOM_CENTER:\n                {\n                    // @if CK_DEBUG_DIALOG // if ( domRootRect ) {\n                    // @if CK_DEBUG_DIALOG // \tRectDrawer.draw( domRootRect, { outlineColor: 'red', zIndex: 9999999 }, 'DOM ROOT' );\n                    // @if CK_DEBUG_DIALOG // }\n                    if (domRootRect) {\n                        this.moveTo(Math.round(domRootRect.left + domRootRect.width / 2 - dialogRect.width / 2), domRootRect.bottom - dialogRect.height - defaultOffset);\n                    } else {\n                        this._moveOffScreen();\n                    }\n                    break;\n                }\n            case DialogViewPosition.EDITOR_ABOVE_CENTER:\n                {\n                    // @if CK_DEBUG_DIALOG // if ( domRootRect ) {\n                    // @if CK_DEBUG_DIALOG // \tRectDrawer.draw( domRootRect, { outlineColor: 'red', zIndex: 9999999 }, 'DOM ROOT' );\n                    // @if CK_DEBUG_DIALOG // }\n                    if (domRootRect) {\n                        this.moveTo(Math.round(domRootRect.left + domRootRect.width / 2 - dialogRect.width / 2), domRootRect.top - dialogRect.height - defaultOffset);\n                    } else {\n                        this._moveOffScreen();\n                    }\n                    break;\n                }\n            case DialogViewPosition.EDITOR_BELOW_CENTER:\n                {\n                    // @if CK_DEBUG_DIALOG // if ( domRootRect ) {\n                    // @if CK_DEBUG_DIALOG // \tRectDrawer.draw( domRootRect, { outlineColor: 'red', zIndex: 9999999 }, 'DOM ROOT' );\n                    // @if CK_DEBUG_DIALOG // }\n                    if (domRootRect) {\n                        this.moveTo(Math.round(domRootRect.left + domRootRect.width / 2 - dialogRect.width / 2), domRootRect.bottom + defaultOffset);\n                    } else {\n                        this._moveOffScreen();\n                    }\n                    break;\n                }\n        }\n    }\n    /**\n\t * Calculates the visible DOM root part.\n\t */ _getVisibleDomRootRect(viewportRect) {\n        let visibleDomRootRect = new Rect(this._getCurrentDomRoot()).getVisible();\n        if (!visibleDomRootRect) {\n            return null;\n        } else {\n            visibleDomRootRect = viewportRect.getIntersection(visibleDomRootRect);\n            if (!visibleDomRootRect) {\n                return null;\n            }\n        }\n        return visibleDomRootRect;\n    }\n    /**\n\t * Calculates the dialog element rect.\n\t */ _getDialogRect() {\n        return new Rect(this.element.firstElementChild);\n    }\n    /**\n\t * Returns a viewport `Rect` shrunk by the viewport offset config from all sides.\n\t *\n\t * TODO: This is a duplicate from position.ts module. It should either be exported there or land somewhere in utils.\n\t */ _getViewportRect() {\n        const viewportRect = new Rect(global.window);\n        // Modals should not be restricted by the viewport offsets as they are always displayed on top of the page.\n        if (this.isModal) {\n            return viewportRect;\n        }\n        const viewportOffset = {\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            ...this._getViewportOffset()\n        };\n        viewportRect.top += viewportOffset.top;\n        viewportRect.height -= viewportOffset.top;\n        viewportRect.bottom -= viewportOffset.bottom;\n        viewportRect.height -= viewportOffset.bottom;\n        viewportRect.left += viewportOffset.left;\n        viewportRect.right -= viewportOffset.right;\n        viewportRect.width -= viewportOffset.left + viewportOffset.right;\n        return viewportRect;\n    }\n    /**\n\t * Collects all focusable elements inside the dialog parts\n\t * and adds them to the focus tracker and focus cycler.\n\t */ _updateFocusCyclableItems() {\n        const focusables = [];\n        if (this.contentView) {\n            for (const child of this.contentView.children){\n                if (isFocusable(child)) {\n                    focusables.push(child);\n                }\n            }\n        }\n        if (this.actionsView) {\n            focusables.push(this.actionsView);\n        }\n        if (this.closeButtonView) {\n            focusables.push(this.closeButtonView);\n        }\n        focusables.forEach((focusable)=>{\n            this._focusables.add(focusable);\n            this.focusTracker.add(focusable.element);\n            if (isViewWithFocusCycler(focusable)) {\n                this._focusCycler.chain(focusable.focusCycler);\n            }\n        });\n    }\n    /**\n\t * Creates the close button view that is displayed in the header view corner.\n\t */ _createCloseButton() {\n        const buttonView = new ButtonView(this.locale);\n        const t = this.locale.t;\n        buttonView.set({\n            label: t('Close'),\n            tooltip: true,\n            icon: IconCancel\n        });\n        buttonView.on('execute', ()=>this.fire('close', {\n                source: 'closeButton'\n            }));\n        return buttonView;\n    }\n}\n\n/**\n * The dialog controller class. It is used to show and hide the {@link module:ui/dialog/dialogview~DialogView}.\n */ class Dialog extends Plugin {\n    /**\n\t * The currently visible dialog view instance.\n\t */ view;\n    /**\n\t * The `Dialog` plugin instance which most recently showed the dialog.\n\t *\n\t * Only one dialog can be visible at once, even if there are many editor instances on the page.\n\t * If an editor wants to show a dialog, it should first hide the dialog that is already opened.\n\t * But only the `Dialog` instance that showed the dialog is able able to properly hide it.\n\t * This is why we need to store it in a globally available space (static property).\n\t * This way every `Dialog` plugin in every editor is able to correctly close any open dialog window.\n\t */ static _visibleDialogPlugin;\n    /**\n\t * A configurable callback called when the dialog is hidden.\n\t */ _onHide;\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'Dialog';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n\t * @inheritDoc\n\t */ constructor(editor){\n        super(editor);\n        const t = editor.t;\n        this._initShowHideListeners();\n        this._initFocusToggler();\n        this._initMultiRootIntegration();\n        this.set({\n            id: null,\n            isOpen: false\n        });\n        // Add the information about the keystroke to the accessibility database.\n        editor.accessibility.addKeystrokeInfos({\n            categoryId: 'navigation',\n            keystrokes: [\n                {\n                    label: t('Move focus in and out of an active dialog window'),\n                    keystroke: 'Ctrl+F6',\n                    mayRequireFn: true\n                }\n            ]\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        super.destroy();\n        if (Dialog._visibleDialogPlugin === this) {\n            this._unlockBodyScroll();\n        }\n    }\n    /**\n\t * Initiates listeners for the `show` and `hide` events emitted by this plugin.\n\t *\n\t * We could not simply decorate the {@link #show} and {@link #hide} methods to fire events,\n\t * because they would be fired in the wrong order &ndash; first would be `show` and then `hide`\n\t * (because showing the dialog actually starts with hiding the previously visible one).\n\t * Hence, we added private methods {@link #_show} and {@link #_hide} which are called on events\n\t * in the desired sequence.\n\t */ _initShowHideListeners() {\n        this.on('show', (evt, args)=>{\n            this._show(args);\n        });\n        // 'low' priority allows to add custom callback between `_show()` and `onShow()`.\n        this.on('show', (evt, args)=>{\n            if (args.onShow) {\n                args.onShow(this);\n            }\n        }, {\n            priority: 'low'\n        });\n        this.on('hide', ()=>{\n            if (Dialog._visibleDialogPlugin) {\n                Dialog._visibleDialogPlugin._hide();\n            }\n        });\n        // 'low' priority allows to add custom callback between `_hide()` and `onHide()`.\n        this.on('hide', ()=>{\n            if (this._onHide) {\n                this._onHide(this);\n                this._onHide = undefined;\n            }\n        }, {\n            priority: 'low'\n        });\n    }\n    /**\n\t * Initiates keystroke handler for toggling the focus between the editor and the dialog view.\n\t */ _initFocusToggler() {\n        const editor = this.editor;\n        editor.keystrokes.set('Ctrl+F6', (data, cancel)=>{\n            if (!this.isOpen || this.view.isModal) {\n                return;\n            }\n            if (this.view.focusTracker.isFocused) {\n                editor.editing.view.focus();\n            } else {\n                this.view.focus();\n            }\n            cancel();\n        });\n    }\n    /**\n\t * Provides an integration between the root attaching and detaching and positioning of the view.\n\t */ _initMultiRootIntegration() {\n        const model = this.editor.model;\n        model.document.on('change:data', ()=>{\n            if (!this.view) {\n                return;\n            }\n            const changedRoots = model.document.differ.getChangedRoots();\n            for (const changes of changedRoots){\n                if (changes.state) {\n                    this.view.updatePosition();\n                }\n            }\n        });\n    }\n    /**\n\t * Displays a dialog window.\n\t *\n\t * This method requires a {@link ~DialogDefinition} that defines the dialog's content, title, icon, action buttons, etc.\n\t *\n\t * For example, the following definition will create a dialog with:\n\t * * A header consisting of an icon, a title, and a \"Close\" button (it is added by default).\n\t * * A content consisting of a view with a single paragraph.\n\t * * A footer consisting of two buttons: \"Yes\" and \"No\".\n\t *\n\t * ```js\n\t * // Create the view that will be used as the dialog's content.\n\t * const textView = new View( locale );\n\t *\n\t * textView.setTemplate( {\n\t * \ttag: 'div',\n\t * \tattributes: {\n\t * \t\tstyle: {\n\t * \t\t\tpadding: 'var(--ck-spacing-large)',\n\t * \t\t\twhiteSpace: 'initial',\n\t * \t\t\twidth: '100%',\n\t * \t\t\tmaxWidth: '500px'\n\t * \t\t},\n\t * \t\ttabindex: -1\n\t * \t},\n\t * \tchildren: [\n\t * \t\t'Lorem ipsum dolor sit amet...'\n\t * \t]\n\t * } );\n\t *\n\t * // Show the dialog.\n\t * editor.plugins.get( 'Dialog' ).show( {\n\t *\tid: 'myDialog',\n\t * \ticon: 'myIcon', // This should be an SVG string.\n\t * \ttitle: 'My dialog',\n\t * \tcontent: textView,\n\t * \tactionButtons: [\n\t *\t\t{\n\t *\t\t\tlabel: t( 'Yes' ),\n\t *\t\t\tclass: 'ck-button-action',\n\t *\t\t\twithText: true,\n\t *\t\t\tonExecute: () => dialog.hide()\n\t *\t\t},\n\t *\t\t{\n\t *\t\t\tlabel: t( 'No' ),\n\t *\t\t\twithText: true,\n\t *\t\t\tonExecute: () => dialog.hide()\n\t *\t\t}\n\t *\t]\n\t * } );\n\t * ```\n\t *\n\t * By specifying the {@link ~DialogDefinition#onShow} and {@link ~DialogDefinition#onHide} callbacks\n\t * it is also possible to add callbacks that will be called when the dialog is shown or hidden.\n\t *\n\t * For example, the callbacks in the following definition:\n\t * * Disable the default behavior of the <kbd>Esc</kbd> key.\n\t * * Fire a custom event when the dialog gets hidden.\n\t *\n\t * ```js\n\t * editor.plugins.get( 'Dialog' ).show( {\n\t * \t// ...\n\t * \tonShow: dialog => {\n\t * \t\tdialog.view.on( 'close', ( evt, data ) => {\n\t * \t\t\t// Only prevent the event from the \"Esc\" key - do not affect the other ways of closing the dialog.\n\t * \t\t\tif ( data.source === 'escKeyPress' ) {\n\t * \t\t\t\tevt.stop();\n\t * \t\t\t}\n\t * \t\t} );\n\t * \t},\n\t * \tonHide: dialog => {\n\t * \t\tdialog.fire( 'dialogDestroyed' );\n\t * \t}\n\t * } );\n\t * ```\n\t *\n\t * Internally, calling this method:\n\t * 1. Hides the currently visible dialog (if any) calling the {@link #hide} method\n\t * (fires the {@link ~DialogHideEvent hide event}).\n\t * 2. Fires the {@link ~DialogShowEvent show event} which allows for adding callbacks that customize the\n\t * behavior of the dialog.\n\t * 3. Shows the dialog.\n\t */ show(dialogDefinition) {\n        this.hide();\n        this.fire(`show:${dialogDefinition.id}`, dialogDefinition);\n    }\n    /**\n\t * Handles creating the {@link module:ui/dialog/dialogview~DialogView} instance and making it visible.\n\t */ _show({ id, icon, title, hasCloseButton = true, content, actionButtons, className, isModal, position, onHide, keystrokeHandlerOptions }) {\n        const editor = this.editor;\n        this.view = new DialogView(editor.locale, {\n            getCurrentDomRoot: ()=>{\n                return editor.editing.view.getDomRoot(editor.model.document.selection.anchor.root.rootName);\n            },\n            getViewportOffset: ()=>{\n                return editor.ui.viewportOffset;\n            },\n            keystrokeHandlerOptions\n        });\n        const view = this.view;\n        view.on('close', ()=>{\n            this.hide();\n        });\n        editor.ui.view.body.add(view);\n        editor.keystrokes.listenTo(view.element);\n        // Unless the user specified a position, modals should always be centered on the screen.\n        // Otherwise, let's keep dialogs centered in the editing root by default.\n        if (!position) {\n            position = isModal ? DialogViewPosition.SCREEN_CENTER : DialogViewPosition.EDITOR_CENTER;\n        }\n        if (isModal) {\n            this._lockBodyScroll();\n        }\n        view.set({\n            position,\n            _isVisible: true,\n            className,\n            isModal\n        });\n        view.setupParts({\n            icon,\n            title,\n            hasCloseButton,\n            content,\n            actionButtons\n        });\n        this.id = id;\n        if (onHide) {\n            this._onHide = onHide;\n        }\n        this.isOpen = true;\n        Dialog._visibleDialogPlugin = this;\n    }\n    /**\n\t * Hides the dialog. This method is decorated to enable interacting on the {@link ~DialogHideEvent hide event}.\n\t *\n\t * See {@link #show}.\n\t */ hide() {\n        if (Dialog._visibleDialogPlugin) {\n            Dialog._visibleDialogPlugin.fire(`hide:${Dialog._visibleDialogPlugin.id}`);\n        }\n    }\n    /**\n\t * Destroys the {@link module:ui/dialog/dialogview~DialogView} and cleans up the stored dialog state.\n\t */ _hide() {\n        if (!this.view) {\n            return;\n        }\n        const editor = this.editor;\n        const view = this.view;\n        if (view.isModal) {\n            this._unlockBodyScroll();\n        }\n        // Reset the content view to prevent its children from being destroyed in the standard\n        // View#destroy() (and collections) chain. If the content children were left in there,\n        // they would have to be re-created by the feature using the dialog every time the dialog\n        // shows up.\n        if (view.contentView) {\n            view.contentView.reset();\n        }\n        editor.ui.view.body.remove(view);\n        editor.ui.focusTracker.remove(view.element);\n        editor.keystrokes.stopListening(view.element);\n        view.destroy();\n        editor.editing.view.focus();\n        this.id = null;\n        this.isOpen = false;\n        Dialog._visibleDialogPlugin = null;\n    }\n    /**\n\t * Makes the <body> unscrollable (e.g. when the modal shows up).\n\t */ _lockBodyScroll() {\n        document.documentElement.classList.add('ck-dialog-scroll-locked');\n    }\n    /**\n\t * Makes the <body> scrollable again (e.g. once the modal hides).\n\t */ _unlockBodyScroll() {\n        document.documentElement.classList.remove('ck-dialog-scroll-locked');\n    }\n}\n\n/**\n * Button that is used as dropdown list item entry.\n */ class ListItemButtonView extends ButtonView {\n    /**\n\t * Holds the view for the check icon of a button list item.\n\t */ _checkIconHolderView = new CheckIconHolderView();\n    /**\n\t * @inheritDoc\n\t */ constructor(locale, labelView = new ButtonLabelView()){\n        super(locale, labelView);\n        this.set({\n            hasCheckSpace: false,\n            _hasCheck: this.isToggleable\n        });\n        const bind = this.bindTemplate;\n        this.extendTemplate({\n            attributes: {\n                class: [\n                    'ck-list-item-button',\n                    bind.if('isToggleable', 'ck-list-item-button_toggleable')\n                ]\n            }\n        });\n        this.bind('_hasCheck').to(this, 'hasCheckSpace', this, 'isToggleable', (hasCheckSpace, isToggleable)=>hasCheckSpace || isToggleable);\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        if (this._hasCheck) {\n            this.children.add(this._checkIconHolderView, 0);\n        }\n        this._watchCheckIconHolderMount();\n    }\n    /**\n\t * Renders the check icon if the button is toggleable.\n\t */ _watchCheckIconHolderMount() {\n        this._checkIconHolderView.bind('isOn').to(this, 'isOn', (value)=>this.isToggleable && value);\n        this.on('change:_hasCheck', (evt, propertyName, hasCheck)=>{\n            const { children, _checkIconHolderView } = this;\n            if (hasCheck) {\n                children.add(_checkIconHolderView, 0);\n            } else {\n                children.remove(_checkIconHolderView);\n            }\n        });\n    }\n}\n/**\n * @internal\n */ class CheckIconHolderView extends View {\n    /**\n\t * Collection of child views.\n\t */ children;\n    /**\n\t * The view for the check icon of the button list item.\n\t */ _checkIconView = this._createCheckIconView();\n    /**\n\t * @inheritDoc\n\t */ constructor(){\n        super();\n        const bind = this.bindTemplate;\n        this.children = this.createCollection();\n        this.set('isOn', false);\n        this.setTemplate({\n            tag: 'span',\n            children: this.children,\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-list-item-button__check-holder',\n                    bind.to('isOn', (isOn)=>isOn ? 'ck-on' : 'ck-off')\n                ]\n            }\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        if (this.isOn) {\n            this.children.add(this._checkIconView, 0);\n        }\n        this._watchCheckIconMount();\n    }\n    /**\n\t * Renders the check icon if the button is toggleable.\n\t */ _watchCheckIconMount() {\n        this.on('change:isOn', (evt, propertyName, isOn)=>{\n            const { children, _checkIconView } = this;\n            if (isOn && !children.has(_checkIconView)) {\n                children.add(_checkIconView);\n            } else if (!isOn && children.has(_checkIconView)) {\n                children.remove(_checkIconView);\n            }\n        });\n    }\n    /**\n\t * Creates a check icon view.\n\t */ _createCheckIconView() {\n        const iconView = new IconView();\n        iconView.content = IconCheck;\n        iconView.extendTemplate({\n            attributes: {\n                class: 'ck-list-item-button__check-icon'\n            }\n        });\n        return iconView;\n    }\n}\n\n/**\n * A menu bar list button view. Buttons like this one execute user actions.\n */ class MenuBarMenuListItemButtonView extends ListItemButtonView {\n    /**\n\t * Creates an instance of the menu bar list button view.\n\t *\n\t * @param locale The localization services instance.\n\t */ constructor(locale){\n        super(locale);\n        this.set({\n            withText: true,\n            withKeystroke: true,\n            tooltip: false,\n            role: 'menuitem'\n        });\n        this.extendTemplate({\n            attributes: {\n                class: [\n                    'ck-menu-bar__menu__item__button'\n                ]\n            }\n        });\n    }\n}\n\n/**\n * A plugin that brings the accessibility help dialog to the editor available under the <kbd>Alt</kbd>+<kbd>0</kbd>\n * keystroke and via the \"Accessibility help\" toolbar button. The dialog displays a list of keystrokes that can be used\n * by the user to perform various actions in the editor.\n *\n * Keystroke information is loaded from {@link module:core/accessibility~Accessibility#keystrokeInfos}. New entries can be\n * added using the API provided by the {@link module:core/accessibility~Accessibility} class.\n */ class AccessibilityHelp extends Plugin {\n    /**\n\t * The view that displays the dialog content (list of keystrokes).\n\t * Created when the dialog is opened for the first time.\n\t */ contentView = null;\n    /**\n\t * @inheritDoc\n\t */ static get requires() {\n        return [\n            Dialog\n        ];\n    }\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'AccessibilityHelp';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n\t * @inheritDoc\n\t */ init() {\n        const editor = this.editor;\n        const t = editor.locale.t;\n        editor.ui.componentFactory.add('accessibilityHelp', ()=>{\n            const button = this._createButton(ButtonView);\n            button.set({\n                tooltip: true,\n                withText: false,\n                label: t('Accessibility help')\n            });\n            return button;\n        });\n        editor.ui.componentFactory.add('menuBar:accessibilityHelp', ()=>{\n            const button = this._createButton(MenuBarMenuListItemButtonView);\n            button.label = t('Accessibility');\n            return button;\n        });\n        editor.keystrokes.set('Alt+0', (evt, cancel)=>{\n            this._toggleDialog();\n            cancel();\n        });\n        this._setupRootLabels();\n    }\n    /**\n\t * Creates a button to show accessibility help dialog, for use either in toolbar or in menu bar.\n\t */ _createButton(ButtonClass) {\n        const editor = this.editor;\n        const dialog = editor.plugins.get('Dialog');\n        const locale = editor.locale;\n        const view = new ButtonClass(locale);\n        view.set({\n            keystroke: 'Alt+0',\n            icon: IconAccessibility,\n            isToggleable: true\n        });\n        view.on('execute', ()=>this._toggleDialog());\n        view.bind('isOn').to(dialog, 'id', (id)=>id === 'accessibilityHelp');\n        return view;\n    }\n    /**\n\t * Injects a help text into each editing root's `aria-label` attribute allowing assistive technology users\n\t * to discover the availability of the Accessibility help dialog.\n\t */ _setupRootLabels() {\n        const editor = this.editor;\n        const editingView = editor.editing.view;\n        const t = editor.t;\n        editor.ui.on('ready', ()=>{\n            editingView.change((writer)=>{\n                for (const root of editingView.document.roots){\n                    addAriaLabelTextToRoot(writer, root);\n                }\n            });\n            editor.on('addRoot', (evt, modelRoot)=>{\n                const viewRoot = editor.editing.view.document.getRoot(modelRoot.rootName);\n                editingView.change((writer)=>addAriaLabelTextToRoot(writer, viewRoot));\n            }, {\n                priority: 'low'\n            });\n        });\n        function addAriaLabelTextToRoot(writer, viewRoot) {\n            const currentAriaLabel = viewRoot.getAttribute('aria-label');\n            const newAriaLabel = [\n                currentAriaLabel,\n                t('Press %0 for help.', [\n                    getEnvKeystrokeText('Alt+0')\n                ])\n            ].filter((segment)=>segment).join('. ');\n            writer.setAttribute('aria-label', newAriaLabel, viewRoot);\n        }\n    }\n    /**\n\t * Shows the accessibility help dialog. Also, creates {@link #contentView} on demand.\n\t */ _toggleDialog() {\n        const editor = this.editor;\n        const dialog = editor.plugins.get('Dialog');\n        const t = editor.locale.t;\n        if (!this.contentView) {\n            this.contentView = new AccessibilityHelpContentView(editor.locale, editor.accessibility.keystrokeInfos);\n        }\n        if (dialog.id === 'accessibilityHelp') {\n            dialog.hide();\n        } else {\n            dialog.show({\n                id: 'accessibilityHelp',\n                className: 'ck-accessibility-help-dialog',\n                title: t('Accessibility help'),\n                icon: IconAccessibility,\n                hasCloseButton: true,\n                content: this.contentView\n            });\n        }\n    }\n}\n\n/**\n * This is a special {@link module:ui/viewcollection~ViewCollection} dedicated to elements that are detached from the DOM structure of\n * the editor, like floating panels, floating toolbars, dialogs, etc.\n *\n * The body collection is available under the {@link module:ui/editorui/editoruiview~EditorUIView#body `editor.ui.view.body`} property.\n * Any plugin can add a {@link module:ui/view~View view} to this collection.\n *\n * All views added to a body collection render in a dedicated DOM container (`<div class=\"ck ck-body ...\">...</div>`). All body collection\n * containers render in a common shared (`<div class=\"ck-body-wrapper\">...</div>`) in the DOM to limit the pollution of\n * the `<body>` element. The resulting DOM structure is as follows:\n *\n * ```html\n * <body>\n * \t<!-- Content of the webpage... -->\n *\n * \t<!-- The shared wrapper for all body collection containers. -->\n * \t<div class=\"ck-body-wrapper\">\n * \t\t<!-- The container of the first body collection instance. -->\n * \t\t<div class=\"ck ck-body ...\">\n * \t\t\t<!-- View elements belonging to the first body collection -->\n * \t\t</div>\n *\n * \t\t<!-- The container of the second body collection instance. -->\n * \t\t<div class=\"ck ck-body ...\">...</div>\n *\n * \t\t<!-- More body collection containers for the rest of instances... -->\n * \t</div>\n * </body>\n * ```\n *\n * By default, the {@link module:ui/editorui/editoruiview~EditorUIView `editor.ui.view`} manages the life cycle of the\n * {@link module:ui/editorui/editoruiview~EditorUIView#body `editor.ui.view.body`} collection, attaching and detaching it\n * when the editor gets created or {@link module:core/editor/editor~Editor#destroy destroyed}.\n *\n * # Custom body collection instances\n *\n * Even though most editor instances come with a built-in body collection\n * ({@link module:ui/editorui/editoruiview~EditorUIView#body `editor.ui.view.body`}), you can create your own instance of this\n * class if you need to control their life cycle.\n *\n * The life cycle of a custom body collection must be handled manually by the developer using the dedicated API:\n * * A body collection will render itself automatically in the DOM as soon as you call {@link ~BodyCollection#attachToDom}.\n * * Calling {@link ~BodyCollection#detachFromDom} will remove the collection from the DOM.\n *\n * **Note**: The shared collection wrapper (`<div class=\"ck-body-wrapper\">...</div>`) gets automatically removed from DOM when the\n * last body collection is {@link ~BodyCollection#detachFromDom detached} and does not require any special handling.\n */ class BodyCollection extends ViewCollection {\n    /**\n\t * The {@link module:core/editor/editor~Editor#locale editor's locale} instance.\n\t * See the view {@link module:ui/view~View#locale locale} property.\n\t */ locale;\n    /**\n\t * The element holding elements of the body collection.\n\t */ _bodyCollectionContainer;\n    /**\n\t * The wrapper element that holds all of the {@link #_bodyCollectionContainer} elements.\n\t */ static _bodyWrapper;\n    /**\n\t * Creates a new instance of the {@link module:ui/editorui/bodycollection~BodyCollection}.\n\t *\n\t * @param locale The {@link module:core/editor/editor~Editor editor's locale} instance.\n\t * @param initialItems The initial items of the collection.\n\t */ constructor(locale, initialItems = []){\n        super(initialItems);\n        this.locale = locale;\n    }\n    /**\n\t * The element holding elements of the body collection.\n\t */ get bodyCollectionContainer() {\n        return this._bodyCollectionContainer;\n    }\n    /**\n\t * Attaches the body collection to the DOM body element. You need to execute this method to render the content of\n\t * the body collection.\n\t */ attachToDom() {\n        this._bodyCollectionContainer = new Template({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-reset_all',\n                    'ck-body',\n                    'ck-rounded-corners'\n                ],\n                dir: this.locale.uiLanguageDirection,\n                role: 'application'\n            },\n            children: this\n        }).render();\n        // Create a shared wrapper if there were none or the previous one got disconnected from DOM.\n        if (!BodyCollection._bodyWrapper || !BodyCollection._bodyWrapper.isConnected) {\n            BodyCollection._bodyWrapper = createElement(document, 'div', {\n                class: 'ck-body-wrapper'\n            });\n            document.body.appendChild(BodyCollection._bodyWrapper);\n        }\n        BodyCollection._bodyWrapper.appendChild(this._bodyCollectionContainer);\n    }\n    /**\n\t * Detaches the collection from the DOM structure. Use this method when you do not need to use the body collection\n\t * anymore to clean-up the DOM structure.\n\t */ detachFromDom() {\n        super.destroy();\n        if (this._bodyCollectionContainer) {\n            this._bodyCollectionContainer.remove();\n        }\n        if (BodyCollection._bodyWrapper && !BodyCollection._bodyWrapper.childElementCount) {\n            BodyCollection._bodyWrapper.remove();\n            delete BodyCollection._bodyWrapper;\n        }\n    }\n}\n\nconst toPx$5 = /* #__PURE__ */ toUnit('px');\n// A static balloon panel positioning function that moves the balloon far off the viewport.\n// It is used as a fallback when there is no way to position the balloon using provided\n// positioning functions (see: `getOptimalPosition()`), for instance, when the target the\n// balloon should be attached to gets obscured by scrollable containers or the viewport.\n//\n// It prevents the balloon from being attached to the void and possible degradation of the UX.\n// At the same time, it keeps the balloon physically visible in the DOM so the focus remains\n// uninterrupted.\nconst POSITION_OFF_SCREEN = {\n    top: -99999,\n    left: -99999,\n    name: 'arrowless',\n    config: {\n        withArrow: false\n    }\n};\n/**\n * The balloon panel view class.\n *\n * A floating container which can\n * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#pin pin} to any\n * {@link module:utils/dom/position~DomOptimalPositionOptions#target target} in the DOM and remain in that position\n * e.g. when the web page is scrolled.\n *\n * The balloon panel can be used to display contextual, non-blocking UI like forms, toolbars and\n * the like in its {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#content} view\n * collection.\n *\n * There is a number of {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}\n * that the balloon can use, automatically switching from one to another when the viewport space becomes\n * scarce to keep the balloon visible to the user as long as it is possible. The balloon will also\n * accept any custom position set provided by the user compatible with the\n * {@link module:utils/dom/position~DomOptimalPositionOptions options}.\n *\n * ```ts\n * const panel = new BalloonPanelView( locale );\n * const childView = new ChildView();\n * const positions = BalloonPanelView.defaultPositions;\n *\n * panel.render();\n *\n * // Add a child view to the panel's content collection.\n * panel.content.add( childView );\n *\n * // Start pinning the panel to an element with the \"target\" id DOM.\n * // The balloon will remain pinned until unpin() is called.\n * panel.pin( {\n * \ttarget: document.querySelector( '#target' ),\n * \tpositions: [\n * \t\tpositions.northArrowSouth,\n * \t\tpositions.southArrowNorth\n * \t]\n * } );\n * ```\n */ class BalloonPanelView extends View {\n    /**\n\t * A collection of the child views that creates the balloon panel contents.\n\t */ content;\n    /**\n\t * A callback that starts pinning the panel when {@link #isVisible} gets\n\t * `true`. Used by {@link #pin}.\n\t *\n\t * @private\n\t */ _pinWhenIsVisibleCallback;\n    /**\n\t * An instance of resize observer used to detect if target element is still visible.\n\t */ _resizeObserver;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale){\n        super(locale);\n        const bind = this.bindTemplate;\n        this.set('top', 0);\n        this.set('left', 0);\n        this.set('position', 'arrow_nw');\n        this.set('isVisible', false);\n        this.set('withArrow', true);\n        this.set('class', undefined);\n        this._pinWhenIsVisibleCallback = null;\n        this._resizeObserver = null;\n        this.content = this.createCollection();\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-balloon-panel',\n                    bind.to('position', (value)=>`ck-balloon-panel_${value}`),\n                    bind.if('isVisible', 'ck-balloon-panel_visible'),\n                    bind.if('withArrow', 'ck-balloon-panel_with-arrow'),\n                    bind.to('class')\n                ],\n                style: {\n                    top: bind.to('top', toPx$5),\n                    left: bind.to('left', toPx$5)\n                }\n            },\n            children: this.content\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        this.hide();\n        super.destroy();\n    }\n    /**\n\t * Shows the panel.\n\t *\n\t * See {@link #isVisible}.\n\t */ show() {\n        this.isVisible = true;\n    }\n    /**\n\t * Hides the panel.\n\t *\n\t * See {@link #isVisible}.\n\t */ hide() {\n        this.isVisible = false;\n    }\n    /**\n\t * Attaches the panel to a specified {@link module:utils/dom/position~DomOptimalPositionOptions#target} with a\n\t * smart positioning heuristics that chooses from available positions to make sure the panel\n\t * is visible to the user i.e. within the limits of the viewport.\n\t *\n\t * This method accepts configuration {@link module:utils/dom/position~DomOptimalPositionOptions options}\n\t * to set the `target`, optional `limiter` and `positions` the balloon should choose from.\n\t *\n\t * ```ts\n\t * const panel = new BalloonPanelView( locale );\n\t * const positions = BalloonPanelView.defaultPositions;\n\t *\n\t * panel.render();\n\t *\n\t * // Attach the panel to an element with the \"target\" id DOM.\n\t * panel.attachTo( {\n\t * \ttarget: document.querySelector( '#target' ),\n\t * \tpositions: [\n\t * \t\tpositions.northArrowSouth,\n\t * \t\tpositions.southArrowNorth\n\t * \t]\n\t * } );\n\t * ```\n\t *\n\t * **Note**: Attaching the panel will also automatically {@link #show} it.\n\t *\n\t * **Note**: An attached panel will not follow its target when the window is scrolled or resized.\n\t * See the {@link #pin} method for a more permanent positioning strategy.\n\t *\n\t * @param options Positioning options compatible with {@link module:utils/dom/position~getOptimalPosition}.\n\t * Default `positions` array is {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n\t * @returns Whether the balloon was shown and successfully attached or not. Attaching can fail if the target\n\t * provided in the options is invisible (e.g. element detached from DOM).\n\t */ attachTo(options) {\n        const target = getDomElement(options.target);\n        if (target && !isVisible(target)) {\n            return false;\n        }\n        this.show();\n        const defaultPositions = BalloonPanelView.defaultPositions;\n        const positionOptions = Object.assign({}, {\n            element: this.element,\n            positions: [\n                defaultPositions.southArrowNorth,\n                defaultPositions.southArrowNorthMiddleWest,\n                defaultPositions.southArrowNorthMiddleEast,\n                defaultPositions.southArrowNorthWest,\n                defaultPositions.southArrowNorthEast,\n                defaultPositions.northArrowSouth,\n                defaultPositions.northArrowSouthMiddleWest,\n                defaultPositions.northArrowSouthMiddleEast,\n                defaultPositions.northArrowSouthWest,\n                defaultPositions.northArrowSouthEast,\n                defaultPositions.viewportStickyNorth\n            ],\n            limiter: global.document.body,\n            fitInViewport: true\n        }, options);\n        const optimalPosition = BalloonPanelView._getOptimalPosition(positionOptions) || POSITION_OFF_SCREEN;\n        // Usually browsers make some problems with super accurate values like 104.345px\n        // so it is better to use int values.\n        const left = parseInt(optimalPosition.left);\n        const top = parseInt(optimalPosition.top);\n        const position = optimalPosition.name;\n        const config = optimalPosition.config || {};\n        const { withArrow = true } = config;\n        this.top = top;\n        this.left = left;\n        this.position = position;\n        this.withArrow = withArrow;\n        return true;\n    }\n    /**\n\t * Works the same way as the {@link #attachTo} method except that the position of the panel is\n\t * continuously updated when:\n\t *\n\t * * any ancestor of the {@link module:utils/dom/position~DomOptimalPositionOptions#target}\n\t * or {@link module:utils/dom/position~DomOptimalPositionOptions#limiter} is scrolled,\n\t * * the browser window gets resized or scrolled.\n\t *\n\t * Thanks to that, the panel always sticks to the {@link module:utils/dom/position~DomOptimalPositionOptions#target}\n\t * and is immune to the changing environment.\n\t *\n\t * ```ts\n\t * const panel = new BalloonPanelView( locale );\n\t * const positions = BalloonPanelView.defaultPositions;\n\t *\n\t * panel.render();\n\t *\n\t * // Pin the panel to an element with the \"target\" id DOM.\n\t * panel.pin( {\n\t * \ttarget: document.querySelector( '#target' ),\n\t * \tpositions: [\n\t * \t\tpositions.northArrowSouth,\n\t * \t\tpositions.southArrowNorth\n\t * \t]\n\t * } );\n\t * ```\n\t *\n\t * To leave the pinned state, use the {@link #unpin} method.\n\t *\n\t * **Note**: Pinning the panel will also automatically {@link #show} it.\n\t *\n\t * @param options Positioning options compatible with {@link module:utils/dom/position~getOptimalPosition}.\n\t * Default `positions` array is {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n\t */ pin(options) {\n        this.unpin();\n        if (!this._startPinning(options)) {\n            return;\n        }\n        this._pinWhenIsVisibleCallback = ()=>{\n            if (this.isVisible) {\n                this._startPinning(options);\n            } else {\n                this._stopPinning();\n            }\n        };\n        // Control the state of the listeners depending on whether the panel is visible\n        // or not.\n        // TODO: Use on() (https://github.com/ckeditor/ckeditor5-utils/issues/144).\n        this.listenTo(this, 'change:isVisible', this._pinWhenIsVisibleCallback);\n    }\n    /**\n\t * Stops pinning the panel, as set up by {@link #pin}.\n\t */ unpin() {\n        if (this._pinWhenIsVisibleCallback) {\n            // Deactivate listeners attached by pin().\n            this._stopPinning();\n            // Deactivate the panel pin() control logic.\n            // TODO: Use off() (https://github.com/ckeditor/ckeditor5-utils/issues/144).\n            this.stopListening(this, 'change:isVisible', this._pinWhenIsVisibleCallback);\n            this._pinWhenIsVisibleCallback = null;\n            this.hide();\n        }\n    }\n    /**\n\t * Starts managing the pinned state of the panel. See {@link #pin}.\n\t *\n\t * @param options Positioning options compatible with {@link module:utils/dom/position~getOptimalPosition}.\n\t * @returns Whether the balloon was shown and successfully attached or not. Attaching can fail if the target\n\t * provided in the options is invisible (e.g. element detached from DOM).\n\t */ _startPinning(options) {\n        if (!this.attachTo(options)) {\n            return false;\n        }\n        let targetElement = getDomElement(options.target);\n        const limiterElement = options.limiter ? getDomElement(options.limiter) : global.document.body;\n        // Then we need to listen on scroll event of eny element in the document.\n        this.listenTo(global.document, 'scroll', (evt, domEvt)=>{\n            const scrollTarget = domEvt.target;\n            // The position needs to be updated if the positioning target is within the scrolled element.\n            const isWithinScrollTarget = targetElement && scrollTarget.contains(targetElement);\n            // The position needs to be updated if the positioning limiter is within the scrolled element.\n            const isLimiterWithinScrollTarget = limiterElement && scrollTarget.contains(limiterElement);\n            // The positioning target and/or limiter can be a Rect, object etc..\n            // There's no way to optimize the listener then.\n            if (isWithinScrollTarget || isLimiterWithinScrollTarget || !targetElement || !limiterElement) {\n                this.attachTo(options);\n            }\n        }, {\n            useCapture: true\n        });\n        // We need to listen on window resize event and update position.\n        this.listenTo(global.window, 'resize', ()=>{\n            this.attachTo(options);\n        });\n        // Hide the panel if the target element is no longer visible.\n        if (!this._resizeObserver) {\n            // If the target element is a text node, we need to check the parent element.\n            // It's because `ResizeObserver` accept only elements, not text nodes.\n            if (targetElement && isText(targetElement)) {\n                targetElement = targetElement.parentElement;\n            }\n            if (targetElement) {\n                const checkVisibility = ()=>{\n                    // If the target element is no longer visible, hide the panel.\n                    if (!isVisible(targetElement)) {\n                        this.unpin();\n                    }\n                };\n                // Element is being resized to 0x0 after it's parent became hidden,\n                // so we need to check size in order to determine if it's visible or not.\n                this._resizeObserver = new ResizeObserver(targetElement, checkVisibility);\n            }\n        }\n        return true;\n    }\n    /**\n\t * Stops managing the pinned state of the panel. See {@link #pin}.\n\t */ _stopPinning() {\n        this.stopListening(global.document, 'scroll');\n        this.stopListening(global.window, 'resize');\n        if (this._resizeObserver) {\n            this._resizeObserver.destroy();\n            this._resizeObserver = null;\n        }\n    }\n    /**\n\t * Returns available {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView}\n\t * {@link module:utils/dom/position~PositioningFunction positioning functions} adjusted by the specific offsets.\n\t *\n\t * @internal\n\t * @param options Options to generate positions. If not specified, this helper will simply return\n\t * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n\t * @param options.sideOffset A custom side offset (in pixels) of each position. If\n\t * not specified, {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.arrowSideOffset the default value}\n\t * will be used.\n\t * @param options.heightOffset A custom height offset (in pixels) of each position. If\n\t * not specified, {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.arrowHeightOffset the default value}\n\t * will be used.\n\t * @param options.stickyVerticalOffset A custom offset (in pixels) of the `viewportStickyNorth` positioning function.\n\t * If not specified, {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.stickyVerticalOffset the default value}\n\t * will be used.\n\t * @param options.config Additional configuration of the balloon balloon panel view.\n\t * Currently only {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#withArrow} is supported. Learn more\n\t * about {@link module:utils/dom/position~PositioningFunction positioning functions}.\n\t */ static generatePositions(options = {}) {\n        const { sideOffset = BalloonPanelView.arrowSideOffset, heightOffset = BalloonPanelView.arrowHeightOffset, stickyVerticalOffset = BalloonPanelView.stickyVerticalOffset, config } = options;\n        return {\n            // ------- North west\n            northWestArrowSouthWest: (targetRect, balloonRect)=>({\n                    top: getNorthTop(targetRect, balloonRect),\n                    left: targetRect.left - sideOffset,\n                    name: 'arrow_sw',\n                    ...config && {\n                        config\n                    }\n                }),\n            northWestArrowSouthMiddleWest: (targetRect, balloonRect)=>({\n                    top: getNorthTop(targetRect, balloonRect),\n                    left: targetRect.left - balloonRect.width * .25 - sideOffset,\n                    name: 'arrow_smw',\n                    ...config && {\n                        config\n                    }\n                }),\n            northWestArrowSouth: (targetRect, balloonRect)=>({\n                    top: getNorthTop(targetRect, balloonRect),\n                    left: targetRect.left - balloonRect.width / 2,\n                    name: 'arrow_s',\n                    ...config && {\n                        config\n                    }\n                }),\n            northWestArrowSouthMiddleEast: (targetRect, balloonRect)=>({\n                    top: getNorthTop(targetRect, balloonRect),\n                    left: targetRect.left - balloonRect.width * .75 + sideOffset,\n                    name: 'arrow_sme',\n                    ...config && {\n                        config\n                    }\n                }),\n            northWestArrowSouthEast: (targetRect, balloonRect)=>({\n                    top: getNorthTop(targetRect, balloonRect),\n                    left: targetRect.left - balloonRect.width + sideOffset,\n                    name: 'arrow_se',\n                    ...config && {\n                        config\n                    }\n                }),\n            // ------- North\n            northArrowSouthWest: (targetRect, balloonRect)=>({\n                    top: getNorthTop(targetRect, balloonRect),\n                    left: targetRect.left + targetRect.width / 2 - sideOffset,\n                    name: 'arrow_sw',\n                    ...config && {\n                        config\n                    }\n                }),\n            northArrowSouthMiddleWest: (targetRect, balloonRect)=>({\n                    top: getNorthTop(targetRect, balloonRect),\n                    left: targetRect.left + targetRect.width / 2 - balloonRect.width * .25 - sideOffset,\n                    name: 'arrow_smw',\n                    ...config && {\n                        config\n                    }\n                }),\n            northArrowSouth: (targetRect, balloonRect)=>({\n                    top: getNorthTop(targetRect, balloonRect),\n                    left: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\n                    name: 'arrow_s',\n                    ...config && {\n                        config\n                    }\n                }),\n            northArrowSouthMiddleEast: (targetRect, balloonRect)=>({\n                    top: getNorthTop(targetRect, balloonRect),\n                    left: targetRect.left + targetRect.width / 2 - balloonRect.width * .75 + sideOffset,\n                    name: 'arrow_sme',\n                    ...config && {\n                        config\n                    }\n                }),\n            northArrowSouthEast: (targetRect, balloonRect)=>({\n                    top: getNorthTop(targetRect, balloonRect),\n                    left: targetRect.left + targetRect.width / 2 - balloonRect.width + sideOffset,\n                    name: 'arrow_se',\n                    ...config && {\n                        config\n                    }\n                }),\n            // ------- North east\n            northEastArrowSouthWest: (targetRect, balloonRect)=>({\n                    top: getNorthTop(targetRect, balloonRect),\n                    left: targetRect.right - sideOffset,\n                    name: 'arrow_sw',\n                    ...config && {\n                        config\n                    }\n                }),\n            northEastArrowSouthMiddleWest: (targetRect, balloonRect)=>({\n                    top: getNorthTop(targetRect, balloonRect),\n                    left: targetRect.right - balloonRect.width * .25 - sideOffset,\n                    name: 'arrow_smw',\n                    ...config && {\n                        config\n                    }\n                }),\n            northEastArrowSouth: (targetRect, balloonRect)=>({\n                    top: getNorthTop(targetRect, balloonRect),\n                    left: targetRect.right - balloonRect.width / 2,\n                    name: 'arrow_s',\n                    ...config && {\n                        config\n                    }\n                }),\n            northEastArrowSouthMiddleEast: (targetRect, balloonRect)=>({\n                    top: getNorthTop(targetRect, balloonRect),\n                    left: targetRect.right - balloonRect.width * .75 + sideOffset,\n                    name: 'arrow_sme',\n                    ...config && {\n                        config\n                    }\n                }),\n            northEastArrowSouthEast: (targetRect, balloonRect)=>({\n                    top: getNorthTop(targetRect, balloonRect),\n                    left: targetRect.right - balloonRect.width + sideOffset,\n                    name: 'arrow_se',\n                    ...config && {\n                        config\n                    }\n                }),\n            // ------- South west\n            southWestArrowNorthWest: (targetRect)=>({\n                    top: getSouthTop(targetRect),\n                    left: targetRect.left - sideOffset,\n                    name: 'arrow_nw',\n                    ...config && {\n                        config\n                    }\n                }),\n            southWestArrowNorthMiddleWest: (targetRect, balloonRect)=>({\n                    top: getSouthTop(targetRect),\n                    left: targetRect.left - balloonRect.width * .25 - sideOffset,\n                    name: 'arrow_nmw',\n                    ...config && {\n                        config\n                    }\n                }),\n            southWestArrowNorth: (targetRect, balloonRect)=>({\n                    top: getSouthTop(targetRect),\n                    left: targetRect.left - balloonRect.width / 2,\n                    name: 'arrow_n',\n                    ...config && {\n                        config\n                    }\n                }),\n            southWestArrowNorthMiddleEast: (targetRect, balloonRect)=>({\n                    top: getSouthTop(targetRect),\n                    left: targetRect.left - balloonRect.width * .75 + sideOffset,\n                    name: 'arrow_nme',\n                    ...config && {\n                        config\n                    }\n                }),\n            southWestArrowNorthEast: (targetRect, balloonRect)=>({\n                    top: getSouthTop(targetRect),\n                    left: targetRect.left - balloonRect.width + sideOffset,\n                    name: 'arrow_ne',\n                    ...config && {\n                        config\n                    }\n                }),\n            // ------- South\n            southArrowNorthWest: (targetRect)=>({\n                    top: getSouthTop(targetRect),\n                    left: targetRect.left + targetRect.width / 2 - sideOffset,\n                    name: 'arrow_nw',\n                    ...config && {\n                        config\n                    }\n                }),\n            southArrowNorthMiddleWest: (targetRect, balloonRect)=>({\n                    top: getSouthTop(targetRect),\n                    left: targetRect.left + targetRect.width / 2 - balloonRect.width * 0.25 - sideOffset,\n                    name: 'arrow_nmw',\n                    ...config && {\n                        config\n                    }\n                }),\n            southArrowNorth: (targetRect, balloonRect)=>({\n                    top: getSouthTop(targetRect),\n                    left: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\n                    name: 'arrow_n',\n                    ...config && {\n                        config\n                    }\n                }),\n            southArrowNorthMiddleEast: (targetRect, balloonRect)=>({\n                    top: getSouthTop(targetRect),\n                    left: targetRect.left + targetRect.width / 2 - balloonRect.width * 0.75 + sideOffset,\n                    name: 'arrow_nme',\n                    ...config && {\n                        config\n                    }\n                }),\n            southArrowNorthEast: (targetRect, balloonRect)=>({\n                    top: getSouthTop(targetRect),\n                    left: targetRect.left + targetRect.width / 2 - balloonRect.width + sideOffset,\n                    name: 'arrow_ne',\n                    ...config && {\n                        config\n                    }\n                }),\n            // ------- South east\n            southEastArrowNorthWest: (targetRect)=>({\n                    top: getSouthTop(targetRect),\n                    left: targetRect.right - sideOffset,\n                    name: 'arrow_nw',\n                    ...config && {\n                        config\n                    }\n                }),\n            southEastArrowNorthMiddleWest: (targetRect, balloonRect)=>({\n                    top: getSouthTop(targetRect),\n                    left: targetRect.right - balloonRect.width * .25 - sideOffset,\n                    name: 'arrow_nmw',\n                    ...config && {\n                        config\n                    }\n                }),\n            southEastArrowNorth: (targetRect, balloonRect)=>({\n                    top: getSouthTop(targetRect),\n                    left: targetRect.right - balloonRect.width / 2,\n                    name: 'arrow_n',\n                    ...config && {\n                        config\n                    }\n                }),\n            southEastArrowNorthMiddleEast: (targetRect, balloonRect)=>({\n                    top: getSouthTop(targetRect),\n                    left: targetRect.right - balloonRect.width * .75 + sideOffset,\n                    name: 'arrow_nme',\n                    ...config && {\n                        config\n                    }\n                }),\n            southEastArrowNorthEast: (targetRect, balloonRect)=>({\n                    top: getSouthTop(targetRect),\n                    left: targetRect.right - balloonRect.width + sideOffset,\n                    name: 'arrow_ne',\n                    ...config && {\n                        config\n                    }\n                }),\n            // ------- West\n            westArrowEast: (targetRect, balloonRect)=>({\n                    top: targetRect.top + targetRect.height / 2 - balloonRect.height / 2,\n                    left: targetRect.left - balloonRect.width - heightOffset,\n                    name: 'arrow_e',\n                    ...config && {\n                        config\n                    }\n                }),\n            // ------- East\n            eastArrowWest: (targetRect, balloonRect)=>({\n                    top: targetRect.top + targetRect.height / 2 - balloonRect.height / 2,\n                    left: targetRect.right + heightOffset,\n                    name: 'arrow_w',\n                    ...config && {\n                        config\n                    }\n                }),\n            // ------- Sticky\n            viewportStickyNorth: (targetRect, balloonRect, viewportRect)=>{\n                // Get the intersection of the viewport and the document body.\n                const boundaryRect = new Rect(global.document.body).getIntersection(viewportRect.getVisible());\n                if (!boundaryRect) {\n                    return null;\n                }\n                // Get the visible intersection of the boundary and the document body.\n                const visibleBoundaryRect = boundaryRect.getVisible();\n                // Check if the target is in the boundary.\n                if (!targetRect.getIntersection(visibleBoundaryRect)) {\n                    return null;\n                }\n                // Checks if there is enough space to put the balloon on the top or bottom of the target.\n                // If not, makes the balloon sticky.\n                if (!(visibleBoundaryRect.top - targetRect.top - stickyVerticalOffset < balloonRect.height && visibleBoundaryRect.bottom - targetRect.bottom < balloonRect.height)) {\n                    return null;\n                }\n                return {\n                    top: visibleBoundaryRect.top + stickyVerticalOffset,\n                    left: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\n                    name: 'arrowless',\n                    config: {\n                        withArrow: false,\n                        ...config\n                    }\n                };\n            }\n        };\n        /**\n\t\t * Returns the top coordinate for positions starting with `north*`.\n\t\t *\n\t\t * @param targetRect A rect of the target.\n\t\t * @param balloonRect A rect of the balloon.\n\t\t */ function getNorthTop(targetRect, balloonRect) {\n            return targetRect.top - balloonRect.height - heightOffset;\n        }\n        /**\n\t\t * Returns the top coordinate for positions starting with `south*`.\n\t\t *\n\t\t * @param targetRect A rect of the target.\n\t\t */ function getSouthTop(targetRect) {\n            return targetRect.bottom + heightOffset;\n        }\n    }\n    /**\n\t * A side offset of the arrow tip from the edge of the balloon. Controlled by CSS.\n\t *\n\t * ```\n\t *\t\t ┌───────────────────────┐\n\t *\t\t │                       │\n\t *\t\t │         Balloon       │\n\t *\t\t │         Content       │\n\t *\t\t │                       │\n\t *\t\t └──+    +───────────────┘\n\t *\t\t |   \\  /\n\t *\t\t |    \\/\n\t *\t\t>┼─────┼< ─────────────────────── side offset\n\t *\n\t * ```\n\t *\n\t * @default 25\n\t */ static arrowSideOffset = 25;\n    /**\n\t * A height offset of the arrow from the edge of the balloon. Controlled by CSS.\n\t *\n\t * ```\n\t *\t\t ┌───────────────────────┐\n\t *\t\t │                       │\n\t *\t\t │         Balloon       │\n\t *\t\t │         Content       │      ╱-- arrow height offset\n\t *\t\t │                       │      V\n\t *\t\t └──+    +───────────────┘ --- ─┼───────\n\t *\t\t     \\  /                       │\n\t *\t\t      \\/                        │\n\t *\t\t────────────────────────────────┼───────\n\t *\t\t                                ^\n\t *\n\t *\n\t *\t\t>┼────┼<  arrow height offset\n\t *\t\t │    │\n\t *\t\t │    ┌────────────────────────┐\n\t *\t\t │    │                        │\n\t *\t\t │   ╱                         │\n\t *\t\t │ ╱            Balloon        │\n\t *\t\t │ ╲            Content        │\n\t *\t\t │   ╲                         │\n\t *\t\t │    │                        │\n\t *\t\t │    └────────────────────────┘\n\t * ```\n\t *\n\t * @default 10\n\t*/ static arrowHeightOffset = 10;\n    /**\n\t * A vertical offset of the balloon panel from the edge of the viewport if sticky.\n\t * It helps in accessing toolbar buttons underneath the balloon panel.\n\t *\n\t * ```\n\t *\t\t  ┌───────────────────────────────────────────────────┐\n\t *\t\t  │                      Target                       │\n\t *\t\t  │                                                   │\n\t *\t\t  │                            /── vertical offset    │\n\t *\t\t┌─────────────────────────────V─────────────────────────┐\n\t *\t\t│ Toolbar            ┌─────────────┐                    │\n\t *\t\t├────────────────────│   Balloon   │────────────────────┤\n\t *\t\t│ │                  └─────────────┘                  │ │\n\t *\t\t│ │                                                   │ │\n\t *\t\t│ │                                                   │ │\n\t *\t\t│ │                                                   │ │\n\t *\t\t│ └───────────────────────────────────────────────────┘ │\n\t *\t\t│                        Viewport                       │\n\t *\t\t└───────────────────────────────────────────────────────┘\n\t * ```\n\t *\n\t * @default 20\n\t */ static stickyVerticalOffset = 20;\n    /**\n\t * Function used to calculate the optimal position for the balloon.\n\t */ static _getOptimalPosition = getOptimalPosition;\n    /**\n\t * A default set of positioning functions used by the balloon panel view\n\t * when attaching using the {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#attachTo} method.\n\t *\n\t * The available positioning functions are as follows:\n\t *\n\t * **North west**\n\t *\n\t * * `northWestArrowSouthWest`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t *\t\t V\n\t *\t\t [ Target ]\n\t * ```\n\t *\n\t * * `northWestArrowSouthMiddleWest`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t *\t\t    V\n\t *\t\t    [ Target ]\n\t * ```\n\t *\n\t * * `northWestArrowSouth`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t *\t\t         V\n\t *\t\t         [ Target ]\n\t * ```\n\t *\n\t * * `northWestArrowSouthMiddleEast`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t *\t\t             V\n\t *\t\t             [ Target ]\n\t * ```\n\t *\n\t * * `northWestArrowSouthEast`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t *\t\t                 V\n\t *\t\t                 [ Target ]\n\t * ```\n\t *\n\t * **North**\n\t *\n\t * * `northArrowSouthWest`\n\t *\n\t * ```\n\t *\t\t    +-----------------+\n\t *\t\t    |     Balloon     |\n\t *\t\t    +-----------------+\n\t *\t\t     V\n\t *\t\t[ Target ]\n\t * ```\n\t *\n\t * * `northArrowSouthMiddleWest`\n\t *\n\t * ```\n\t *\t\t +-----------------+\n\t *\t\t |     Balloon     |\n\t *\t\t +-----------------+\n\t *\t\t     V\n\t *\t\t[ Target ]\n\t * ```\n\t * * `northArrowSouth`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t *\t\t         V\n\t *\t\t    [ Target ]\n\t * ```\n\t *\n\t * * `northArrowSouthMiddleEast`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t *\t\t             V\n\t *\t\t        [ Target ]\n\t * ```\n\t *\n\t * * `northArrowSouthEast`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t *\t\t                V\n\t *\t\t           [ Target ]\n\t * ```\n\t *\n\t * **North east**\n\t *\n\t * * `northEastArrowSouthWest`\n\t *\n\t * ```\n\t *\t\t        +-----------------+\n\t *\t\t        |     Balloon     |\n\t *\t\t        +-----------------+\n\t *\t\t         V\n\t *\t\t[ Target ]\n\t * ```\n\t *\n\t * * `northEastArrowSouthMiddleWest`\n\t *\n\t * ```\n\t *\t\t     +-----------------+\n\t *\t\t     |     Balloon     |\n\t *\t\t     +-----------------+\n\t *\t\t         V\n\t *\t\t[ Target ]\n\t * ```\n\t *\n\t * * `northEastArrowSouth`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t *\t\t         V\n\t *\t\t[ Target ]\n\t * ```\n\t *\n\t * * `northEastArrowSouthMiddleEast`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t *\t\t             V\n\t *\t\t    [ Target ]\n\t * ```\n\t *\n\t * * `northEastArrowSouthEast`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t *\t\t                 V\n\t *\t\t        [ Target ]\n\t * ```\n\t *\n\t * **South**\n\t *\n\t * * `southArrowNorthWest`\n\t *\n\t * ```\n\t *\t\t[ Target ]\n\t *\t\t     ^\n\t *\t\t    +-----------------+\n\t *\t\t    |     Balloon     |\n\t *\t\t    +-----------------+\n\t * ```\n\t *\n\t * * `southArrowNorthMiddleWest`\n\t *\n\t * ```\n\t *\t\t   [ Target ]\n\t *\t\t        ^\n\t *\t\t    +-----------------+\n\t *\t\t    |     Balloon     |\n\t *\t\t    +-----------------+\n\t * ```\n\t *\n\t * * `southArrowNorth`\n\t *\n\t * ```\n\t *\t\t    [ Target ]\n\t *\t\t         ^\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * * `southArrowNorthMiddleEast`\n\t *\n\t * ```\n\t *\t\t            [ Target ]\n\t *\t\t                 ^\n\t *\t\t   +-----------------+\n\t *\t\t   |     Balloon     |\n\t *\t\t   +-----------------+\n\t * ```\n\t *\n\t * * `southArrowNorthEast`\n\t *\n\t * ```\n\t *\t\t            [ Target ]\n\t *\t\t                 ^\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * **South west**\n\t *\n\t * * `southWestArrowNorthWest`\n\t *\n\t *\n\t * ```\n\t *\t\t [ Target ]\n\t *\t\t ^\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * * `southWestArrowNorthMiddleWest`\n\t *\n\t * ```\n\t *\t\t     [ Target ]\n\t *\t\t     ^\n\t *\t\t +-----------------+\n\t *\t\t |     Balloon     |\n\t *\t\t +-----------------+\n\t * ```\n\t *\n\t * * `southWestArrowNorth`\n\t *\n\t * ```\n\t *\t\t         [ Target ]\n\t *\t\t         ^\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * * `southWestArrowNorthMiddleEast`\n\t *\n\t * ```\n\t *\t\t              [ Target ]\n\t *\t\t              ^\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * * `southWestArrowNorthEast`\n\t *\n\t * ```\n\t *\t\t                 [ Target ]\n\t *\t\t                 ^\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * **South east**\n\t *\n\t * * `southEastArrowNorthWest`\n\t *\n\t * ```\n\t *\t\t[ Target ]\n\t *\t\t         ^\n\t *\t\t        +-----------------+\n\t *\t\t        |     Balloon     |\n\t *\t\t        +-----------------+\n\t * ```\n\t *\n\t * * `southEastArrowNorthMiddleWest`\n\t *\n\t * ```\n\t *\t\t   [ Target ]\n\t *\t\t            ^\n\t *\t\t        +-----------------+\n\t *\t\t        |     Balloon     |\n\t *\t\t        +-----------------+\n\t * ```\n\t *\n\t * * `southEastArrowNorth`\n\t *\n\t * ```\n\t *\t\t[ Target ]\n\t *\t\t         ^\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * * `southEastArrowNorthMiddleEast`\n\t *\n\t * ```\n\t *\t\t     [ Target ]\n\t *\t\t              ^\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * * `southEastArrowNorthEast`\n\t *\n\t * ```\n\t *\t\t        [ Target ]\n\t *\t\t                 ^\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * **West**\n\t *\n\t * * `westArrowEast`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |>[ Target ]\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * **East**\n\t *\n\t * * `eastArrowWest`\n\t *\n\t * ```\n\t *\t\t           +-----------------+\n\t *\t\t[ Target ]<|     Balloon     |\n\t *\t\t           +-----------------+\n\t * ```\n\t *\n\t * **Sticky**\n\t *\n\t * * `viewportStickyNorth`\n\t *\n\t * ```\n\t *\t\t    +---------------------------+\n\t *\t\t    |        [ Target ]         |\n\t *\t\t    |                           |\n\t *\t\t+-----------------------------------+\n\t *\t\t|   |    +-----------------+    |   |\n\t *\t\t|   |    |     Balloon     |    |   |\n\t *\t\t|   |    +-----------------+    |   |\n\t *\t\t|   |                           |   |\n\t *\t\t|   |                           |   |\n\t *\t\t|   |                           |   |\n\t *\t\t|   |                           |   |\n\t *\t\t|   +---------------------------+   |\n\t *\t\t|             Viewport              |\n\t *\t\t+-----------------------------------+\n\t * ```\n\t *\n\t * See {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#attachTo}.\n\t *\n\t * Positioning functions must be compatible with {@link module:utils/dom/position~DomPoint}.\n\t *\n\t * Default positioning functions with customized offsets can be generated using\n\t * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.generatePositions}.\n\t *\n\t * The name that the position function returns will be reflected in the balloon panel's class that\n\t * controls the placement of the \"arrow\". See {@link #position} to learn more.\n\t */ static defaultPositions = /* #__PURE__ */ BalloonPanelView.generatePositions();\n}\n/**\n * Returns the DOM element for given object or null, if there is none,\n * e.g. when the passed object is a Rect instance or so.\n */ function getDomElement(object) {\n    if (isElement(object)) {\n        return object;\n    }\n    if (isRange(object)) {\n        return object.commonAncestorContainer;\n    }\n    if (typeof object == 'function') {\n        return getDomElement(object());\n    }\n    return null;\n}\n\n// ⚠ Note, whenever changing the threshold, make sure to update the docs/support/managing-ckeditor-logo.md docs\n// as this information is also mentioned there ⚠.\nconst NARROW_ROOT_HEIGHT_THRESHOLD = 50;\nconst NARROW_ROOT_WIDTH_THRESHOLD = 350;\n/**\n * A helper that enables the badge feature in the editor and renders a custom view next to the bottom of the editable element\n * (editor root, source editing area, etc.) when the editor is focused.\n *\n * @private\n */ class Badge extends /* #__PURE__ */ DomEmitterMixin() {\n    /**\n\t * Editor instance the helper was created for.\n\t */ editor;\n    /**\n\t * A reference to the balloon panel hosting and positioning the badge content.\n\t */ _balloonView = null;\n    /**\n\t * A throttled version of the {@link #_showBalloon} method meant for frequent use to avoid performance loss.\n\t */ _showBalloonThrottled = throttle(()=>this._showBalloon(), 50, {\n        leading: true\n    });\n    /**\n\t * A reference to the last editable element (root, source editing area, etc.) focused by the user.\n\t * Since the focus can move to other focusable elements in the UI, this reference allows positioning the balloon over the\n\t * right element whether the user is typing or using the UI.\n\t */ _lastFocusedEditableElement = null;\n    /**\n\t * An additional CSS class added to the `BalloonView`.\n\t */ _balloonClass;\n    /**\n\t * Creates a badge for a given editor. The feature is initialized on Editor#ready\n\t * event.\n\t */ constructor(editor, options = {}){\n        super();\n        this.editor = editor;\n        this._balloonClass = options.balloonClass;\n        editor.on('ready', ()=>this._handleEditorReady());\n    }\n    /**\n\t * Destroys the badge along with its view.\n\t */ destroy() {\n        const balloon = this._balloonView;\n        if (balloon) {\n            // Balloon gets destroyed by the body collection.\n            // The badge view gets destroyed by the balloon.\n            balloon.unpin();\n            this._balloonView = null;\n        }\n        this._showBalloonThrottled.cancel();\n        this.stopListening();\n    }\n    /**\n\t * Enables badge label once the editor (ui) is ready.\n\t */ _handleEditorReady() {\n        const editor = this.editor;\n        if (!this._isEnabled()) {\n            return;\n        }\n        // No view means no body collection to append the badge balloon to.\n        if (!editor.ui.view) {\n            return;\n        }\n        editor.ui.focusTracker.on('change:isFocused', (evt, data, isFocused)=>{\n            this._updateLastFocusedEditableElement();\n            if (isFocused) {\n                this._showBalloon();\n            } else {\n                this._hideBalloon();\n            }\n        });\n        editor.ui.focusTracker.on('change:focusedElement', (evt, data, focusedElement)=>{\n            this._updateLastFocusedEditableElement();\n            if (focusedElement) {\n                this._showBalloon();\n            }\n        });\n        editor.ui.on('update', ()=>{\n            this._showBalloonThrottled();\n        });\n    }\n    /**\n\t * Returns normalized configuration for the badge.\n\t */ _getNormalizedConfig() {\n        return {\n            side: this.editor.locale.contentLanguageDirection === 'ltr' ? 'right' : 'left',\n            position: 'border',\n            verticalOffset: 0,\n            horizontalOffset: 5\n        };\n    }\n    /**\n\t * Attempts to display the balloon with the badge view.\n\t */ _showBalloon() {\n        const attachOptions = this._getBalloonAttachOptions();\n        if (!attachOptions) {\n            return;\n        }\n        if (!this._balloonView) {\n            this._balloonView = this._createBalloonView();\n        }\n        this._balloonView.pin(attachOptions);\n    }\n    /**\n\t * Hides the badge balloon if already visible.\n\t */ _hideBalloon() {\n        if (this._balloonView) {\n            this._balloonView.unpin();\n        }\n    }\n    /**\n\t * Creates an instance of the {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView balloon panel}\n\t * with the badge view inside ready for positioning.\n\t */ _createBalloonView() {\n        const editor = this.editor;\n        const balloon = new BalloonPanelView();\n        const view = this._createBadgeContent();\n        balloon.content.add(view);\n        if (this._balloonClass) {\n            balloon.class = this._balloonClass;\n        }\n        editor.ui.view.body.add(balloon);\n        return balloon;\n    }\n    /**\n\t * Returns the options for attaching the balloon to the focused editable element.\n\t */ _getBalloonAttachOptions() {\n        if (!this._lastFocusedEditableElement) {\n            return null;\n        }\n        const badgeConfig = this._getNormalizedConfig();\n        const positioningFunction = badgeConfig.side === 'right' ? getLowerRightCornerPosition(this._lastFocusedEditableElement, badgeConfig) : getLowerLeftCornerPosition(this._lastFocusedEditableElement, badgeConfig);\n        return {\n            target: this._lastFocusedEditableElement,\n            positions: [\n                positioningFunction\n            ]\n        };\n    }\n    /**\n\t * Updates the {@link #_lastFocusedEditableElement} based on the state of the global focus tracker.\n\t */ _updateLastFocusedEditableElement() {\n        const editor = this.editor;\n        const isFocused = editor.ui.focusTracker.isFocused;\n        const focusedElement = editor.ui.focusTracker.focusedElement;\n        if (!isFocused || !focusedElement) {\n            this._lastFocusedEditableElement = null;\n            return;\n        }\n        const editableEditorElements = Array.from(editor.ui.getEditableElementsNames()).map((name)=>{\n            return editor.ui.getEditableElement(name);\n        });\n        if (editableEditorElements.includes(focusedElement)) {\n            this._lastFocusedEditableElement = focusedElement;\n        } else {\n            // If it's none of the editable element, then the focus is somewhere in the UI. Let's display the badge\n            // over the first element then.\n            this._lastFocusedEditableElement = editableEditorElements[0];\n        }\n    }\n}\nfunction getLowerRightCornerPosition(focusedEditableElement, config) {\n    return getLowerCornerPosition(focusedEditableElement, config, (rootRect, balloonRect)=>{\n        return rootRect.left + rootRect.width - balloonRect.width - config.horizontalOffset;\n    });\n}\nfunction getLowerLeftCornerPosition(focusedEditableElement, config) {\n    return getLowerCornerPosition(focusedEditableElement, config, (rootRect)=>rootRect.left + config.horizontalOffset);\n}\nfunction getLowerCornerPosition(focusedEditableElement, config, getBalloonLeft) {\n    return (visibleEditableElementRect, balloonRect)=>{\n        const editableElementRect = new Rect(focusedEditableElement);\n        if (editableElementRect.width < NARROW_ROOT_WIDTH_THRESHOLD || editableElementRect.height < NARROW_ROOT_HEIGHT_THRESHOLD) {\n            return null;\n        }\n        let balloonTop;\n        if (config.position === 'inside') {\n            balloonTop = editableElementRect.bottom - balloonRect.height;\n        } else {\n            balloonTop = editableElementRect.bottom - balloonRect.height / 2;\n        }\n        balloonTop -= config.verticalOffset;\n        const balloonLeft = getBalloonLeft(editableElementRect, balloonRect);\n        // Clone the editable element rect and place it where the balloon would be placed.\n        // This will allow getVisible() to work from editable element's perspective (rect source).\n        // and yield a result as if the balloon was on the same (scrollable) layer as the editable element.\n        const newBalloonPositionRect = visibleEditableElementRect.clone().moveTo(balloonLeft, balloonTop).getIntersection(balloonRect.clone().moveTo(balloonLeft, balloonTop));\n        const newBalloonPositionVisibleRect = newBalloonPositionRect.getVisible();\n        if (!newBalloonPositionVisibleRect || newBalloonPositionVisibleRect.getArea() < balloonRect.getArea()) {\n            return null;\n        }\n        return {\n            top: balloonTop,\n            left: balloonLeft,\n            name: `position_${config.position}-side_${config.side}`,\n            config: {\n                withArrow: false\n            }\n        };\n    };\n}\n\nconst DEFAULT_LABEL = 'Powered by';\n/**\n * A helper that enables the \"powered by\" feature in the editor and renders a link to the project's\n * webpage next to the bottom of the editable element (editor root, source editing area, etc.) when the editor is focused.\n *\n * @private\n */ class PoweredBy extends Badge {\n    constructor(editor){\n        super(editor, {\n            balloonClass: 'ck-powered-by-balloon'\n        });\n    }\n    /**\n\t * Enables \"powered by\" label.\n\t */ _isEnabled() {\n        const editor = this.editor;\n        const forceVisible = editor.config.get('ui.poweredBy.forceVisible');\n        if (forceVisible) {\n            return true;\n        }\n        const licenseKey = editor.config.get('licenseKey');\n        if (licenseKey == 'GPL') {\n            return true;\n        }\n        const licenseContent = parseBase64EncodedObject(licenseKey.split('.')[1]);\n        if (!licenseContent) {\n            return true;\n        }\n        return !licenseContent.whiteLabel;\n    }\n    /**\n\t * Creates a \"powered by\" badge content.\n\t */ _createBadgeContent() {\n        return new PoweredByView(this.editor.locale, this._getNormalizedConfig().label);\n    }\n    /**\n\t * Returns the normalized configuration for the \"powered by\" badge.\n\t * It takes the user configuration into account and falls back to the default one.\n\t */ _getNormalizedConfig() {\n        const badgeConfig = super._getNormalizedConfig();\n        const userConfig = this.editor.config.get('ui.poweredBy') || {};\n        const position = userConfig.position || badgeConfig.position;\n        const verticalOffset = position === 'inside' ? 5 : badgeConfig.verticalOffset;\n        return {\n            position,\n            side: userConfig.side || badgeConfig.side,\n            label: userConfig.label === undefined ? DEFAULT_LABEL : userConfig.label,\n            verticalOffset: userConfig.verticalOffset !== undefined ? userConfig.verticalOffset : verticalOffset,\n            horizontalOffset: userConfig.horizontalOffset !== undefined ? userConfig.horizontalOffset : badgeConfig.horizontalOffset,\n            forceVisible: !!userConfig.forceVisible\n        };\n    }\n}\n/**\n * A view displaying a \"powered by\" label and project logo wrapped in a link.\n */ class PoweredByView extends View {\n    /**\n\t * Creates an instance of the \"powered by\" view.\n\t *\n\t * @param locale The localization services instance.\n\t * @param label The label text.\n\t */ constructor(locale, label){\n        super(locale);\n        const iconView = new IconView();\n        const bind = this.bindTemplate;\n        iconView.set({\n            content: IconProjectLogo,\n            isColorInherited: false\n        });\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-powered-by'\n                ],\n                'aria-hidden': true\n            },\n            children: [\n                {\n                    tag: 'a',\n                    attributes: {\n                        href: 'https://ckeditor.com/powered-by-ckeditor/?utm_source=ckeditor&' + 'utm_medium=referral&utm_campaign=701Dn000000hVgmIAE_powered_by_ckeditor_logo',\n                        target: '_blank',\n                        tabindex: '-1'\n                    },\n                    children: [\n                        ...label ? [\n                            {\n                                tag: 'span',\n                                attributes: {\n                                    class: [\n                                        'ck',\n                                        'ck-powered-by__label'\n                                    ]\n                                },\n                                children: [\n                                    label\n                                ]\n                            }\n                        ] : [],\n                        iconView\n                    ],\n                    on: {\n                        dragstart: bind.to((evt)=>evt.preventDefault())\n                    }\n                }\n            ]\n        });\n    }\n}\n\n/**\n * The switch button view class.\n *\n * ```ts\n * const view = new SwitchButtonView();\n *\n * view.set( {\n * \twithText: true,\n * \tlabel: 'Switch me!'\n * } );\n *\n * view.render();\n *\n * document.body.append( view.element );\n * ```\n */ class SwitchButtonView extends ButtonView {\n    /**\n\t * The toggle switch of the button.\n\t */ toggleSwitchView;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale){\n        super(locale);\n        this.isToggleable = true;\n        this.toggleSwitchView = this._createToggleView();\n        this.extendTemplate({\n            attributes: {\n                class: 'ck-switchbutton'\n            }\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        this.children.add(this.toggleSwitchView);\n    }\n    /**\n\t * Creates a toggle child view.\n\t */ _createToggleView() {\n        const toggleSwitchView = new View();\n        toggleSwitchView.setTemplate({\n            tag: 'span',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-button__toggle'\n                ]\n            },\n            children: [\n                {\n                    tag: 'span',\n                    attributes: {\n                        class: [\n                            'ck',\n                            'ck-button__toggle__inner'\n                        ]\n                    }\n                }\n            ]\n        });\n        return toggleSwitchView;\n    }\n}\n\n/**\n * The file dialog button view.\n *\n * This component provides a button that opens the native file selection dialog.\n * It can be used to implement the UI of a file upload feature.\n *\n * ```ts\n * const view = new FileDialogButtonView( locale );\n *\n * view.set( {\n * \tacceptedType: 'image/*',\n * \tallowMultipleFiles: true\n * \tlabel: t( 'Insert image' ),\n * \ticon: imageIcon,\n * \ttooltip: true\n * } );\n *\n * view.on( 'done', ( evt, files ) => {\n * \tfor ( const file of Array.from( files ) ) {\n * \t\tconsole.log( 'Selected file', file );\n * \t}\n * } );\n * ```\n */ class FileDialogButtonView extends /* #__PURE__ */ FileDialogViewMixin(ButtonView) {\n}\n/**\n * The file dialog button view used in a lists.\n *\n * This component provides a button that opens the native file selection dialog.\n * It can be used to implement the UI of a file upload feature.\n *\n* ```ts\n * const view = new FileDialogListItemButtonView( locale );\n *\n * view.set( {\n * \tacceptedType: 'image/*',\n * \tallowMultipleFiles: true\n * \tlabel: t( 'Insert image' ),\n * \ticon: imageIcon,\n * \ttooltip: true\n * } );\n *\n * view.on( 'done', ( evt, files ) => {\n * \tfor ( const file of Array.from( files ) ) {\n * \t\tconsole.log( 'Selected file', file );\n * \t}\n * } );\n * ```\n */ class FileDialogListItemButtonView extends /* #__PURE__ */ FileDialogViewMixin(ListItemButtonView) {\n}\n/**\n * Mixin function that enhances a base button view class with file dialog functionality. It is used\n * to create a button view class that opens the native select file dialog when clicked.\n *\n * The enhanced view includes a button and a hidden file input. When the button is clicked, the file dialog is opened.\n * The mixin adds properties and methods to the base class to handle the file selection.\n *\n * @param view The base class to be enhanced with file dialog functionality.\n * @returns A new class that extends the base class and includes the file dialog functionality.\n */ function FileDialogViewMixin(view) {\n    class FileDialogView extends view {\n        /**\n\t\t * A hidden `<input>` view used to execute file dialog.\n\t\t */ _fileInputView;\n        /**\n\t\t * @inheritDoc\n\t\t */ constructor(...args){\n            super(...args);\n            this._fileInputView = new FileInputView(this.locale);\n            this._fileInputView.bind('acceptedType').to(this);\n            this._fileInputView.bind('allowMultipleFiles').to(this);\n            this._fileInputView.delegate('done').to(this);\n            this.on('execute', ()=>{\n                this._fileInputView.open();\n            });\n            this.extendTemplate({\n                attributes: {\n                    class: 'ck-file-dialog-button'\n                }\n            });\n        }\n        /**\n\t\t * @inheritDoc\n\t\t */ render() {\n            super.render();\n            this.children.add(this._fileInputView);\n        }\n    }\n    return FileDialogView;\n}\n/**\n * The hidden file input view class.\n */ class FileInputView extends View {\n    /**\n\t * @inheritDoc\n\t */ constructor(locale){\n        super(locale);\n        this.set('acceptedType', undefined);\n        this.set('allowMultipleFiles', false);\n        const bind = this.bindTemplate;\n        this.setTemplate({\n            tag: 'input',\n            attributes: {\n                class: [\n                    'ck-hidden'\n                ],\n                type: 'file',\n                tabindex: '-1',\n                accept: bind.to('acceptedType'),\n                multiple: bind.to('allowMultipleFiles')\n            },\n            on: {\n                // Removing from code coverage since we cannot programmatically set input element files.\n                change: bind.to(/* istanbul ignore next -- @preserve */ ()=>{\n                    if (this.element?.files?.length) {\n                        this.fire('done', this.element.files);\n                    }\n                    this.element.value = '';\n                })\n            }\n        });\n    }\n    /**\n\t * Opens file dialog.\n\t */ open() {\n        this.element.click();\n    }\n}\n\n/**\n * A collapsible UI component. Consists of a labeled button and a container which can be collapsed\n * by clicking the button. The collapsible container can be a host to other UI views.\n *\n * @internal\n */ class CollapsibleView extends View {\n    /**\n\t * The main button that, when clicked, collapses or expands the container with {@link #children}.\n\t */ buttonView;\n    /**\n\t * A collection of the child views that can be collapsed by clicking the {@link #buttonView}.\n\t */ children;\n    /**\n\t * Creates an instance of the collapsible view.\n\t *\n\t * @param locale The {@link module:core/editor/editor~Editor#locale} instance.\n\t * @param childViews An optional array of initial child views to be inserted into the collapsible.\n\t */ constructor(locale, childViews){\n        super(locale);\n        const bind = this.bindTemplate;\n        this.set('isCollapsed', false);\n        this.set('label', '');\n        this.buttonView = this._createButtonView();\n        this.children = this.createCollection();\n        this.set('_collapsibleAriaLabelUid', undefined);\n        if (childViews) {\n            this.children.addMany(childViews);\n        }\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-collapsible',\n                    bind.if('isCollapsed', 'ck-collapsible_collapsed')\n                ]\n            },\n            children: [\n                this.buttonView,\n                {\n                    tag: 'div',\n                    attributes: {\n                        class: [\n                            'ck',\n                            'ck-collapsible__children'\n                        ],\n                        role: 'region',\n                        hidden: bind.if('isCollapsed', 'hidden'),\n                        'aria-labelledby': bind.to('_collapsibleAriaLabelUid')\n                    },\n                    children: this.children\n                }\n            ]\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        this._collapsibleAriaLabelUid = this.buttonView.labelView.element.id;\n    }\n    /**\n\t * Focuses the first focusable.\n\t */ focus() {\n        this.buttonView.focus();\n    }\n    /**\n\t * Creates the main {@link #buttonView} of the collapsible.\n\t */ _createButtonView() {\n        const buttonView = new ButtonView(this.locale);\n        const bind = buttonView.bindTemplate;\n        buttonView.set({\n            withText: true,\n            icon: IconDropdownArrow\n        });\n        buttonView.extendTemplate({\n            attributes: {\n                'aria-expanded': bind.to('isOn', (value)=>String(value))\n            }\n        });\n        buttonView.bind('label').to(this);\n        buttonView.bind('isOn').to(this, 'isCollapsed', (isCollapsed)=>!isCollapsed);\n        buttonView.on('execute', ()=>{\n            this.isCollapsed = !this.isCollapsed;\n        });\n        return buttonView;\n    }\n}\n\n/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */ /**\n * @module ui/colorgrid/utils\n */ /**\n * Returns color configuration options as defined in `editor.config.(fontColor|fontBackgroundColor).colors` or\n * `editor.config.table.(tableProperties|tableCellProperties).(background|border).colors\n * but processed to account for editor localization in the correct language.\n *\n * Note: The reason behind this method is that there is no way to use {@link module:utils/locale~Locale#t}\n * when the user configuration is defined because the editor does not exist yet.\n *\n * @param locale The {@link module:core/editor/editor~Editor#locale} instance.\n */ function getLocalizedColorOptions(locale, options) {\n    const t = locale.t;\n    const localizedColorNames = {\n        Black: t('Black'),\n        'Dim grey': t('Dim grey'),\n        Grey: t('Grey'),\n        'Light grey': t('Light grey'),\n        White: t('White'),\n        Red: t('Red'),\n        Orange: t('Orange'),\n        Yellow: t('Yellow'),\n        'Light green': t('Light green'),\n        Green: t('Green'),\n        Aquamarine: t('Aquamarine'),\n        Turquoise: t('Turquoise'),\n        'Light blue': t('Light blue'),\n        Blue: t('Blue'),\n        Purple: t('Purple')\n    };\n    return options.map((colorOption)=>{\n        const label = localizedColorNames[colorOption.label];\n        if (label && label != colorOption.label) {\n            colorOption.label = label;\n        }\n        return colorOption;\n    });\n}\n/**\n * Creates a unified color definition object from color configuration options.\n * The object contains the information necessary to both render the UI and initialize the conversion.\n */ function normalizeColorOptions(options) {\n    return options.map(normalizeSingleColorDefinition).filter((option)=>!!option);\n}\n/**\n * Creates a normalized color definition from the user-defined configuration.\n * The \"normalization\" means it will create full\n * {@link module:ui/colorgrid/colorgridview~ColorDefinition `ColorDefinition-like`}\n * object for string values, and add a `view` property, for each definition.\n */ function normalizeSingleColorDefinition(color) {\n    if (typeof color === 'string') {\n        return {\n            model: color,\n            label: color,\n            hasBorder: false,\n            view: {\n                name: 'span',\n                styles: {\n                    color\n                }\n            }\n        };\n    } else {\n        return {\n            model: color.color,\n            label: color.label || color.color,\n            hasBorder: color.hasBorder === undefined ? false : color.hasBorder,\n            view: {\n                name: 'span',\n                styles: {\n                    color: `${color.color}`\n                }\n            }\n        };\n    }\n}\n\n/**\n * This class represents a single color tile in the {@link module:ui/colorgrid/colorgridview~ColorGridView}.\n */ class ColorTileView extends ButtonView {\n    constructor(locale){\n        super(locale);\n        const bind = this.bindTemplate;\n        this.set('color', undefined);\n        this.set('hasBorder', false);\n        this.icon = IconColorTileCheck;\n        this.extendTemplate({\n            attributes: {\n                style: {\n                    // https://github.com/ckeditor/ckeditor5/issues/14907\n                    backgroundColor: bind.to('color', (color)=>env.isMediaForcedColors ? null : color)\n                },\n                class: [\n                    'ck',\n                    'ck-color-grid__tile',\n                    bind.if('hasBorder', 'ck-color-selector__color-tile_bordered')\n                ]\n            }\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        this.iconView.fillColor = 'hsl(0, 0%, 100%)';\n    }\n}\n\n/**\n * A grid of {@link module:ui/colorgrid/colortileview~ColorTileView color tiles}.\n */ class ColorGridView extends View {\n    /**\n\t * A number of columns for the tiles grid.\n\t */ columns;\n    /**\n\t * Collection of the child tile views.\n\t */ items;\n    /**\n\t * Tracks information about DOM focus in the grid.\n\t */ focusTracker;\n    /**\n\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t */ keystrokes;\n    /**\n\t * Creates an instance of a color grid containing {@link module:ui/colorgrid/colortileview~ColorTileView tiles}.\n\t *\n\t * @fires execute\n\t * @param locale The localization services instance.\n\t * @param options Component configuration\n\t * @param options.colorDefinitions Array with definitions\n\t * required to create the {@link module:ui/colorgrid/colortileview~ColorTileView tiles}.\n\t * @param options.columns A number of columns to display the tiles.\n\t */ constructor(locale, options){\n        super(locale);\n        const colorDefinitions = options && options.colorDefinitions ? options.colorDefinitions : [];\n        this.columns = options?.columns || 5;\n        const viewStyleAttribute = {\n            gridTemplateColumns: `repeat( ${this.columns}, 1fr)`\n        };\n        this.set('selectedColor', undefined);\n        this.items = this.createCollection();\n        this.focusTracker = new FocusTracker();\n        this.keystrokes = new KeystrokeHandler();\n        this.items.on('add', (evt, colorTile)=>{\n            colorTile.isOn = colorTile.color === this.selectedColor;\n        });\n        colorDefinitions.forEach((color)=>{\n            const colorTile = new ColorTileView();\n            colorTile.set({\n                color: color.color,\n                label: color.label,\n                tooltip: true,\n                hasBorder: color.options.hasBorder\n            });\n            colorTile.on('execute', ()=>{\n                this.fire('execute', {\n                    value: color.color,\n                    hasBorder: color.options.hasBorder,\n                    label: color.label\n                });\n            });\n            this.items.add(colorTile);\n        });\n        this.setTemplate({\n            tag: 'div',\n            children: this.items,\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-color-grid'\n                ],\n                style: viewStyleAttribute\n            }\n        });\n        this.on('change:selectedColor', (evt, name, selectedColor)=>{\n            for (const item of this.items){\n                item.isOn = item.color === selectedColor;\n            }\n        });\n    }\n    /**\n\t * Focuses the first focusable in {@link #items}.\n\t */ focus() {\n        if (this.items.length) {\n            this.items.first.focus();\n        }\n    }\n    /**\n\t * Focuses the last focusable in {@link #items}.\n\t */ focusLast() {\n        if (this.items.length) {\n            this.items.last.focus();\n        }\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        // Items added before rendering should be known to the #focusTracker.\n        for (const item of this.items){\n            this.focusTracker.add(item.element);\n        }\n        this.items.on('add', (evt, item)=>{\n            this.focusTracker.add(item.element);\n        });\n        this.items.on('remove', (evt, item)=>{\n            this.focusTracker.remove(item.element);\n        });\n        // Start listening for the keystrokes coming from #element.\n        this.keystrokes.listenTo(this.element);\n        addKeyboardHandlingForGrid({\n            keystrokeHandler: this.keystrokes,\n            focusTracker: this.focusTracker,\n            gridItems: this.items,\n            numberOfColumns: this.columns,\n            uiLanguageDirection: this.locale?.uiLanguageDirection\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        super.destroy();\n        this.focusTracker.destroy();\n        this.keystrokes.destroy();\n    }\n}\n\n/**\n * Parses and converts the color string to requested format. Handles variety of color spaces\n * like `hsl`, `hex` or `rgb`.\n *\n * @param color\n * @returns A color string.\n * @internal\n */ function convertColor(color, outputFormat) {\n    if (!color) {\n        return '';\n    }\n    const colorObject = parseColorString(color);\n    if (!colorObject) {\n        return '';\n    }\n    if (colorObject.space === outputFormat) {\n        return color;\n    }\n    if (!canConvertParsedColor(colorObject)) {\n        return '';\n    }\n    const fromColorSpace = convert[colorObject.space];\n    const toColorSpace = fromColorSpace[outputFormat];\n    if (!toColorSpace) {\n        return '';\n    }\n    const convertedColorChannels = toColorSpace(colorObject.space === 'hex' ? colorObject.hexValue : colorObject.values);\n    return formatColorOutput(convertedColorChannels, outputFormat);\n}\n/**\n * Converts a color string to hex format.\n *\n * @param color\n * @returns A color string.\n * @internal\n */ function convertToHex(color) {\n    if (!color) {\n        return '';\n    }\n    const colorObject = parseColorString(color);\n    if (!colorObject) {\n        return '#000';\n    }\n    if (colorObject.space === 'hex') {\n        return colorObject.hexValue;\n    }\n    return convertColor(color, 'hex');\n}\n/**\n * Registers the custom element in the\n * [CustomElementsRegistry](https://developer.mozilla.org/en-US/docs/Web/API/CustomElementRegistry).\n * @internal\n */ function registerCustomElement(elementName, constructor) {\n    if (customElements.get(elementName) === undefined) {\n        customElements.define(elementName, constructor);\n    }\n}\n/**\n * Formats the passed color channels according to the requested format.\n *\n * @param values\n * @param format\n * @returns A color string.\n */ function formatColorOutput(values, format) {\n    switch(format){\n        case 'hex':\n            return `#${values}`;\n        case 'rgb':\n            return `rgb(${values[0]}, ${values[1]}, ${values[2]})`;\n        case 'hsl':\n            return `hsl(${values[0]}, ${values[1]}%, ${values[2]}%)`;\n        case 'hwb':\n            return `hwb(${values[0]}, ${values[1]}, ${values[2]})`;\n        case 'lab':\n            return `lab(${values[0]}% ${values[1]} ${values[2]})`;\n        case 'lch':\n            return `lch(${values[0]}% ${values[1]} ${values[2]})`;\n        default:\n            return '';\n    }\n}\nfunction parseColorString(colorString) {\n    // Parser library treats `hex` format as belonging to `rgb` space | which messes up further conversion.\n    // Let's parse such strings on our own.\n    if (colorString.startsWith('#')) {\n        const parsedHex = parse(colorString);\n        return {\n            space: 'hex',\n            values: parsedHex.values,\n            hexValue: colorString,\n            alpha: parsedHex.alpha\n        };\n    }\n    const parsed = parse(colorString);\n    if (!parsed.space) {\n        return null;\n    }\n    return parsed;\n}\nfunction canConvertParsedColor(parsedColor) {\n    return Object.keys(convert).includes(parsedColor.space);\n}\n\n/**\n * The labeled field view class. It can be used to enhance any view with the following features:\n *\n * * a label,\n * * (optional) an error message,\n * * (optional) an info (status) text,\n *\n * all bound logically by proper DOM attributes for UX and accessibility.  It also provides an interface\n * (e.g. observable properties) that allows controlling those additional features.\n *\n * The constructor of this class requires a callback that returns a view to be labeled. The callback\n * is called with unique ids that allow binding of DOM properties:\n *\n * ```ts\n * const labeledInputView = new LabeledFieldView( locale, ( labeledFieldView, viewUid, statusUid ) => {\n * \tconst inputView = new InputTextView( labeledFieldView.locale );\n *\n * \tinputView.set( {\n * \t\tid: viewUid,\n * \t\tariaDescribedById: statusUid\n * \t} );\n *\n * \tinputView.bind( 'isReadOnly' ).to( labeledFieldView, 'isEnabled', value => !value );\n * \tinputView.bind( 'hasError' ).to( labeledFieldView, 'errorText', value => !!value );\n *\n * \treturn inputView;\n * } );\n *\n * labeledInputView.label = 'User name';\n * labeledInputView.infoText = 'Full name like for instance, John Doe.';\n * labeledInputView.render();\n *\n * document.body.append( labeledInputView.element );\n * ```\n *\n * See {@link module:ui/labeledfield/utils} to discover ready–to–use labeled input helpers for common\n * UI components.\n */ class LabeledFieldView extends View {\n    /**\n\t * The field view that gets labeled.\n\t */ fieldView;\n    /**\n\t * The label view instance that describes the entire view.\n\t */ labelView;\n    /**\n\t * The status view for the {@link #fieldView}. It displays {@link #errorText} and\n\t * {@link #infoText}.\n\t */ statusView;\n    /**\n\t * A collection of children of the internal wrapper element. Allows inserting additional DOM elements (views) next to\n\t * the {@link #fieldView} for easy styling (e.g. positioning).\n\t *\n\t * By default, the collection contains {@link #fieldView} and {@link #labelView}.\n\t */ fieldWrapperChildren;\n    /**\n\t * Creates an instance of the labeled field view class using a provided creator function\n\t * that provides the view to be labeled.\n\t *\n\t * @param locale The locale instance.\n\t * @param viewCreator A function that returns a {@link module:ui/view~View}\n\t * that will be labeled. The following arguments are passed to the creator function:\n\t *\n\t * * an instance of the `LabeledFieldView` to allow binding observable properties,\n\t * * an UID string that connects the {@link #labelView label} and the labeled field view in DOM,\n\t * * an UID string that connects the {@link #statusView status} and the labeled field view in DOM.\n\t */ constructor(locale, viewCreator){\n        super(locale);\n        const viewUid = `ck-labeled-field-view-${uid()}`;\n        const statusUid = `ck-labeled-field-view-status-${uid()}`;\n        this.fieldView = viewCreator(this, viewUid, statusUid);\n        this.set('label', undefined);\n        this.set('isEnabled', true);\n        this.set('isEmpty', true);\n        this.set('isFocused', false);\n        this.set('errorText', null);\n        this.set('infoText', null);\n        this.set('class', undefined);\n        this.set('placeholder', undefined);\n        this.labelView = this._createLabelView(viewUid);\n        this.statusView = this._createStatusView(statusUid);\n        this.fieldWrapperChildren = this.createCollection([\n            this.fieldView,\n            this.labelView\n        ]);\n        this.bind('_statusText').to(this, 'errorText', this, 'infoText', (errorText, infoText)=>errorText || infoText);\n        const bind = this.bindTemplate;\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-labeled-field-view',\n                    bind.to('class'),\n                    bind.if('isEnabled', 'ck-disabled', (value)=>!value),\n                    bind.if('isEmpty', 'ck-labeled-field-view_empty'),\n                    bind.if('isFocused', 'ck-labeled-field-view_focused'),\n                    bind.if('placeholder', 'ck-labeled-field-view_placeholder'),\n                    bind.if('errorText', 'ck-error')\n                ]\n            },\n            children: [\n                {\n                    tag: 'div',\n                    attributes: {\n                        class: [\n                            'ck',\n                            'ck-labeled-field-view__input-wrapper'\n                        ]\n                    },\n                    children: this.fieldWrapperChildren\n                },\n                this.statusView\n            ]\n        });\n    }\n    /**\n\t * Creates label view class instance and bind with view.\n\t *\n\t * @param id Unique id to set as labelView#for attribute.\n\t */ _createLabelView(id) {\n        const labelView = new LabelView(this.locale);\n        labelView.for = id;\n        labelView.bind('text').to(this, 'label');\n        return labelView;\n    }\n    /**\n\t * Creates the status view instance. It displays {@link #errorText} and {@link #infoText}\n\t * next to the {@link #fieldView}. See {@link #_statusText}.\n\t *\n\t * @param statusUid Unique id of the status, shared with the {@link #fieldView view's}\n\t * `aria-describedby` attribute.\n\t */ _createStatusView(statusUid) {\n        const statusView = new View(this.locale);\n        const bind = this.bindTemplate;\n        statusView.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-labeled-field-view__status',\n                    bind.if('errorText', 'ck-labeled-field-view__status_error'),\n                    bind.if('_statusText', 'ck-hidden', (value)=>!value)\n                ],\n                id: statusUid,\n                role: bind.if('errorText', 'alert')\n            },\n            children: [\n                {\n                    text: bind.to('_statusText')\n                }\n            ]\n        });\n        return statusView;\n    }\n    /**\n\t * Focuses the {@link #fieldView}.\n\t */ focus(direction) {\n        this.fieldView.focus(direction);\n    }\n}\n\n/**\n * The base input view class.\n */ class InputBase extends View {\n    /**\n\t * Stores information about the editor UI focus and propagates it so various plugins and components\n\t * are unified as a focus group.\n\t */ focusTracker;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale){\n        super(locale);\n        this.set('value', undefined);\n        this.set('id', undefined);\n        this.set('placeholder', undefined);\n        this.set('tabIndex', undefined);\n        this.set('isReadOnly', false);\n        this.set('hasError', false);\n        this.set('ariaDescribedById', undefined);\n        this.set('ariaLabel', undefined);\n        this.focusTracker = new FocusTracker();\n        this.bind('isFocused').to(this.focusTracker);\n        this.set('isEmpty', true);\n        const bind = this.bindTemplate;\n        this.setTemplate({\n            tag: 'input',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-input',\n                    bind.if('isFocused', 'ck-input_focused'),\n                    bind.if('isEmpty', 'ck-input-text_empty'),\n                    bind.if('hasError', 'ck-error')\n                ],\n                id: bind.to('id'),\n                placeholder: bind.to('placeholder'),\n                tabindex: bind.to('tabIndex'),\n                readonly: bind.to('isReadOnly'),\n                'aria-invalid': bind.if('hasError', true),\n                'aria-describedby': bind.to('ariaDescribedById'),\n                'aria-label': bind.to('ariaLabel')\n            },\n            on: {\n                input: bind.to((...args)=>{\n                    this.fire('input', ...args);\n                    this._updateIsEmpty();\n                }),\n                change: bind.to(this._updateIsEmpty.bind(this))\n            }\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        this.focusTracker.add(this.element);\n        this._setDomElementValue(this.value);\n        this._updateIsEmpty();\n        // Bind `this.value` to the DOM element's value.\n        // We cannot use `value` DOM attribute because removing it on Edge does not clear the DOM element's value property.\n        this.on('change:value', (evt, name, value)=>{\n            this._setDomElementValue(value);\n            this._updateIsEmpty();\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        super.destroy();\n        this.focusTracker.destroy();\n    }\n    /**\n\t * Moves the focus to the input and selects the value.\n\t */ select() {\n        this.element.select();\n    }\n    /**\n\t * Focuses the input.\n\t */ focus() {\n        this.element.focus();\n    }\n    /**\n\t * Resets the value of the input\n\t */ reset() {\n        this.value = this.element.value = '';\n        this._updateIsEmpty();\n    }\n    /**\n\t * Updates the {@link #isEmpty} property value on demand.\n\t */ _updateIsEmpty() {\n        this.isEmpty = isInputElementEmpty(this.element);\n    }\n    /**\n\t * Sets the `value` property of the {@link #element DOM element} on demand.\n\t */ _setDomElementValue(value) {\n        this.element.value = !value && value !== 0 ? '' : value;\n    }\n}\nfunction isInputElementEmpty(domElement) {\n    return !domElement.value;\n}\n\n/**\n * The input view class.\n */ class InputView extends InputBase {\n    /**\n\t * @inheritDoc\n\t */ constructor(locale){\n        super(locale);\n        this.set('inputMode', 'text');\n        const bind = this.bindTemplate;\n        this.extendTemplate({\n            attributes: {\n                inputmode: bind.to('inputMode')\n            }\n        });\n    }\n}\n\n/**\n * The text input view class.\n */ class InputTextView extends InputView {\n    /**\n\t * @inheritDoc\n\t */ constructor(locale){\n        super(locale);\n        this.extendTemplate({\n            attributes: {\n                type: 'text',\n                class: [\n                    'ck-input-text'\n                ]\n            }\n        });\n    }\n}\n\n/**\n * The number input view class.\n */ class InputNumberView extends InputView {\n    /**\n\t * Creates an instance of the input number view.\n\t *\n\t * @param locale The {@link module:core/editor/editor~Editor#locale} instance.\n\t * @param options The options of the input.\n\t * @param options.min The value of the `min` DOM attribute (the lowest accepted value).\n\t * @param options.max The value of the `max` DOM attribute (the highest accepted value).\n\t * @param options.step The value of the `step` DOM attribute.\n\t */ constructor(locale, { min, max, step } = {}){\n        super(locale);\n        const bind = this.bindTemplate;\n        this.set('min', min);\n        this.set('max', max);\n        this.set('step', step);\n        this.extendTemplate({\n            attributes: {\n                type: 'number',\n                class: [\n                    'ck-input-number'\n                ],\n                min: bind.to('min'),\n                max: bind.to('max'),\n                step: bind.to('step')\n            }\n        });\n    }\n}\n\n/**\n * The textarea view class.\n *\n * ```ts\n * const textareaView = new TextareaView();\n *\n * textareaView.minRows = 2;\n * textareaView.maxRows = 10;\n *\n * textareaView.render();\n *\n * document.body.append( textareaView.element );\n * ```\n */ class TextareaView extends InputBase {\n    /**\n\t * An instance of the resize observer used to detect when the view is visible or not and update\n\t * its height if any changes that affect it were made while it was invisible.\n\t *\n\t * **Note:** Created in {@link #render}.\n\t */ _resizeObserver;\n    /**\n\t * A flag that indicates whether the {@link #_updateAutoGrowHeight} method should be called when the view becomes\n\t * visible again. See {@link #_resizeObserver}.\n\t */ _isUpdateAutoGrowHeightPending = false;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale){\n        super(locale);\n        const toPx = toUnit('px');\n        this.set('minRows', 2);\n        this.set('maxRows', 5);\n        this.set('_height', null);\n        this.set('resize', 'none');\n        this._resizeObserver = null;\n        this.on('change:minRows', this._validateMinMaxRows.bind(this));\n        this.on('change:maxRows', this._validateMinMaxRows.bind(this));\n        const bind = this.bindTemplate;\n        this.template.tag = 'textarea';\n        this.extendTemplate({\n            attributes: {\n                class: [\n                    'ck-textarea'\n                ],\n                style: {\n                    height: bind.to('_height', (height)=>height ? toPx(height) : null),\n                    resize: bind.to('resize')\n                },\n                rows: bind.to('minRows')\n            }\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        let wasVisible = false;\n        this.on('input', ()=>{\n            this._updateAutoGrowHeight(true);\n            this.fire('update');\n        });\n        this.on('change:value', ()=>{\n            // The content needs to be updated by the browser after the value is changed. It takes a few ms.\n            global.window.requestAnimationFrame(()=>{\n                if (!isVisible(this.element)) {\n                    this._isUpdateAutoGrowHeightPending = true;\n                    return;\n                }\n                this._updateAutoGrowHeight();\n                this.fire('update');\n            });\n        });\n        // It may occur that the Textarea size needs to be updated (e.g. because it's content was changed)\n        // when it is not visible or detached from DOM.\n        // In such case, we need to detect the moment when it becomes visible again and update its height then.\n        // We're using ResizeObserver for that as it is the most reliable way to detect when the element becomes visible.\n        // IntersectionObserver didn't work well with the absolute positioned containers.\n        this._resizeObserver = new ResizeObserver(this.element, (evt)=>{\n            const isVisible = !!evt.contentRect.width && !!evt.contentRect.height;\n            if (!wasVisible && isVisible && this._isUpdateAutoGrowHeightPending) {\n                // We're wrapping the auto-grow logic in RAF because otherwise there is an error thrown\n                // by the browser about recursive calls to the ResizeObserver. It used to happen in unit\n                // tests only, though. Since there is no risk of infinite loop here, it can stay here.\n                global.window.requestAnimationFrame(()=>{\n                    this._updateAutoGrowHeight();\n                    this.fire('update');\n                });\n            }\n            wasVisible = isVisible;\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        if (this._resizeObserver) {\n            this._resizeObserver.destroy();\n        }\n    }\n    /**\n\t * @inheritDoc\n\t */ reset() {\n        super.reset();\n        this._updateAutoGrowHeight();\n        this.fire('update');\n    }\n    /**\n\t * Updates the {@link #_height} of the view depending on {@link #minRows}, {@link #maxRows}, and the current content size.\n\t *\n\t * **Note**: This method overrides manual resize done by the user using a handle. It's a known bug.\n\t */ _updateAutoGrowHeight(shouldScroll) {\n        const viewElement = this.element;\n        if (!viewElement.offsetParent) {\n            this._isUpdateAutoGrowHeightPending = true;\n            return;\n        }\n        this._isUpdateAutoGrowHeightPending = false;\n        const singleLineContentClone = getTextareaElementClone(viewElement, '1');\n        const fullTextValueClone = getTextareaElementClone(viewElement, viewElement.value);\n        const singleLineContentStyles = singleLineContentClone.ownerDocument.defaultView.getComputedStyle(singleLineContentClone);\n        const verticalPaddings = parseFloat(singleLineContentStyles.paddingTop) + parseFloat(singleLineContentStyles.paddingBottom);\n        const borders = getBorderWidths(singleLineContentClone);\n        const lineHeight = parseFloat(singleLineContentStyles.lineHeight);\n        const verticalBorder = borders.top + borders.bottom;\n        const singleLineAreaDefaultHeight = new Rect(singleLineContentClone).height;\n        const numberOfLines = Math.round((fullTextValueClone.scrollHeight - verticalPaddings) / lineHeight);\n        const maxHeight = this.maxRows * lineHeight + verticalPaddings + verticalBorder;\n        // There's a --ck-ui-component-min-height CSS custom property that enforces min height of the component.\n        // This min-height is relevant only when there's one line of text. Other than that, we can rely on line-height.\n        const minHeight = numberOfLines === 1 ? singleLineAreaDefaultHeight : this.minRows * lineHeight + verticalPaddings + verticalBorder;\n        // The size of textarea is controlled by height style instead of rows attribute because event though it is\n        // a more complex solution, it is immune to the layout textarea has been rendered in (gird, flex).\n        this._height = Math.min(Math.max(Math.max(numberOfLines, this.minRows) * lineHeight + verticalPaddings + verticalBorder, minHeight), maxHeight);\n        if (shouldScroll) {\n            viewElement.scrollTop = viewElement.scrollHeight;\n        }\n        singleLineContentClone.remove();\n        fullTextValueClone.remove();\n    }\n    /**\n\t * Validates the {@link #minRows} and {@link #maxRows} properties and warns in the console if the configuration is incorrect.\n\t */ _validateMinMaxRows() {\n        if (this.minRows > this.maxRows) {\n            /**\n\t\t\t * The minimum number of rows is greater than the maximum number of rows.\n\t\t\t *\n\t\t\t * @error ui-textarea-view-min-rows-greater-than-max-rows\n\t\t\t * @param {module:ui/textarea/textareaview~TextareaView} textareaView The misconfigured textarea view instance.\n\t\t\t * @param {number} minRows The value of `minRows` property.\n\t\t\t * @param {number} maxRows The value of `maxRows` property.\n\t\t\t */ throw new CKEditorError('ui-textarea-view-min-rows-greater-than-max-rows', {\n                textareaView: this,\n                minRows: this.minRows,\n                maxRows: this.maxRows\n            });\n        }\n    }\n}\nfunction getTextareaElementClone(element, value) {\n    const clone = element.cloneNode();\n    clone.style.position = 'absolute';\n    clone.style.top = '-99999px';\n    clone.style.left = '-99999px';\n    clone.style.height = 'auto';\n    clone.style.overflow = 'hidden';\n    clone.style.width = element.ownerDocument.defaultView.getComputedStyle(element).width;\n    clone.tabIndex = -1;\n    clone.rows = 1;\n    clone.value = value;\n    element.parentNode.insertBefore(clone, element);\n    return clone;\n}\n\n/**\n * The dropdown panel view class.\n *\n * See {@link module:ui/dropdown/dropdownview~DropdownView} to learn about the common usage.\n */ class DropdownPanelView extends View {\n    /**\n\t * Collection of the child views in this panel.\n\t *\n\t * A common child type is the {@link module:ui/list/listview~ListView} and {@link module:ui/toolbar/toolbarview~ToolbarView}.\n\t * See {@link module:ui/dropdown/utils~addListToDropdown} and\n\t * {@link module:ui/dropdown/utils~addToolbarToDropdown} to learn more about child views of dropdowns.\n\t */ children;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale){\n        super(locale);\n        const bind = this.bindTemplate;\n        this.set('isVisible', false);\n        this.set('position', 'se');\n        this.children = this.createCollection();\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-reset',\n                    'ck-dropdown__panel',\n                    bind.to('position', (value)=>`ck-dropdown__panel_${value}`),\n                    bind.if('isVisible', 'ck-dropdown__panel-visible')\n                ],\n                tabindex: '-1'\n            },\n            children: this.children,\n            on: {\n                // Drag and drop in the panel should not break the selection in the editor.\n                // https://github.com/ckeditor/ckeditor5-ui/issues/228\n                selectstart: bind.to((evt)=>{\n                    if (evt.target.tagName.toLocaleLowerCase() === 'input') {\n                        return;\n                    }\n                    evt.preventDefault();\n                })\n            }\n        });\n    }\n    /**\n\t * Focuses the first view in the {@link #children} collection.\n\t *\n\t * See also {@link module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable}.\n\t */ focus() {\n        if (this.children.length) {\n            const firstChild = this.children.first;\n            if (typeof firstChild.focus === 'function') {\n                firstChild.focus();\n            } else {\n                /**\n\t\t\t\t * The child view of a dropdown could not be focused because it is missing the `focus()` method.\n\t\t\t\t *\n\t\t\t\t * This warning appears when a dropdown {@link module:ui/dropdown/dropdownview~DropdownView#isOpen gets open} and it\n\t\t\t\t * attempts to focus the {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView#children first child} of its panel\n\t\t\t\t * but the child does not implement the\n\t\t\t\t * {@link module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable focusable interface}.\n\t\t\t\t *\n\t\t\t\t * Focusing the content of a dropdown on open greatly improves the accessibility. Please make sure the view instance\n\t\t\t\t * provides the `focus()` method for the best user experience.\n\t\t\t\t *\n\t\t\t\t * @error ui-dropdown-panel-focus-child-missing-focus\n\t\t\t\t * @param {module:ui/view~View} childView Child view.\n\t\t\t\t * @param {module:ui/dropdown/dropdownpanelview~DropdownPanelView} dropdownPanel A parent of a child.\n\t\t\t\t */ logWarning('ui-dropdown-panel-focus-child-missing-focus', {\n                    childView: this.children.first,\n                    dropdownPanel: this\n                });\n            }\n        }\n    }\n    /**\n\t * Focuses the view element or last item in view collection on opening dropdown's panel.\n\t *\n\t * See also {@link module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable}.\n\t */ focusLast() {\n        if (this.children.length) {\n            const lastChild = this.children.last;\n            if (typeof lastChild.focusLast === 'function') {\n                lastChild.focusLast();\n            } else {\n                lastChild.focus();\n            }\n        }\n    }\n}\n\n/**\n * The dropdown view class. It manages the dropdown button and dropdown panel.\n *\n * In most cases, the easiest way to create a dropdown is by using the {@link module:ui/dropdown/utils~createDropdown}\n * util:\n *\n * ```ts\n * const dropdown = createDropdown( locale );\n *\n * // Configure dropdown's button properties:\n * dropdown.buttonView.set( {\n * \tlabel: 'A dropdown',\n * \twithText: true\n * } );\n *\n * dropdown.render();\n *\n * dropdown.panelView.element.textContent = 'Content of the panel';\n *\n * // Will render a dropdown with a panel containing a \"Content of the panel\" text.\n * document.body.appendChild( dropdown.element );\n * ```\n *\n * If you want to add a richer content to the dropdown panel, you can use the {@link module:ui/dropdown/utils~addListToDropdown}\n * and {@link module:ui/dropdown/utils~addToolbarToDropdown} helpers. See more examples in\n * {@link module:ui/dropdown/utils~createDropdown} documentation.\n *\n * If you want to create a completely custom dropdown, then you can compose it manually:\n *\n * ```ts\n * const button = new DropdownButtonView( locale );\n * const panel = new DropdownPanelView( locale );\n * const dropdown = new DropdownView( locale, button, panel );\n *\n * button.set( {\n * \tlabel: 'A dropdown',\n * \twithText: true\n * } );\n *\n * dropdown.render();\n *\n * panel.element.textContent = 'Content of the panel';\n *\n * // Will render a dropdown with a panel containing a \"Content of the panel\" text.\n * document.body.appendChild( dropdown.element );\n * ```\n *\n * However, dropdown created this way will contain little behavior. You will need to implement handlers for actions\n * such as {@link module:ui/bindings/clickoutsidehandler~clickOutsideHandler clicking outside an open dropdown}\n * (which should close it) and support for arrow keys inside the panel. Therefore, unless you really know what\n * you do and you really need to do it, it is recommended to use the {@link module:ui/dropdown/utils~createDropdown} helper.\n */ class DropdownView extends View {\n    /**\n\t * Button of the dropdown view. Clicking the button opens the {@link #panelView}.\n\t */ buttonView;\n    /**\n\t * Panel of the dropdown. It opens when the {@link #buttonView} is\n\t * {@link module:ui/button/button~Button#event:execute executed} (i.e. clicked).\n\t *\n\t * Child views can be added to the panel's `children` collection:\n\t *\n\t * ```ts\n\t * dropdown.panelView.children.add( childView );\n\t * ```\n\t *\n\t * See {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView#children} and\n\t * {@link module:ui/viewcollection~ViewCollection#add}.\n\t */ panelView;\n    /**\n\t * Tracks information about the DOM focus in the dropdown.\n\t */ focusTracker;\n    /**\n\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}. It manages\n\t * keystrokes of the dropdown:\n\t *\n\t * * <kbd>▼</kbd> opens the dropdown,\n\t * * <kbd>◀</kbd> and <kbd>Esc</kbd> closes the dropdown.\n\t */ keystrokes;\n    /**\n\t * A child {@link module:ui/list/listview~ListView list view} of the dropdown located\n\t * in its {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel}.\n\t *\n\t * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addListToDropdown}.\n\t */ listView;\n    /**\n\t * A child toolbar of the dropdown located in the\n\t * {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel}.\n\t *\n\t * **Note**: Only supported when dropdown has a toolbar added using {@link module:ui/dropdown/utils~addToolbarToDropdown}.\n\t */ toolbarView;\n    /**\n\t * A child menu component of the dropdown located\n\t * in its {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel}.\n\t *\n\t * **Note**: Only supported when dropdown has a menu added using {@link module:ui/dropdown/utils~addMenuToDropdown}.\n\t */ menuView;\n    /**\n\t * Creates an instance of the dropdown.\n\t *\n\t * Also see {@link #render}.\n\t *\n\t * @param locale The localization services instance.\n\t */ constructor(locale, buttonView, panelView){\n        super(locale);\n        const bind = this.bindTemplate;\n        this.buttonView = buttonView;\n        this.panelView = panelView;\n        this.set('isOpen', false);\n        this.set('isEnabled', true);\n        this.set('class', undefined);\n        this.set('id', undefined);\n        this.set('panelPosition', 'auto');\n        // Toggle the visibility of the panel when the dropdown becomes open.\n        this.panelView.bind('isVisible').to(this, 'isOpen');\n        this.keystrokes = new KeystrokeHandler();\n        this.focusTracker = new FocusTracker();\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-dropdown',\n                    bind.to('class'),\n                    bind.if('isEnabled', 'ck-disabled', (value)=>!value)\n                ],\n                id: bind.to('id'),\n                'aria-describedby': bind.to('ariaDescribedById')\n            },\n            children: [\n                buttonView,\n                panelView\n            ]\n        });\n        buttonView.extendTemplate({\n            attributes: {\n                class: [\n                    'ck-dropdown__button'\n                ],\n                'data-cke-tooltip-disabled': bind.to('isOpen')\n            }\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        this.focusTracker.add(this.buttonView.element);\n        this.focusTracker.add(this.panelView.element);\n        // Toggle the dropdown when its button has been clicked.\n        this.listenTo(this.buttonView, 'open', ()=>{\n            this.isOpen = !this.isOpen;\n        });\n        // Let the dropdown control the position of the panel. The position must\n        // be updated every time the dropdown is open.\n        this.on('change:isOpen', (evt, name, isOpen)=>{\n            if (!isOpen) {\n                return;\n            }\n            // If \"auto\", find the best position of the panel to fit into the viewport.\n            // Otherwise, simply assign the static position.\n            if (this.panelPosition === 'auto') {\n                const optimalPanelPosition = DropdownView._getOptimalPosition({\n                    element: this.panelView.element,\n                    target: this.buttonView.element,\n                    fitInViewport: true,\n                    positions: this._panelPositions\n                });\n                this.panelView.position = optimalPanelPosition ? optimalPanelPosition.name : this._defaultPanelPositionName;\n            } else {\n                this.panelView.position = this.panelPosition;\n            }\n        });\n        // Listen for keystrokes coming from within #element.\n        this.keystrokes.listenTo(this.element);\n        const closeDropdown = (data, cancel)=>{\n            if (this.isOpen) {\n                this.isOpen = false;\n                cancel();\n            }\n        };\n        // Open the dropdown panel using the arrow down key, just like with return or space.\n        this.keystrokes.set('arrowdown', (data, cancel)=>{\n            // Don't open if the dropdown is disabled or already open.\n            if (this.buttonView.isEnabled && !this.isOpen) {\n                this.isOpen = true;\n                cancel();\n            }\n        });\n        // Block the right arrow key (until nested dropdowns are implemented).\n        this.keystrokes.set('arrowright', (data, cancel)=>{\n            if (this.isOpen) {\n                cancel();\n            }\n        });\n        // Close the dropdown using the arrow left/escape key.\n        this.keystrokes.set('arrowleft', closeDropdown);\n        this.keystrokes.set('esc', closeDropdown);\n    }\n    /**\n\t * Focuses the {@link #buttonView}.\n\t */ focus() {\n        this.buttonView.focus();\n    }\n    /**\n\t * Returns {@link #panelView panel} positions to be used by the\n\t * {@link module:utils/dom/position~getOptimalPosition `getOptimalPosition()`}\n\t * utility considering the direction of the language the UI of the editor is displayed in.\n\t */ get _panelPositions() {\n        const { south, north, southEast, southWest, northEast, northWest, southMiddleEast, southMiddleWest, northMiddleEast, northMiddleWest } = DropdownView.defaultPanelPositions;\n        if (this.locale.uiLanguageDirection !== 'rtl') {\n            return [\n                southEast,\n                southWest,\n                southMiddleEast,\n                southMiddleWest,\n                south,\n                northEast,\n                northWest,\n                northMiddleEast,\n                northMiddleWest,\n                north\n            ];\n        } else {\n            return [\n                southWest,\n                southEast,\n                southMiddleWest,\n                southMiddleEast,\n                south,\n                northWest,\n                northEast,\n                northMiddleWest,\n                northMiddleEast,\n                north\n            ];\n        }\n    }\n    /**\n\t * Returns the default position of the dropdown panel based on the direction of the UI language.\n\t * It is used when the {@link #panelPosition} is set to `'auto'` and the panel has not found a\n\t * suitable position to fit into the viewport.\n\t */ get _defaultPanelPositionName() {\n        return this.locale.uiLanguageDirection === 'rtl' ? 'sw' : 'se';\n    }\n    /**\n\t * A set of positioning functions used by the dropdown view to determine\n\t * the optimal position (i.e. fitting into the browser viewport) of its\n\t * {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel} when\n\t * {@link module:ui/dropdown/dropdownview~DropdownView#panelPosition} is set to 'auto'`.\n\t *\n\t * The available positioning functions are as follow:\n\t *\n\t * **South**\n\t *\n\t * * `south`\n\t *\n\t * ```\n\t *\t\t\t[ Button ]\n\t *\t\t+-----------------+\n\t *\t\t|      Panel      |\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * * `southEast`\n\t *\n\t * ```\n\t *\t\t[ Button ]\n\t *\t\t+-----------------+\n\t *\t\t|      Panel      |\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * * `southWest`\n\t *\n\t * ```\n\t *\t\t         [ Button ]\n\t *\t\t+-----------------+\n\t *\t\t|      Panel      |\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * * `southMiddleEast`\n\t *\n\t * ```\n\t *\t\t  [ Button ]\n\t *\t\t+-----------------+\n\t *\t\t|      Panel      |\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * * `southMiddleWest`\n\t *\n\t * ```\n\t *\t\t       [ Button ]\n\t *\t\t+-----------------+\n\t *\t\t|      Panel      |\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * **North**\n\t *\n\t * * `north`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|      Panel      |\n\t *\t\t+-----------------+\n\t *\t\t    [ Button ]\n\t * ```\n\t *\n\t * * `northEast`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|      Panel      |\n\t *\t\t+-----------------+\n\t *\t\t[ Button ]\n\t * ```\n\t *\n\t * * `northWest`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|      Panel      |\n\t *\t\t+-----------------+\n\t *\t\t         [ Button ]\n\t * ```\n\t *\n\t * * `northMiddleEast`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|      Panel      |\n\t *\t\t+-----------------+\n\t *\t\t  [ Button ]\n\t * ```\n\t *\n\t * * `northMiddleWest`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|      Panel      |\n\t *\t\t+-----------------+\n\t *\t\t       [ Button ]\n\t * ```\n\t *\n\t * Positioning functions are compatible with {@link module:utils/dom/position~DomPoint}.\n\t *\n\t * The name that position function returns will be reflected in dropdown panel's class that\n\t * controls its placement. See {@link module:ui/dropdown/dropdownview~DropdownView#panelPosition}\n\t * to learn more.\n\t */ static defaultPanelPositions = {\n        south: (buttonRect, panelRect)=>{\n            return {\n                top: buttonRect.bottom,\n                left: buttonRect.left - (panelRect.width - buttonRect.width) / 2,\n                name: 's'\n            };\n        },\n        southEast: (buttonRect)=>{\n            return {\n                top: buttonRect.bottom,\n                left: buttonRect.left,\n                name: 'se'\n            };\n        },\n        southWest: (buttonRect, panelRect)=>{\n            return {\n                top: buttonRect.bottom,\n                left: buttonRect.left - panelRect.width + buttonRect.width,\n                name: 'sw'\n            };\n        },\n        southMiddleEast: (buttonRect, panelRect)=>{\n            return {\n                top: buttonRect.bottom,\n                left: buttonRect.left - (panelRect.width - buttonRect.width) / 4,\n                name: 'sme'\n            };\n        },\n        southMiddleWest: (buttonRect, panelRect)=>{\n            return {\n                top: buttonRect.bottom,\n                left: buttonRect.left - (panelRect.width - buttonRect.width) * 3 / 4,\n                name: 'smw'\n            };\n        },\n        north: (buttonRect, panelRect)=>{\n            return {\n                top: buttonRect.top - panelRect.height,\n                left: buttonRect.left - (panelRect.width - buttonRect.width) / 2,\n                name: 'n'\n            };\n        },\n        northEast: (buttonRect, panelRect)=>{\n            return {\n                top: buttonRect.top - panelRect.height,\n                left: buttonRect.left,\n                name: 'ne'\n            };\n        },\n        northWest: (buttonRect, panelRect)=>{\n            return {\n                top: buttonRect.top - panelRect.height,\n                left: buttonRect.left - panelRect.width + buttonRect.width,\n                name: 'nw'\n            };\n        },\n        northMiddleEast: (buttonRect, panelRect)=>{\n            return {\n                top: buttonRect.top - panelRect.height,\n                left: buttonRect.left - (panelRect.width - buttonRect.width) / 4,\n                name: 'nme'\n            };\n        },\n        northMiddleWest: (buttonRect, panelRect)=>{\n            return {\n                top: buttonRect.top - panelRect.height,\n                left: buttonRect.left - (panelRect.width - buttonRect.width) * 3 / 4,\n                name: 'nmw'\n            };\n        }\n    };\n    /**\n\t * A function used to calculate the optimal position for the dropdown panel.\n\t */ static _getOptimalPosition = getOptimalPosition;\n}\n\n/**\n * The default dropdown button view class.\n *\n * ```ts\n * const view = new DropdownButtonView();\n *\n * view.set( {\n * \tlabel: 'A button',\n * \tkeystroke: 'Ctrl+B',\n * \ttooltip: true\n * } );\n *\n * view.render();\n *\n * document.body.append( view.element );\n * ```\n *\n * Also see the {@link module:ui/dropdown/utils~createDropdown `createDropdown()` util}.\n */ class DropdownButtonView extends ButtonView {\n    /**\n\t * An icon that displays arrow to indicate a dropdown button.\n\t */ arrowView;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale){\n        super(locale);\n        this.arrowView = this._createArrowView();\n        this.extendTemplate({\n            attributes: {\n                'aria-haspopup': true,\n                'aria-expanded': this.bindTemplate.to('isOn', (value)=>String(value))\n            }\n        });\n        // The DropdownButton interface expects the open event upon which will open the dropdown.\n        this.delegate('execute').to(this, 'open');\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        this.children.add(this.arrowView);\n    }\n    /**\n\t * Creates a {@link module:ui/icon/iconview~IconView} instance as {@link #arrowView}.\n\t */ _createArrowView() {\n        const arrowView = new IconView();\n        arrowView.content = IconDropdownArrow;\n        arrowView.extendTemplate({\n            attributes: {\n                class: 'ck-dropdown__arrow'\n            }\n        });\n        return arrowView;\n    }\n}\n\n/**\n * Represents a view for a button in a dropdown menu list item.\n */ class DropdownMenuListItemButtonView extends ButtonView {\n    id;\n    constructor(locale, id, label){\n        super(locale);\n        this.id = id;\n        this.set({\n            withText: true,\n            withKeystroke: true,\n            tooltip: false,\n            role: 'menuitem',\n            label\n        });\n        this.extendTemplate({\n            attributes: {\n                class: [\n                    'ck-dropdown-menu-list__nested-menu__item__button'\n                ]\n            }\n        });\n    }\n}\n\n/**\n * Represents a view for a dropdown menu button.\n */ class DropdownMenuButtonView extends ListItemButtonView {\n    /**\n\t * An icon that displays an arrow to indicate a direction of the menu.\n\t */ arrowView;\n    /**\n\t * Creates an instance of the dropdown menu button view.\n\t *\n\t * @param locale The localization services instance.\n\t */ constructor(locale){\n        super(locale);\n        const bind = this.bindTemplate;\n        this.set({\n            withText: true,\n            role: 'menuitem'\n        });\n        this.arrowView = this._createArrowView();\n        this.extendTemplate({\n            attributes: {\n                class: [\n                    'ck-dropdown-menu-list__nested-menu__button'\n                ],\n                'aria-haspopup': true,\n                'aria-expanded': this.bindTemplate.to('isOn', (value)=>String(value)),\n                'data-cke-tooltip-disabled': bind.to('isOn')\n            },\n            on: {\n                'mouseenter': bind.to('mouseenter')\n            }\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        this.children.add(this.arrowView);\n    }\n    /**\n\t * Creates the arrow view instance.\n\t *\n\t * @private\n\t */ _createArrowView() {\n        const arrowView = new IconView();\n        arrowView.content = IconDropdownArrow;\n        arrowView.extendTemplate({\n            attributes: {\n                class: 'ck-dropdown-menu-list__nested-menu__button__arrow'\n            }\n        });\n        return arrowView;\n    }\n}\n\n/**\n * The list item view class.\n */ class ListItemView extends View {\n    /**\n\t * Collection of the child views inside of the list item {@link #element}.\n\t */ children;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale){\n        super(locale);\n        const bind = this.bindTemplate;\n        this.set('isVisible', true);\n        this.children = this.createCollection();\n        this.setTemplate({\n            tag: 'li',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-list__item',\n                    bind.if('isVisible', 'ck-hidden', (value)=>!value)\n                ],\n                role: 'presentation'\n            },\n            children: this.children\n        });\n    }\n    /**\n\t * Focuses the list item.\n\t */ focus() {\n        if (this.children.first) {\n            this.children.first.focus();\n        }\n    }\n}\n\n/**\n * The list separator view class.\n */ class ListSeparatorView extends View {\n    /**\n\t * @inheritDoc\n\t */ constructor(locale){\n        super(locale);\n        this.setTemplate({\n            tag: 'li',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-list__separator'\n                ]\n            }\n        });\n    }\n}\n\n/**\n * The list item group view class.\n */ class ListItemGroupView extends View {\n    /**\n\t * Label of the group view. Its text is configurable using the {@link #label label attribute}.\n\t *\n\t * If a custom label view is not passed in `ListItemGroupView` constructor, the label is an instance\n\t * of {@link module:ui/label/labelview~LabelView}.\n\t */ labelView;\n    /**\n\t * Collection of the child list items inside this group.\n\t */ items;\n    /**\n\t * Collection of the child elements of the group.\n\t */ children;\n    /**\n\t * Creates an instance of the list item group view class.\n\t *\n\t * @param locale The {@link module:core/editor/editor~Editor#locale} instance.\n\t * @param labelView The instance of the group's label. If not provided, an instance of\n\t * {@link module:ui/label/labelview~LabelView} is used.\n\t */ constructor(locale, labelView = new LabelView()){\n        super(locale);\n        const bind = this.bindTemplate;\n        const nestedList = new ListView(locale);\n        this.set({\n            label: '',\n            isVisible: true\n        });\n        this.labelView = labelView;\n        this.labelView.bind('text').to(this, 'label');\n        this.children = this.createCollection();\n        this.children.addMany([\n            this.labelView,\n            nestedList\n        ]);\n        nestedList.set({\n            role: 'group',\n            ariaLabelledBy: labelView.id\n        });\n        // Disable focus tracking and accessible navigation in the child list.\n        nestedList.focusTracker.destroy();\n        nestedList.keystrokes.destroy();\n        this.items = nestedList.items;\n        this.setTemplate({\n            tag: 'li',\n            attributes: {\n                role: 'presentation',\n                class: [\n                    'ck',\n                    'ck-list__group',\n                    bind.if('isVisible', 'ck-hidden', (value)=>!value)\n                ]\n            },\n            children: this.children\n        });\n    }\n    /**\n\t * Focuses the list item (which is not a separator).\n\t */ focus() {\n        if (this.items) {\n            const firstListItem = this.items.find((item)=>!(item instanceof ListSeparatorView));\n            if (firstListItem) {\n                firstListItem.focus();\n            }\n        }\n    }\n}\n\n/**\n * The list view class.\n */ class ListView extends View {\n    /**\n\t * The collection of focusable views in the list. It is used to determine accessible navigation\n\t * between the {@link module:ui/list/listitemview~ListItemView list items} and\n\t * {@link module:ui/list/listitemgroupview~ListItemGroupView list groups}.\n\t */ focusables;\n    /**\n\t * Collection of the child list views.\n\t */ items;\n    /**\n\t * Tracks information about DOM focus in the list.\n\t */ focusTracker;\n    /**\n\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t */ keystrokes;\n    /**\n\t * Helps cycling over focusable {@link #items} in the list.\n\t */ _focusCycler;\n    /**\n\t * A cached map of {@link module:ui/list/listitemgroupview~ListItemGroupView} to `change` event listeners for their `items`.\n\t * Used for accessibility and keyboard navigation purposes.\n\t */ _listItemGroupToChangeListeners = new WeakMap();\n    /**\n\t * @inheritDoc\n\t */ constructor(locale){\n        super(locale);\n        const bind = this.bindTemplate;\n        this.focusables = new ViewCollection();\n        this.items = this.createCollection();\n        this.focusTracker = new FocusTracker();\n        this.keystrokes = new KeystrokeHandler();\n        this._focusCycler = new FocusCycler({\n            focusables: this.focusables,\n            focusTracker: this.focusTracker,\n            keystrokeHandler: this.keystrokes,\n            actions: {\n                // Navigate list items backwards using the arrowup key.\n                focusPrevious: 'arrowup',\n                // Navigate toolbar items forwards using the arrowdown key.\n                focusNext: 'arrowdown'\n            }\n        });\n        this.set('ariaLabel', undefined);\n        this.set('ariaLabelledBy', undefined);\n        this.set('role', undefined);\n        this.setTemplate({\n            tag: 'ul',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-reset',\n                    'ck-list'\n                ],\n                role: bind.to('role'),\n                'aria-label': bind.to('ariaLabel'),\n                'aria-labelledby': bind.to('ariaLabelledBy')\n            },\n            children: this.items\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        // Items added before rendering should be known to the #focusTracker.\n        for (const item of this.items){\n            if (item instanceof ListItemGroupView) {\n                this._registerFocusableItemsGroup(item);\n            } else if (item instanceof ListItemView) {\n                this._registerFocusableListItem(item);\n            }\n        }\n        this.items.on('change', (evt, data)=>{\n            for (const removed of data.removed){\n                if (removed instanceof ListItemGroupView) {\n                    this._deregisterFocusableItemsGroup(removed);\n                } else if (removed instanceof ListItemView) {\n                    this._deregisterFocusableListItem(removed);\n                }\n            }\n            for (const added of Array.from(data.added).reverse()){\n                if (added instanceof ListItemGroupView) {\n                    this._registerFocusableItemsGroup(added, data.index);\n                } else {\n                    this._registerFocusableListItem(added, data.index);\n                }\n            }\n        });\n        // Start listening for the keystrokes coming from #element.\n        this.keystrokes.listenTo(this.element);\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        super.destroy();\n        this.focusTracker.destroy();\n        this.keystrokes.destroy();\n    }\n    /**\n\t * Focuses the first focusable in {@link #items}.\n\t */ focus() {\n        this._focusCycler.focusFirst();\n    }\n    /**\n\t * Focuses the first focusable in {@link #items}.\n\t */ focusFirst() {\n        this._focusCycler.focusFirst();\n    }\n    /**\n\t * Focuses the last focusable in {@link #items}.\n\t */ focusLast() {\n        this._focusCycler.focusLast();\n    }\n    /**\n\t * Registers a list item view in the focus tracker.\n\t *\n\t * @param item The list item view to be registered.\n\t * @param index Index of the list item view in the {@link #items} collection. If not specified, the item will be added at the end.\n\t */ _registerFocusableListItem(item, index) {\n        this.focusTracker.add(item.element);\n        this.focusables.add(item, index);\n    }\n    /**\n\t * Removes a list item view from the focus tracker.\n\t *\n\t * @param item The list item view to be removed.\n\t */ _deregisterFocusableListItem(item) {\n        this.focusTracker.remove(item.element);\n        this.focusables.remove(item);\n    }\n    /**\n\t * Gets a callback that will be called when the `items` collection of a {@link module:ui/list/listitemgroupview~ListItemGroupView}\n\t * change.\n\t *\n\t * @param groupView The group view for which the callback will be created.\n\t * @returns The callback function to be used for the items `change` event listener in a group.\n\t */ _getOnGroupItemsChangeCallback(groupView) {\n        return (evt, data)=>{\n            for (const removed of data.removed){\n                this._deregisterFocusableListItem(removed);\n            }\n            for (const added of Array.from(data.added).reverse()){\n                this._registerFocusableListItem(added, this.items.getIndex(groupView) + data.index);\n            }\n        };\n    }\n    /**\n\t * Registers a list item group view (and its children) in the focus tracker.\n\t *\n\t * @param groupView A group view to be registered.\n\t * @param groupIndex Index of the group view in the {@link #items} collection. If not specified, the group will be added at the end.\n\t */ _registerFocusableItemsGroup(groupView, groupIndex) {\n        Array.from(groupView.items).forEach((child, childIndex)=>{\n            const registeredChildIndex = typeof groupIndex !== 'undefined' ? groupIndex + childIndex : undefined;\n            this._registerFocusableListItem(child, registeredChildIndex);\n        });\n        const groupItemsChangeCallback = this._getOnGroupItemsChangeCallback(groupView);\n        // Cache the reference to the callback in case the group is removed (see _deregisterFocusableItemsGroup()).\n        this._listItemGroupToChangeListeners.set(groupView, groupItemsChangeCallback);\n        groupView.items.on('change', groupItemsChangeCallback);\n    }\n    /**\n\t * Removes a list item group view (and its children) from the focus tracker.\n\t *\n\t * @param groupView The group view to be removed.\n\t */ _deregisterFocusableItemsGroup(groupView) {\n        for (const child of groupView.items){\n            this._deregisterFocusableListItem(child);\n        }\n        groupView.items.off('change', this._listItemGroupToChangeListeners.get(groupView));\n        this._listItemGroupToChangeListeners.delete(groupView);\n    }\n}\n\n/**\n * Represents a dropdown menu list view.\n */ class DropdownMenuListView extends ListView {\n    /**\n\t * Creates an instance of the dropdown menu list view.\n\t *\n\t * @param locale The localization services instance.\n\t */ constructor(locale){\n        super(locale);\n        const bind = this.bindTemplate;\n        this.role = 'menu';\n        this.set('isVisible', true);\n        this.extendTemplate({\n            attributes: {\n                class: [\n                    'ck-dropdown-menu-list',\n                    bind.if('isVisible', 'ck-hidden', (value)=>!value)\n                ]\n            }\n        });\n    }\n}\n\n/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */ /**\n * @module ui/dropdown/menu/utils\n */ const NESTED_PANEL_HORIZONTAL_OFFSET$1 = 5;\n/**\n * Contains every positioning function used by {@link module:ui/dropdown/menu/dropdownmenunestedmenuview~DropdownMenuNestedMenuView} that\n * decides where the {@link module:ui/dropdown/menu/dropdownmenunestedmenuview~DropdownMenuNestedMenuView#panelView} should be placed.\n *\n * Positioning functions:\n *\n *\t┌──────┬───────────────┐\n *\t│      │               │\n *\t└──────┤               │\n *\t       │               │\n *\t       │            ES │\n *\t       └───────────────┘\n *\n *\t┌───────────────┬──────┐\n *\t│               │      │\n *\t│               ├──────┘\n *\t│               │\n *\t│ WS            │\n *\t└───────────────┘\n *\n *\t       ┌───────────────┐\n *\t       │            EN │\n *\t       │               │\n *\t┌──────┤               │\n *\t│      │               │\n *\t└──────┴───────────────┘\n *\n *\t┌───────────────┐\n *\t│ WN            │\n *\t│               │\n *\t│               ├──────┐\n *\t│               │      │\n *\t└───────────────┴──────┘\n */ const DropdownMenuPanelPositioningFunctions = {\n    eastSouth: (buttonRect)=>({\n            top: buttonRect.top,\n            left: buttonRect.right - NESTED_PANEL_HORIZONTAL_OFFSET$1,\n            name: 'es'\n        }),\n    eastNorth: (buttonRect, panelRect)=>({\n            top: buttonRect.top - panelRect.height + buttonRect.height,\n            left: buttonRect.right - NESTED_PANEL_HORIZONTAL_OFFSET$1,\n            name: 'en'\n        }),\n    westSouth: (buttonRect, panelRect)=>({\n            top: buttonRect.top,\n            left: buttonRect.left - panelRect.width + NESTED_PANEL_HORIZONTAL_OFFSET$1,\n            name: 'ws'\n        }),\n    westNorth: (buttonRect, panelRect)=>({\n            top: buttonRect.top - panelRect.height + buttonRect.height,\n            left: buttonRect.left - panelRect.width + NESTED_PANEL_HORIZONTAL_OFFSET$1,\n            name: 'wn'\n        })\n};\n\n/**\n * Represents a view for a single item in a dropdown menu list.\n */ class DropdownMenuListItemView extends ListItemView {\n    /**\n\t * The view representing either a flat item or a nested menu in a dropdown menu list item.\n\t */ childView;\n    constructor(locale, parentMenuView, childView){\n        super(locale);\n        const bind = this.bindTemplate;\n        this.childView = childView;\n        this.children.add(childView);\n        this.extendTemplate({\n            attributes: {\n                class: [\n                    'ck-dropdown-menu-list__nested-menu__item'\n                ]\n            },\n            on: {\n                'mouseenter': bind.to('mouseenter')\n            }\n        });\n        if (parentMenuView) {\n            this.delegate('mouseenter').to(parentMenuView);\n            if (childView instanceof DropdownMenuListItemButtonView) {\n                childView.delegate('execute').to(parentMenuView);\n            }\n        }\n    }\n}\n\n/**\n * @internal\n */ const DropdownRootMenuBehaviors = {\n    /**\n\t * Move focus to a menu item on mouse hover. If it is a button to open a nested menu, open that menu.\n\t */ toggleMenusAndFocusItemsOnHover (rootList) {\n        rootList.on('menu:mouseenter', (evt)=>{\n            const [pathLeaf] = evt.path;\n            evt.source.focus();\n            for (const menuView of rootList.menus){\n                const isListItemContainingMenu = pathLeaf instanceof DropdownMenuListItemView && pathLeaf.childView === menuView;\n                menuView.isOpen = (evt.path.includes(menuView) || isListItemContainingMenu) && menuView.isEnabled;\n            }\n        });\n    },\n    /**\n\t * Handles the following case:\n\t *\n\t * 1. Hover to open a sub-menu (A). The button has focus.\n\t * 2. Press arrow up/down to move focus to another sub-menu (B) button.\n\t * 3. Press arrow right to open the sub-menu (B).\n\t * 4. The sub-menu (A) should close (if not, there are two open menus).\n\t */ closeMenuWhenAnotherOnTheSameLevelOpens (rootList) {\n        rootList.on('menu:change:isOpen', (evt, name, isOpen)=>{\n            if (!isOpen) {\n                return;\n            }\n            const evtMenu = evt.source;\n            for (const menuView of rootList.menus){\n                if (evtMenu.parentMenuView === menuView.parentMenuView && evtMenu !== menuView) {\n                    menuView.isOpen = false;\n                }\n            }\n        });\n    }\n};\n/**\n * @internal\n */ const DropdownMenuBehaviors = {\n    /**\n\t * Open the menu on the right arrow key press (left, in RTL mode). This allows for navigating to sub-menus using the keyboard.\n\t */ openOnArrowRightKey (menuView) {\n        const keystroke = menuView.locale.uiLanguageDirection === 'rtl' ? 'arrowleft' : 'arrowright';\n        menuView.keystrokes.set(keystroke, (data, cancel)=>{\n            if (menuView.focusTracker.focusedElement !== menuView.buttonView.element || !menuView.isEnabled) {\n                return;\n            }\n            if (!menuView.isOpen) {\n                menuView.isOpen = true;\n            }\n            menuView.panelView.focus();\n            cancel();\n        });\n    },\n    /**\n\t * Opens the menu on its button click as well as enter and space keys press (if the button is focused).\n\t */ openOnButtonClick (menuView) {\n        menuView.buttonView.on('execute', ()=>{\n            if (menuView.isEnabled) {\n                menuView.isOpen = true;\n            }\n        });\n    },\n    /**\n\t * Opens the menu and focuses the panel content upon pressing the Enter key.\n\t */ openAndFocusOnEnterKeyPress (menuView) {\n        menuView.keystrokes.set('enter', (data, cancel)=>{\n            // Engage only for Enter key press when the button is focused. The panel can contain\n            // other UI components and features that rely on the Enter key press.\n            if (menuView.focusTracker.focusedElement !== menuView.buttonView.element) {\n                return;\n            }\n            menuView.isOpen = true;\n            menuView.panelView.focus();\n            cancel();\n        });\n    },\n    /**\n\t * Closes the menu on the left key press (right, in RTL mode). This allows for navigating to sub-menus using the keyboard.\n\t */ closeOnArrowLeftKey (menuView) {\n        const keystroke = menuView.locale.uiLanguageDirection === 'rtl' ? 'arrowright' : 'arrowleft';\n        menuView.keystrokes.set(keystroke, (data, cancel)=>{\n            if (menuView.isOpen) {\n                // Focus first, then close the panel. Otherwise, Safari won't send blur events for detached DOM elements, leading to errors.\n                menuView.focus();\n                menuView.isOpen = false;\n                cancel();\n            }\n        });\n    },\n    closeOnEscKey (menuView) {\n        menuView.keystrokes.set('esc', (data, cancel)=>{\n            if (menuView.isOpen) {\n                // Focus first, then close the panel. Otherwise, Safari won't send blur events for detached DOM elements, leading to errors.\n                menuView.focus();\n                menuView.isOpen = false;\n                cancel();\n            }\n        });\n    },\n    /**\n\t * Closes the menu when its parent menu closes. This prevents from leaving orphaned open menus.\n\t */ closeOnParentClose (menuView, parentMenuView) {\n        parentMenuView.on('change:isOpen', (evt, name, isOpen)=>{\n            // TODO: Remove checking `evt.source` if `change:isOpen` is no longer delegated.\n            if (!isOpen && evt.source === parentMenuView) {\n                menuView.isOpen = false;\n            }\n        });\n    }\n};\n\n/**\n * Represents the view for the dropdown menu panel.\n */ class DropdownMenuNestedMenuPanelView extends BalloonPanelView {\n    /**\n\t * Creates an instance of the menu panel view.\n\t *\n\t * @param locale The localization services instance.\n\t */ constructor(locale){\n        super(locale);\n        const bind = this.bindTemplate;\n        this.set({\n            isVisible: false,\n            position: 'se',\n            class: null,\n            top: 0,\n            left: 0\n        });\n        this.extendTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck-reset',\n                    'ck-dropdown-menu__nested-menu__panel'\n                ],\n                tabindex: '-1'\n            },\n            on: {\n                // Drag and drop in the panel should not break the selection in the editor.\n                // https://github.com/ckeditor/ckeditor5-ui/issues/228\n                selectstart: bind.to((evt)=>{\n                    if (evt.target.tagName.toLocaleLowerCase() === 'input') {\n                        return;\n                    }\n                    evt.preventDefault();\n                })\n            }\n        });\n    }\n    /**\n\t * Focuses the first child of the panel (default) or the last one if the `direction` is `-1`.\n\t *\n\t * @param direction The direction to focus. Default is `1`.\n\t */ focus(direction = 1) {\n        const { content } = this;\n        if (content.length) {\n            if (direction === 1) {\n                content.first.focus();\n            } else {\n                content.last.focus();\n            }\n        }\n    }\n}\n\n/**\n * Represents a nested menu view.\n */ class DropdownMenuNestedMenuView extends View {\n    /**\n\t * An array of delegated events for the dropdown menu definition controller.\n\t * These events are delegated to the dropdown menu element.\n\t */ // Due to some spaghetti code we need to delegate `change:isOpen`.\n    static DELEGATED_EVENTS = [\n        'mouseenter',\n        'execute',\n        'change:isOpen'\n    ];\n    id;\n    /**\n\t * Button of the menu view.\n\t */ buttonView;\n    /**\n\t * Panel of the menu. It hosts children of the menu.\n\t */ panelView;\n    /**\n\t * List of nested menu entries.\n\t */ listView;\n    /**\n\t * Tracks information about the DOM focus in the menu.\n\t */ focusTracker;\n    /**\n\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}. It manages\n\t * keystrokes of the menu.\n\t */ keystrokes;\n    _bodyCollection;\n    /**\n\t * Creates a new instance of the DropdownMenuView class.\n\t *\n\t * @param locale\n\t * @param bodyCollection\n\t * @param id\n\t * @param label The label for the dropdown menu button.\n\t * @param parentMenuView The parent dropdown menu view, if any.\n\t */ constructor(locale, bodyCollection, id, label, parentMenuView){\n        super(locale);\n        this._bodyCollection = bodyCollection;\n        this.id = id;\n        this.set({\n            isOpen: false,\n            isEnabled: true,\n            panelPosition: 'w',\n            class: undefined,\n            parentMenuView: null\n        });\n        this.keystrokes = new KeystrokeHandler();\n        this.focusTracker = new FocusTracker();\n        this.buttonView = new DropdownMenuButtonView(locale);\n        this.buttonView.delegate('mouseenter').to(this);\n        this.buttonView.bind('isOn', 'isEnabled').to(this, 'isOpen', 'isEnabled');\n        this.buttonView.label = label;\n        this.panelView = new DropdownMenuNestedMenuPanelView(locale);\n        this.panelView.isVisible = true;\n        this.listView = new DropdownMenuListView(locale);\n        this.listView.bind('ariaLabel').to(this.buttonView, 'label');\n        this.panelView.content.add(this.listView);\n        const bind = this.bindTemplate;\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-dropdown-menu-list__nested-menu',\n                    bind.to('class'),\n                    bind.if('isEnabled', 'ck-disabled', (value)=>!value)\n                ],\n                role: 'presentation'\n            },\n            children: [\n                this.buttonView\n            ]\n        });\n        this.parentMenuView = parentMenuView;\n        if (this.parentMenuView) {\n            this._handleParentMenuView();\n        }\n        this._attachBehaviors();\n    }\n    /**\n\t * An array of positioning functions used to determine the position of the dropdown menu panel.\n\t * The order of the functions in the array determines the priority of the positions to be tried.\n\t * The first function that returns a valid position will be used.\n\t *\n\t * @returns {Array<PositioningFunction>} An array of positioning functions.\n\t * @internal\n\t */ get _panelPositions() {\n        const { westSouth, eastSouth, westNorth, eastNorth } = DropdownMenuPanelPositioningFunctions;\n        if (this.locale.uiLanguageDirection === 'ltr') {\n            return [\n                eastSouth,\n                eastNorth,\n                westSouth,\n                westNorth\n            ];\n        } else {\n            return [\n                westSouth,\n                westNorth,\n                eastSouth,\n                eastNorth\n            ];\n        }\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        this.panelView.render();\n        this.focusTracker.add(this.buttonView.element);\n        this.focusTracker.add(this.panelView.element);\n        this.focusTracker.add(this.listView);\n        // Listen for keystrokes coming from within #element.\n        this.keystrokes.listenTo(this.element);\n        this._mountPanelOnOpen();\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        this._removePanelFromBody();\n        this.panelView.destroy();\n        super.destroy();\n    }\n    /**\n\t * @inheritDoc\n\t */ focus() {\n        this.buttonView.focus();\n    }\n    _handleParentMenuView() {\n        // Propagate events from this component to parent-menu.\n        this.delegate(...DropdownMenuNestedMenuView.DELEGATED_EVENTS).to(this.parentMenuView);\n        // Close this menu if its parent closes.\n        DropdownMenuBehaviors.closeOnParentClose(this, this.parentMenuView);\n    }\n    /**\n\t * Attach all keyboard behaviors for the menu view.\n\t */ _attachBehaviors() {\n        DropdownMenuBehaviors.openOnButtonClick(this);\n        DropdownMenuBehaviors.openAndFocusOnEnterKeyPress(this);\n        DropdownMenuBehaviors.openOnArrowRightKey(this);\n        DropdownMenuBehaviors.closeOnEscKey(this);\n        DropdownMenuBehaviors.closeOnArrowLeftKey(this);\n    }\n    /**\n\t * Mounts the portal view in the body when the menu is open and removes it when the menu is closed.\n\t * Binds keystrokes to the portal view when the menu is open.\n\t */ _mountPanelOnOpen() {\n        const { panelView } = this;\n        this.on('change:isOpen', (evt, name, isOpen)=>{\n            // Ensure that the event was triggered by this instance.\n            // TODO: Remove checking `evt.source` if `change:isOpen` is no longer delegated.\n            if (evt.source !== this) {\n                return;\n            }\n            // Removes the panel view from the body when the menu is closed.\n            if (!isOpen && this._bodyCollection.has(panelView)) {\n                this._removePanelFromBody();\n                return;\n            }\n            // Adds the panel view to the body when the menu is open.\n            if (isOpen && !this._bodyCollection.has(panelView)) {\n                this._addPanelToBody();\n            }\n        });\n    }\n    /**\n\t * Removes the panel view from the editor's body and removes it from the focus tracker.\n\t */ _removePanelFromBody() {\n        const { panelView, keystrokes } = this;\n        if (this._bodyCollection.has(panelView)) {\n            this._bodyCollection.remove(panelView);\n            keystrokes.stopListening(panelView.element);\n        }\n    }\n    /**\n\t * Adds the panel view to the editor's body and sets up event listeners.\n\t */ _addPanelToBody() {\n        const { panelView, buttonView, keystrokes } = this;\n        if (!this._bodyCollection.has(panelView)) {\n            this._bodyCollection.add(panelView);\n            keystrokes.listenTo(panelView.element);\n            panelView.pin({\n                positions: this._panelPositions,\n                limiter: global.document.body,\n                element: panelView.element,\n                target: buttonView.element,\n                fitInViewport: true\n            });\n        }\n    }\n}\n\n/**\n * Creates and manages a multi-level menu UI structure, suitable to be used inside dropdown components.\n *\n * This class creates a menu structure based on {@link module:ui/dropdown/menu/utils~DropdownMenuDefinition declarative definition}\n * passed in the constructor.\n *\n * Below is an example of a simple definition, that describes a menu with two sub-menus (Menu 1, Menu 2) and four buttons in total (Item A,\n * Item B, Item C, Item D):\n *\n * ```js\n * [\n * \t{\n * \t\tid: 'menu_1',\n * \t\tmenu: 'Menu 1',\n * \t\tchildren: [\n * \t\t\t{ id: 'menu_1_a', label: 'Item A' },\n * \t\t\t{ id: 'menu_1_b', label: 'Item B' }\n * \t\t]\n * \t},\n * \t{\n * \t\tid: 'menu_2',\n * \t\tmenu: 'Menu 2',\n * \t\tchildren: [\n * \t\t\t{ id: 'menu_2_c', label: 'Item C' },\n * \t\t]\n * \t},\n * \t{ id: 'item_d', label: 'Item D' }\n * ]\n * ```\n *\n * The menu is build using multiple view classes. The most important are:\n *\n * * {@link module:ui/dropdown/menu/dropdownmenunestedmenuview~DropdownMenuNestedMenuView `DropdownMenuNestedMenuView`} - \"menu\" - provides\n * a panel with a nested menu, and a button which opens the panel,\n * * {@link module:ui/dropdown/menu/dropdownmenulistitembuttonview~DropdownMenuListItemButtonView `DropdownMenuListItemButtonView`} -\n * \"button\" or \"leaf button\" (as opposed to buttons provided by `DropdownMenuNestedMenuView`) - should trigger some action when pressed.\n *\n * Instances of these two classes are created based on the data provided in definitions. They are assigned proper IDs and labels.\n * Other view classes build a proper DOM structure around menus and buttons.\n *\n * The `DropdownMenuNestedMenuView` instances provides panels, which may include further menus or buttons. These panels are added to\n * a `BodyCollection` view, which means they are appended outside the DOM editor and UI structure.\n *\n * When \"leaf button\" is pressed, it fires `execute` event which is delegated to `DropdownMenuRootListView` as `menu:execute` event. You\n * can listen to this event to perform an action:\n *\n * ```js\n * rootListView.on( 'menu:execute', evt => {\n * \tconsole.log( evt.source.id ); // E.g. will print 'menu_1_a' when 'Item A' is pressed.\n * } );\n * ```\n *\n * All menus and \"leaf\" buttons created from the definition can be easily accessed through {@link ~DropdownMenuRootListView#menus `menus`}\n * and {@link ~DropdownMenuRootListView#buttons `buttons`} properties.\n *\n * For performance reasons, the whole menu structure is created only when `DropdownMenuRootListView` is rendered for the first time.\n *\n * It is recommended to use this class together with {@link module:ui/dropdown/utils~addMenuToDropdown `addMenuToDropdown()` helper}.\n */ class DropdownMenuRootListView extends DropdownMenuListView {\n    /**\n\t * The definitions object used to create the whole menu structure.\n\t */ _definition;\n    /**\n\t * Cached array of all menus in the dropdown menu (including nested menus).\n\t */ _cachedMenus = [];\n    /**\n\t * Cached array of all buttons in the dropdown menu (including buttons in nested menus).\n\t */ _cachedButtons = [];\n    /**\n\t * Editor body collection into which nested menus panels will be appended.\n\t */ _bodyCollection;\n    /**\n\t * Creates an instance of the DropdownMenuRootListView class.\n\t *\n\t * @param locale\n\t * @param bodyCollection\n\t * @param definition The definition object used to create the menu structure.\n\t */ constructor(locale, bodyCollection, definition){\n        super(locale);\n        this._bodyCollection = bodyCollection;\n        this._definition = definition;\n        this.set('menuPanelClass', undefined);\n    }\n    /**\n\t * Returns the array of all menus in the dropdown menu (including nested menus).\n\t */ get menus() {\n        return Array.from(this._cachedMenus.values());\n    }\n    /**\n\t * Returns the array of all buttons in the dropdown menu (including buttons in nested menus).\n\t *\n\t * Note, that this includes only \"leaf\" buttons, as specified in the definition passed in constructor. Buttons created as a part of\n\t * the nested menus, that open nested menus when hovered or pressed, are not included.\n\t */ get buttons() {\n        return Array.from(this._cachedButtons.values());\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        this._createStructure(this._definition, null);\n        super.render();\n        DropdownRootMenuBehaviors.toggleMenusAndFocusItemsOnHover(this);\n        DropdownRootMenuBehaviors.closeMenuWhenAnotherOnTheSameLevelOpens(this);\n    }\n    /**\n\t * Closes all nested menus.\n\t */ closeMenus() {\n        this.menus.forEach((menu)=>{\n            menu.isOpen = false;\n        });\n    }\n    /**\n\t * Recursively creates the whole view tree structure for the dropdown menu, according to the passed `definitions`.\n\t *\n\t * @private\n\t */ _createStructure(definitions, parentMenuView) {\n        const items = [];\n        for (const def of definitions){\n            let createdView;\n            if ('menu' in def) {\n                createdView = new DropdownMenuNestedMenuView(this.locale, this._bodyCollection, def.id, def.menu, parentMenuView);\n                createdView.panelView.bind('class').to(this, 'menuPanelClass');\n                if (!parentMenuView) {\n                    createdView.delegate(...DropdownMenuNestedMenuView.DELEGATED_EVENTS).to(this, (name)=>`menu:${name}`);\n                }\n                this._cachedMenus.push(createdView);\n                this._createStructure(def.children, createdView);\n            } else {\n                createdView = new DropdownMenuListItemButtonView(this.locale, def.id, def.label);\n                if (!parentMenuView) {\n                    createdView.delegate('execute').to(this, 'menu:execute');\n                }\n                this._cachedButtons.push(createdView);\n            }\n            const listItemView = new DropdownMenuListItemView(this.locale, parentMenuView, createdView);\n            if (!parentMenuView) {\n                listItemView.delegate('mouseenter').to(this, 'menu:mouseenter');\n            }\n            items.push(listItemView);\n        }\n        const targetListView = parentMenuView ? parentMenuView.listView : this;\n        targetListView.items.addMany(items);\n    }\n}\n\n/**\n * The toolbar separator view class.\n */ class ToolbarSeparatorView extends View {\n    /**\n\t * @inheritDoc\n\t */ constructor(locale){\n        super(locale);\n        this.setTemplate({\n            tag: 'span',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-toolbar__separator'\n                ]\n            }\n        });\n    }\n}\n\n/**\n * The toolbar line break view class.\n */ class ToolbarLineBreakView extends View {\n    /**\n\t * @inheritDoc\n\t */ constructor(locale){\n        super(locale);\n        this.setTemplate({\n            tag: 'span',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-toolbar__line-break'\n                ]\n            }\n        });\n    }\n}\n\n/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */ /**\n * @module ui/bindings/preventdefault\n */ /**\n * A helper which executes a native `Event.preventDefault()` if the target of an event equals the\n * {@link module:ui/view~View#element element of the view}. It shortens the definition of a\n * {@link module:ui/view~View#template template}.\n *\n * ```ts\n * // In a class extending View.\n * import { preventDefault } from '@ckeditor/ckeditor5-ui/src/bindings/preventdefault';\n *\n * // ...\n *\n * this.setTemplate( {\n * \ttag: 'div',\n *\n * \ton: {\n * \t\t// Prevent the default mousedown action on this view.\n * \t\tmousedown: preventDefault( this )\n * \t}\n * } );\n * ```\n *\n * @param view View instance that defines the template.\n * @internal\n */ function preventDefault(view) {\n    return view.bindTemplate.to((evt)=>{\n        if (evt.target === view.element) {\n            evt.preventDefault();\n        }\n    });\n}\n\n/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */ /**\n * @module ui/toolbar/normalizetoolbarconfig\n */ /**\n * Normalizes the toolbar configuration (`config.toolbar`), which:\n *\n * * may be defined as an `Array`:\n *\n * ```\n * toolbar: [ 'heading', 'bold', 'italic', 'link', ... ]\n * ```\n *\n * * or an `Object`:\n *\n * ```\n * toolbar: {\n * \titems: [ 'heading', 'bold', 'italic', 'link', ... ],\n * \tremoveItems: [ 'bold' ],\n * \t...\n * }\n * ```\n *\n * * or may not be defined at all (`undefined`)\n *\n * and returns it in the object form.\n *\n * @param config The value of `config.toolbar`.\n * @returns A normalized toolbar config object.\n */ function normalizeToolbarConfig(config) {\n    if (Array.isArray(config)) {\n        return {\n            items: config,\n            removeItems: []\n        };\n    }\n    const predefinedConfigOptions = {\n        items: [],\n        removeItems: []\n    };\n    if (!config) {\n        return predefinedConfigOptions;\n    }\n    return {\n        ...predefinedConfigOptions,\n        ...config\n    };\n}\n\n/**\n * @internal\n */ const NESTED_TOOLBAR_ICONS = /* #__PURE__ */ (()=>({\n        alignLeft: IconAlignLeft,\n        bold: IconBold,\n        importExport: IconImportExport,\n        paragraph: IconParagraph,\n        plus: IconPlus,\n        text: IconText,\n        threeVerticalDots: IconThreeVerticalDots,\n        pilcrow: IconPilcrow,\n        dragIndicator: IconDragIndicator\n    }))();\n/**\n * The toolbar view class.\n */ class ToolbarView extends View {\n    /**\n\t * A reference to the options object passed to the constructor.\n\t */ options;\n    /**\n\t * A collection of toolbar items (buttons, dropdowns, etc.).\n\t */ items;\n    /**\n\t * Tracks information about the DOM focus in the toolbar.\n\t */ focusTracker;\n    /**\n\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}\n\t * to handle keyboard navigation in the toolbar.\n\t */ keystrokes;\n    /**\n\t * A (child) view containing {@link #items toolbar items}.\n\t */ itemsView;\n    /**\n\t * A top–level collection aggregating building blocks of the toolbar.\n\t *\n\t *\t┌───────────────── ToolbarView ─────────────────┐\n\t *\t| ┌──────────────── #children ────────────────┐ |\n\t *\t| |   ┌──────────── #itemsView ───────────┐   | |\n\t *\t| |   | [ item1 ] [ item2 ] ... [ itemN ] |   | |\n\t *\t| |   └──────────────────────────────────-┘   | |\n\t *\t| └───────────────────────────────────────────┘ |\n\t *\t└───────────────────────────────────────────────┘\n\t *\n\t * By default, it contains the {@link #itemsView} but it can be extended with additional\n\t * UI elements when necessary.\n\t */ children;\n    /**\n\t * A collection of {@link #items} that take part in the focus cycling\n\t * (i.e. navigation using the keyboard). Usually, it contains a subset of {@link #items} with\n\t * some optional UI elements that also belong to the toolbar and should be focusable\n\t * by the user.\n\t */ focusables;\n    /**\n\t * Helps cycling over {@link #focusables focusable items} in the toolbar.\n\t */ _focusCycler;\n    /**\n\t * An instance of the active toolbar behavior that shapes its look and functionality.\n\t *\n\t * See {@link module:ui/toolbar/toolbarview~ToolbarBehavior} to learn more.\n\t */ _behavior;\n    /**\n\t * Creates an instance of the {@link module:ui/toolbar/toolbarview~ToolbarView} class.\n\t *\n\t * Also see {@link #render}.\n\t *\n\t * @param locale The localization services instance.\n\t * @param options Configuration options of the toolbar.\n\t */ constructor(locale, options){\n        super(locale);\n        const bind = this.bindTemplate;\n        const t = this.t;\n        this.options = options || {};\n        this.set('ariaLabel', t('Editor toolbar'));\n        this.set('maxWidth', 'auto');\n        this.set('role', 'toolbar');\n        this.set('isGrouping', !!this.options.shouldGroupWhenFull);\n        this.items = this.createCollection();\n        this.focusTracker = new FocusTracker();\n        this.keystrokes = new KeystrokeHandler();\n        this.set('class', undefined);\n        this.set('isCompact', false);\n        // Static toolbar can be vertical when needed.\n        this.set('isVertical', false);\n        this.itemsView = new ItemsView(locale);\n        this.children = this.createCollection();\n        this.children.add(this.itemsView);\n        this.focusables = this.createCollection();\n        const isRtl = locale.uiLanguageDirection === 'rtl';\n        this._focusCycler = new FocusCycler({\n            focusables: this.focusables,\n            focusTracker: this.focusTracker,\n            keystrokeHandler: this.keystrokes,\n            actions: {\n                // Navigate toolbar items backwards using the arrow[left,up] keys.\n                focusPrevious: [\n                    isRtl ? 'arrowright' : 'arrowleft',\n                    'arrowup'\n                ],\n                // Navigate toolbar items forwards using the arrow[right,down] keys.\n                focusNext: [\n                    isRtl ? 'arrowleft' : 'arrowright',\n                    'arrowdown'\n                ]\n            }\n        });\n        const classes = [\n            'ck',\n            'ck-toolbar',\n            bind.to('class'),\n            bind.if('isCompact', 'ck-toolbar_compact'),\n            // To group items dynamically, the toolbar needs a dedicated CSS class. Only used for dynamic grouping.\n            bind.if('isGrouping', 'ck-toolbar_grouping'),\n            // When vertical, the toolbar has an additional CSS class. Only used for static layout.\n            bind.if('isVertical', 'ck-toolbar_vertical')\n        ];\n        if (this.options.shouldGroupWhenFull && this.options.isFloating) {\n            classes.push('ck-toolbar_floating');\n        }\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: classes,\n                role: bind.to('role'),\n                'aria-label': bind.to('ariaLabel'),\n                style: {\n                    maxWidth: bind.to('maxWidth')\n                },\n                tabindex: -1\n            },\n            children: this.children,\n            on: {\n                // https://github.com/ckeditor/ckeditor5-ui/issues/206\n                mousedown: preventDefault(this)\n            }\n        });\n        this._behavior = this.options.shouldGroupWhenFull ? new DynamicGrouping(this) : new StaticLayout(this);\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        this.focusTracker.add(this.element);\n        // Children added before rendering should be known to the #focusTracker.\n        for (const item of this.items){\n            this.focusTracker.add(item);\n        }\n        this.items.on('add', (evt, item)=>{\n            this.focusTracker.add(item);\n        });\n        this.items.on('remove', (evt, item)=>{\n            this.focusTracker.remove(item);\n        });\n        // Start listening for the keystrokes coming from #element.\n        this.keystrokes.listenTo(this.element);\n        this._behavior.render(this);\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        this._behavior.destroy();\n        this.focusTracker.destroy();\n        this.keystrokes.destroy();\n        return super.destroy();\n    }\n    /**\n\t * Focuses the first focusable in {@link #focusables}.\n\t */ focus() {\n        this._focusCycler.focusFirst();\n    }\n    /**\n\t * Focuses the last focusable in {@link #focusables}.\n\t */ focusLast() {\n        this._focusCycler.focusLast();\n    }\n    /**\n\t * A utility that expands the plain toolbar configuration into\n\t * {@link module:ui/toolbar/toolbarview~ToolbarView#items} using a given component factory.\n\t *\n\t * @param itemsOrConfig The toolbar items or the entire toolbar configuration object.\n\t * @param factory A factory producing toolbar items.\n\t * @param removeItems An array of items names to be removed from the configuration. When present, applies\n\t * to this toolbar and all nested ones as well.\n\t */ fillFromConfig(itemsOrConfig, factory, removeItems) {\n        this.items.addMany(this._buildItemsFromConfig(itemsOrConfig, factory, removeItems));\n    }\n    /**\n\t * Changes the behavior of toolbar if it does not fit into the available space.\n\t */ switchBehavior(newBehaviorType) {\n        if (this._behavior.type !== newBehaviorType) {\n            this._behavior.destroy();\n            this.itemsView.children.clear();\n            this.focusables.clear();\n            if (newBehaviorType === 'dynamic') {\n                this._behavior = new DynamicGrouping(this);\n                this._behavior.render(this);\n                this._behavior.refreshItems();\n            } else {\n                this._behavior = new StaticLayout(this);\n                this._behavior.render(this);\n            }\n        }\n    }\n    /**\n\t * A utility that expands the plain toolbar configuration into a list of view items using a given component factory.\n\t *\n\t * @param itemsOrConfig The toolbar items or the entire toolbar configuration object.\n\t * @param factory A factory producing toolbar items.\n\t * @param removeItems An array of items names to be removed from the configuration. When present, applies\n\t * to this toolbar and all nested ones as well.\n\t */ _buildItemsFromConfig(itemsOrConfig, factory, removeItems) {\n        const config = normalizeToolbarConfig(itemsOrConfig);\n        const normalizedRemoveItems = removeItems || config.removeItems;\n        const itemsToAdd = this._cleanItemsConfiguration(config.items, factory, normalizedRemoveItems).map((item)=>{\n            if (isObject(item)) {\n                return this._createNestedToolbarDropdown(item, factory, normalizedRemoveItems);\n            } else if (item === '|') {\n                return new ToolbarSeparatorView();\n            } else if (item === '-') {\n                return new ToolbarLineBreakView();\n            }\n            return factory.create(item);\n        }).filter((item)=>!!item);\n        return itemsToAdd;\n    }\n    /**\n\t * Cleans up the {@link module:ui/toolbar/toolbarview~ToolbarView#items} of the toolbar by removing unwanted items and\n\t * duplicated (obsolete) separators or line breaks.\n\t *\n\t * @param items The toolbar items configuration.\n\t * @param factory A factory producing toolbar items.\n\t * @param removeItems An array of items names to be removed from the configuration.\n\t * @returns Items after the clean-up.\n\t */ _cleanItemsConfiguration(items, factory, removeItems) {\n        const filteredItems = items.filter((item, idx, items)=>{\n            if (item === '|') {\n                return true;\n            }\n            // Items listed in `config.removeItems` should not be added to the toolbar.\n            if (removeItems.indexOf(item) !== -1) {\n                return false;\n            }\n            if (item === '-') {\n                // The toolbar line breaks must not be rendered when toolbar grouping is enabled.\n                // (https://github.com/ckeditor/ckeditor5/issues/8582)\n                if (this.options.shouldGroupWhenFull) {\n                    /**\n\t\t\t\t\t\t * The toolbar multiline breaks (`-` items) only work when the automatic button grouping\n\t\t\t\t\t\t * is disabled in the toolbar configuration.\n\t\t\t\t\t\t * To do this, set the `shouldNotGroupWhenFull` option to `true` in the editor configuration:\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * ```ts\n\t\t\t\t\t\t * const config = {\n\t\t\t\t\t\t * \ttoolbar: {\n\t\t\t\t\t\t * \t\titems: [ ... ],\n\t\t\t\t\t\t * \t\tshouldNotGroupWhenFull: true\n\t\t\t\t\t\t * \t}\n\t\t\t\t\t\t * }\n\t\t\t\t\t\t * ```\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * Learn more about {@link module:core/editor/editorconfig~EditorConfig#toolbar toolbar configuration}.\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * @error toolbarview-line-break-ignored-when-grouping-items\n\t\t\t\t\t\t */ logWarning('toolbarview-line-break-ignored-when-grouping-items', items);\n                    return false;\n                }\n                return true;\n            }\n            // For the items that cannot be instantiated we are sending warning message. We also filter them out.\n            if (!isObject(item) && !factory.has(item)) {\n                /**\n\t\t\t\t\t * There was a problem processing the configuration of the toolbar. The item with the given\n\t\t\t\t\t * name does not exist so it was omitted when rendering the toolbar.\n\t\t\t\t\t *\n\t\t\t\t\t * This warning usually shows up when the {@link module:core/plugin~Plugin} which is supposed\n\t\t\t\t\t * to provide a toolbar item has not been loaded or there is a typo in the\n\t\t\t\t\t * {@link module:core/editor/editorconfig~EditorConfig#toolbar toolbar configuration}.\n\t\t\t\t\t *\n\t\t\t\t\t * Make sure the plugin responsible for this toolbar item is loaded and the toolbar configuration\n\t\t\t\t\t * is correct, e.g. {@link module:basic-styles/bold~Bold} is loaded for the `'bold'` toolbar item.\n\t\t\t\t\t *\n\t\t\t\t\t * You can use the following snippet to retrieve all available toolbar items:\n\t\t\t\t\t *\n\t\t\t\t\t * ```ts\n\t\t\t\t\t * Array.from( editor.ui.componentFactory.names() );\n\t\t\t\t\t * ```\n\t\t\t\t\t *\n\t\t\t\t\t * @error toolbarview-item-unavailable\n\t\t\t\t\t * @param {string} item The name of the component or nested toolbar definition.\n\t\t\t\t\t */ logWarning('toolbarview-item-unavailable', {\n                    item\n                });\n                return false;\n            }\n            return true;\n        });\n        return this._cleanSeparatorsAndLineBreaks(filteredItems);\n    }\n    /**\n\t * Remove leading, trailing, and duplicated separators (`-` and `|`).\n\t *\n\t * @returns Toolbar items after the separator and line break clean-up.\n\t */ _cleanSeparatorsAndLineBreaks(items) {\n        const nonSeparatorPredicate = (item)=>item !== '-' && item !== '|';\n        const count = items.length;\n        // Find an index of the first item that is not a separator.\n        const firstCommandItemIndex = items.findIndex(nonSeparatorPredicate);\n        // Items include separators only. There is no point in displaying them.\n        if (firstCommandItemIndex === -1) {\n            return [];\n        }\n        // Search from the end of the list, then convert found index back to the original direction.\n        const lastCommandItemIndex = count - items.slice().reverse().findIndex(nonSeparatorPredicate);\n        return items// Return items without the leading and trailing separators.\n        .slice(firstCommandItemIndex, lastCommandItemIndex)// Remove duplicated separators.\n        .filter((name, idx, items)=>{\n            // Filter only separators.\n            if (nonSeparatorPredicate(name)) {\n                return true;\n            }\n            const isDuplicated = idx > 0 && items[idx - 1] === name;\n            return !isDuplicated;\n        });\n    }\n    /**\n\t * Creates a user-defined dropdown containing a toolbar with items.\n\t *\n\t * @param definition A definition of the nested toolbar dropdown.\n\t * @param definition.label A label of the dropdown.\n\t * @param definition.icon An icon of the drop-down. One of 'bold', 'plus', 'text', 'importExport', 'alignLeft',\n\t * 'paragraph' or an SVG string. When `false` is passed, no icon will be used.\n\t * @param definition.withText When set `true`, the label of the dropdown will be visible. See\n\t * {@link module:ui/button/buttonview~ButtonView#withText} to learn more.\n\t * @param definition.tooltip A tooltip of the dropdown button. See\n\t * {@link module:ui/button/buttonview~ButtonView#tooltip} to learn more. Defaults to `true`.\n\t * @param componentFactory Component factory used to create items\n\t * of the nested toolbar.\n\t */ _createNestedToolbarDropdown(definition, componentFactory, removeItems) {\n        let { label, icon, items, tooltip = true, withText = false } = definition;\n        items = this._cleanItemsConfiguration(items, componentFactory, removeItems);\n        // There is no point in rendering a dropdown without items.\n        if (!items.length) {\n            return null;\n        }\n        const locale = this.locale;\n        const dropdownView = createDropdown(locale);\n        if (!label) {\n            /**\n\t\t\t * A dropdown definition in the toolbar configuration is missing a text label.\n\t\t\t *\n\t\t\t * Without a label, the dropdown becomes inaccessible to users relying on assistive technologies.\n\t\t\t * Make sure the `label` property is set in your drop-down configuration:\n\t\t\t *\n\t\t\t * ```json\n \t\t\t * {\n \t\t\t * \tlabel: 'A human-readable label',\n\t\t\t * \ticon: '...',\n\t\t\t * \titems: [ ... ]\n \t\t\t * },\n\t\t\t * ```\n\t\t\t *\n\t\t\t * Learn more about {@link module:core/editor/editorconfig~EditorConfig#toolbar toolbar configuration}.\n\t\t\t *\n\t\t\t * @error toolbarview-nested-toolbar-dropdown-missing-label\n\t\t\t */ logWarning('toolbarview-nested-toolbar-dropdown-missing-label', definition);\n        }\n        dropdownView.class = 'ck-toolbar__nested-toolbar-dropdown';\n        dropdownView.buttonView.set({\n            label,\n            tooltip,\n            withText: !!withText\n        });\n        // Allow disabling icon by passing false.\n        if (icon !== false) {\n            // A pre-defined icon picked by name, SVG string, a fallback (default) icon.\n            dropdownView.buttonView.icon = NESTED_TOOLBAR_ICONS[icon] || icon || IconThreeVerticalDots;\n        } else {\n            dropdownView.buttonView.withText = true;\n        }\n        addToolbarToDropdown(dropdownView, ()=>dropdownView.toolbarView._buildItemsFromConfig(items, componentFactory, removeItems));\n        return dropdownView;\n    }\n}\n/**\n * An inner block of the {@link module:ui/toolbar/toolbarview~ToolbarView} hosting its\n * {@link module:ui/toolbar/toolbarview~ToolbarView#items}.\n */ class ItemsView extends View {\n    /**\n\t * A collection of items (buttons, dropdowns, etc.).\n\t */ children;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale){\n        super(locale);\n        this.children = this.createCollection();\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-toolbar__items'\n                ]\n            },\n            children: this.children\n        });\n    }\n}\n/**\n * A toolbar behavior that makes it static and unresponsive to the changes of the environment.\n * At the same time, it also makes it possible to display a toolbar with a vertical layout\n * using the {@link module:ui/toolbar/toolbarview~ToolbarView#isVertical} property.\n */ class StaticLayout {\n    /**\n\t * Toolbar behavior type.\n\t */ type = 'static';\n    /**\n\t * Creates an instance of the {@link module:ui/toolbar/toolbarview~StaticLayout} toolbar\n\t * behavior.\n\t *\n\t * @param view An instance of the toolbar that this behavior is added to.\n\t */ constructor(view){\n        view.isGrouping = false;\n        // 1:1 pass–through binding, all ToolbarView#items are visible.\n        view.itemsView.children.bindTo(view.items).using((item)=>item);\n        // 1:1 pass–through binding, all ToolbarView#items are focusable.\n        view.focusables.bindTo(view.items).using((item)=>isFocusable(item) ? item : null);\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {}\n    /**\n\t * @inheritDoc\n\t */ destroy() {}\n}\n/**\n * A toolbar behavior that makes the items respond to changes in the geometry.\n *\n * In a nutshell, it groups {@link module:ui/toolbar/toolbarview~ToolbarView#items}\n * that do not fit visually into a single row of the toolbar (due to limited space).\n * Items that do not fit are aggregated in a dropdown displayed at the end of the toolbar.\n *\n * ```\n *\t┌──────────────────────────────────────── ToolbarView ──────────────────────────────────────────┐\n *\t| ┌─────────────────────────────────────── #children ─────────────────────────────────────────┐ |\n *\t| |   ┌─────── #itemsView ────────┐ ┌──────────────────────┐ ┌── #groupedItemsDropdown ───┐   | |\n *\t| |   |       #ungroupedItems     | | ToolbarSeparatorView | |        #groupedItems       |   | |\n *\t| |   └──────────────────────────-┘ └──────────────────────┘ └────────────────────────────┘   | |\n *\t| |                                  \\---------- only when toolbar items overflow -------/    | |\n *\t| └───────────────────────────────────────────────────────────────────────────────────────────┘ |\n *\t└───────────────────────────────────────────────────────────────────────────────────────────────┘\n * ```\n */ class DynamicGrouping {\n    /**\n\t * Toolbar behavior type.\n\t */ type = 'dynamic';\n    /**\n\t * A toolbar view this behavior belongs to.\n\t */ view;\n    /**\n\t * A collection of toolbar children.\n\t */ viewChildren;\n    /**\n\t * A collection of focusable toolbar elements.\n\t */ viewFocusables;\n    /**\n\t * A view containing toolbar items.\n\t */ viewItemsView;\n    /**\n\t * Toolbar focus tracker.\n\t */ viewFocusTracker;\n    /**\n\t * Toolbar locale.\n\t */ viewLocale;\n    /**\n\t * A subset of toolbar {@link module:ui/toolbar/toolbarview~ToolbarView#items}.\n\t * Aggregates items that fit into a single row of the toolbar and were not {@link #groupedItems grouped}\n\t * into a {@link #groupedItemsDropdown dropdown}. Items of this collection are displayed in the\n\t * {@link module:ui/toolbar/toolbarview~ToolbarView#itemsView}.\n\t *\n\t * When none of the {@link module:ui/toolbar/toolbarview~ToolbarView#items} were grouped, it\n\t * matches the {@link module:ui/toolbar/toolbarview~ToolbarView#items} collection in size and order.\n\t */ ungroupedItems;\n    /**\n\t * A subset of toolbar {@link module:ui/toolbar/toolbarview~ToolbarView#items}.\n\t * A collection of the toolbar items that do not fit into a single row of the toolbar.\n\t * Grouped items are displayed in a dedicated {@link #groupedItemsDropdown dropdown}.\n\t *\n\t * When none of the {@link module:ui/toolbar/toolbarview~ToolbarView#items} were grouped,\n\t * this collection is empty.\n\t */ groupedItems;\n    /**\n\t * The dropdown that aggregates {@link #groupedItems grouped items} that do not fit into a single\n\t * row of the toolbar. It is displayed on demand as the last of\n\t * {@link module:ui/toolbar/toolbarview~ToolbarView#children toolbar children} and offers another\n\t * (nested) toolbar which displays items that would normally overflow.\n\t */ groupedItemsDropdown;\n    /**\n\t * An instance of the resize observer that helps dynamically determine the geometry of the toolbar\n\t * and manage items that do not fit into a single row.\n\t *\n\t * **Note:** Created in {@link #_enableGroupingOnResize}.\n\t *\n\t * @readonly\n\t */ resizeObserver = null;\n    /**\n\t * A cached value of the horizontal padding style used by {@link #_updateGrouping}\n\t * to manage the {@link module:ui/toolbar/toolbarview~ToolbarView#items} that do not fit into\n\t * a single toolbar line. This value can be reused between updates because it is unlikely that\n\t * the padding will change and re–using `Window.getComputedStyle()` is expensive.\n\t *\n\t * @readonly\n\t */ cachedPadding = null;\n    /**\n\t * A flag indicating that an items grouping update has been queued (e.g. due to the toolbar being visible)\n\t * and should be executed immediately the next time the toolbar shows up.\n\t *\n\t * @readonly\n\t */ shouldUpdateGroupingOnNextResize = false;\n    /**\n\t * Toolbar element.\n\t *\n\t * @readonly\n\t */ viewElement;\n    /**\n\t * Creates an instance of the {@link module:ui/toolbar/toolbarview~DynamicGrouping} toolbar\n\t * behavior.\n\t *\n\t * @param view An instance of the toolbar that this behavior is added to.\n\t */ constructor(view){\n        this.view = view;\n        this.viewChildren = view.children;\n        this.viewFocusables = view.focusables;\n        this.viewItemsView = view.itemsView;\n        this.viewFocusTracker = view.focusTracker;\n        this.viewLocale = view.locale;\n        this.view.isGrouping = true;\n        this.ungroupedItems = view.createCollection();\n        this.groupedItems = view.createCollection();\n        this.groupedItemsDropdown = this._createGroupedItemsDropdown();\n        // Only those items that were not grouped are visible to the user.\n        view.itemsView.children.bindTo(this.ungroupedItems).using((item)=>item);\n        // Make sure all #items visible in the main space of the toolbar are \"focuscyclable\".\n        this.ungroupedItems.on('change', this._updateFocusCyclableItems.bind(this));\n        // Make sure the #groupedItemsDropdown is also included in cycling when it appears.\n        view.children.on('change', this._updateFocusCyclableItems.bind(this));\n        // ToolbarView#items is dynamic. When an item is added or removed, it should be automatically\n        // represented in either grouped or ungrouped items at the right index.\n        // In other words #items == concat( #ungroupedItems, #groupedItems )\n        // (in length and order).\n        view.items.on('change', (evt, changeData)=>{\n            const index = changeData.index;\n            const added = Array.from(changeData.added);\n            // Removing.\n            for (const removedItem of changeData.removed){\n                if (index >= this.ungroupedItems.length) {\n                    this.groupedItems.remove(removedItem);\n                } else {\n                    this.ungroupedItems.remove(removedItem);\n                }\n            }\n            // Adding.\n            for(let currentIndex = index; currentIndex < index + added.length; currentIndex++){\n                const addedItem = added[currentIndex - index];\n                if (currentIndex > this.ungroupedItems.length) {\n                    this.groupedItems.add(addedItem, currentIndex - this.ungroupedItems.length);\n                } else {\n                    this.ungroupedItems.add(addedItem, currentIndex);\n                }\n            }\n            // When new ungrouped items join in and land in #ungroupedItems, there's a chance it causes\n            // the toolbar to overflow.\n            // Consequently if removed from grouped or ungrouped items, there is a chance\n            // some new space is available and we could do some ungrouping.\n            this._updateGrouping();\n        });\n    }\n    /**\n\t * Enables dynamic items grouping based on the dimensions of the toolbar.\n\t *\n\t * @param view An instance of the toolbar that this behavior is added to.\n\t */ render(view) {\n        this.viewElement = view.element;\n        this._enableGroupingOnResize();\n        this._enableGroupingOnMaxWidthChange(view);\n    }\n    /**\n\t * Cleans up the internals used by this behavior.\n\t */ destroy() {\n        // The dropdown may not be in ToolbarView#children at the moment of toolbar destruction\n        // so let's make sure it's actually destroyed along with the toolbar.\n        this.groupedItemsDropdown.destroy();\n        // Do not try to remove the same elements if they are already removed.\n        if (this.viewChildren.length > 1) {\n            this.viewChildren.remove(this.groupedItemsDropdown);\n            this.viewChildren.remove(this.viewChildren.last);\n        }\n        this.resizeObserver.destroy();\n    }\n    /**\n\t * Re-adds all items to the toolbar. Use when the toolbar is re-rendered and the items grouping is lost.\n\t */ refreshItems() {\n        const view = this.view;\n        if (view.items.length) {\n            for(let currentIndex = 0; currentIndex < view.items.length; currentIndex++){\n                const item = [\n                    ...view.items\n                ][currentIndex];\n                this.ungroupedItems.add(item, currentIndex);\n            }\n            this._updateGrouping();\n        }\n    }\n    /**\n\t * When called, it will check if any of the {@link #ungroupedItems} do not fit into a single row of the toolbar,\n\t * and it will move them to the {@link #groupedItems} when it happens.\n\t *\n\t * At the same time, it will also check if there is enough space in the toolbar for the first of the\n\t * {@link #groupedItems} to be returned back to {@link #ungroupedItems} and still fit into a single row\n\t * without the toolbar wrapping.\n\t */ _updateGrouping() {\n        // Do no grouping–related geometry analysis when the toolbar is detached from visible DOM,\n        // for instance before #render(), or after render but without a parent or a parent detached\n        // from DOM. DOMRects won't work anyway and there will be tons of warning in the console and\n        // nothing else. This happens, for instance, when the toolbar is detached from DOM and\n        // some logic adds or removes its #items.\n        if (!this.viewElement.ownerDocument.body.contains(this.viewElement)) {\n            return;\n        }\n        // Do not update grouping when the element is invisible. Such toolbar has DOMRect filled with zeros\n        // and that would cause all items to be grouped. Instead, queue the grouping so it runs next time\n        // the toolbar is visible (the next ResizeObserver callback execution). This is handy because\n        // the grouping could be caused by increasing the #maxWidth when the toolbar was invisible and the next\n        // time it shows up, some items could actually be ungrouped (https://github.com/ckeditor/ckeditor5/issues/6575).\n        if (!isVisible(this.viewElement)) {\n            this.shouldUpdateGroupingOnNextResize = true;\n            return;\n        }\n        // Remember how many items were initially grouped so at the it is possible to figure out if the number\n        // of grouped items has changed. If the number has changed, geometry of the toolbar has also changed.\n        const initialGroupedItemsCount = this.groupedItems.length;\n        let wereItemsGrouped;\n        // Group #items as long as some wrap to the next row. This will happen, for instance,\n        // when the toolbar is getting narrow and there is not enough space to display all items in\n        // a single row.\n        while(this._areItemsOverflowing){\n            this._groupLastItem();\n            wereItemsGrouped = true;\n        }\n        // If none were grouped now but there were some items already grouped before,\n        // then, what the hell, maybe let's see if some of them can be ungrouped. This happens when,\n        // for instance, the toolbar is stretching and there's more space in it than before.\n        if (!wereItemsGrouped && this.groupedItems.length) {\n            // Ungroup items as long as none are overflowing or there are none to ungroup left.\n            while(this.groupedItems.length && !this._areItemsOverflowing){\n                this._ungroupFirstItem();\n            }\n            // If the ungrouping ended up with some item wrapping to the next row,\n            // put it back to the group toolbar (\"undo the last ungroup\"). We don't know whether\n            // an item will wrap or not until we ungroup it (that's a DOM/CSS thing) so this\n            // clean–up is vital for the algorithm.\n            if (this._areItemsOverflowing) {\n                this._groupLastItem();\n            }\n        }\n        if (this.groupedItems.length !== initialGroupedItemsCount) {\n            this.view.fire('groupedItemsUpdate');\n        }\n    }\n    /**\n\t * Returns `true` when {@link module:ui/toolbar/toolbarview~ToolbarView#element} children visually overflow,\n\t * for instance if the toolbar is narrower than its members. Returns `false` otherwise.\n\t */ get _areItemsOverflowing() {\n        // An empty toolbar cannot overflow.\n        if (!this.ungroupedItems.length) {\n            return false;\n        }\n        const element = this.viewElement;\n        const uiLanguageDirection = this.viewLocale.uiLanguageDirection;\n        const lastChildRect = new Rect(element.lastChild);\n        const toolbarRect = new Rect(element);\n        if (!this.cachedPadding) {\n            const computedStyle = global.window.getComputedStyle(element);\n            const paddingProperty = uiLanguageDirection === 'ltr' ? 'paddingRight' : 'paddingLeft';\n            // parseInt() is essential because of quirky floating point numbers logic and DOM.\n            // If the padding turned out too big because of that, the grouped items dropdown would\n            // always look (from the Rect perspective) like it overflows (while it's not).\n            this.cachedPadding = Number.parseInt(computedStyle[paddingProperty]);\n        }\n        if (uiLanguageDirection === 'ltr') {\n            return lastChildRect.right > toolbarRect.right - this.cachedPadding;\n        } else {\n            return lastChildRect.left < toolbarRect.left + this.cachedPadding;\n        }\n    }\n    /**\n\t * Enables the functionality that prevents {@link #ungroupedItems} from overflowing (wrapping to the next row)\n\t * upon resize when there is little space available. Instead, the toolbar items are moved to the\n\t * {@link #groupedItems} collection and displayed in a dropdown at the end of the row (which has its own nested toolbar).\n\t *\n\t * When called, the toolbar will automatically analyze the location of its {@link #ungroupedItems} and \"group\"\n\t * them in the dropdown if necessary. It will also observe the browser window for size changes in\n\t * the future and respond to them by grouping more items or reverting already grouped back, depending\n\t * on the visual space available.\n\t */ _enableGroupingOnResize() {\n        let previousWidth;\n        // TODO: Consider debounce.\n        this.resizeObserver = new ResizeObserver(this.viewElement, (entry)=>{\n            if (!previousWidth || previousWidth !== entry.contentRect.width || this.shouldUpdateGroupingOnNextResize) {\n                this.shouldUpdateGroupingOnNextResize = false;\n                this._updateGrouping();\n                previousWidth = entry.contentRect.width;\n            }\n        });\n        this._updateGrouping();\n    }\n    /**\n\t * Enables the grouping functionality, just like {@link #_enableGroupingOnResize} but the difference is that\n\t * it listens to the changes of {@link module:ui/toolbar/toolbarview~ToolbarView#maxWidth} instead.\n\t */ _enableGroupingOnMaxWidthChange(view) {\n        view.on('change:maxWidth', ()=>{\n            this._updateGrouping();\n        });\n    }\n    /**\n\t * When called, it will remove the last item from {@link #ungroupedItems} and move it back\n\t * to the {@link #groupedItems} collection.\n\t *\n\t * The opposite of {@link #_ungroupFirstItem}.\n\t */ _groupLastItem() {\n        if (!this.groupedItems.length) {\n            this.viewChildren.add(new ToolbarSeparatorView());\n            this.viewChildren.add(this.groupedItemsDropdown);\n            this.viewFocusTracker.add(this.groupedItemsDropdown.element);\n        }\n        this.groupedItems.add(this.ungroupedItems.remove(this.ungroupedItems.last), 0);\n    }\n    /**\n\t * Moves the very first item belonging to {@link #groupedItems} back\n\t * to the {@link #ungroupedItems} collection.\n\t *\n\t * The opposite of {@link #_groupLastItem}.\n\t */ _ungroupFirstItem() {\n        this.ungroupedItems.add(this.groupedItems.remove(this.groupedItems.first));\n        if (!this.groupedItems.length) {\n            this.viewChildren.remove(this.groupedItemsDropdown);\n            this.viewChildren.remove(this.viewChildren.last);\n            this.viewFocusTracker.remove(this.groupedItemsDropdown.element);\n        }\n    }\n    /**\n\t * Creates the {@link #groupedItemsDropdown} that hosts the members of the {@link #groupedItems}\n\t * collection when there is not enough space in the toolbar to display all items in a single row.\n\t */ _createGroupedItemsDropdown() {\n        const locale = this.viewLocale;\n        const t = locale.t;\n        const dropdown = createDropdown(locale);\n        dropdown.class = 'ck-toolbar__grouped-dropdown';\n        // Make sure the dropdown never sticks out to the left/right. It should be under the main toolbar.\n        // (https://github.com/ckeditor/ckeditor5/issues/5608)\n        dropdown.panelPosition = locale.uiLanguageDirection === 'ltr' ? 'sw' : 'se';\n        addToolbarToDropdown(dropdown, this.groupedItems);\n        dropdown.buttonView.set({\n            label: t('Show more items'),\n            tooltip: true,\n            tooltipPosition: locale.uiLanguageDirection === 'rtl' ? 'se' : 'sw',\n            icon: IconThreeVerticalDots\n        });\n        return dropdown;\n    }\n    /**\n\t * Updates the {@link module:ui/toolbar/toolbarview~ToolbarView#focusables focus–cyclable items}\n\t * collection so it represents the up–to–date state of the UI from the perspective of the user.\n\t *\n\t * For instance, the {@link #groupedItemsDropdown} can show up and hide but when it is visible,\n\t * it must be subject to focus cycling in the toolbar.\n\t *\n\t * See the {@link module:ui/toolbar/toolbarview~ToolbarView#focusables collection} documentation\n\t * to learn more about the purpose of this method.\n\t */ _updateFocusCyclableItems() {\n        this.viewFocusables.clear();\n        this.ungroupedItems.map((item)=>{\n            if (isFocusable(item)) {\n                this.viewFocusables.add(item);\n            }\n        });\n        if (this.groupedItems.length) {\n            this.viewFocusables.add(this.groupedItemsDropdown);\n        }\n    }\n}\n\n/**\n * The split button view class.\n *\n * ```ts\n * const view = new SplitButtonView();\n *\n * view.set( {\n * \tlabel: 'A button',\n * \tkeystroke: 'Ctrl+B',\n * \ttooltip: true\n * } );\n *\n * view.render();\n *\n * document.body.append( view.element );\n * ```\n *\n * Also see the {@link module:ui/dropdown/utils~createDropdown `createDropdown()` util}.\n */ class SplitButtonView extends View {\n    /**\n\t * Collection of the child views inside of the split button {@link #element}.\n\t */ children;\n    /**\n\t * A main button of split button.\n\t */ actionView;\n    /**\n\t * A secondary button of split button that opens dropdown.\n\t */ arrowView;\n    /**\n\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}. It manages\n\t * keystrokes of the split button:\n\t *\n\t * * <kbd>▶</kbd> moves focus to arrow view when action view is focused,\n\t * * <kbd>◀</kbd> moves focus to action view when arrow view is focused.\n\t */ keystrokes;\n    /**\n\t * Tracks information about DOM focus in the dropdown.\n\t */ focusTracker;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale, actionButton){\n        super(locale);\n        const bind = this.bindTemplate;\n        // Implement the Button interface.\n        this.set('class', undefined);\n        this.set('labelStyle', undefined);\n        this.set('icon', undefined);\n        this.set('isEnabled', true);\n        this.set('isOn', false);\n        this.set('isToggleable', false);\n        this.set('isVisible', true);\n        this.set('keystroke', undefined);\n        this.set('withKeystroke', false);\n        this.set('label', undefined);\n        this.set('tabindex', -1);\n        this.set('tooltip', false);\n        this.set('tooltipPosition', 's');\n        this.set('type', 'button');\n        this.set('withText', false);\n        this.children = this.createCollection();\n        this.actionView = this._createActionView(actionButton);\n        this.arrowView = this._createArrowView();\n        this.keystrokes = new KeystrokeHandler();\n        this.focusTracker = new FocusTracker();\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-splitbutton',\n                    bind.to('class'),\n                    bind.if('isVisible', 'ck-hidden', (value)=>!value),\n                    this.arrowView.bindTemplate.if('isOn', 'ck-splitbutton_open')\n                ]\n            },\n            children: this.children\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        this.children.add(this.actionView);\n        this.children.add(this.arrowView);\n        this.focusTracker.add(this.actionView.element);\n        this.focusTracker.add(this.arrowView.element);\n        this.keystrokes.listenTo(this.element);\n        // Overrides toolbar focus cycling behavior.\n        this.keystrokes.set('arrowright', (evt, cancel)=>{\n            if (this.focusTracker.focusedElement === this.actionView.element) {\n                this.arrowView.focus();\n                cancel();\n            }\n        });\n        // Overrides toolbar focus cycling behavior.\n        this.keystrokes.set('arrowleft', (evt, cancel)=>{\n            if (this.focusTracker.focusedElement === this.arrowView.element) {\n                this.actionView.focus();\n                cancel();\n            }\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        super.destroy();\n        this.focusTracker.destroy();\n        this.keystrokes.destroy();\n    }\n    /**\n\t * Focuses the {@link module:ui/button/buttonview~ButtonView#element} of the action part of split button.\n\t */ focus() {\n        this.actionView.focus();\n    }\n    /**\n\t * Creates a {@link module:ui/button/buttonview~ButtonView} instance as {@link #actionView} and binds it with main split button\n\t * attributes.\n\t */ _createActionView(actionButton) {\n        const actionView = actionButton || new ButtonView();\n        if (!actionButton) {\n            actionView.bind('icon', 'isEnabled', 'isOn', 'isToggleable', 'keystroke', 'label', 'tabindex', 'tooltip', 'tooltipPosition', 'type', 'withText').to(this);\n        }\n        actionView.extendTemplate({\n            attributes: {\n                class: 'ck-splitbutton__action'\n            }\n        });\n        actionView.delegate('execute').to(this);\n        return actionView;\n    }\n    /**\n\t * Creates a {@link module:ui/button/buttonview~ButtonView} instance as {@link #arrowView} and binds it with main split button\n\t * attributes.\n\t */ _createArrowView() {\n        const arrowView = new ButtonView();\n        const bind = arrowView.bindTemplate;\n        arrowView.icon = IconDropdownArrow;\n        arrowView.extendTemplate({\n            attributes: {\n                class: [\n                    'ck-splitbutton__arrow'\n                ],\n                'data-cke-tooltip-disabled': bind.to('isOn'),\n                'aria-haspopup': true,\n                'aria-expanded': bind.to('isOn', (value)=>String(value))\n            }\n        });\n        arrowView.bind('isEnabled').to(this);\n        arrowView.bind('label').to(this);\n        arrowView.bind('tooltip').to(this);\n        arrowView.delegate('execute').to(this, 'open');\n        return arrowView;\n    }\n}\n\n/**\n * A helper for creating dropdowns. It creates an instance of a {@link module:ui/dropdown/dropdownview~DropdownView dropdown},\n * with a {@link module:ui/dropdown/button/dropdownbutton~DropdownButton button},\n * {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView panel} and all standard dropdown's behaviors.\n *\n * # Creating dropdowns\n *\n * By default, the default {@link module:ui/dropdown/button/dropdownbuttonview~DropdownButtonView} class is used as\n * definition of the button:\n *\n * ```ts\n * const dropdown = createDropdown( model );\n *\n * // Configure dropdown's button properties:\n * dropdown.buttonView.set( {\n * \tlabel: 'A dropdown',\n * \twithText: true\n * } );\n *\n * dropdown.render();\n *\n * // Will render a dropdown labeled \"A dropdown\" with an empty panel.\n * document.body.appendChild( dropdown.element );\n * ```\n *\n * You can also provide other button views (they need to implement the\n * {@link module:ui/dropdown/button/dropdownbutton~DropdownButton} interface). For instance, you can use\n * {@link module:ui/dropdown/button/splitbuttonview~SplitButtonView} to create a dropdown with a split button.\n *\n * ```ts\n * const dropdown = createDropdown( locale, SplitButtonView );\n *\n * // Configure dropdown's button properties:\n * dropdown.buttonView.set( {\n * \tlabel: 'A dropdown',\n * \twithText: true\n * } );\n *\n * dropdown.buttonView.on( 'execute', () => {\n * \t// Add the behavior of the \"action part\" of the split button.\n * \t// Split button consists of the \"action part\" and \"arrow part\".\n * \t// The arrow opens the dropdown while the action part can have some other behavior.\n * } );\n *\n * dropdown.render();\n *\n * // Will render a dropdown labeled \"A dropdown\" with an empty panel.\n * document.body.appendChild( dropdown.element );\n * ```\n *\n * # Adding content to the dropdown's panel\n *\n * The content of the panel can be inserted directly into the `dropdown.panelView.element`:\n *\n * ```ts\n * dropdown.panelView.element.textContent = 'Content of the panel';\n * ```\n *\n * However, most of the time you will want to add there either a {@link module:ui/list/listview~ListView list of options}\n * or a list of buttons (i.e. a {@link module:ui/toolbar/toolbarview~ToolbarView toolbar}).\n * To simplify the task, you can use, respectively, {@link module:ui/dropdown/utils~addListToDropdown} or\n * {@link module:ui/dropdown/utils~addToolbarToDropdown} utils.\n *\n * @param locale The locale instance.\n * @param ButtonClassOrInstance The dropdown button view class. Needs to implement the\n * {@link module:ui/dropdown/button/dropdownbutton~DropdownButton} interface.\n * @returns The dropdown view instance.\n */ function createDropdown(locale, ButtonClassOrInstance = DropdownButtonView) {\n    const buttonView = typeof ButtonClassOrInstance == 'function' ? new ButtonClassOrInstance(locale) : ButtonClassOrInstance;\n    const panelView = new DropdownPanelView(locale);\n    const dropdownView = new DropdownView(locale, buttonView, panelView);\n    buttonView.bind('isEnabled').to(dropdownView);\n    if (buttonView instanceof SplitButtonView) {\n        buttonView.arrowView.bind('isOn').to(dropdownView, 'isOpen');\n    } else {\n        buttonView.bind('isOn').to(dropdownView, 'isOpen');\n    }\n    addDefaultBehaviors(dropdownView);\n    return dropdownView;\n}\n/**\n * Adds a menu UI component to a dropdown and sets all common behaviors and interactions between the dropdown and the menu.\n *\n * Use this helper to create multi-level dropdown menus that are displayed in a toolbar.\n *\n * Internally, it creates an instance of {@link module:ui/dropdown/menu/dropdownmenurootlistview~DropdownMenuRootListView}.\n *\n * Example:\n *\n * ```ts\n * const definitions = [\n * \t{\n * \t\tid: 'menu_1',\n * \t\tmenu: 'Menu 1',\n * \t\tchildren: [\n * \t\t\t{\n * \t\t\t\tid: 'menu_1_a',\n * \t\t\t\tlabel: 'Item A'\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tid: 'menu_1_b',\n * \t\t\t\tlabel: 'Item B'\n * \t\t\t}\n * \t\t]\n * \t},\n * \t{\n * \t\tid: 'top_a',\n * \t\tlabel: 'Top Item A'\n * \t},\n * \t{\n * \t\tid: 'top_b',\n * \t\tlabel: 'Top Item B'\n * \t}\n * ];\n *\n * const dropdownView = createDropdown( editor.locale );\n *\n * addMenuToDropdown( dropdownView, editor.ui.view.body, definitions );\n * ```\n *\n * After using this helper, the `dropdown` will fire {@link module:ui/dropdown/dropdownview~DropdownViewEvent `execute`} event when\n * a nested menu button is pressed.\n *\n * The helper will make sure that the `dropdownMenuRootListView` is lazy loaded, i.e., the menu component structure will be initialized\n * and rendered only after the `dropdown` is opened for the first time.\n *\n * @param dropdownView A dropdown instance to which the menu component will be added.\n * @param body Body collection to which floating menu panels will be added.\n * @param definition The menu component definition.\n * @param options.ariaLabel Label used by assistive technologies to describe the top-level menu.\n */ function addMenuToDropdown(dropdownView, body, definition, options = {}) {\n    dropdownView.menuView = new DropdownMenuRootListView(dropdownView.locale, body, definition);\n    dropdownView.focusTracker.add(dropdownView.menuView);\n    if (dropdownView.isOpen) {\n        addMenuToOpenDropdown(dropdownView, options);\n    } else {\n        // Load the UI elements only after the dropdown is opened for the first time - lazy loading.\n        dropdownView.once('change:isOpen', ()=>{\n            addMenuToOpenDropdown(dropdownView, options);\n        }, {\n            priority: 'highest'\n        });\n    }\n}\nfunction addMenuToOpenDropdown(dropdownView, options) {\n    const dropdownMenuRootListView = dropdownView.menuView;\n    const t = dropdownView.locale.t;\n    dropdownMenuRootListView.delegate('menu:execute').to(dropdownView, 'execute');\n    dropdownMenuRootListView.listenTo(dropdownView, 'change:isOpen', (evt, name, isOpen)=>{\n        if (!isOpen) {\n            dropdownMenuRootListView.closeMenus();\n        }\n    }, {\n        priority: 'low'\n    }); // Make sure this is fired after `focusDropdownButtonOnClose` behavior.\n    // When `dropdownMenuRootListView` is added as a `panelView` child, it becomes rendered (`panelView` is rendered at this point).\n    dropdownView.panelView.children.add(dropdownMenuRootListView);\n    // Nested menu panels are added to body collection, so they are not children of the `dropdownView` from DOM perspective.\n    // Add these panels to `dropdownView` focus tracker, so they are treated like part of the `dropdownView` for focus-related purposes.\n    for (const menu of dropdownMenuRootListView.menus){\n        dropdownView.focusTracker.add(menu);\n    }\n    dropdownMenuRootListView.ariaLabel = options.ariaLabel || t('Dropdown menu');\n}\n/**\n * Adds an instance of {@link module:ui/toolbar/toolbarview~ToolbarView} to a dropdown.\n *\n * ```ts\n * const buttonsCreator = () => {\n * \tconst buttons = [];\n *\n * \t// Either create a new ButtonView instance or create existing.\n * \tbuttons.push( new ButtonView() );\n * \tbuttons.push( editor.ui.componentFactory.create( 'someButton' ) );\n * };\n *\n * const dropdown = createDropdown( locale );\n *\n * addToolbarToDropdown( dropdown, buttonsCreator, { isVertical: true } );\n *\n * // Will render a vertical button dropdown labeled \"A button dropdown\"\n * // with a button group in the panel containing two buttons.\n * // Buttons inside the dropdown will be created on first dropdown panel open.\n * dropdown.render()\n * document.body.appendChild( dropdown.element );\n * ```\n *\n * **Note:** To improve the accessibility, you can tell the dropdown to focus the first active button of the toolbar when the dropdown\n * {@link module:ui/dropdown/dropdownview~DropdownView#isOpen gets open}. See the documentation of `options` to learn more.\n *\n * **Note:** Toolbar view will be created on first open of the dropdown.\n *\n * See {@link module:ui/dropdown/utils~createDropdown} and {@link module:ui/toolbar/toolbarview~ToolbarView}.\n *\n * @param dropdownView A dropdown instance to which `ToolbarView` will be added.\n * @param options.enableActiveItemFocusOnDropdownOpen When set `true`, the focus will automatically move to the first\n * active {@link module:ui/toolbar/toolbarview~ToolbarView#items item} of the toolbar upon\n * {@link module:ui/dropdown/dropdownview~DropdownView#isOpen opening} the dropdown. Active items are those with the `isOn` property set\n * `true` (for instance {@link module:ui/button/buttonview~ButtonView buttons}). If no active items is found, the toolbar will be focused\n * as a whole resulting in the focus moving to its first focusable item (default behavior of\n * {@link module:ui/dropdown/dropdownview~DropdownView}).\n * @param options.ariaLabel Label used by assistive technologies to describe toolbar element.\n * @param options.maxWidth The maximum width of the toolbar element.\n * Details: {@link module:ui/toolbar/toolbarview~ToolbarView#maxWidth}.\n * @param options.class An additional CSS class added to the toolbar element.\n * @param options.isCompact When set true, makes the toolbar look compact with toolbar element.\n * @param options.isVertical Controls the orientation of toolbar items.\n */ function addToolbarToDropdown(dropdownView, buttonsOrCallback, options = {}) {\n    dropdownView.extendTemplate({\n        attributes: {\n            class: [\n                'ck-toolbar-dropdown'\n            ]\n        }\n    });\n    if (dropdownView.isOpen) {\n        addToolbarToOpenDropdown(dropdownView, buttonsOrCallback, options);\n    } else {\n        dropdownView.once('change:isOpen', ()=>addToolbarToOpenDropdown(dropdownView, buttonsOrCallback, options), {\n            priority: 'highest'\n        });\n    }\n    if (options.enableActiveItemFocusOnDropdownOpen) {\n        // Accessibility: Focus the first active button in the toolbar when the dropdown gets open.\n        focusChildOnDropdownOpen(dropdownView, ()=>dropdownView.toolbarView.items.find((item)=>item.isOn));\n    }\n}\n/**\n * Adds an instance of {@link module:ui/toolbar/toolbarview~ToolbarView} to a dropdown.\n */ function addToolbarToOpenDropdown(dropdownView, buttonsOrCallback, options) {\n    const locale = dropdownView.locale;\n    const t = locale.t;\n    const toolbarView = dropdownView.toolbarView = new ToolbarView(locale);\n    const buttons = typeof buttonsOrCallback == 'function' ? buttonsOrCallback() : buttonsOrCallback;\n    toolbarView.ariaLabel = options.ariaLabel || t('Dropdown toolbar');\n    if (options.maxWidth) {\n        toolbarView.maxWidth = options.maxWidth;\n    }\n    if (options.class) {\n        toolbarView.class = options.class;\n    }\n    if (options.isCompact) {\n        toolbarView.isCompact = options.isCompact;\n    }\n    if (options.isVertical) {\n        toolbarView.isVertical = true;\n    }\n    if (buttons instanceof ViewCollection) {\n        toolbarView.items.bindTo(buttons).using((item)=>item);\n    } else {\n        toolbarView.items.addMany(buttons);\n    }\n    dropdownView.panelView.children.add(toolbarView);\n    dropdownView.focusTracker.add(toolbarView);\n    toolbarView.items.delegate('execute').to(dropdownView);\n}\n/**\n * Adds an instance of {@link module:ui/list/listview~ListView} to a dropdown.\n *\n * ```ts\n * const items = new Collection<ListDropdownItemDefinition>();\n *\n * items.add( {\n * \ttype: 'button',\n * \tmodel: new Model( {\n * \t\twithText: true,\n * \t\tlabel: 'First item',\n * \t\tlabelStyle: 'color: red'\n * \t} )\n * } );\n *\n * items.add( {\n * \t type: 'button',\n * \t model: new Model( {\n * \t\twithText: true,\n * \t\tlabel: 'Second item',\n * \t\tlabelStyle: 'color: green',\n * \t\tclass: 'foo'\n * \t} )\n * } );\n *\n * const dropdown = createDropdown( locale );\n *\n * addListToDropdown( dropdown, items );\n *\n * // Will render a dropdown with a list in the panel containing two items.\n * dropdown.render()\n * document.body.appendChild( dropdown.element );\n * ```\n *\n * The `items` collection passed to this methods controls the presence and attributes of respective\n * {@link module:ui/list/listitemview~ListItemView list items}.\n *\n * **Note:** To improve the accessibility, when a list is added to the dropdown using this helper the dropdown will automatically attempt\n * to focus the first active item (a host to a {@link module:ui/button/buttonview~ButtonView} with\n * {@link module:ui/button/buttonview~ButtonView#isOn} set `true`) or the very first item when none are active.\n *\n * **Note:** List view will be created on first open of the dropdown.\n *\n * See {@link module:ui/dropdown/utils~createDropdown} and {@link module:list/list~List}.\n *\n * @param dropdownView A dropdown instance to which `ListVIew` will be added.\n * @param itemsOrCallback A collection of the list item definitions or a callback returning a list item definitions to populate the list.\n * @param options.ariaLabel Label used by assistive technologies to describe list element.\n * @param options.role Will be reflected by the `role` DOM attribute in `ListVIew` and used by assistive technologies.\n */ function addListToDropdown(dropdownView, itemsOrCallback, options = {}) {\n    if (dropdownView.isOpen) {\n        addListToOpenDropdown(dropdownView, itemsOrCallback, options);\n    } else {\n        dropdownView.once('change:isOpen', ()=>addListToOpenDropdown(dropdownView, itemsOrCallback, options), {\n            priority: 'highest'\n        });\n    }\n    // Accessibility: Focus the first active button in the list when the dropdown gets open.\n    focusChildOnDropdownOpen(dropdownView, ()=>dropdownView.listView.items.find((item)=>{\n            if (item instanceof ListItemView) {\n                return item.children.first.isOn;\n            }\n            return false;\n        }));\n}\n/**\n * Adds an instance of {@link module:ui/list/listview~ListView} to a dropdown.\n */ function addListToOpenDropdown(dropdownView, itemsOrCallback, options) {\n    const locale = dropdownView.locale;\n    const listView = dropdownView.listView = new ListView(locale);\n    const items = typeof itemsOrCallback == 'function' ? itemsOrCallback() : itemsOrCallback;\n    listView.ariaLabel = options.ariaLabel;\n    listView.role = options.role;\n    bindViewCollectionItemsToDefinitions(dropdownView, listView.items, items, locale);\n    dropdownView.panelView.children.add(listView);\n    listView.items.delegate('execute').to(dropdownView);\n}\n/**\n * A helper to be used on an existing {@link module:ui/dropdown/dropdownview~DropdownView} that focuses\n * a specific child in DOM when the dropdown {@link module:ui/dropdown/dropdownview~DropdownView#isOpen gets open}.\n *\n * @param dropdownView A dropdown instance to which the focus behavior will be added.\n * @param childSelectorCallback A callback executed when the dropdown gets open. It should return a {@link module:ui/view~View}\n * instance (child of {@link module:ui/dropdown/dropdownview~DropdownView#panelView}) that will get focused or a falsy value.\n * If falsy value is returned, a default behavior of the dropdown will engage focusing the first focusable child in\n * the {@link module:ui/dropdown/dropdownview~DropdownView#panelView}.\n */ function focusChildOnDropdownOpen(dropdownView, childSelectorCallback) {\n    dropdownView.on('change:isOpen', ()=>{\n        if (!dropdownView.isOpen) {\n            return;\n        }\n        const childToFocus = childSelectorCallback();\n        if (!childToFocus) {\n            return;\n        }\n        if (typeof childToFocus.focus === 'function') {\n            childToFocus.focus();\n        } else {\n            /**\n\t\t\t * The child view of a {@link module:ui/dropdown/dropdownview~DropdownView dropdown} is missing the `focus()` method\n\t\t\t * and could not be focused when the dropdown got {@link module:ui/dropdown/dropdownview~DropdownView#isOpen open}.\n\t\t\t *\n\t\t\t * Making the content of a dropdown focusable in this case greatly improves the accessibility. Please make the view instance\n\t\t\t * implements the {@link module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable focusable interface} for the best user\n\t\t\t * experience.\n\t\t\t *\n\t\t\t * @error ui-dropdown-focus-child-on-open-child-missing-focus\n\t\t\t * @param {module:ui/view~View} view Child to focus.\n\t\t\t */ logWarning('ui-dropdown-focus-child-on-open-child-missing-focus', {\n                view: childToFocus\n            });\n        }\n    // * Let the panel show up first (do not focus an invisible element).\n    // * Execute after focusDropdownPanelOnOpen(). See focusDropdownPanelOnOpen() to learn more.\n    }, {\n        priority: priorities.low - 10\n    });\n}\n/**\n * Add a set of default behaviors to dropdown view.\n */ function addDefaultBehaviors(dropdownView) {\n    closeDropdownOnClickOutside(dropdownView);\n    closeDropdownOnExecute(dropdownView);\n    closeDropdownOnBlur(dropdownView);\n    focusDropdownContentsOnArrows(dropdownView);\n    focusDropdownButtonOnClose(dropdownView);\n    focusDropdownPanelOnOpen(dropdownView);\n}\n/**\n * Adds a behavior to a dropdownView that closes opened dropdown when user clicks outside the dropdown.\n */ function closeDropdownOnClickOutside(dropdownView) {\n    clickOutsideHandler({\n        emitter: dropdownView,\n        activator: ()=>dropdownView.isRendered && dropdownView.isOpen,\n        callback: ()=>{\n            dropdownView.isOpen = false;\n        },\n        contextElements: ()=>[\n                dropdownView.element,\n                // Include all elements connected to the dropdown's focus tracker, but exclude those that are direct children\n                // of DropdownView#element. They would be identified as descendants of #element anyway upon clicking and would\n                // not contribute to the logic.\n                ...getFocusTrackerTreeElements(dropdownView.focusTracker).filter((element)=>!dropdownView.element.contains(element))\n            ]\n    });\n}\n/**\n * Returns all DOM elements connected to a DropdownView's focus tracker, either directly (same DOM sub-tree)\n * or indirectly (external views registered in the focus tracker).\n */ function getFocusTrackerTreeElements(focusTracker) {\n    return [\n        ...focusTracker.elements,\n        ...focusTracker.externalViews.flatMap((view)=>getFocusTrackerTreeElements(view.focusTracker))\n    ];\n}\n/**\n * Adds a behavior to a dropdownView that closes the dropdown view on \"execute\" event.\n */ function closeDropdownOnExecute(dropdownView) {\n    // Close the dropdown when one of the list items has been executed.\n    dropdownView.on('execute', (evt)=>{\n        // Toggling a switch button view should not close the dropdown.\n        if (evt.source instanceof SwitchButtonView) {\n            return;\n        }\n        dropdownView.isOpen = false;\n    });\n}\n/**\n * Adds a behavior to a dropdown view that closes opened dropdown when it loses focus.\n */ function closeDropdownOnBlur(dropdownView) {\n    dropdownView.focusTracker.on('change:isFocused', (evt, name, isFocused)=>{\n        if (isFocused || !dropdownView.isOpen) {\n            return;\n        }\n        dropdownView.isOpen = false;\n    });\n}\n/**\n * Adds a behavior to a dropdownView that focuses the dropdown's panel view contents on keystrokes.\n */ function focusDropdownContentsOnArrows(dropdownView) {\n    // If the dropdown panel is already open, the arrow down key should focus the first child of the #panelView.\n    dropdownView.keystrokes.set('arrowdown', (data, cancel)=>{\n        if (dropdownView.isOpen) {\n            dropdownView.panelView.focus();\n            cancel();\n        }\n    });\n    // If the dropdown panel is already open, the arrow up key should focus the last child of the #panelView.\n    dropdownView.keystrokes.set('arrowup', (data, cancel)=>{\n        if (dropdownView.isOpen) {\n            dropdownView.panelView.focusLast();\n            cancel();\n        }\n    });\n}\n/**\n * Adds a behavior that focuses the #buttonView when the dropdown was closed but focus was within the #panelView element.\n * This makes sure the focus is never lost.\n */ function focusDropdownButtonOnClose(dropdownView) {\n    dropdownView.on('change:isOpen', (evt, name, isOpen)=>{\n        if (isOpen) {\n            return;\n        }\n        const elements = dropdownView.focusTracker.elements;\n        // If the dropdown was closed, move the focus back to the button (#12125).\n        // Don't touch the focus, if it moved somewhere else (e.g. moved to the editing root on #execute) (#12178).\n        // Note: Don't use the state of the DropdownView#focusTracker here. It fires #blur with the timeout.\n        if (elements.some((element)=>element.contains(global.document.activeElement))) {\n            dropdownView.buttonView.focus();\n        }\n    });\n}\n/**\n * Adds a behavior that focuses the #panelView when dropdown gets open (accessibility).\n */ function focusDropdownPanelOnOpen(dropdownView) {\n    dropdownView.on('change:isOpen', (evt, name, isOpen)=>{\n        if (!isOpen) {\n            return;\n        }\n        // Focus the first item in the dropdown when the dropdown opened.\n        dropdownView.panelView.focus();\n    // * Let the panel show up first (do not focus an invisible element).\n    // * Also, execute before focusChildOnDropdownOpen() to make sure this helper does not break the\n    //   focus of a specific child by kicking in too late and resetting the focus in the panel.\n    }, {\n        priority: 'low'\n    });\n}\n/**\n * This helper populates a dropdown list with items and groups according to the\n * collection of item definitions. A permanent binding is created in this process allowing\n * dynamic management of the dropdown list content.\n *\n * @param dropdownView\n * @param listItems\n * @param definitions\n * @param locale\n */ function bindViewCollectionItemsToDefinitions(dropdownView, listItems, definitions, locale) {\n    bindDropdownToggleableButtonsAlignment(listItems);\n    listItems.bindTo(definitions).using((def)=>{\n        if (def.type === 'separator') {\n            return new ListSeparatorView(locale);\n        } else if (def.type === 'group') {\n            const groupView = new ListItemGroupView(locale);\n            groupView.set({\n                label: def.label\n            });\n            bindViewCollectionItemsToDefinitions(dropdownView, groupView.items, def.items, locale);\n            groupView.items.delegate('execute').to(dropdownView);\n            return groupView;\n        } else if (def.type === 'button' || def.type === 'switchbutton') {\n            const isToggleable = def.model.role === 'menuitemcheckbox' || def.model.role === 'menuitemradio';\n            const listItemView = new ListItemView(locale);\n            let buttonView;\n            if (def.type === 'button') {\n                buttonView = new ListItemButtonView(locale);\n                buttonView.set({\n                    isToggleable\n                });\n            } else {\n                buttonView = new SwitchButtonView(locale);\n            }\n            // Bind all model properties to the button view.\n            buttonView.bind(...Object.keys(def.model)).to(def.model);\n            buttonView.delegate('execute').to(listItemView);\n            listItemView.children.add(buttonView);\n            return listItemView;\n        }\n        return null;\n    });\n}\n/**\n * Sets up alignment handling for toggleable buttons in a dropdown list.\n *\n * Buttons in dropdowns have reserved space for a check icon when they are toggleable.\n * When at least one button in the list is toggleable, all other buttons (even non-toggleable ones)\n * will have space on their left side to align with toggleable buttons.\n *\n * This function handles a special case where a new toggleable button is added (or removed) to a list\n * where previous buttons weren't toggleable. In that case, those previous buttons will\n * automatically allocate space to align with the new toggleable button.\n *\n * Example:\n * ```\n * Before adding toggleable button:\n * +----------------+\n * | Normal Button  |\n * +----------------+\n * | Another Button |\n * +----------------+\n *\n * After adding toggleable button:\n * +-------------------+\n * |    Normal Button  |\n * +-------------------+\n * |    Another Button |\n * +-------------------+\n * | ✓ Toggle Button   |\n * +-------------------+\n * ```\n *\n * @param listItems Collection of list items to observe for toggleable buttons.\n */ function bindDropdownToggleableButtonsAlignment(listItems) {\n    // Keep track of how many toggleable buttons are in the list.\n    let toggleableButtonsCount = 0;\n    // Helper function that checks if a view item is a list item button.\n    const pickListItemButtonIfPresent = (item)=>{\n        // Check if the item is a ListItemView with a ListItemButtonView as its first child.\n        if (!(item instanceof ListItemView) || !(item.children.first instanceof ListItemButtonView)) {\n            return null;\n        }\n        return item.children.first;\n    };\n    // Helper function that checks if a view item is a toggleable button.\n    // Returns the button if it's toggleable - otherwise, returns null.\n    const pickListItemToggleableButtonIfPresent = (item)=>{\n        const listItemButtonView = pickListItemButtonIfPresent(item);\n        // Only return buttons that are configured as toggleable.\n        if (!listItemButtonView || !listItemButtonView.isToggleable) {\n            return null;\n        }\n        return listItemButtonView;\n    };\n    // Updates all buttons in the list to either allocate space for check marks or not.\n    // This ensures all buttons are properly aligned regardless of their toggleable state.\n    const updateAllButtonsCheckSpace = (hasSpace)=>{\n        for (const listItem of listItems){\n            const listItemButton = pickListItemButtonIfPresent(listItem);\n            if (listItemButton) {\n                listItemButton.hasCheckSpace = hasSpace;\n            }\n        }\n    };\n    // Listen for changes in the list items collection.\n    listItems.on('change', (evt, data)=>{\n        // Remember the current state - whether we have any toggleable buttons.\n        const prevToggleable = toggleableButtonsCount > 0;\n        // Process removed items - decrease count for each toggleable button removed.\n        for (const item of data.removed){\n            if (pickListItemToggleableButtonIfPresent(item)) {\n                toggleableButtonsCount--;\n            }\n        }\n        // Process added items - increase count for each toggleable button added.\n        for (const item of data.added){\n            const button = pickListItemButtonIfPresent(item);\n            if (!button) {\n                continue;\n            }\n            if (button.isToggleable) {\n                // Check if the button is toggleable and increase the count.\n                toggleableButtonsCount++;\n            }\n            // Depending on the current state, set the check space for the button.\n            button.hasCheckSpace = toggleableButtonsCount > 0;\n        }\n        // Check if the current state has changed.\n        const currentToggleable = toggleableButtonsCount > 0;\n        // Only update button alignment if we've crossed the threshold between\n        // having no toggleable buttons and having at least one.\n        if (prevToggleable !== currentToggleable) {\n            updateAllButtonsCheckSpace(currentToggleable);\n        }\n    });\n}\n\n/**\n * A helper for creating labeled inputs.\n *\n * It creates an instance of a {@link module:ui/inputtext/inputtextview~InputTextView input text} that is\n * logically related to a {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView labeled view} in DOM.\n *\n * The helper does the following:\n *\n * * It sets input's `id` and `ariaDescribedById` attributes.\n * * It binds input's `isReadOnly` to the labeled view.\n * * It binds input's `hasError` to the labeled view.\n * * It enables a logic that cleans up the error when user starts typing in the input.\n *\n * Usage:\n *\n * ```ts\n * const labeledInputView = new LabeledFieldView( locale, createLabeledInputText );\n * console.log( labeledInputView.fieldView ); // A text input instance.\n * ```\n *\n * @param labeledFieldView The instance of the labeled field view.\n * @param viewUid A UID string that allows DOM logical connection between the\n * {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView#labelView labeled view's label} and the input.\n * @param statusUid A UID string that allows DOM logical connection between the\n * {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView#statusView labeled view's status} and the input.\n * @returns The input text view instance.\n */ const createLabeledInputText = (labeledFieldView, viewUid, statusUid)=>{\n    const inputView = new InputTextView(labeledFieldView.locale);\n    inputView.set({\n        id: viewUid,\n        ariaDescribedById: statusUid\n    });\n    inputView.bind('isReadOnly').to(labeledFieldView, 'isEnabled', (value)=>!value);\n    inputView.bind('hasError').to(labeledFieldView, 'errorText', (value)=>!!value);\n    inputView.on('input', ()=>{\n        // UX: Make the error text disappear and disable the error indicator as the user\n        // starts fixing the errors.\n        labeledFieldView.errorText = null;\n    });\n    labeledFieldView.bind('isEmpty', 'isFocused', 'placeholder').to(inputView);\n    return inputView;\n};\n/**\n * A helper for creating labeled number inputs.\n *\n * It creates an instance of a {@link module:ui/inputnumber/inputnumberview~InputNumberView input number} that is\n * logically related to a {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView labeled view} in DOM.\n *\n * The helper does the following:\n *\n * * It sets input's `id` and `ariaDescribedById` attributes.\n * * It binds input's `isReadOnly` to the labeled view.\n * * It binds input's `hasError` to the labeled view.\n * * It enables a logic that cleans up the error when user starts typing in the input.\n *\n * Usage:\n *\n * ```ts\n * const labeledInputView = new LabeledFieldView( locale, createLabeledInputNumber );\n * console.log( labeledInputView.fieldView ); // A number input instance.\n * ```\n *\n * @param labeledFieldView The instance of the labeled field view.\n * @param viewUid A UID string that allows DOM logical connection between the\n * {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView#labelView labeled view's label} and the input.\n * @param statusUid A UID string that allows DOM logical connection between the\n * {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView#statusView labeled view's status} and the input.\n * @returns The input number view instance.\n */ const createLabeledInputNumber = (labeledFieldView, viewUid, statusUid)=>{\n    const inputView = new InputNumberView(labeledFieldView.locale);\n    inputView.set({\n        id: viewUid,\n        ariaDescribedById: statusUid,\n        inputMode: 'numeric'\n    });\n    inputView.bind('isReadOnly').to(labeledFieldView, 'isEnabled', (value)=>!value);\n    inputView.bind('hasError').to(labeledFieldView, 'errorText', (value)=>!!value);\n    inputView.on('input', ()=>{\n        // UX: Make the error text disappear and disable the error indicator as the user\n        // starts fixing the errors.\n        labeledFieldView.errorText = null;\n    });\n    labeledFieldView.bind('isEmpty', 'isFocused', 'placeholder').to(inputView);\n    return inputView;\n};\n/**\n * A helper for creating labeled textarea.\n *\n * It creates an instance of a {@link module:ui/textarea/textareaview~TextareaView textarea} that is\n * logically related to a {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView labeled view} in DOM.\n *\n * The helper does the following:\n *\n * * It sets textarea's `id` and `ariaDescribedById` attributes.\n * * It binds textarea's `isReadOnly` to the labeled view.\n * * It binds textarea's `hasError` to the labeled view.\n * * It enables a logic that cleans up the error when user starts typing in the textarea.\n *\n * Usage:\n *\n * ```ts\n * const labeledTextarea = new LabeledFieldView( locale, createLabeledTextarea );\n * console.log( labeledTextarea.fieldView ); // A textarea instance.\n * ```\n *\n * @param labeledFieldView The instance of the labeled field view.\n * @param viewUid A UID string that allows DOM logical connection between the\n * {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView#labelView labeled view's label} and the textarea.\n * @param statusUid A UID string that allows DOM logical connection between the\n * {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView#statusView labeled view's status} and the textarea.\n * @returns The textarea view instance.\n */ const createLabeledTextarea = (labeledFieldView, viewUid, statusUid)=>{\n    const textareaView = new TextareaView(labeledFieldView.locale);\n    textareaView.set({\n        id: viewUid,\n        ariaDescribedById: statusUid\n    });\n    textareaView.bind('isReadOnly').to(labeledFieldView, 'isEnabled', (value)=>!value);\n    textareaView.bind('hasError').to(labeledFieldView, 'errorText', (value)=>!!value);\n    textareaView.on('input', ()=>{\n        // UX: Make the error text disappear and disable the error indicator as the user\n        // starts fixing the errors.\n        labeledFieldView.errorText = null;\n    });\n    labeledFieldView.bind('isEmpty', 'isFocused', 'placeholder').to(textareaView);\n    return textareaView;\n};\n/**\n * A helper for creating labeled dropdowns.\n *\n * It creates an instance of a {@link module:ui/dropdown/dropdownview~DropdownView dropdown} that is\n * logically related to a {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView labeled field view}.\n *\n * The helper does the following:\n *\n * * It sets dropdown's `id` and `ariaDescribedById` attributes.\n * * It binds input's `isEnabled` to the labeled view.\n *\n * Usage:\n *\n * ```ts\n * const labeledInputView = new LabeledFieldView( locale, createLabeledDropdown );\n * console.log( labeledInputView.fieldView ); // A dropdown instance.\n * ```\n *\n * @param labeledFieldView The instance of the labeled field view.\n * @param viewUid A UID string that allows DOM logical connection between the\n * {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView#labelView labeled view label} and the dropdown.\n * @param statusUid A UID string that allows DOM logical connection between the\n * {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView#statusView labeled view status} and the dropdown.\n * @returns The dropdown view instance.\n */ const createLabeledDropdown = (labeledFieldView, viewUid, statusUid)=>{\n    const dropdownView = createDropdown(labeledFieldView.locale);\n    dropdownView.set({\n        id: viewUid,\n        ariaDescribedById: statusUid\n    });\n    dropdownView.bind('isEnabled').to(labeledFieldView);\n    return dropdownView;\n};\n\nconst waitingTime = 150;\n/**\n * A class which represents a color picker with an input field for defining custom colors.\n */ class ColorPickerView extends View {\n    /**\n\t * Container for a `#` sign prefix and an input for displaying and defining custom colors\n\t * in HEX format.\n\t */ hexInputRow;\n    /**\n\t * Debounced function updating the `color` property in the component\n\t * and firing the `ColorPickerColorSelectedEvent`. Executed whenever color in component\n\t * is changed by the user interaction (through the palette or input).\n\t *\n\t * @private\n\t */ _debounceColorPickerEvent;\n    /**\n\t * A reference to the configuration of the color picker specified in the constructor.\n\t *\n\t * @private\n\t */ _config;\n    /**\n\t * Creates a view of color picker.\n\t *\n\t * @param locale\n\t * @param config\n\t */ constructor(locale, config = {}){\n        super(locale);\n        this.set({\n            color: '',\n            _hexColor: ''\n        });\n        this.hexInputRow = this._createInputRow();\n        const children = this.createCollection();\n        if (!config.hideInput) {\n            children.add(this.hexInputRow);\n        }\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-color-picker'\n                ],\n                tabindex: -1\n            },\n            children\n        });\n        this._config = config;\n        this._debounceColorPickerEvent = debounce((color)=>{\n            // At first, set the color internally in the component. It's converted to the configured output format.\n            this.set('color', color);\n            // Then let the outside world know that the user changed the color.\n            this.fire('colorSelected', {\n                color: this.color\n            });\n        }, waitingTime, {\n            leading: true\n        });\n        // The `color` property holds the color in the configured output format.\n        // Ensure it before actually setting the value.\n        this.on('set:color', (evt, propertyName, newValue)=>{\n            evt.return = convertColor(newValue, this._config.format || 'hsl');\n        });\n        // The `_hexColor` property is bound to the `color` one, but requires conversion.\n        this.on('change:color', ()=>{\n            this._hexColor = convertColorToCommonHexFormat(this.color);\n        });\n        this.on('change:_hexColor', ()=>{\n            // Update the selected color in the color picker palette when it's not focused.\n            // It means the user typed the color in the input.\n            if (document.activeElement !== this.picker) {\n                this.picker.setAttribute('color', this._hexColor);\n            }\n            // There has to be two way binding between properties.\n            // Extra precaution has to be taken to trigger change back only when the color really changes.\n            if (convertColorToCommonHexFormat(this.color) != convertColorToCommonHexFormat(this._hexColor)) {\n                this.color = this._hexColor;\n            }\n        });\n    }\n    /**\n\t * Renders color picker in the view.\n\t */ render() {\n        super.render();\n        // Extracted to the helper to make it testable.\n        registerCustomElement('hex-color-picker', HexBase);\n        this.picker = global.document.createElement('hex-color-picker');\n        this.picker.setAttribute('class', 'hex-color-picker');\n        this.picker.setAttribute('tabindex', '-1');\n        this._createSlidersView();\n        if (this.element) {\n            if (this.hexInputRow.element) {\n                this.element.insertBefore(this.picker, this.hexInputRow.element);\n            } else {\n                this.element.appendChild(this.picker);\n            }\n            // Create custom stylesheet with a look of focused pointer in color picker and append it into the color picker shadowDom\n            const styleSheetForFocusedColorPicker = document.createElement('style');\n            styleSheetForFocusedColorPicker.textContent = '[role=\"slider\"]:focus [part$=\"pointer\"] {' + 'border: 1px solid #fff;' + 'outline: 1px solid var(--ck-color-focus-border);' + 'box-shadow: 0 0 0 2px #fff;' + '}';\n            this.picker.shadowRoot.appendChild(styleSheetForFocusedColorPicker);\n        }\n        this.picker.addEventListener('color-changed', (event)=>{\n            const color = event.detail.value;\n            this._debounceColorPickerEvent(color);\n        });\n    }\n    /**\n\t * Focuses the first pointer in color picker.\n\t *\n\t */ focus() {\n        // In some browsers we need to move the focus to the input first.\n        // Otherwise, the color picker doesn't behave as expected.\n        // In Chrome, after selecting the color via slider the first time,\n        // the editor collapses the selection and doesn't apply the color change.\n        // In FF, after selecting the color via slider, it instantly moves back to the previous color.\n        // In all iOS browsers and desktop Safari, once the saturation slider is moved for the first time,\n        // editor collapses the selection and doesn't apply the color change.\n        // See: https://github.com/ckeditor/ckeditor5-internal/issues/3245, https://github.com/ckeditor/ckeditor5/issues/14119,\n        // https://github.com/ckeditor/ckeditor5-internal/issues/3268.\n        /* istanbul ignore next -- @preserve */ if (!this._config.hideInput && (env.isGecko || env.isiOS || env.isSafari || env.isBlink)) {\n            const input = this.hexInputRow.children.get(1);\n            input.focus();\n        }\n        const firstSlider = this.slidersView.first;\n        firstSlider.focus();\n    }\n    /**\n\t * Creates collection of sliders in color picker.\n\t *\n\t * @private\n\t */ _createSlidersView() {\n        const colorPickersChildren = [\n            ...this.picker.shadowRoot.children\n        ];\n        const sliders = colorPickersChildren.filter((item)=>item.getAttribute('role') === 'slider');\n        const slidersView = sliders.map((slider)=>{\n            const view = new SliderView(slider);\n            return view;\n        });\n        this.slidersView = this.createCollection();\n        slidersView.forEach((item)=>{\n            this.slidersView.add(item);\n        });\n    }\n    /**\n\t * Creates input row for defining custom colors in color picker.\n\t *\n\t * @private\n\t */ _createInputRow() {\n        const colorInput = this._createColorInput();\n        return new ColorPickerInputRowView(this.locale, colorInput);\n    }\n    /**\n\t * Creates the input where user can type or paste the color in hex format.\n\t *\n\t * @private\n\t */ _createColorInput() {\n        const labeledInput = new LabeledFieldView(this.locale, createLabeledInputText);\n        const { t } = this.locale;\n        labeledInput.set({\n            label: t('HEX'),\n            class: 'color-picker-hex-input'\n        });\n        labeledInput.fieldView.bind('value').to(this, '_hexColor', (pickerColor)=>{\n            if (labeledInput.isFocused) {\n                // Text field shouldn't be updated with color change if the text field is focused.\n                // Imagine user typing hex code and getting the value of field changed.\n                return labeledInput.fieldView.value;\n            } else {\n                return pickerColor.startsWith('#') ? pickerColor.substring(1) : pickerColor;\n            }\n        });\n        // Only accept valid hex colors as input.\n        labeledInput.fieldView.on('input', ()=>{\n            const inputValue = labeledInput.fieldView.element.value;\n            if (inputValue) {\n                const maybeHexColor = tryParseHexColor(inputValue);\n                if (maybeHexColor) {\n                    // If so, set the color.\n                    // Otherwise, do nothing.\n                    this._debounceColorPickerEvent(maybeHexColor);\n                }\n            }\n        });\n        return labeledInput;\n    }\n    /**\n\t * Validates the view and returns `false` when some fields are invalid.\n\t */ isValid() {\n        const { t } = this.locale;\n        // If the input is hidden, it's always valid, because there is no way to select\n        // invalid color value using diagram color picker.\n        if (this._config.hideInput) {\n            return true;\n        }\n        this.resetValidationStatus();\n        // One error per field is enough.\n        if (!this.hexInputRow.getParsedColor()) {\n            // Apply updated error.\n            this.hexInputRow.inputView.errorText = t('Please enter a valid color (e.g. \"ff0000\").');\n            return false;\n        }\n        return true;\n    }\n    /**\n\t * Cleans up the supplementary error and information text of input inside the {@link #hexInputRow}\n\t * bringing them back to the state when the form has been displayed for the first time.\n\t *\n\t * See {@link #isValid}.\n\t */ resetValidationStatus() {\n        this.hexInputRow.inputView.errorText = null;\n    }\n}\n// Converts any color format to a unified hex format.\n//\n// @param inputColor\n// @returns An unified hex string.\nfunction convertColorToCommonHexFormat(inputColor) {\n    let ret = convertToHex(inputColor);\n    if (!ret) {\n        ret = '#000';\n    }\n    if (ret.length === 4) {\n        // Unfold shortcut format.\n        ret = '#' + [\n            ret[1],\n            ret[1],\n            ret[2],\n            ret[2],\n            ret[3],\n            ret[3]\n        ].join('');\n    }\n    return ret.toLowerCase();\n}\n// View abstraction over pointer in color picker.\nclass SliderView extends View {\n    /**\n\t * @param element HTML element of slider in color picker.\n\t */ constructor(element){\n        super();\n        this.element = element;\n    }\n    /**\n\t * Focuses element.\n\t */ focus() {\n        this.element.focus();\n    }\n}\n// View abstraction over the `#` character before color input.\nclass HashView extends View {\n    constructor(locale){\n        super(locale);\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-color-picker__hash-view'\n                ]\n            },\n            children: '#'\n        });\n    }\n}\n// The class representing a row containing hex color input field.\n// **Note**: For now this class is private. When more use cases appear (beyond `ckeditor5-table` and `ckeditor5-image`),\n// it will become a component in `ckeditor5-ui`.\n//\n// @private\nclass ColorPickerInputRowView extends View {\n    /**\n\t * A collection of row items (buttons, dropdowns, etc.).\n\t */ children;\n    /**\n\t * Hex input view element.\n\t */ inputView;\n    /**\n\t * Creates an instance of the form row class.\n\t *\n\t * @param locale The locale instance.\n\t * @param inputView Hex color input element.\n\t */ constructor(locale, inputView){\n        super(locale);\n        this.inputView = inputView;\n        this.children = this.createCollection([\n            new HashView(),\n            this.inputView\n        ]);\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-color-picker__row'\n                ]\n            },\n            children: this.children\n        });\n    }\n    /**\n\t * Returns false if color input value is not in hex format.\n\t */ getParsedColor() {\n        return tryParseHexColor(this.inputView.fieldView.element.value);\n    }\n}\n/**\n * Trim spaces from provided color and check if hex is valid.\n *\n * @param color Unsafe color string.\n * @returns Null if provided color is not hex value.\n * @export\n * @internal\n */ function tryParseHexColor(color) {\n    if (!color) {\n        return null;\n    }\n    const hashLessColor = color.trim().replace(/^#/, '');\n    // Incorrect length.\n    if (![\n        3,\n        4,\n        6,\n        8\n    ].includes(hashLessColor.length)) {\n        return null;\n    }\n    // Incorrect characters.\n    if (!/^(([0-9a-fA-F]{2}){3,4}|([0-9a-fA-F]){3,4})$/.test(hashLessColor)) {\n        return null;\n    }\n    return `#${hashLessColor}`;\n}\n\n/**\n * A collection to store document colors. It enforces colors to be unique.\n */ class DocumentColorCollection extends /* #__PURE__ */ ObservableMixin(Collection) {\n    constructor(options){\n        super(options);\n        this.set('isEmpty', true);\n        this.on('change', ()=>{\n            this.set('isEmpty', this.length === 0);\n        });\n    }\n    /**\n\t * Adds a color to the document color collection.\n\t *\n\t * This method ensures that no color duplicates are inserted (compared using\n\t * the color value of the {@link module:ui/colorgrid/colorgridview~ColorDefinition}).\n\t *\n\t * If the item does not have an ID, it will be automatically generated and set on the item.\n\t *\n\t * @param index The position of the item in the collection. The item is pushed to the collection when `index` is not specified.\n\t * @fires add\n\t * @fires change\n\t */ add(item, index) {\n        if (this.find((element)=>element.color === item.color)) {\n            // No duplicates are allowed.\n            return this;\n        }\n        return super.add(item, index);\n    }\n    /**\n\t * Checks if an object with given colors is present in the document color collection.\n\t */ hasColor(color) {\n        return !!this.find((item)=>item.color === color);\n    }\n}\n\n/**\n * One of the fragments of {@link module:ui/colorselector/colorselectorview~ColorSelectorView}.\n *\n * It provides a UI that allows users to select colors from the a predefined set and from existing document colors.\n *\n * It consists of the following sub–components:\n *\n * * A \"Remove color\" button,\n * * A static {@link module:ui/colorgrid/colorgridview~ColorGridView} of colors defined in the configuration,\n * * A dynamic {@link module:ui/colorgrid/colorgridview~ColorGridView} of colors used in the document.\n * * If color picker is configured, the \"Color Picker\" button is visible too.\n */ class ColorGridsFragmentView extends View {\n    /**\n\t * A collection of the children of the table.\n\t */ items;\n    /**\n\t * An array with objects representing colors to be displayed in the grid.\n\t */ colorDefinitions;\n    /**\n\t * Tracks information about the DOM focus in the list.\n\t */ focusTracker;\n    /**\n\t * The number of columns in the color grid.\n\t */ columns;\n    /**\n\t * Preserves the reference to {@link module:ui/colorselector/documentcolorcollection~DocumentColorCollection} used to collect\n\t * definitions that store the document colors.\n\t *\n\t * @readonly\n\t */ documentColors;\n    /**\n\t * The maximum number of colors in the document colors section.\n\t * If it equals 0, the document colors section is not added.\n\t *\n\t * @readonly\n\t */ documentColorsCount;\n    /**\n\t * Preserves the reference to {@link module:ui/colorgrid/colorgridview~ColorGridView} used to create\n\t * the default (static) color set.\n\t *\n\t * The property is loaded once the the parent dropdown is opened the first time.\n\t *\n\t * @readonly\n\t */ staticColorsGrid;\n    /**\n\t * Preserves the reference to {@link module:ui/colorgrid/colorgridview~ColorGridView} used to create\n\t * the document colors. It remains undefined if the document colors feature is disabled.\n\t *\n\t * The property is loaded once the the parent dropdown is opened the first time.\n\t *\n\t * @readonly\n\t */ documentColorsGrid;\n    /**\n\t * The \"Color picker\" button view.\n\t */ colorPickerButtonView;\n    /**\n\t * The \"Remove color\" button view.\n\t */ removeColorButtonView;\n    /**\n\t * A collection of views that can be focused in the view.\n\t *\n\t * @readonly\n\t */ _focusables;\n    /**\n\t * Document color section's label.\n\t *\n\t * @readonly\n\t */ _documentColorsLabel;\n    /**\n\t * The label of the button responsible for removing color attributes.\n\t */ _removeButtonLabel;\n    /**\n\t * The label of the button responsible for switching to the color picker component.\n\t */ _colorPickerLabel;\n    /**\n\t * Creates an instance of the view.\n\t *\n\t * @param locale The localization services instance.\n\t * @param options Constructor options.\n\t * @param options.colors An array with definitions of colors to be displayed in the table.\n\t * @param options.columns The number of columns in the color grid.\n\t * @param options.removeButtonLabel The label of the button responsible for removing the color.\n\t * @param options.colorPickerLabel The label of the button responsible for color picker appearing.\n\t * @param options.documentColorsLabel The label for the section with the document colors.\n\t * @param options.documentColorsCount The number of colors in the document colors section inside the color dropdown.\n\t * @param options.focusTracker Tracks information about the DOM focus in the list.\n\t * @param options.focusables A collection of views that can be focused in the view.\n\t */ constructor(locale, { colors, columns, removeButtonLabel, documentColorsLabel, documentColorsCount, colorPickerLabel, focusTracker, focusables }){\n        super(locale);\n        const bind = this.bindTemplate;\n        this.set('isVisible', true);\n        this.focusTracker = focusTracker;\n        this.items = this.createCollection();\n        this.colorDefinitions = colors;\n        this.columns = columns;\n        this.documentColors = new DocumentColorCollection();\n        this.documentColorsCount = documentColorsCount;\n        this._focusables = focusables;\n        this._removeButtonLabel = removeButtonLabel;\n        this._colorPickerLabel = colorPickerLabel;\n        this._documentColorsLabel = documentColorsLabel;\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck-color-grids-fragment',\n                    bind.if('isVisible', 'ck-hidden', (value)=>!value)\n                ]\n            },\n            children: this.items\n        });\n        this.removeColorButtonView = this._createRemoveColorButton();\n        this.items.add(this.removeColorButtonView);\n    }\n    /**\n\t * Scans through the editor model and searches for text node attributes with the given attribute name.\n\t * Found entries are set as document colors.\n\t *\n\t * All the previously stored document colors will be lost in the process.\n\t *\n\t * @param model The model used as a source to obtain the document colors.\n\t * @param attributeName Determines the name of the related model's attribute for a given dropdown.\n\t */ updateDocumentColors(model, attributeName) {\n        const document = model.document;\n        const maxCount = this.documentColorsCount;\n        this.documentColors.clear();\n        for (const root of document.getRoots()){\n            const range = model.createRangeIn(root);\n            for (const node of range.getItems()){\n                if (node.is('$textProxy') && node.hasAttribute(attributeName)) {\n                    this._addColorToDocumentColors(node.getAttribute(attributeName));\n                    if (this.documentColors.length >= maxCount) {\n                        return;\n                    }\n                }\n            }\n        }\n    }\n    /**\n\t * Refreshes the state of the selected color in one or both {@link module:ui/colorgrid/colorgridview~ColorGridView}s\n\t * available in the {@link module:ui/colorselector/colorselectorview~ColorSelectorView}. It guarantees that the selection will\n\t * occur only in one of them.\n\t */ updateSelectedColors() {\n        const documentColorsGrid = this.documentColorsGrid;\n        const staticColorsGrid = this.staticColorsGrid;\n        const selectedColor = this.selectedColor;\n        staticColorsGrid.selectedColor = selectedColor;\n        if (documentColorsGrid) {\n            documentColorsGrid.selectedColor = selectedColor;\n        }\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        this.staticColorsGrid = this._createStaticColorsGrid();\n        this.items.add(this.staticColorsGrid);\n        if (this.documentColorsCount) {\n            // Create a label for document colors.\n            const bind = Template.bind(this.documentColors, this.documentColors);\n            const label = new View(this.locale);\n            label.setTemplate({\n                tag: 'span',\n                attributes: {\n                    class: [\n                        'ck',\n                        'ck-color-grid__label',\n                        bind.if('isEmpty', 'ck-hidden')\n                    ]\n                },\n                children: [\n                    {\n                        text: this._documentColorsLabel\n                    }\n                ]\n            });\n            this.items.add(label);\n            this.documentColorsGrid = this._createDocumentColorsGrid();\n            this.items.add(this.documentColorsGrid);\n        }\n        this._createColorPickerButton();\n        this._addColorSelectorElementsToFocusTracker();\n    }\n    /**\n\t * Focuses the component.\n\t */ focus() {\n        this.removeColorButtonView.focus();\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        super.destroy();\n    }\n    /**\n\t * Handles displaying the color picker button (if it was previously created) and making it focusable.\n\t */ addColorPickerButton() {\n        if (this.colorPickerButtonView) {\n            this.items.add(this.colorPickerButtonView);\n            this.focusTracker.add(this.colorPickerButtonView.element);\n            this._focusables.add(this.colorPickerButtonView);\n        }\n    }\n    /**\n\t * Adds color selector elements to focus tracker.\n\t */ _addColorSelectorElementsToFocusTracker() {\n        this.focusTracker.add(this.removeColorButtonView.element);\n        this._focusables.add(this.removeColorButtonView);\n        if (this.staticColorsGrid) {\n            this.focusTracker.add(this.staticColorsGrid.element);\n            this._focusables.add(this.staticColorsGrid);\n        }\n        if (this.documentColorsGrid) {\n            this.focusTracker.add(this.documentColorsGrid.element);\n            this._focusables.add(this.documentColorsGrid);\n        }\n    }\n    /**\n\t * Creates the button responsible for displaying the color picker component.\n\t */ _createColorPickerButton() {\n        this.colorPickerButtonView = new ButtonView();\n        this.colorPickerButtonView.set({\n            label: this._colorPickerLabel,\n            withText: true,\n            icon: IconColorPalette,\n            class: 'ck-color-selector__color-picker'\n        });\n        this.colorPickerButtonView.on('execute', ()=>{\n            this.fire('colorPicker:show');\n        });\n    }\n    /**\n\t * Adds the remove color button as a child of the current view.\n\t */ _createRemoveColorButton() {\n        const buttonView = new ButtonView();\n        buttonView.set({\n            withText: true,\n            icon: IconEraser,\n            label: this._removeButtonLabel\n        });\n        buttonView.class = 'ck-color-selector__remove-color';\n        buttonView.on('execute', ()=>{\n            this.fire('execute', {\n                value: null,\n                source: 'removeColorButton'\n            });\n        });\n        buttonView.render();\n        return buttonView;\n    }\n    /**\n\t * Creates a static color grid based on the editor configuration.\n\t */ _createStaticColorsGrid() {\n        const colorGrid = new ColorGridView(this.locale, {\n            colorDefinitions: this.colorDefinitions,\n            columns: this.columns\n        });\n        colorGrid.on('execute', (evt, data)=>{\n            this.fire('execute', {\n                value: data.value,\n                source: 'staticColorsGrid'\n            });\n        });\n        return colorGrid;\n    }\n    /**\n\t * Creates the document colors section view and binds it to {@link #documentColors}.\n\t */ _createDocumentColorsGrid() {\n        const bind = Template.bind(this.documentColors, this.documentColors);\n        const documentColorsGrid = new ColorGridView(this.locale, {\n            columns: this.columns\n        });\n        documentColorsGrid.extendTemplate({\n            attributes: {\n                class: bind.if('isEmpty', 'ck-hidden')\n            }\n        });\n        documentColorsGrid.items.bindTo(this.documentColors).using((colorObj)=>{\n            const colorTile = new ColorTileView();\n            colorTile.set({\n                color: colorObj.color,\n                hasBorder: colorObj.options?.hasBorder\n            });\n            if (colorObj.label) {\n                colorTile.set({\n                    label: colorObj.label,\n                    tooltip: true\n                });\n            }\n            colorTile.on('execute', ()=>{\n                this.fire('execute', {\n                    value: colorObj.color,\n                    source: 'documentColorsGrid'\n                });\n            });\n            return colorTile;\n        });\n        // Selected color should be cleared when document colors became empty.\n        this.documentColors.on('change:isEmpty', (evt, name, val)=>{\n            if (val) {\n                documentColorsGrid.selectedColor = null;\n            }\n        });\n        return documentColorsGrid;\n    }\n    /**\n\t * Adds a given color to the document colors list. If possible, the method will attempt to use\n\t * data from the {@link #colorDefinitions} (label, color options).\n\t *\n\t * @param color A string that stores the value of the recently applied color.\n\t */ _addColorToDocumentColors(color) {\n        const predefinedColor = this.colorDefinitions.find((definition)=>definition.color === color);\n        if (!predefinedColor) {\n            this.documentColors.add({\n                color,\n                label: color,\n                options: {\n                    hasBorder: false\n                }\n            });\n        } else {\n            this.documentColors.add(Object.assign({}, predefinedColor));\n        }\n    }\n}\n\n/**\n * One of the fragments of {@link module:ui/colorselector/colorselectorview~ColorSelectorView}.\n *\n * It allows users to select a color from a color picker.\n *\n * It consists of the following sub–components:\n *\n * * A color picker saturation and hue sliders,\n * * A text input accepting colors in HEX format,\n * * \"Save\" and \"Cancel\" action buttons.\n */ class ColorPickerFragmentView extends View {\n    /**\n\t * A collection of component's children.\n\t */ items;\n    /**\n\t * A view with saturation and hue sliders and color input.\n\t */ colorPickerView;\n    /**\n\t * The \"Save\" button view.\n\t */ saveButtonView;\n    /**\n\t * The \"Cancel\" button view.\n\t */ cancelButtonView;\n    /**\n\t * The action bar where are \"Save\" button and \"Cancel\" button.\n\t */ actionBarView;\n    /**\n\t * Tracks information about the DOM focus in the list.\n\t */ focusTracker;\n    /**\n\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t */ keystrokes;\n    /**\n\t * A collection of views that can be focused in the view.\n\t *\n\t * @readonly\n\t */ _focusables;\n    /**\n\t * A reference to the configuration of {@link #colorPickerView}. `false` when the view was\n\t * configured without a color picker.\n\t *\n\t * @readonly\n\t */ _colorPickerViewConfig;\n    /**\n\t * Creates an instance of the view.\n\t *\n\t * @param locale The localization services instance.\n\t * @param options Constructor options.\n\t * @param options.focusTracker Tracks information about the DOM focus in the list.\n\t * @param options.focusables A collection of views that can be focused in the view.\n\t * @param options.keystrokes An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t * @param options.colorPickerViewConfig The configuration of color picker feature. If set to `false`, the color picker\n\t * will not be rendered.\n\t */ constructor(locale, { focusTracker, focusables, keystrokes, colorPickerViewConfig }){\n        super(locale);\n        this.items = this.createCollection();\n        this.focusTracker = focusTracker;\n        this.keystrokes = keystrokes;\n        this.set('isVisible', false);\n        this.set('selectedColor', undefined);\n        this._focusables = focusables;\n        this._colorPickerViewConfig = colorPickerViewConfig;\n        const bind = this.bindTemplate;\n        const { saveButtonView, cancelButtonView } = this._createActionButtons();\n        this.saveButtonView = saveButtonView;\n        this.cancelButtonView = cancelButtonView;\n        this.actionBarView = this._createActionBarView({\n            saveButtonView,\n            cancelButtonView\n        });\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck-color-picker-fragment',\n                    bind.if('isVisible', 'ck-hidden', (value)=>!value)\n                ]\n            },\n            children: this.items\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        const colorPickerView = new ColorPickerView(this.locale, {\n            ...this._colorPickerViewConfig\n        });\n        this.colorPickerView = colorPickerView;\n        this.colorPickerView.render();\n        if (this.selectedColor) {\n            colorPickerView.color = this.selectedColor;\n        }\n        this.listenTo(this, 'change:selectedColor', (evt, name, value)=>{\n            colorPickerView.color = value;\n        });\n        this.items.add(this.colorPickerView);\n        this.items.add(this.actionBarView);\n        this._addColorPickersElementsToFocusTracker();\n        this._stopPropagationOnArrowsKeys();\n        this._executeOnEnterPress();\n        this._executeUponColorChange();\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        super.destroy();\n    }\n    /**\n\t * Focuses the color picker.\n\t */ focus() {\n        this.colorPickerView.focus();\n    }\n    /**\n\t * Reset validation messages.\n\t */ resetValidationStatus() {\n        this.colorPickerView.resetValidationStatus();\n    }\n    /**\n\t * When color picker is focused and \"enter\" is pressed it executes command.\n\t */ _executeOnEnterPress() {\n        this.keystrokes.set('enter', (evt)=>{\n            if (this.isVisible && this.focusTracker.focusedElement !== this.cancelButtonView.element && this.colorPickerView.isValid()) {\n                this.fire('execute', {\n                    value: this.selectedColor\n                });\n                evt.stopPropagation();\n                evt.preventDefault();\n            }\n        });\n    }\n    /**\n\t * Removes default behavior of arrow keys in dropdown.\n\t */ _stopPropagationOnArrowsKeys() {\n        const stopPropagation = (data)=>data.stopPropagation();\n        this.keystrokes.set('arrowright', stopPropagation);\n        this.keystrokes.set('arrowleft', stopPropagation);\n        this.keystrokes.set('arrowup', stopPropagation);\n        this.keystrokes.set('arrowdown', stopPropagation);\n    }\n    /**\n\t * Adds color picker elements to focus tracker.\n\t */ _addColorPickersElementsToFocusTracker() {\n        for (const slider of this.colorPickerView.slidersView){\n            this.focusTracker.add(slider.element);\n            this._focusables.add(slider);\n        }\n        const input = this.colorPickerView.hexInputRow.children.get(1);\n        if (input.element) {\n            this.focusTracker.add(input.element);\n            this._focusables.add(input);\n        }\n        this.focusTracker.add(this.saveButtonView.element);\n        this._focusables.add(this.saveButtonView);\n        this.focusTracker.add(this.cancelButtonView.element);\n        this._focusables.add(this.cancelButtonView);\n    }\n    /**\n\t * Creates bar containing \"Save\" and \"Cancel\" buttons.\n\t */ _createActionBarView({ saveButtonView, cancelButtonView }) {\n        const actionBarRow = new View();\n        const children = this.createCollection();\n        children.add(saveButtonView);\n        children.add(cancelButtonView);\n        actionBarRow.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-color-selector_action-bar'\n                ]\n            },\n            children\n        });\n        return actionBarRow;\n    }\n    /**\n\t * Creates \"Save\" and \"Cancel\" buttons.\n\t */ _createActionButtons() {\n        const locale = this.locale;\n        const t = locale.t;\n        const saveButtonView = new ButtonView(locale);\n        const cancelButtonView = new ButtonView(locale);\n        saveButtonView.set({\n            icon: IconCheck,\n            class: 'ck-button-save',\n            type: 'button',\n            withText: false,\n            label: t('Accept')\n        });\n        cancelButtonView.set({\n            icon: IconCancel,\n            class: 'ck-button-cancel',\n            type: 'button',\n            withText: false,\n            label: t('Cancel')\n        });\n        saveButtonView.on('execute', ()=>{\n            if (this.colorPickerView.isValid()) {\n                this.fire('execute', {\n                    source: 'colorPickerSaveButton',\n                    value: this.selectedColor\n                });\n            }\n        });\n        cancelButtonView.on('execute', ()=>{\n            this.fire('colorPicker:cancel');\n        });\n        return {\n            saveButtonView,\n            cancelButtonView\n        };\n    }\n    /**\n\t * Fires the `execute` event if color in color picker has been changed\n\t * by the user.\n\t */ _executeUponColorChange() {\n        this.colorPickerView.on('colorSelected', (evt, data)=>{\n            this.fire('execute', {\n                value: data.color,\n                source: 'colorPicker'\n            });\n            this.set('selectedColor', data.color);\n        });\n    }\n}\n\n/**\n * The configurable color selector view class. It allows users to select colors from a predefined set of colors as well as from\n * a color picker.\n *\n * This meta-view is is made of two components (fragments):\n *\n * * {@link module:ui/colorselector/colorselectorview~ColorSelectorView#colorGridsFragmentView},\n * * {@link module:ui/colorselector/colorselectorview~ColorSelectorView#colorPickerFragmentView}.\n *\n * ```ts\n * const colorDefinitions = [\n * \t{ color: '#000', label: 'Black', options: { hasBorder: false } },\n * \t{ color: 'rgb(255, 255, 255)', label: 'White', options: { hasBorder: true } },\n * \t{ color: 'red', label: 'Red', options: { hasBorder: false } }\n * ];\n *\n * const selectorView = new ColorSelectorView( locale, {\n * \tcolors: colorDefinitions,\n * \tcolumns: 5,\n * \tremoveButtonLabel: 'Remove color',\n * \tdocumentColorsLabel: 'Document colors',\n * \tdocumentColorsCount: 4,\n * \tcolorPickerViewConfig: {\n * \t\tformat: 'hsl'\n * \t}\n * } );\n *\n * selectorView.appendUI();\n * selectorView.selectedColor = 'red';\n * selectorView.updateSelectedColors();\n *\n * selectorView.on<ColorSelectorExecuteEvent>( 'execute', ( evt, data ) => {\n * \tconsole.log( 'Color changed', data.value, data.source );\n * } );\n *\n * selectorView.on<ColorSelectorColorPickerShowEvent>( 'colorPicker:show', ( evt ) => {\n * \tconsole.log( 'Color picker showed up', evt );\n * } );\n *\n * selectorView.on<ColorSelectorColorPickerCancelEvent>( 'colorPicker:cancel', ( evt ) => {\n * \tconsole.log( 'Color picker cancel', evt );\n * } );\n *\n * selectorView.render();\n *\n * document.body.appendChild( selectorView.element );\n * ```\n */ class ColorSelectorView extends View {\n    /**\n\t * Tracks information about the DOM focus in the list.\n\t */ focusTracker;\n    /**\n\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t */ keystrokes;\n    /**\n\t * A collection of components.\n\t */ items;\n    /**\n\t * A fragment that allows users to select colors from the a predefined set and from existing document colors.\n\t */ colorGridsFragmentView;\n    /**\n\t * A fragment that allows users to select a color from a color picker.\n\t */ colorPickerFragmentView;\n    /**\n\t * Helps cycling over focusable {@link #items} in the list.\n\t *\n\t * @readonly\n\t */ _focusCycler;\n    /**\n\t * A collection of views that can be focused in the view.\n\t *\n\t * @readonly\n\t */ _focusables;\n    /**\n\t * The configuration of color picker sub-component.\n\t */ _colorPickerViewConfig;\n    /**\n\t * Creates a view to be inserted as a child of {@link module:ui/dropdown/dropdownview~DropdownView}.\n\t *\n\t * @param locale The localization services instance.\n\t * @param options Constructor options.\n\t * @param options.colors An array with definitions of colors to be displayed in the table.\n\t * @param options.columns The number of columns in the color grid.\n\t * @param options.removeButtonLabel The label of the button responsible for removing the color.\n\t * @param options.colorPickerLabel The label of the button responsible for color picker appearing.\n\t * @param options.documentColorsLabel The label for the section with the document colors.\n\t * @param options.documentColorsCount The number of colors in the document colors section inside the color dropdown.\n\t * @param options.colorPickerViewConfig The configuration of color picker feature. If set to `false`, the color picker will be hidden.\n\t */ constructor(locale, { colors, columns, removeButtonLabel, documentColorsLabel, documentColorsCount, colorPickerLabel, colorPickerViewConfig }){\n        super(locale);\n        this.items = this.createCollection();\n        this.focusTracker = new FocusTracker();\n        this.keystrokes = new KeystrokeHandler();\n        this._focusables = new ViewCollection();\n        this._colorPickerViewConfig = colorPickerViewConfig;\n        this._focusCycler = new FocusCycler({\n            focusables: this._focusables,\n            focusTracker: this.focusTracker,\n            keystrokeHandler: this.keystrokes,\n            actions: {\n                // Navigate list items backwards using the <kbd>Shift</kbd> + <kbd>Tab</kbd> keystroke.\n                focusPrevious: 'shift + tab',\n                // Navigate list items forwards using the <kbd>Tab</kbd> key.\n                focusNext: 'tab'\n            }\n        });\n        this.colorGridsFragmentView = new ColorGridsFragmentView(locale, {\n            colors,\n            columns,\n            removeButtonLabel,\n            documentColorsLabel,\n            documentColorsCount,\n            colorPickerLabel,\n            focusTracker: this.focusTracker,\n            focusables: this._focusables\n        });\n        this.colorPickerFragmentView = new ColorPickerFragmentView(locale, {\n            focusables: this._focusables,\n            focusTracker: this.focusTracker,\n            keystrokes: this.keystrokes,\n            colorPickerViewConfig\n        });\n        this.set('_isColorGridsFragmentVisible', true);\n        this.set('_isColorPickerFragmentVisible', false);\n        this.set('selectedColor', undefined);\n        this.colorGridsFragmentView.bind('isVisible').to(this, '_isColorGridsFragmentVisible');\n        this.colorPickerFragmentView.bind('isVisible').to(this, '_isColorPickerFragmentVisible');\n        /**\n\t\t * This is kind of bindings. Unfortunately we could not use this.bind() method because the same property\n\t\t * cannot be bound twice. So this is work around how to bind 'selectedColor' property between components.\n\t\t */ this.on('change:selectedColor', (evt, evtName, data)=>{\n            this.colorGridsFragmentView.set('selectedColor', data);\n            this.colorPickerFragmentView.set('selectedColor', data);\n        });\n        this.colorGridsFragmentView.on('change:selectedColor', (evt, evtName, data)=>{\n            this.set('selectedColor', data);\n        });\n        this.colorPickerFragmentView.on('change:selectedColor', (evt, evtName, data)=>{\n            this.set('selectedColor', data);\n        });\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-color-selector'\n                ]\n            },\n            children: this.items\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        // Start listening for the keystrokes coming from #element.\n        this.keystrokes.listenTo(this.element);\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        super.destroy();\n        this.focusTracker.destroy();\n        this.keystrokes.destroy();\n    }\n    /**\n\t * Renders the internals of the component on demand:\n\t * * {@link #colorPickerFragmentView},\n\t * * {@link #colorGridsFragmentView}.\n\t *\n\t * It allows for deferring component initialization to improve the performance.\n\t *\n\t * See {@link #showColorPickerFragment}, {@link #showColorGridsFragment}.\n\t */ appendUI() {\n        this._appendColorGridsFragment();\n        if (this._colorPickerViewConfig) {\n            this._appendColorPickerFragment();\n        }\n    }\n    /**\n\t * Shows the {@link #colorPickerFragmentView} and hides the {@link #colorGridsFragmentView}.\n\t *\n\t * **Note**: It requires {@link #appendUI} to be called first.\n\t *\n\t * See {@link #showColorGridsFragment}, {@link ~ColorSelectorView#event:colorPicker:show}.\n\t */ showColorPickerFragment() {\n        if (!this.colorPickerFragmentView.colorPickerView || this._isColorPickerFragmentVisible) {\n            return;\n        }\n        this._isColorPickerFragmentVisible = true;\n        this.colorPickerFragmentView.focus();\n        this.colorPickerFragmentView.resetValidationStatus();\n        this._isColorGridsFragmentVisible = false;\n    }\n    /**\n\t * Shows the {@link #colorGridsFragmentView} and hides the {@link #colorPickerFragmentView}.\n\t *\n\t * See {@link #showColorPickerFragment}.\n\t *\n\t * **Note**: It requires {@link #appendUI} to be called first.\n\t */ showColorGridsFragment() {\n        if (this._isColorGridsFragmentVisible) {\n            return;\n        }\n        this._isColorGridsFragmentVisible = true;\n        this.colorGridsFragmentView.focus();\n        this._isColorPickerFragmentVisible = false;\n    }\n    /**\n\t * Focuses the first focusable element in {@link #items}.\n\t */ focus() {\n        this._focusCycler.focusFirst();\n    }\n    /**\n\t * Focuses the last focusable element in {@link #items}.\n\t */ focusLast() {\n        this._focusCycler.focusLast();\n    }\n    /**\n\t * Scans through the editor model and searches for text node attributes with the given `attributeName`.\n\t * Found entries are set as document colors in {@link #colorGridsFragmentView}.\n\t *\n\t * All the previously stored document colors will be lost in the process.\n\t *\n\t * @param model The model used as a source to obtain the document colors.\n\t * @param attributeName Determines the name of the related model's attribute for a given dropdown.\n\t */ updateDocumentColors(model, attributeName) {\n        this.colorGridsFragmentView.updateDocumentColors(model, attributeName);\n    }\n    /**\n\t * Refreshes the state of the selected color in one or both grids located in {@link #colorGridsFragmentView}.\n\t *\n\t * It guarantees that the selection will occur only in one of them.\n\t */ updateSelectedColors() {\n        this.colorGridsFragmentView.updateSelectedColors();\n    }\n    /**\n\t * Appends the view containing static and document color grid views.\n\t */ _appendColorGridsFragment() {\n        if (this.items.length) {\n            return;\n        }\n        this.items.add(this.colorGridsFragmentView);\n        this.colorGridsFragmentView.delegate('execute').to(this);\n        this.colorGridsFragmentView.delegate('colorPicker:show').to(this);\n    }\n    /**\n\t * Appends the view with the color picker.\n\t */ _appendColorPickerFragment() {\n        if (this.items.length === 2) {\n            return;\n        }\n        this.items.add(this.colorPickerFragmentView);\n        if (this.colorGridsFragmentView.colorPickerButtonView) {\n            this.colorGridsFragmentView.colorPickerButtonView.on('execute', ()=>{\n                this.showColorPickerFragment();\n            });\n        }\n        this.colorGridsFragmentView.addColorPickerButton();\n        this.colorPickerFragmentView.delegate('execute').to(this);\n        this.colorPickerFragmentView.delegate('colorPicker:cancel').to(this);\n    }\n}\n\n/**\n * A helper class implementing the UI component ({@link module:ui/view~View view}) factory.\n *\n * It allows functions producing specific UI components to be registered under their unique names\n * in the factory. A registered component can be then instantiated by providing its name.\n * Note that the names are case insensitive.\n *\n * ```ts\n * // The editor provides localization tools for the factory.\n * const factory = new ComponentFactory( editor );\n *\n * factory.add( 'foo', locale => new FooView( locale ) );\n * factory.add( 'bar', locale => new BarView( locale ) );\n *\n * // An instance of FooView.\n * const fooInstance = factory.create( 'foo' );\n *\n * // Names are case insensitive so this is also allowed:\n * const barInstance = factory.create( 'Bar' );\n * ```\n *\n * The {@link module:core/editor/editor~Editor#locale editor locale} is passed to the factory\n * function when {@link module:ui/componentfactory~ComponentFactory#create} is called.\n */ class ComponentFactory {\n    /**\n\t * The editor instance that the factory belongs to.\n\t */ editor;\n    /**\n\t * Registered component factories.\n\t */ _components = new Map();\n    /**\n\t * Creates an instance of the factory.\n\t *\n\t * @param editor The editor instance.\n\t */ constructor(editor){\n        this.editor = editor;\n    }\n    /**\n\t * Returns an iterator of registered component names. Names are returned in lower case.\n\t */ *names() {\n        for (const value of this._components.values()){\n            yield value.originalName;\n        }\n    }\n    /**\n\t * Registers a component factory function that will be used by the\n\t * {@link #create create} method and called with the\n\t * {@link module:core/editor/editor~Editor#locale editor locale} as an argument,\n\t * allowing localization of the {@link module:ui/view~View view}.\n\t *\n\t * @param name The name of the component.\n\t * @param callback The callback that returns the component.\n\t */ add(name, callback) {\n        this._components.set(getNormalized(name), {\n            callback,\n            originalName: name\n        });\n    }\n    /**\n\t * Creates an instance of a component registered in the factory under a specific name.\n\t *\n\t * When called, the {@link module:core/editor/editor~Editor#locale editor locale} is passed to\n\t * the previously {@link #add added} factory function, allowing localization of the\n\t * {@link module:ui/view~View view}.\n\t *\n\t * @param name The name of the component.\n\t * @returns The instantiated component view.\n\t */ create(name) {\n        if (!this.has(name)) {\n            /**\n\t\t\t * The required component is not registered in the component factory. Please make sure\n\t\t\t * the provided name is correct and the component has been correctly\n\t\t\t * {@link module:ui/componentfactory~ComponentFactory#add added} to the factory.\n\t\t\t *\n\t\t\t * @error componentfactory-item-missing\n\t\t\t * @param {string} name The name of the missing component.\n\t\t\t */ throw new CKEditorError('componentfactory-item-missing', this, {\n                name\n            });\n        }\n        return this._components.get(getNormalized(name)).callback(this.editor.locale);\n    }\n    /**\n\t * Checks if a component of a given name is registered in the factory.\n\t *\n\t * @param name The name of the component.\n\t */ has(name) {\n        return this._components.has(getNormalized(name));\n    }\n}\n/**\n * Ensures that the component name used as the key in the internal map is in lower case.\n */ function getNormalized(name) {\n    return String(name).toLowerCase();\n}\n\nconst BALLOON_CLASS = 'ck-tooltip';\n/**\n * A tooltip manager class for the UI of the editor.\n *\n * **Note**: Most likely you do not have to use the `TooltipManager` API listed below in order to display tooltips. Popular\n * {@glink framework/architecture/ui-library UI components} support tooltips out-of-the-box via observable properties\n * (see {@link module:ui/button/buttonview~ButtonView#tooltip} and {@link module:ui/button/buttonview~ButtonView#tooltipPosition}).\n *\n * # Displaying tooltips\n *\n * To display a tooltip, set `data-cke-tooltip-text` attribute on any DOM element:\n *\n * ```ts\n * domElement.dataset.ckeTooltipText = 'My tooltip';\n * ```\n *\n * The tooltip will show up whenever the user moves the mouse over the element or the element gets focus in DOM.\n *\n * # Positioning tooltips\n *\n * To change the position of the tooltip, use the `data-cke-tooltip-position` attribute (`s`, `se`, `sw`, `n`, `e`, or `w`):\n *\n * ```ts\n * domElement.dataset.ckeTooltipText = 'Tooltip to the north';\n * domElement.dataset.ckeTooltipPosition = 'n';\n * ```\n *\n * # Disabling tooltips\n *\n * In order to disable the tooltip temporarily, use the `data-cke-tooltip-disabled` attribute:\n *\n * ```ts\n * domElement.dataset.ckeTooltipText = 'Disabled. For now.';\n * domElement.dataset.ckeTooltipDisabled = 'true';\n * ```\n *\n * # Instant tooltips\n *\n * To remove the delay before showing or hiding the tooltip, use the `data-cke-tooltip-instant` attribute:\n *\n * ```ts\n * domElement.dataset.ckeTooltipInstant = 'true';\n * ```\n *\n * # Styling tooltips\n *\n * By default, the tooltip has `.ck-tooltip` class and its text inner `.ck-tooltip__text`.\n *\n * If your tooltip requires custom styling, using `data-cke-tooltip-class` attribute will add additional class to the balloon\n * displaying the tooltip:\n *\n * ```ts\n * domElement.dataset.ckeTooltipText = 'Tooltip with a red text';\n * domElement.dataset.ckeTooltipClass = 'my-class';\n * ```\n *\n * ```css\n * .ck.ck-tooltip.my-class { color: red }\n * ```\n *\n * **Note**: This class is a singleton. All editor instances re-use the same instance loaded by\n * {@link module:ui/editorui/editorui~EditorUI} of the first editor.\n */ class TooltipManager extends /* #__PURE__ */ DomEmitterMixin() {\n    /**\n\t * The view rendering text of the tooltip.\n\t */ tooltipTextView;\n    /**\n\t * The instance of the balloon panel that renders and positions the tooltip.\n\t */ balloonPanelView;\n    /**\n\t * A set of default {@link module:utils/dom/position~PositioningFunction positioning functions} used by the `TooltipManager`\n\t * to pin tooltips in different positions.\n\t */ static defaultBalloonPositions = /* #__PURE__ */ BalloonPanelView.generatePositions({\n        heightOffset: 5,\n        sideOffset: 13\n    });\n    /**\n\t * Stores the reference to the DOM element the tooltip is attached to. `null` when there's no tooltip\n\t * in the UI.\n\t */ _currentElementWithTooltip = null;\n    /**\n\t * Stores the current tooltip position. `null` when there's no tooltip in the UI.\n\t */ _currentTooltipPosition = null;\n    /**\n\t * An instance of the mutation observer that keeps track on target element attributes changes.\n\t */ _mutationObserver = null;\n    /**\n\t * A debounced version of {@link #_pinTooltip}. Tooltips show with a delay to avoid flashing and\n\t * to improve the UX.\n\t */ _pinTooltipDebounced;\n    /**\n\t * A debounced version of {@link #_unpinTooltip}. Tooltips hide with a delay to allow hovering of their titles.\n\t */ _unpinTooltipDebounced;\n    _watchdogExcluded;\n    /**\n\t * A set of editors the single tooltip manager instance must listen to.\n\t * This is mostly to handle `EditorUI#update` listeners from individual editors.\n\t */ static _editors = new Set();\n    /**\n\t * A reference to the `TooltipManager` instance. The class is a singleton and as such,\n\t * successive attempts at creating instances should return this instance.\n\t */ static _instance = null;\n    /**\n\t * Creates an instance of the tooltip manager.\n\t */ constructor(editor){\n        super();\n        TooltipManager._editors.add(editor);\n        // TooltipManager must be a singleton. Multiple instances would mean multiple tooltips attached\n        // to the same DOM element with data-cke-tooltip-* attributes.\n        if (TooltipManager._instance) {\n            return TooltipManager._instance;\n        }\n        TooltipManager._instance = this;\n        this.tooltipTextView = new View(editor.locale);\n        this.tooltipTextView.set('text', '');\n        this.tooltipTextView.setTemplate({\n            tag: 'span',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-tooltip__text'\n                ]\n            },\n            children: [\n                {\n                    text: this.tooltipTextView.bindTemplate.to('text')\n                }\n            ]\n        });\n        this.balloonPanelView = new BalloonPanelView(editor.locale);\n        this.balloonPanelView.class = BALLOON_CLASS;\n        this.balloonPanelView.content.add(this.tooltipTextView);\n        this._mutationObserver = createMutationObserver(()=>{\n            this._updateTooltipPosition();\n        });\n        this._pinTooltipDebounced = debounce(this._pinTooltip, 600);\n        this._unpinTooltipDebounced = debounce(this._unpinTooltip, 400);\n        this.listenTo(global.document, 'keydown', this._onKeyDown.bind(this), {\n            useCapture: true\n        });\n        this.listenTo(global.document, 'mouseenter', this._onEnterOrFocus.bind(this), {\n            useCapture: true\n        });\n        this.listenTo(global.document, 'mouseleave', this._onLeaveOrBlur.bind(this), {\n            useCapture: true\n        });\n        this.listenTo(global.document, 'focus', this._onEnterOrFocus.bind(this), {\n            useCapture: true\n        });\n        this.listenTo(global.document, 'blur', this._onLeaveOrBlur.bind(this), {\n            useCapture: true\n        });\n        this.listenTo(global.document, 'scroll', this._onScroll.bind(this), {\n            useCapture: true\n        });\n        // Because this class is a singleton, its only instance is shared across all editors and connects them through the reference.\n        // This causes issues with the ContextWatchdog. When an error is thrown in one editor, the watchdog traverses the references\n        // and (because of shared tooltip manager) figures that the error affects all editors and restarts them all.\n        // This flag, excludes tooltip manager instance from the traversal and brings ContextWatchdog back to normal.\n        // More in https://github.com/ckeditor/ckeditor5/issues/12292.\n        this._watchdogExcluded = true;\n    }\n    /**\n\t * Destroys the tooltip manager.\n\t *\n\t * **Note**: The manager singleton cannot be destroyed until all editors that use it are destroyed.\n\t *\n\t * @param editor The editor the manager was created for.\n\t */ destroy(editor) {\n        const editorBodyViewCollection = editor.ui.view && editor.ui.view.body;\n        TooltipManager._editors.delete(editor);\n        this.stopListening(editor.ui);\n        // Prevent the balloon panel from being destroyed in the EditorUI#destroy() cascade. It should be destroyed along\n        // with the last editor only (https://github.com/ckeditor/ckeditor5/issues/12602).\n        if (editorBodyViewCollection && editorBodyViewCollection.has(this.balloonPanelView)) {\n            editorBodyViewCollection.remove(this.balloonPanelView);\n        }\n        if (!TooltipManager._editors.size) {\n            this._unpinTooltip();\n            this.balloonPanelView.destroy();\n            this.stopListening();\n            TooltipManager._instance = null;\n        }\n    }\n    /**\n\t * Returns {@link #balloonPanelView} {@link module:utils/dom/position~PositioningFunction positioning functions} for a given position\n\t * name.\n\t *\n\t * @param position Name of the position (`s`, `se`, `sw`, `n`, `e`, or `w`).\n\t * @returns Positioning functions to be used by the {@link #balloonPanelView}.\n\t */ static getPositioningFunctions(position) {\n        const defaultPositions = TooltipManager.defaultBalloonPositions;\n        return ({\n            // South is most popular. We can use positioning heuristics to avoid clipping by the viewport with the sane fallback.\n            s: [\n                defaultPositions.southArrowNorth,\n                defaultPositions.southArrowNorthEast,\n                defaultPositions.southArrowNorthWest\n            ],\n            n: [\n                defaultPositions.northArrowSouth\n            ],\n            e: [\n                defaultPositions.eastArrowWest\n            ],\n            w: [\n                defaultPositions.westArrowEast\n            ],\n            sw: [\n                defaultPositions.southArrowNorthEast\n            ],\n            se: [\n                defaultPositions.southArrowNorthWest\n            ]\n        })[position];\n    }\n    /**\n\t * Handles hiding tooltips on `keydown` in DOM.\n\t *\n\t * @param evt An object containing information about the fired event.\n\t * @param domEvent The DOM event.\n\t */ _onKeyDown(evt, domEvent) {\n        if (domEvent.key === 'Escape' && this._currentElementWithTooltip) {\n            this._unpinTooltip();\n            domEvent.stopPropagation();\n        }\n    }\n    /**\n\t * Handles displaying tooltips on `mouseenter` and `focus` in DOM.\n\t *\n\t * @param evt An object containing information about the fired event.\n\t * @param domEvent The DOM event.\n\t */ _onEnterOrFocus(evt, { target }) {\n        const elementWithTooltipAttribute = getDescendantWithTooltip(target);\n        // Abort when there's no descendant needing tooltip.\n        if (!elementWithTooltipAttribute) {\n            // Unpin if element is focused, regardless of whether it contains a label or not.\n            // It also prevents tooltips from overlapping the menu bar\n            if (evt.name === 'focus') {\n                this._unpinTooltip();\n            }\n            return;\n        }\n        // Abort to avoid flashing when, for instance:\n        // * a tooltip is displayed for a focused element, then the same element gets mouseentered,\n        // * a tooltip is displayed for an element via mouseenter, then the focus moves to the same element.\n        if (elementWithTooltipAttribute === this._currentElementWithTooltip) {\n            this._unpinTooltipDebounced.cancel();\n            return;\n        }\n        this._unpinTooltip();\n        // The tooltip should be pinned immediately when the element gets focused using keyboard.\n        // If it is focused using the mouse, the tooltip should be pinned after a delay to prevent flashing.\n        // See https://github.com/ckeditor/ckeditor5/issues/16383\n        // Also, if the element has an attribute `data-cke-tooltip-instant`, the tooltip should be pinned immediately.\n        // This is useful for elements that have their content partially hidden (e.g. a long text in a small container)\n        // and should show a tooltip on hover, like merge field.\n        if (evt.name === 'focus' && !elementWithTooltipAttribute.matches(':hover') || elementWithTooltipAttribute.matches('[data-cke-tooltip-instant]')) {\n            this._pinTooltip(elementWithTooltipAttribute, getTooltipData(elementWithTooltipAttribute));\n        } else {\n            this._pinTooltipDebounced(elementWithTooltipAttribute, getTooltipData(elementWithTooltipAttribute));\n        }\n    }\n    /**\n\t * Handles hiding tooltips on `mouseleave` and `blur` in DOM.\n\t *\n\t * @param evt An object containing information about the fired event.\n\t * @param domEvent The DOM event.\n\t */ _onLeaveOrBlur(evt, { target, relatedTarget }) {\n        if (evt.name === 'mouseleave') {\n            // Don't act when the event does not concern a DOM element (e.g. a mouseleave out of an entire document),\n            if (!isElement(target)) {\n                return;\n            }\n            const balloonElement = this.balloonPanelView.element;\n            const isEnteringBalloon = balloonElement && (balloonElement === relatedTarget || balloonElement.contains(relatedTarget));\n            const isLeavingBalloon = !isEnteringBalloon && target === balloonElement;\n            // Do not hide the tooltip when the user moves the cursor over it.\n            if (isEnteringBalloon) {\n                this._unpinTooltipDebounced.cancel();\n                return;\n            }\n            // If a tooltip is currently visible, don't act for a targets other than the one it is attached to.\n            // The only exception is leaving balloon, in this scenario tooltip should be closed.\n            // For instance, a random mouseleave far away in the page should not unpin the tooltip that was pinned because\n            // of a previous focus. Only leaving the same element should hide the tooltip.\n            if (!isLeavingBalloon && this._currentElementWithTooltip && target !== this._currentElementWithTooltip) {\n                return;\n            }\n            const descendantWithTooltip = getDescendantWithTooltip(target);\n            const relatedDescendantWithTooltip = getDescendantWithTooltip(relatedTarget);\n            // Unpin when the mouse was leaving element with a tooltip to a place which does not have or has a different tooltip.\n            // Note that this should happen whether the tooltip is already visible or not, for instance,\n            // it could be invisible but queued (debounced): it should get canceled.\n            if (isLeavingBalloon || descendantWithTooltip && descendantWithTooltip !== relatedDescendantWithTooltip) {\n                this._pinTooltipDebounced.cancel();\n                // If the currently visible tooltip is instant, unpin it immediately.\n                if (this._currentElementWithTooltip && this._currentElementWithTooltip.matches('[data-cke-tooltip-instant]') || descendantWithTooltip && descendantWithTooltip.matches('[data-cke-tooltip-instant]')) {\n                    this._unpinTooltip();\n                } else {\n                    this._unpinTooltipDebounced();\n                }\n            }\n        } else {\n            // If a tooltip is currently visible, don't act for a targets other than the one it is attached to.\n            // For instance, a random blur in the web page should not unpin the tooltip that was pinned because of a previous mouseenter.\n            if (this._currentElementWithTooltip && target !== this._currentElementWithTooltip) {\n                return;\n            }\n            // Note that unpinning should happen whether the tooltip is already visible or not, for instance, it could be invisible but\n            // queued (debounced): it should get canceled (e.g. quick focus then quick blur using the keyboard).\n            this._pinTooltipDebounced.cancel();\n            this._unpinTooltipDebounced();\n        }\n    }\n    /**\n\t * Handles hiding tooltips on `scroll` in DOM.\n\t *\n\t * @param evt An object containing information about the fired event.\n\t * @param domEvent The DOM event.\n\t */ _onScroll(evt, { target }) {\n        // No tooltip, no reason to react on scroll.\n        if (!this._currentElementWithTooltip) {\n            return;\n        }\n        // When scrolling a container that has both the balloon and the current element (common ancestor), the balloon can remain\n        // visible (e.g. scrolling ≤body>). Otherwise, to avoid glitches (clipping, lagging) better just hide the tooltip.\n        // Also, don't do anything when scrolling an unrelated DOM element that has nothing to do with the current element and the balloon.\n        if (target.contains(this.balloonPanelView.element) && target.contains(this._currentElementWithTooltip)) {\n            return;\n        }\n        this._unpinTooltip();\n    }\n    /**\n\t * Pins the tooltip to a specific DOM element.\n\t *\n\t * @param targetDomElement Element to be pinned to.\n\t * @param options Options for the tooltip.\n\t * @param options.text Text of the tooltip to display.\n\t * @param options.position The position of the tooltip.\n\t * @param options.cssClass Additional CSS class of the balloon with the tooltip.\n\t */ _pinTooltip(targetDomElement, { text, position, cssClass }) {\n        this._unpinTooltip();\n        // Use the body collection of the first editor.\n        const bodyViewCollection = first(TooltipManager._editors.values()).ui.view.body;\n        if (!bodyViewCollection.has(this.balloonPanelView)) {\n            bodyViewCollection.add(this.balloonPanelView);\n        }\n        this.tooltipTextView.text = text;\n        this.balloonPanelView.class = [\n            BALLOON_CLASS,\n            cssClass\n        ].filter((className)=>className).join(' ');\n        // Ensure that all changes to the tooltip are set before pinning it.\n        // Setting class or text after pinning can cause the tooltip to be pinned in the wrong position.\n        // It happens especially often when tooltip has class modified (like adding `ck-tooltip_multi-line`).\n        // See https://github.com/ckeditor/ckeditor5/issues/16365\n        this.balloonPanelView.pin({\n            target: targetDomElement,\n            positions: TooltipManager.getPositioningFunctions(position)\n        });\n        this._mutationObserver.attach(targetDomElement);\n        // Start responding to changes in editor UI or content layout. For instance, when collaborators change content\n        // and a contextual toolbar attached to a content starts to move (and so should move the tooltip).\n        // Note: Using low priority to let other listeners that position contextual toolbars etc. to react first.\n        for (const editor of TooltipManager._editors){\n            this.listenTo(editor.ui, 'update', this._updateTooltipPosition.bind(this), {\n                priority: 'low'\n            });\n        }\n        this._currentElementWithTooltip = targetDomElement;\n        this._currentTooltipPosition = position;\n    }\n    /**\n\t * Unpins the tooltip and cancels all queued pinning.\n\t */ _unpinTooltip() {\n        this._unpinTooltipDebounced.cancel();\n        this._pinTooltipDebounced.cancel();\n        this.balloonPanelView.unpin();\n        for (const editor of TooltipManager._editors){\n            this.stopListening(editor.ui, 'update');\n        }\n        this._currentElementWithTooltip = null;\n        this._currentTooltipPosition = null;\n        this.tooltipTextView.text = '';\n        this._mutationObserver.detach();\n    }\n    /**\n\t * Updates the position of the tooltip so it stays in sync with the element it is pinned to.\n\t *\n\t * Hides the tooltip when the element is no longer visible in DOM or the tooltip text was removed.\n\t */ _updateTooltipPosition() {\n        // The tooltip might get removed by focus listener triggered by the same UI `update` event.\n        // See https://github.com/ckeditor/ckeditor5/pull/16363.\n        if (!this._currentElementWithTooltip) {\n            return;\n        }\n        const tooltipData = getTooltipData(this._currentElementWithTooltip);\n        // This could happen if the tooltip was attached somewhere in a contextual content toolbar and the toolbar\n        // disappeared (e.g. removed an image), or the tooltip text was removed.\n        if (!isVisible(this._currentElementWithTooltip) || !tooltipData.text) {\n            this._unpinTooltip();\n            return;\n        }\n        this.balloonPanelView.pin({\n            target: this._currentElementWithTooltip,\n            positions: TooltipManager.getPositioningFunctions(tooltipData.position)\n        });\n    }\n}\nfunction getDescendantWithTooltip(element) {\n    if (!isElement(element)) {\n        return null;\n    }\n    return element.closest('[data-cke-tooltip-text]:not([data-cke-tooltip-disabled])');\n}\nfunction getTooltipData(element) {\n    return {\n        text: element.dataset.ckeTooltipText,\n        position: element.dataset.ckeTooltipPosition || 's',\n        cssClass: element.dataset.ckeTooltipClass || ''\n    };\n}\n// Creates a simple `MutationObserver` instance wrapper that observes changes in the tooltip-related attributes of the given element.\n// Used instead of the `MutationObserver` from the engine for simplicity.\nfunction createMutationObserver(callback) {\n    const mutationObserver = new MutationObserver(()=>{\n        callback();\n    });\n    return {\n        attach (element) {\n            mutationObserver.observe(element, {\n                attributes: true,\n                attributeFilter: [\n                    'data-cke-tooltip-text',\n                    'data-cke-tooltip-position'\n                ]\n            });\n        },\n        detach () {\n            mutationObserver.disconnect();\n        }\n    };\n}\n\n/**\n * A helper that enables the \"evaluation badge\" feature in the editor at the bottom of the editable element\n * (editor root, source editing area, etc.) when the editor is focused.\n *\n * @private\n */ class EvaluationBadge extends Badge {\n    licenseTypeMessage = {\n        evaluation: 'For evaluation purposes only',\n        trial: 'For evaluation purposes only',\n        development: 'For development purposes only'\n    };\n    constructor(editor){\n        super(editor, {\n            balloonClass: 'ck-evaluation-badge-balloon'\n        });\n    }\n    /**\n\t * Enables \"evaluation badge\" label.\n\t */ _isEnabled() {\n        const editor = this.editor;\n        const licenseKey = editor.config.get('licenseKey');\n        const licenseType = getLicenseTypeFromLicenseKey(licenseKey);\n        return Boolean(licenseType && this.licenseTypeMessage[licenseType]);\n    }\n    /**\n\t * Creates the content of the \"evaluation badge\".\n\t */ _createBadgeContent() {\n        const licenseKey = this.editor.config.get('licenseKey');\n        const licenseType = getLicenseTypeFromLicenseKey(licenseKey);\n        return new EvaluationBadgeView(this.editor.locale, this.licenseTypeMessage[licenseType]);\n    }\n    /**\n\t * Returns the normalized configuration for the \"evaluation badge\".\n\t * It takes 'ui.poweredBy' configuration into account to determine the badge position and side.\n\t */ _getNormalizedConfig() {\n        const badgeConfig = super._getNormalizedConfig();\n        const userConfig = this.editor.config.get('ui.poweredBy') || {};\n        const position = userConfig.position || badgeConfig.position;\n        const poweredBySide = userConfig.side || badgeConfig.side;\n        return {\n            position,\n            side: poweredBySide === 'left' ? 'right' : 'left',\n            verticalOffset: badgeConfig.verticalOffset,\n            horizontalOffset: badgeConfig.horizontalOffset\n        };\n    }\n}\n/**\n * A view displaying the \"evaluation badge\".\n */ class EvaluationBadgeView extends View {\n    /**\n\t * Creates an instance of the \"evaluation badge\" view.\n\t *\n\t * @param locale The localization services instance.\n\t * @param label The label text.\n\t */ constructor(locale, label){\n        super(locale);\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-evaluation-badge'\n                ],\n                'aria-hidden': true\n            },\n            children: [\n                {\n                    tag: 'span',\n                    attributes: {\n                        class: [\n                            'ck',\n                            'ck-evaluation-badge__label'\n                        ]\n                    },\n                    children: [\n                        label\n                    ]\n                }\n            ]\n        });\n    }\n}\n/**\n * Returns the license type based on the license key.\n */ function getLicenseTypeFromLicenseKey(licenseKey) {\n    if (licenseKey == 'GPL') {\n        return 'GPL';\n    }\n    const licenseContent = parseBase64EncodedObject(licenseKey.split('.')[1]);\n    if (!licenseContent) {\n        return null;\n    }\n    return licenseContent.licenseType || 'production';\n}\n\n/**\n * A menu bar list item view, a child of {@link module:ui/menubar/menubarmenulistview~MenuBarMenuListView}.\n *\n * Populate this item with a {@link module:ui/menubar/menubarmenulistitembuttonview~MenuBarMenuListItemButtonView} instance\n * or a {@link module:ui/menubar/menubarmenuview~MenuBarMenuView} instance to create a sub-menu.\n */ class MenuBarMenuListItemView extends ListItemView {\n    /**\n\t * Creates an instance of the list item view.\n\t *\n\t * @param locale The localization services instance.\n\t */ constructor(locale, parentMenuView){\n        super(locale);\n        const bind = this.bindTemplate;\n        this.extendTemplate({\n            attributes: {\n                class: [\n                    'ck-menu-bar__menu__item'\n                ]\n            },\n            on: {\n                'mouseenter': bind.to('mouseenter')\n            }\n        });\n        this.delegate('mouseenter').to(parentMenuView);\n    }\n}\n\nconst NESTED_PANEL_HORIZONTAL_OFFSET = 5;\n/**\n * Behaviors of the {@link module:ui/menubar/menubarview~MenuBarView} component.\n * @internal\n */ const MenuBarBehaviors = {\n    /**\n\t * When the bar is already open:\n\t * * Opens the menu when the user hovers over its button.\n\t * * Closes open menu when another menu's button gets hovered.\n\t */ toggleMenusAndFocusItemsOnHover (menuBarView) {\n        menuBarView.on('menu:mouseenter', (evt)=>{\n            // This behavior should be activated when one of condition is present:\n            // 1. The user opened any submenu of menubar and hover over items in the menu bar.\n            // 2. The user focused whole menubar using keyboard interaction and enabled focus borders and hover over items in the menu bar.\n            if (!menuBarView.isFocusBorderEnabled && !menuBarView.isOpen) {\n                return;\n            }\n            if (menuBarView.isOpen) {\n                for (const menuView of menuBarView.menus){\n                    // @if CK_DEBUG_MENU_BAR // const wasOpen = menuView.isOpen;\n                    const pathLeaf = evt.path[0];\n                    const isListItemContainingMenu = pathLeaf instanceof MenuBarMenuListItemView && pathLeaf.children.first === menuView;\n                    menuView.isOpen = (evt.path.includes(menuView) || isListItemContainingMenu) && menuView.isEnabled;\n                // @if CK_DEBUG_MENU_BAR // if ( wasOpen !== menuView.isOpen ) {\n                // @if CK_DEBUG_MENU_BAR // console.log( '[BEHAVIOR] toggleMenusAndFocusItemsOnHover(): Toggle',\n                // @if CK_DEBUG_MENU_BAR // \tlogMenu( menuView ), 'isOpen', menuView.isOpen\n                // @if CK_DEBUG_MENU_BAR // );\n                // @if CK_DEBUG_MENU_BAR // }\n                }\n            }\n            evt.source.focus();\n        });\n    },\n    /**\n\t * Moves between top-level menus using the arrow left and right keys.\n\t *\n\t * If the menubar has already been open, the arrow keys move focus between top-level menu buttons and open them.\n\t * If the menubar is closed, the arrow keys only move focus between top-level menu buttons.\n\t */ focusCycleMenusOnArrows (menuBarView) {\n        const isContentRTL = menuBarView.locale.uiLanguageDirection === 'rtl';\n        menuBarView.on('menu:arrowright', (evt)=>{\n            cycleTopLevelMenus(evt.source, isContentRTL ? -1 : 1);\n        });\n        menuBarView.on('menu:arrowleft', (evt)=>{\n            cycleTopLevelMenus(evt.source, isContentRTL ? 1 : -1);\n        });\n        function cycleTopLevelMenus(currentMenuView, step) {\n            const currentIndex = menuBarView.children.getIndex(currentMenuView);\n            const isCurrentMenuViewOpen = currentMenuView.isOpen;\n            const menusCount = menuBarView.children.length;\n            const menuViewToOpen = menuBarView.children.get((currentIndex + menusCount + step) % menusCount);\n            currentMenuView.isOpen = false;\n            if (isCurrentMenuViewOpen) {\n                menuViewToOpen.isOpen = true;\n            }\n            menuViewToOpen.buttonView.focus();\n        }\n    },\n    /**\n\t * Closes the entire sub-menu structure when the bar is closed. This prevents sub-menus from being open if the user\n\t * closes the entire bar, and then re-opens some top-level menu.\n\t */ closeMenusWhenTheBarCloses (menuBarView) {\n        menuBarView.on('change:isOpen', ()=>{\n            if (!menuBarView.isOpen) {\n                menuBarView.menus.forEach((menuView)=>{\n                    menuView.isOpen = false;\n                // @if CK_DEBUG_MENU_BAR // console.log( '[BEHAVIOR] closeMenusWhenTheBarCloses(): Closing', logMenu( menuView ) );\n                });\n            }\n        });\n    },\n    /**\n\t * Handles the following case:\n\t * 1. Hover to open a sub-menu (A). The button has focus.\n\t * 2. Press arrow up/down to move focus to another sub-menu (B) button.\n\t * 3. Press arrow right to open the sub-menu (B).\n\t * 4. The sub-menu (A) should close as it would with `toggleMenusAndFocusItemsOnHover()`.\n\t */ closeMenuWhenAnotherOnTheSameLevelOpens (menuBarView) {\n        menuBarView.on('menu:change:isOpen', (evt, name, isOpen)=>{\n            if (isOpen) {\n                menuBarView.menus.filter((menuView)=>{\n                    return evt.source.parentMenuView === menuView.parentMenuView && evt.source !== menuView && menuView.isOpen;\n                }).forEach((menuView)=>{\n                    menuView.isOpen = false;\n                // @if CK_DEBUG_MENU_BAR // console.log( '[BEHAVIOR] closeMenuWhenAnotherOpens(): Closing', logMenu( menuView ) );\n                });\n            }\n        });\n    },\n    /**\n\t * Closes the bar when the user clicked outside of it (page body, editor root, etc.).\n\t */ closeOnClickOutside (menuBarView) {\n        clickOutsideHandler({\n            emitter: menuBarView,\n            activator: ()=>menuBarView.isOpen,\n            callback: ()=>menuBarView.close(),\n            contextElements: ()=>menuBarView.children.map((child)=>child.element)\n        });\n    },\n    /**\n\t * Tracks the keyboard focus interaction on the menu bar view. It is used to determine if the nested items\n\t * of the menu bar should render focus rings after first interaction with the keyboard.\n\t */ enableFocusHighlightOnInteraction (menuBarView) {\n        let isKeyPressed = false;\n        menuBarView.on('change:isOpen', (_, evt, isOpen)=>{\n            if (!isOpen) {\n                // Keep the focus border if the menu bar was closed by a keyboard interaction (Esc key).\n                // The user remains in the keyboard navigation mode and can traverse the main categories.\n                // See https://github.com/ckeditor/ckeditor5/issues/16719.\n                if (!isKeyPressed) {\n                    menuBarView.isFocusBorderEnabled = false;\n                }\n                // Reset the flag when the menu bar is closed, menu items tend to intercept `keyup` event\n                // and sometimes, after pressing `enter` on focused item, `isKeyPressed` stuck in `true` state.\n                isKeyPressed = false;\n            }\n        });\n        menuBarView.listenTo(menuBarView.element, 'keydown', ()=>{\n            isKeyPressed = true;\n        }, {\n            useCapture: true\n        });\n        menuBarView.listenTo(menuBarView.element, 'keyup', ()=>{\n            isKeyPressed = false;\n        }, {\n            useCapture: true\n        });\n        menuBarView.listenTo(menuBarView.element, 'focus', ()=>{\n            if (isKeyPressed) {\n                menuBarView.isFocusBorderEnabled = true;\n            }\n        }, {\n            useCapture: true\n        });\n    }\n};\n/**\n * Behaviors of the {@link module:ui/menubar/menubarmenuview~MenuBarMenuView} component.\n * @internal\n */ const MenuBarMenuBehaviors = {\n    /**\n\t * If the button of the menu is focused, pressing the arrow down key should open the panel and focus it.\n\t * This is analogous to the {@link module:ui/dropdown/dropdownview~DropdownView}.\n\t */ openAndFocusPanelOnArrowDownKey (menuView) {\n        menuView.keystrokes.set('arrowdown', (data, cancel)=>{\n            if (menuView.isEnabled && menuView.focusTracker.focusedElement === menuView.buttonView.element) {\n                if (!menuView.isOpen) {\n                    menuView.isOpen = true;\n                }\n                menuView.panelView.focus();\n                cancel();\n            }\n        });\n    },\n    /**\n\t * Open the menu on the right arrow key press. This allows for navigating to sub-menus using the keyboard.\n\t */ openOnArrowRightKey (menuView) {\n        const keystroke = menuView.locale.uiLanguageDirection === 'rtl' ? 'arrowleft' : 'arrowright';\n        menuView.keystrokes.set(keystroke, (data, cancel)=>{\n            if (menuView.focusTracker.focusedElement !== menuView.buttonView.element || !menuView.isEnabled) {\n                return;\n            }\n            // @if CK_DEBUG_MENU_BAR // console.log( '[BEHAVIOR] openOnArrowRightKey(): Opening', logMenu( menuView ) );\n            if (!menuView.isOpen) {\n                menuView.isOpen = true;\n            }\n            menuView.panelView.focus();\n            cancel();\n        });\n    },\n    /**\n\t * Opens the menu on its button click. Note that this behavior only opens but never closes the menu (unlike\n\t * {@link module:ui/dropdown/dropdownview~DropdownView}).\n\t */ openOnButtonClick (menuView) {\n        menuView.buttonView.on('execute', ()=>{\n            menuView.isOpen = true;\n        });\n    },\n    /**\n\t * Toggles the menu on its button click. This behavior is analogous to {@link module:ui/dropdown/dropdownview~DropdownView}.\n\t */ toggleOnButtonClick (menuView) {\n        menuView.buttonView.on('execute', ()=>{\n            menuView.isOpen = !menuView.isOpen;\n        });\n    },\n    /**\n\t * Opens the menu and focuses the panel content upon pressing the Enter key.\n\t */ openAndFocusOnEnterKeyPress (menuView) {\n        menuView.keystrokes.set('enter', (data, cancel)=>{\n            // Engage only for Enter key press when the button is focused. The panel can contain\n            // other UI components and features that rely on the Enter key press.\n            if (menuView.focusTracker.focusedElement !== menuView.buttonView.element) {\n                return;\n            }\n            menuView.isOpen = true;\n            menuView.panelView.focus();\n            cancel();\n        });\n    },\n    /**\n\t * Closes the menu on the right left key press. This allows for navigating to sub-menus using the keyboard.\n\t */ closeOnArrowLeftKey (menuView) {\n        const keystroke = menuView.locale.uiLanguageDirection === 'rtl' ? 'arrowright' : 'arrowleft';\n        menuView.keystrokes.set(keystroke, (data, cancel)=>{\n            if (menuView.isOpen) {\n                menuView.isOpen = false;\n                menuView.focus();\n                cancel();\n            }\n        });\n    },\n    /**\n\t * Closes the menu on the esc key press. This allows for navigating to sub-menus using the keyboard.\n\t */ closeOnEscKey (menuView) {\n        menuView.keystrokes.set('esc', (data, cancel)=>{\n            if (menuView.isOpen) {\n                menuView.isOpen = false;\n                menuView.focus();\n                cancel();\n            }\n        });\n    },\n    /**\n\t * Closes the menu when its parent menu also closed. This prevents from orphaned open menus when the parent menu re-opens.\n\t */ closeOnParentClose (menuView) {\n        menuView.parentMenuView.on('change:isOpen', (evt, name, isOpen)=>{\n            if (!isOpen && evt.source === menuView.parentMenuView) {\n                // @if CK_DEBUG_MENU_BAR // console.log( '[BEHAVIOR] closeOnParentClose(): Closing', logMenu( menuView ) );\n                menuView.isOpen = false;\n            }\n        });\n    }\n};\n// @if CK_DEBUG_MENU_BAR // function logMenu( menuView: MenuBarMenuView ) {\n// @if CK_DEBUG_MENU_BAR //\treturn `\"${ menuView.buttonView.label }\"`;\n// @if CK_DEBUG_MENU_BAR // }\n/**\n * Contains every positioning function used by {@link module:ui/menubar/menubarmenuview~MenuBarMenuView} that decides where the\n * {@link module:ui/menubar/menubarmenuview~MenuBarMenuView#panelView} should be placed.\n *\n * Top-level menu positioning functions:\n *\n *\t┌──────┐\n *\t│      │\n *\t├──────┴────────┐\n *\t│               │\n *\t│               │\n *\t│               │\n *\t│            SE │\n *\t└───────────────┘\n *\n *\t         ┌──────┐\n *\t         │      │\n *\t┌────────┴──────┤\n *\t│               │\n *\t│               │\n *\t│               │\n *\t│ SW            │\n *\t└───────────────┘\n *\n *\t┌───────────────┐\n *\t│ NW            │\n *\t│               │\n *\t│               │\n *\t│               │\n *\t└────────┬──────┤\n *\t         │      │\n *\t         └──────┘\n *\n *\t┌───────────────┐\n *\t│            NE │\n *\t│               │\n *\t│               │\n *\t│               │\n *\t├──────┬────────┘\n *\t│      │\n *\t└──────┘\n *\n * Sub-menu positioning functions:\n *\n *\t┌──────┬───────────────┐\n *\t│      │               │\n *\t└──────┤               │\n *\t       │               │\n *\t       │            ES │\n *\t       └───────────────┘\n *\n *\t┌───────────────┬──────┐\n *\t│               │      │\n *\t│               ├──────┘\n *\t│               │\n *\t│ WS            │\n *\t└───────────────┘\n *\n *\t       ┌───────────────┐\n *\t       │            EN │\n *\t       │               │\n *\t┌──────┤               │\n *\t│      │               │\n *\t└──────┴───────────────┘\n *\n *\t┌───────────────┐\n *\t│ WN            │\n *\t│               │\n *\t│               ├──────┐\n *\t│               │      │\n *\t└───────────────┴──────┘\n */ /**\n * @internal\n */ const MenuBarMenuViewPanelPositioningFunctions = {\n    southEast: (buttonRect)=>{\n        return {\n            top: buttonRect.bottom,\n            left: buttonRect.left,\n            name: 'se'\n        };\n    },\n    southWest: (buttonRect, panelRect)=>{\n        return {\n            top: buttonRect.bottom,\n            left: buttonRect.left - panelRect.width + buttonRect.width,\n            name: 'sw'\n        };\n    },\n    northEast: (buttonRect, panelRect)=>{\n        return {\n            top: buttonRect.top - panelRect.height,\n            left: buttonRect.left,\n            name: 'ne'\n        };\n    },\n    northWest: (buttonRect, panelRect)=>{\n        return {\n            top: buttonRect.top - panelRect.height,\n            left: buttonRect.left - panelRect.width + buttonRect.width,\n            name: 'nw'\n        };\n    },\n    eastSouth: (buttonRect)=>{\n        return {\n            top: buttonRect.top,\n            left: buttonRect.right - NESTED_PANEL_HORIZONTAL_OFFSET,\n            name: 'es'\n        };\n    },\n    eastNorth: (buttonRect, panelRect)=>{\n        return {\n            top: buttonRect.top - panelRect.height,\n            left: buttonRect.right - NESTED_PANEL_HORIZONTAL_OFFSET,\n            name: 'en'\n        };\n    },\n    westSouth: (buttonRect, panelRect)=>{\n        return {\n            top: buttonRect.top,\n            left: buttonRect.left - panelRect.width + NESTED_PANEL_HORIZONTAL_OFFSET,\n            name: 'ws'\n        };\n    },\n    westNorth: (buttonRect, panelRect)=>{\n        return {\n            top: buttonRect.top - panelRect.height,\n            left: buttonRect.left - panelRect.width + NESTED_PANEL_HORIZONTAL_OFFSET,\n            name: 'wn'\n        };\n    }\n};\n/**\n * The default items {@link module:core/editor/editorconfig~EditorConfig#menuBar configuration} of the\n * {@link module:ui/menubar/menubarview~MenuBarView} component. It contains names of all menu bar components\n * registered in the {@link module:ui/componentfactory~ComponentFactory component factory} (available in the project).\n *\n * **Note**: Menu bar component names provided by core editor features are prefixed with `menuBar:` in order to distinguish\n * them from components referenced by the {@link module:core/editor/editorconfig~EditorConfig#toolbar toolbar configuration}, for instance,\n * `'menuBar:bold'` is a menu bar button but `'bold'` is a toolbar button.\n *\n * Below is the preset menu bar structure (the default value of `config.menuBar.items` property):\n *\n * ```ts\n * [\n * \t{\n * \t\tmenuId: 'file',\n * \t\tlabel: 'File',\n * \t\tgroups: [\n * \t\t\t{\n * \t\t\t\tgroupId: 'export',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:exportPdf',\n * \t\t\t\t\t'menuBar:exportWord'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'import',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:importWord'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'revisionHistory',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:revisionHistory'\n * \t\t\t\t]\n * \t\t\t}\n * \t\t]\n * \t},\n * \t{\n * \t\tmenuId: 'edit',\n * \t\tlabel: 'Edit',\n * \t\tgroups: [\n * \t\t\t{\n * \t\t\t\tgroupId: 'undo',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:undo',\n * \t\t\t\t\t'menuBar:redo'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'selectAll',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:selectAll'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'findAndReplace',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:findAndReplace'\n * \t\t\t\t]\n * \t\t\t}\n * \t\t]\n * \t},\n * \t{\n * \t\tmenuId: 'view',\n * \t\tlabel: 'View',\n * \t\tgroups: [\n * \t\t\t{\n * \t\t\t\tgroupId: 'sourceEditingEnhanced',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:sourceEditingEnhanced'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'sourceEditing',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:sourceEditing'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'showBlocks',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:showBlocks'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'previewMergeFields',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:previewMergeFields'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'fullscreen',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:fullscreen'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'restrictedEditingException',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:restrictedEditingException'\n * \t\t\t\t]\n * \t\t\t}\n * \t\t]\n * \t},\n * \t{\n * \t\tmenuId: 'insert',\n * \t\tlabel: 'Insert',\n * \t\tgroups: [\n * \t\t\t{\n * \t\t\t\tgroupId: 'insertMainWidgets',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:insertImage',\n * \t\t\t\t\t'menuBar:ckbox',\n * \t\t\t\t\t'menuBar:ckfinder',\n * \t\t\t\t\t'menuBar:insertTable'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'insertInline',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:link',\n * \t\t\t\t\t'menuBar:bookmark',\n * \t\t\t\t\t'menuBar:comment',\n * \t\t\t\t\t'menuBar:insertMergeField',\n * \t\t\t\t\t'menuBar:emoji'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'insertMinorWidgets',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:mediaEmbed',\n * \t\t\t\t\t'menuBar:insertTemplate',\n * \t\t\t\t\t'menuBar:blockQuote',\n * \t\t\t\t\t'menuBar:codeBlock',\n * \t\t\t\t\t'menuBar:htmlEmbed'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'insertStructureWidgets',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:horizontalLine',\n * \t\t\t\t\t'menuBar:pageBreak',\n * \t\t\t\t\t'menuBar:tableOfContents'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'restrictedEditing',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:restrictedEditing'\n * \t\t\t\t]\n * \t\t\t}\n * \t\t]\n * \t},\n * \t{\n * \t\tmenuId: 'format',\n * \t\tlabel: 'Format',\n * \t\tgroups: [\n * \t\t\t{\n * \t\t\t\tgroupId: 'textAndFont',\n * \t\t\t\titems: [\n * \t\t\t\t\t{\n * \t\t\t\t\t\tmenuId: 'text',\n * \t\t\t\t\t\tlabel: 'Text',\n * \t\t\t\t\t\tgroups: [\n * \t\t\t\t\t\t\t{\n * \t\t\t\t\t\t\t\tgroupId: 'basicStyles',\n * \t\t\t\t\t\t\t\titems: [\n * \t\t\t\t\t\t\t\t\t'menuBar:bold',\n * \t\t\t\t\t\t\t\t\t'menuBar:italic',\n * \t\t\t\t\t\t\t\t\t'menuBar:underline',\n * \t\t\t\t\t\t\t\t\t'menuBar:strikethrough',\n * \t\t\t\t\t\t\t\t\t'menuBar:superscript',\n * \t\t\t\t\t\t\t\t\t'menuBar:subscript',\n * \t\t\t\t\t\t\t\t\t'menuBar:code'\n * \t\t\t\t\t\t\t\t]\n * \t\t\t\t\t\t\t},\n * \t\t\t\t\t\t\t{\n * \t\t\t\t\t\t\t\tgroupId: 'textPartLanguage',\n * \t\t\t\t\t\t\t\titems: [\n * \t\t\t\t\t\t\t\t\t'menuBar:textPartLanguage'\n * \t\t\t\t\t\t\t\t]\n * \t\t\t\t\t\t\t}\n * \t\t\t\t\t\t]\n * \t\t\t\t\t},\n * \t\t\t\t\t{\n * \t\t\t\t\t\tmenuId: 'font',\n * \t\t\t\t\t\tlabel: 'Font',\n * \t\t\t\t\t\tgroups: [\n * \t\t\t\t\t\t\t{\n * \t\t\t\t\t\t\t\tgroupId: 'fontProperties',\n * \t\t\t\t\t\t\t\titems: [\n * \t\t\t\t\t\t\t\t\t'menuBar:fontSize',\n * \t\t\t\t\t\t\t\t\t'menuBar:fontFamily'\n * \t\t\t\t\t\t\t\t]\n * \t\t\t\t\t\t\t},\n * \t\t\t\t\t\t\t{\n * \t\t\t\t\t\t\t\tgroupId: 'fontColors',\n * \t\t\t\t\t\t\t\titems: [\n * \t\t\t\t\t\t\t\t\t'menuBar:fontColor',\n * \t\t\t\t\t\t\t\t\t'menuBar:fontBackgroundColor'\n * \t\t\t\t\t\t\t\t]\n * \t\t\t\t\t\t\t},\n * \t\t\t\t\t\t\t{\n * \t\t\t\t\t\t\t\tgroupId: 'highlight',\n * \t\t\t\t\t\t\t\titems: [\n * \t\t\t\t\t\t\t\t\t'menuBar:highlight'\n * \t\t\t\t\t\t\t\t]\n * \t\t\t\t\t\t\t}\n * \t\t\t\t\t\t]\n * \t\t\t\t\t},\n * \t\t\t\t\t'menuBar:heading'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'list',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:bulletedList',\n * \t\t\t\t\t'menuBar:numberedList',\n * \t\t\t\t\t'menuBar:multiLevelList',\n * \t\t\t\t\t'menuBar:todoList'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'indent',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:alignment',\n * \t\t\t\t\t'menuBar:lineHeight',\n * \t\t\t\t\t'menuBar:indent',\n * \t\t\t\t\t'menuBar:outdent'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'caseChange',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:caseChange'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'removeFormat',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:removeFormat'\n * \t\t\t\t]\n * \t\t\t}\n * \t\t]\n * \t},\n * \t{\n * \t\tmenuId: 'tools',\n * \t\tlabel: 'Tools',\n * \t\tgroups: [\n * \t\t\t{\n * \t\t\t\tgroupId: 'aiTools',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:aiAssistant',\n * \t\t\t\t\t'menuBar:aiCommands'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'tools',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:trackChanges',\n * \t\t\t\t\t'menuBar:commentsArchive'\n * \t\t\t\t]\n * \t\t\t}\n * \t\t]\n * \t},\n * \t{\n * \t\tmenuId: 'help',\n * \t\tlabel: 'Help',\n * \t\tgroups: [\n * \t\t\t{\n * \t\t\t\tgroupId: 'help',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:accessibilityHelp'\n * \t\t\t\t]\n * \t\t\t}\n * \t\t]\n * \t}\n * ];\n * ```\n *\n * The menu bar can be customized using the `config.menuBar.removeItems` and `config.menuBar.addItems` properties.\n */ // **NOTE: Whenever you make changes to this value, reflect it in the documentation above!**\nconst DefaultMenuBarItems = [\n    {\n        menuId: 'file',\n        label: 'File',\n        groups: [\n            {\n                groupId: 'export',\n                items: [\n                    'menuBar:exportPdf',\n                    'menuBar:exportWord'\n                ]\n            },\n            {\n                groupId: 'import',\n                items: [\n                    'menuBar:importWord'\n                ]\n            },\n            {\n                groupId: 'revisionHistory',\n                items: [\n                    'menuBar:revisionHistory'\n                ]\n            }\n        ]\n    },\n    {\n        menuId: 'edit',\n        label: 'Edit',\n        groups: [\n            {\n                groupId: 'undo',\n                items: [\n                    'menuBar:undo',\n                    'menuBar:redo'\n                ]\n            },\n            {\n                groupId: 'selectAll',\n                items: [\n                    'menuBar:selectAll'\n                ]\n            },\n            {\n                groupId: 'findAndReplace',\n                items: [\n                    'menuBar:findAndReplace'\n                ]\n            }\n        ]\n    },\n    {\n        menuId: 'view',\n        label: 'View',\n        groups: [\n            {\n                groupId: 'sourceEditingEnhanced',\n                items: [\n                    'menuBar:sourceEditingEnhanced'\n                ]\n            },\n            {\n                groupId: 'sourceEditing',\n                items: [\n                    'menuBar:sourceEditing'\n                ]\n            },\n            {\n                groupId: 'showBlocks',\n                items: [\n                    'menuBar:showBlocks'\n                ]\n            },\n            {\n                groupId: 'previewMergeFields',\n                items: [\n                    'menuBar:previewMergeFields'\n                ]\n            },\n            {\n                groupId: 'fullscreen',\n                items: [\n                    'menuBar:fullscreen'\n                ]\n            },\n            {\n                groupId: 'restrictedEditing',\n                items: [\n                    'menuBar:restrictedEditing'\n                ]\n            }\n        ]\n    },\n    {\n        menuId: 'insert',\n        label: 'Insert',\n        groups: [\n            {\n                groupId: 'insertMainWidgets',\n                items: [\n                    'menuBar:insertImage',\n                    'menuBar:ckbox',\n                    'menuBar:ckfinder',\n                    'menuBar:insertTable',\n                    'menuBar:insertTableLayout'\n                ]\n            },\n            {\n                groupId: 'insertInline',\n                items: [\n                    'menuBar:link',\n                    'menuBar:bookmark',\n                    'menuBar:comment',\n                    'menuBar:insertMergeField',\n                    'menuBar:emoji'\n                ]\n            },\n            {\n                groupId: 'insertMinorWidgets',\n                items: [\n                    'menuBar:mediaEmbed',\n                    'menuBar:insertTemplate',\n                    'menuBar:specialCharacters',\n                    'menuBar:blockQuote',\n                    'menuBar:codeBlock',\n                    'menuBar:htmlEmbed'\n                ]\n            },\n            {\n                groupId: 'insertStructureWidgets',\n                items: [\n                    'menuBar:horizontalLine',\n                    'menuBar:pageBreak',\n                    'menuBar:tableOfContents'\n                ]\n            },\n            {\n                groupId: 'restrictedEditingException',\n                items: [\n                    'menuBar:restrictedEditingException'\n                ]\n            }\n        ]\n    },\n    {\n        menuId: 'format',\n        label: 'Format',\n        groups: [\n            {\n                groupId: 'textAndFont',\n                items: [\n                    {\n                        menuId: 'text',\n                        label: 'Text',\n                        groups: [\n                            {\n                                groupId: 'basicStyles',\n                                items: [\n                                    'menuBar:bold',\n                                    'menuBar:italic',\n                                    'menuBar:underline',\n                                    'menuBar:strikethrough',\n                                    'menuBar:superscript',\n                                    'menuBar:subscript',\n                                    'menuBar:code'\n                                ]\n                            },\n                            {\n                                groupId: 'textPartLanguage',\n                                items: [\n                                    'menuBar:textPartLanguage'\n                                ]\n                            }\n                        ]\n                    },\n                    {\n                        menuId: 'font',\n                        label: 'Font',\n                        groups: [\n                            {\n                                groupId: 'fontProperties',\n                                items: [\n                                    'menuBar:fontSize',\n                                    'menuBar:fontFamily'\n                                ]\n                            },\n                            {\n                                groupId: 'fontColors',\n                                items: [\n                                    'menuBar:fontColor',\n                                    'menuBar:fontBackgroundColor'\n                                ]\n                            },\n                            {\n                                groupId: 'highlight',\n                                items: [\n                                    'menuBar:highlight'\n                                ]\n                            }\n                        ]\n                    },\n                    'menuBar:heading'\n                ]\n            },\n            {\n                groupId: 'list',\n                items: [\n                    'menuBar:bulletedList',\n                    'menuBar:numberedList',\n                    'menuBar:multiLevelList',\n                    'menuBar:todoList'\n                ]\n            },\n            {\n                groupId: 'indent',\n                items: [\n                    'menuBar:alignment',\n                    'menuBar:lineHeight',\n                    'menuBar:indent',\n                    'menuBar:outdent'\n                ]\n            },\n            {\n                groupId: 'caseChange',\n                items: [\n                    'menuBar:caseChange'\n                ]\n            },\n            {\n                groupId: 'removeFormat',\n                items: [\n                    'menuBar:removeFormat'\n                ]\n            }\n        ]\n    },\n    {\n        menuId: 'tools',\n        label: 'Tools',\n        groups: [\n            {\n                groupId: 'aiTools',\n                items: [\n                    'menuBar:aiAssistant',\n                    'menuBar:aiCommands'\n                ]\n            },\n            {\n                groupId: 'tools',\n                items: [\n                    'menuBar:trackChanges',\n                    'menuBar:commentsArchive'\n                ]\n            }\n        ]\n    },\n    {\n        menuId: 'help',\n        label: 'Help',\n        groups: [\n            {\n                groupId: 'help',\n                items: [\n                    'menuBar:accessibilityHelp'\n                ]\n            }\n        ]\n    }\n];\n/**\n * Performs a cleanup and normalization of the menu bar configuration.\n */ function normalizeMenuBarConfig(config) {\n    let configObject;\n    // The integrator specified the config as an object but without items. Let's give them defaults but respect their\n    // additions and removals.\n    if (!('items' in config) || !config.items) {\n        configObject = {\n            items: cloneDeep(DefaultMenuBarItems),\n            addItems: [],\n            removeItems: [],\n            isVisible: true,\n            isUsingDefaultConfig: true,\n            ...config\n        };\n    } else {\n        configObject = {\n            items: config.items,\n            removeItems: [],\n            addItems: [],\n            isVisible: true,\n            isUsingDefaultConfig: false,\n            ...config\n        };\n    }\n    return configObject;\n}\n/**\n * Processes a normalized menu bar config and returns a config clone with the following modifications:\n *\n * * Removed components that are not available in the component factory,\n * * Removed obsolete separators,\n * * Purged empty menus,\n * * Localized top-level menu labels.\n * @internal\n */ function processMenuBarConfig({ normalizedConfig, locale, componentFactory, extraItems }) {\n    const configClone = cloneDeep(normalizedConfig);\n    handleAdditions(normalizedConfig, configClone, extraItems);\n    handleRemovals(normalizedConfig, configClone);\n    handleAdditions(normalizedConfig, configClone, configClone.addItems);\n    purgeUnavailableComponents(normalizedConfig, configClone, componentFactory);\n    purgeEmptyMenus(normalizedConfig, configClone);\n    localizeMenuLabels(configClone, locale);\n    return configClone;\n}\n/**\n * Removes items from the menu bar config based on user `removeItems` configuration. Users can remove\n * individual items, groups, or entire menus. For each removed item, a warning is logged if the item\n * was not found in the configuration.\n */ function handleRemovals(originalConfig, config) {\n    const itemsToBeRemoved = config.removeItems;\n    const successfullyRemovedItems = [];\n    // Remove top-level menus.\n    config.items = config.items.filter(({ menuId })=>{\n        if (itemsToBeRemoved.includes(menuId)) {\n            successfullyRemovedItems.push(menuId);\n            return false;\n        }\n        return true;\n    });\n    walkConfigMenus(config.items, (menuDefinition)=>{\n        // Remove groups from menus.\n        menuDefinition.groups = menuDefinition.groups.filter(({ groupId })=>{\n            if (itemsToBeRemoved.includes(groupId)) {\n                successfullyRemovedItems.push(groupId);\n                return false;\n            }\n            return true;\n        });\n        // Remove sub-menus and items from groups.\n        for (const groupDefinition of menuDefinition.groups){\n            groupDefinition.items = groupDefinition.items.filter((item)=>{\n                const itemId = getIdFromGroupItem(item);\n                if (itemsToBeRemoved.includes(itemId)) {\n                    successfullyRemovedItems.push(itemId);\n                    return false;\n                }\n                return true;\n            });\n        }\n    });\n    for (const itemName of itemsToBeRemoved){\n        if (!successfullyRemovedItems.includes(itemName)) {\n            /**\n\t\t\t * There was a problem processing the configuration of the menu bar. The item with the given\n\t\t\t * name does could not be removed from the menu bar configuration.\n\t\t\t *\n\t\t\t * This warning usually shows up when the {@link module:core/plugin~Plugin} which is supposed\n\t\t\t * to provide a menu bar item has not been loaded or there is a typo in the\n\t\t\t * {@link module:core/editor/editorconfig~EditorConfig#menuBar menu bar configuration}.\n\t\t\t *\n\t\t\t * @error menu-bar-item-could-not-be-removed\n\t\t\t * @param menuBarConfig The full configuration of the menu bar.\n\t\t\t * @param itemName The name of the item that was not removed from the menu bar.\n\t\t\t */ logWarning('menu-bar-item-could-not-be-removed', {\n                menuBarConfig: originalConfig,\n                itemName\n            });\n        }\n    }\n}\n/**\n * Adds provided items to config. It allows for adding menus, groups, and items at arbitrary\n * positions in the menu bar. If the position does not exist, a warning is logged.\n */ function handleAdditions(originalConfig, config, items) {\n    const successFullyAddedItems = [];\n    if (items.length == 0) {\n        return;\n    }\n    for (const itemToAdd of items){\n        const relation = getRelationFromPosition(itemToAdd.position);\n        const relativeId = getRelativeIdFromPosition(itemToAdd.position);\n        // Adding a menu.\n        if (isMenuBarMenuAddition(itemToAdd)) {\n            if (!relativeId) {\n                // Adding a top-level menu at the beginning of the menu bar.\n                if (relation === 'start') {\n                    config.items.unshift(itemToAdd.menu);\n                    successFullyAddedItems.push(itemToAdd);\n                } else if (relation === 'end') {\n                    config.items.push(itemToAdd.menu);\n                    successFullyAddedItems.push(itemToAdd);\n                }\n            } else {\n                const topLevelMenuDefinitionIndex = config.items.findIndex((menuDefinition)=>menuDefinition.menuId === relativeId);\n                // Adding a top-level menu somewhere between existing menu bar menus.\n                if (topLevelMenuDefinitionIndex != -1) {\n                    if (relation === 'before') {\n                        config.items.splice(topLevelMenuDefinitionIndex, 0, itemToAdd.menu);\n                        successFullyAddedItems.push(itemToAdd);\n                    } else if (relation === 'after') {\n                        config.items.splice(topLevelMenuDefinitionIndex + 1, 0, itemToAdd.menu);\n                        successFullyAddedItems.push(itemToAdd);\n                    }\n                } else {\n                    const wasAdded = addMenuOrItemToGroup(config, itemToAdd.menu, relativeId, relation);\n                    if (wasAdded) {\n                        successFullyAddedItems.push(itemToAdd);\n                    }\n                }\n            }\n        } else if (isMenuBarMenuGroupAddition(itemToAdd)) {\n            walkConfigMenus(config.items, (menuDefinition)=>{\n                if (menuDefinition.menuId === relativeId) {\n                    // Add a group at the start of a menu.\n                    if (relation === 'start') {\n                        menuDefinition.groups.unshift(itemToAdd.group);\n                        successFullyAddedItems.push(itemToAdd);\n                    } else if (relation === 'end') {\n                        menuDefinition.groups.push(itemToAdd.group);\n                        successFullyAddedItems.push(itemToAdd);\n                    }\n                } else {\n                    const relativeGroupIndex = menuDefinition.groups.findIndex((group)=>group.groupId === relativeId);\n                    if (relativeGroupIndex !== -1) {\n                        // Add a group before an existing group in a menu.\n                        if (relation === 'before') {\n                            menuDefinition.groups.splice(relativeGroupIndex, 0, itemToAdd.group);\n                            successFullyAddedItems.push(itemToAdd);\n                        } else if (relation === 'after') {\n                            menuDefinition.groups.splice(relativeGroupIndex + 1, 0, itemToAdd.group);\n                            successFullyAddedItems.push(itemToAdd);\n                        }\n                    }\n                }\n            });\n        } else {\n            const wasAdded = addMenuOrItemToGroup(config, itemToAdd.item, relativeId, relation);\n            if (wasAdded) {\n                successFullyAddedItems.push(itemToAdd);\n            }\n        }\n    }\n    for (const addedItemConfig of items){\n        if (!successFullyAddedItems.includes(addedItemConfig)) {\n            /**\n\t\t\t * There was a problem processing the configuration of the menu bar. The configured item could not be added\n\t\t\t * because the position it was supposed to be added to does not exist.\n\t\t\t *\n\t\t\t * This warning usually shows up when the {@link module:core/plugin~Plugin} which is supposed\n\t\t\t * to provide a menu bar item has not been loaded or there is a typo in the\n\t\t\t * {@link module:core/editor/editorconfig~EditorConfig#menuBar menu bar configuration}.\n\t\t\t *\n\t\t\t * @error menu-bar-item-could-not-be-removed\n\t\t\t * @param {object} menuBarConfig The full configuration of the menu bar.\n\t\t\t * @param {object} addedItemConfig The name of the item that was not removed from the menu bar.\n\t\t\t */ logWarning('menu-bar-item-could-not-be-added', {\n                menuBarConfig: originalConfig,\n                addedItemConfig\n            });\n        }\n    }\n}\n/**\n * Handles adding a sub-menu or an item into a group. The logic is the same for both cases.\n */ function addMenuOrItemToGroup(config, itemOrMenuToAdd, relativeId, relation) {\n    let wasAdded = false;\n    walkConfigMenus(config.items, (menuDefinition)=>{\n        for (const { groupId, items: groupItems } of menuDefinition.groups){\n            // Avoid infinite loops.\n            if (wasAdded) {\n                return;\n            }\n            if (groupId === relativeId) {\n                // Adding an item/menu at the beginning of a group.\n                if (relation === 'start') {\n                    groupItems.unshift(itemOrMenuToAdd);\n                    wasAdded = true;\n                } else if (relation === 'end') {\n                    groupItems.push(itemOrMenuToAdd);\n                    wasAdded = true;\n                }\n            } else {\n                // Adding an item/menu relative to an existing item/menu.\n                const relativeItemIndex = groupItems.findIndex((groupItem)=>{\n                    return getIdFromGroupItem(groupItem) === relativeId;\n                });\n                if (relativeItemIndex !== -1) {\n                    if (relation === 'before') {\n                        groupItems.splice(relativeItemIndex, 0, itemOrMenuToAdd);\n                        wasAdded = true;\n                    } else if (relation === 'after') {\n                        groupItems.splice(relativeItemIndex + 1, 0, itemOrMenuToAdd);\n                        wasAdded = true;\n                    }\n                }\n            }\n        }\n    });\n    return wasAdded;\n}\n/**\n * Removes components from the menu bar configuration that are not available in the factory and would\n * not be instantiated. Warns about missing components if the menu bar configuration was specified by the user.\n */ function purgeUnavailableComponents(originalConfig, config, componentFactory) {\n    walkConfigMenus(config.items, (menuDefinition)=>{\n        for (const groupDefinition of menuDefinition.groups){\n            groupDefinition.items = groupDefinition.items.filter((item)=>{\n                const isItemUnavailable = typeof item === 'string' && !componentFactory.has(item);\n                // The default configuration contains all possible editor features. But integrators' editors rarely load\n                // every possible feature. This is why we do not want to log warnings about unavailable items for the default config\n                // because they would show up in almost every integration. If the configuration has been provided by\n                // the integrator, on the other hand, then these warnings bring value.\n                if (isItemUnavailable && !config.isUsingDefaultConfig) {\n                    /**\n\t\t\t\t\t * There was a problem processing the configuration of the menu bar. The item with the given\n\t\t\t\t\t * name does not exist so it was omitted when rendering the menu bar.\n\t\t\t\t\t *\n\t\t\t\t\t * This warning usually shows up when the {@link module:core/plugin~Plugin} which is supposed\n\t\t\t\t\t * to provide a menu bar item has not been loaded or there is a typo in the\n\t\t\t\t\t * {@link module:core/editor/editorconfig~EditorConfig#menuBar menu bar configuration}.\n\t\t\t\t\t *\n\t\t\t\t\t * Make sure the plugin responsible for this menu bar item is loaded and the menu bar configuration\n\t\t\t\t\t * is correct, e.g. {@link module:basic-styles/bold/boldui~BoldUI} is loaded for the `'menuBar:bold'`\n\t\t\t\t\t * menu bar item.\n\t\t\t\t\t *\n\t\t\t\t\t * @error menu-bar-item-unavailable\n\t\t\t\t\t * @param {object} menuBarConfig The full configuration of the menu bar.\n\t\t\t\t\t * @param {object} parentMenuConfig The config of the menu the unavailable component was defined in.\n\t\t\t\t\t * @param {string} componentName The name of the unavailable component.\n\t\t\t\t\t */ logWarning('menu-bar-item-unavailable', {\n                        menuBarConfig: originalConfig,\n                        parentMenuConfig: cloneDeep(menuDefinition),\n                        componentName: item\n                    });\n                }\n                return !isItemUnavailable;\n            });\n        }\n    });\n}\n/**\n * Removes empty menus from the menu bar configuration to improve the visual UX. Such menus can occur\n * when some plugins responsible for providing menu bar items have not been loaded and some part of\n * the configuration populated menus using these components exclusively.\n */ function purgeEmptyMenus(originalConfig, config) {\n    const isUsingDefaultConfig = config.isUsingDefaultConfig;\n    let wasSubMenuPurged = false;\n    // Purge top-level menus.\n    config.items = config.items.filter((menuDefinition)=>{\n        if (!menuDefinition.groups.length) {\n            warnAboutEmptyMenu(originalConfig, menuDefinition, isUsingDefaultConfig);\n            return false;\n        }\n        return true;\n    });\n    // Warn if there were no top-level menus left in the menu bar after purging.\n    if (!config.items.length) {\n        warnAboutEmptyMenu(originalConfig, originalConfig, isUsingDefaultConfig);\n        return;\n    }\n    // Purge sub-menus and groups.\n    walkConfigMenus(config.items, (menuDefinition)=>{\n        // Get rid of empty groups.\n        menuDefinition.groups = menuDefinition.groups.filter((groupDefinition)=>{\n            if (!groupDefinition.items.length) {\n                wasSubMenuPurged = true;\n                return false;\n            }\n            return true;\n        });\n        // Get rid of empty sub-menus.\n        for (const groupDefinition of menuDefinition.groups){\n            groupDefinition.items = groupDefinition.items.filter((item)=>{\n                // If no groups were left after removing empty ones.\n                if (isMenuDefinition(item) && !item.groups.length) {\n                    warnAboutEmptyMenu(originalConfig, item, isUsingDefaultConfig);\n                    wasSubMenuPurged = true;\n                    return false;\n                }\n                return true;\n            });\n        }\n    });\n    if (wasSubMenuPurged) {\n        // The config is walked from the root to the leaves so if anything gets removed, we need to re-run the\n        // whole process because it could've affected parents.\n        purgeEmptyMenus(originalConfig, config);\n    }\n}\nfunction warnAboutEmptyMenu(originalConfig, emptyMenuConfig, isUsingDefaultConfig) {\n    if (isUsingDefaultConfig) {\n        return;\n    }\n    /**\n\t * There was a problem processing the configuration of the menu bar. One of the menus\n\t * is empty so it was omitted when rendering the menu bar.\n\t *\n\t * This warning usually shows up when some {@link module:core/plugin~Plugin plugins} responsible for\n\t * providing menu bar items have not been loaded and the\n\t * {@link module:core/editor/editorconfig~EditorConfig#menuBar menu bar configuration} was not updated.\n\t *\n\t * Make sure all necessary editor plugins are loaded and/or update the menu bar configuration\n\t * to account for the missing menu items.\n\t *\n\t * @error menu-bar-menu-empty\n\t * @param {object} menuBarConfig The full configuration of the menu bar.\n\t * @param {object} emptyMenuConfig The definition of the menu that has no child items.\n\t */ logWarning('menu-bar-menu-empty', {\n        menuBarConfig: originalConfig,\n        emptyMenuConfig\n    });\n}\n/**\n * Localizes the user-config using pre-defined localized category labels.\n */ function localizeMenuLabels(config, locale) {\n    const t = locale.t;\n    const localizedCategoryLabels = {\n        // Top-level categories.\n        'File': t({\n            string: 'File',\n            id: 'MENU_BAR_MENU_FILE'\n        }),\n        'Edit': t({\n            string: 'Edit',\n            id: 'MENU_BAR_MENU_EDIT'\n        }),\n        'View': t({\n            string: 'View',\n            id: 'MENU_BAR_MENU_VIEW'\n        }),\n        'Insert': t({\n            string: 'Insert',\n            id: 'MENU_BAR_MENU_INSERT'\n        }),\n        'Format': t({\n            string: 'Format',\n            id: 'MENU_BAR_MENU_FORMAT'\n        }),\n        'Tools': t({\n            string: 'Tools',\n            id: 'MENU_BAR_MENU_TOOLS'\n        }),\n        'Help': t({\n            string: 'Help',\n            id: 'MENU_BAR_MENU_HELP'\n        }),\n        // Sub-menus.\n        'Text': t({\n            string: 'Text',\n            id: 'MENU_BAR_MENU_TEXT'\n        }),\n        'Font': t({\n            string: 'Font',\n            id: 'MENU_BAR_MENU_FONT'\n        })\n    };\n    walkConfigMenus(config.items, (definition)=>{\n        if (definition.label in localizedCategoryLabels) {\n            definition.label = localizedCategoryLabels[definition.label];\n        }\n    });\n}\n/**\n * Recursively visits all menu definitions in the config and calls the callback for each of them.\n */ function walkConfigMenus(definition, callback) {\n    if (Array.isArray(definition)) {\n        for (const topLevelMenuDefinition of definition){\n            walk(topLevelMenuDefinition);\n        }\n    }\n    function walk(menuDefinition) {\n        callback(menuDefinition);\n        for (const groupDefinition of menuDefinition.groups){\n            for (const groupItem of groupDefinition.items){\n                if (isMenuDefinition(groupItem)) {\n                    walk(groupItem);\n                }\n            }\n        }\n    }\n}\nfunction isMenuBarMenuAddition(definition) {\n    return typeof definition === 'object' && 'menu' in definition;\n}\nfunction isMenuBarMenuGroupAddition(definition) {\n    return typeof definition === 'object' && 'group' in definition;\n}\nfunction getRelationFromPosition(position) {\n    if (position.startsWith('start')) {\n        return 'start';\n    } else if (position.startsWith('end')) {\n        return 'end';\n    } else if (position.startsWith('after')) {\n        return 'after';\n    } else {\n        return 'before';\n    }\n}\nfunction getRelativeIdFromPosition(position) {\n    const match = position.match(/^[^:]+:(.+)/);\n    if (match) {\n        return match[1];\n    }\n    return null;\n}\nfunction getIdFromGroupItem(item) {\n    return typeof item === 'string' ? item : item.menuId;\n}\nfunction isMenuDefinition(definition) {\n    return typeof definition === 'object' && 'menuId' in definition;\n}\n\n/**\n * A class providing the minimal interface that is required to successfully bootstrap any editor UI.\n */ class EditorUI extends /* #__PURE__ */ ObservableMixin() {\n    /**\n\t * The editor that the UI belongs to.\n\t */ editor;\n    /**\n\t * An instance of the {@link module:ui/componentfactory~ComponentFactory}, a registry used by plugins\n\t * to register factories of specific UI components.\n\t */ componentFactory;\n    /**\n\t * Stores the information about the editor UI focus and propagates it so various plugins and components\n\t * are unified as a focus group.\n\t */ focusTracker;\n    /**\n\t * Manages the tooltips displayed on mouseover and focus across the UI.\n\t */ tooltipManager;\n    /**\n\t * A helper that enables the \"powered by\" feature in the editor and renders a link to the project's webpage.\n\t */ poweredBy;\n    /**\n\t * A helper that enables the \"evaluation badge\" feature in the editor.\n\t */ evaluationBadge;\n    /**\n\t * A helper that manages the content of an `aria-live` regions used by editor features to announce status changes\n\t * to screen readers.\n\t */ ariaLiveAnnouncer;\n    /**\n\t * Indicates the UI is ready. Set `true` after {@link #event:ready} event is fired.\n\t *\n\t * @readonly\n\t * @default false\n\t */ isReady = false;\n    /**\n\t * Stores all editable elements used by the editor instance.\n\t */ _editableElementsMap = new Map();\n    /**\n\t * All available & focusable toolbars.\n\t */ _focusableToolbarDefinitions = [];\n    /**\n\t * All additional menu bar items, groups or menus that have their default location defined.\n\t */ _extraMenuBarElements = [];\n    /**\n\t * The last focused element to which focus should return on `Esc` press.\n\t */ _lastFocusedForeignElement = null;\n    /**\n\t * The DOM emitter instance used for visual viewport watching.\n\t */ _domEmitter;\n    /**\n\t * Creates an instance of the editor UI class.\n\t *\n\t * @param editor The editor instance.\n\t */ constructor(editor){\n        super();\n        const editingView = editor.editing.view;\n        this.editor = editor;\n        this.componentFactory = new ComponentFactory(editor);\n        this.focusTracker = new FocusTracker();\n        this.tooltipManager = new TooltipManager(editor);\n        this.poweredBy = new PoweredBy(editor);\n        this.evaluationBadge = new EvaluationBadge(editor);\n        this.ariaLiveAnnouncer = new AriaLiveAnnouncer(editor);\n        this._initViewportOffset(this._readViewportOffsetFromConfig());\n        this.once('ready', ()=>{\n            this._bindBodyCollectionWithFocusTracker();\n            this.isReady = true;\n        });\n        // Informs UI components that should be refreshed after layout change.\n        this.listenTo(editingView.document, 'layoutChanged', this.update.bind(this));\n        this.listenTo(editingView, 'scrollToTheSelection', this._handleScrollToTheSelection.bind(this));\n        this._initFocusTracking();\n        this._initVisualViewportSupport();\n    }\n    /**\n\t * The main (outermost) DOM element of the editor UI.\n\t *\n\t * For example, in {@link module:editor-classic/classiceditor~ClassicEditor} it is a `<div>` which\n\t * wraps the editable element and the toolbar. In {@link module:editor-inline/inlineeditor~InlineEditor}\n\t * it is the editable element itself (as there is no other wrapper). However, in\n\t * {@link module:editor-decoupled/decouplededitor~DecoupledEditor} it is set to `null` because this editor does not\n\t * come with a single \"main\" HTML element (its editable element and toolbar are separate).\n\t *\n\t * This property can be understood as a shorthand for retrieving the element that a specific editor integration\n\t * considers to be its main DOM element.\n\t */ get element() {\n        return null;\n    }\n    /**\n\t * Fires the {@link module:ui/editorui/editorui~EditorUI#event:update `update`} event.\n\t *\n\t * This method should be called when the editor UI (e.g. positions of its balloons) needs to be updated due to\n\t * some environmental change which CKEditor 5 is not aware of (e.g. resize of a container in which it is used).\n\t */ update() {\n        this.fire('update');\n    }\n    /**\n\t * Destroys the UI.\n\t */ destroy() {\n        this.stopListening();\n        this.focusTracker.destroy();\n        this.tooltipManager.destroy(this.editor);\n        this.poweredBy.destroy();\n        this.evaluationBadge.destroy();\n        // Clean–up the references to the CKEditor instance stored in the native editable DOM elements.\n        for (const domElement of this._editableElementsMap.values()){\n            domElement.ckeditorInstance = null;\n            this.editor.keystrokes.stopListening(domElement);\n        }\n        this._editableElementsMap = new Map();\n        this._focusableToolbarDefinitions = [];\n        if (this._domEmitter) {\n            this._domEmitter.stopListening();\n        }\n    }\n    /**\n\t * Stores the native DOM editable element used by the editor under a unique name.\n\t *\n\t * Also, registers the element in the editor to maintain the accessibility of the UI. When the user is editing text in a focusable\n\t * editable area, they can use the <kbd>Alt</kbd> + <kbd>F10</kbd> keystroke to navigate over editor toolbars. See {@link #addToolbar}.\n\t *\n\t * @param rootName The unique name of the editable element.\n\t * @param domElement The native DOM editable element.\n\t */ setEditableElement(rootName, domElement) {\n        this._editableElementsMap.set(rootName, domElement);\n        // Put a reference to the CKEditor instance in the editable native DOM element.\n        // It helps 3rd–party software (browser extensions, other libraries) access and recognize\n        // CKEditor 5 instances (editing roots) and use their API (there is no global editor\n        // instance registry).\n        if (!domElement.ckeditorInstance) {\n            domElement.ckeditorInstance = this.editor;\n        }\n        // Register the element, so it becomes available for Alt+F10 and Esc navigation.\n        this.focusTracker.add(domElement);\n        const setUpKeystrokeHandler = ()=>{\n            // The editing view of the editor is already listening to keystrokes from DOM roots (see: KeyObserver).\n            // Do not duplicate listeners.\n            if (this.editor.editing.view.getDomRoot(rootName)) {\n                return;\n            }\n            this.editor.keystrokes.listenTo(domElement);\n        };\n        // For editable elements set by features after EditorUI is ready (e.g. source editing).\n        if (this.isReady) {\n            setUpKeystrokeHandler();\n        } else {\n            this.once('ready', setUpKeystrokeHandler);\n        }\n    }\n    /**\n\t * Removes the editable from the editor UI. Removes all handlers added by {@link #setEditableElement}.\n\t *\n\t * @param rootName The name of the editable element to remove.\n\t */ removeEditableElement(rootName) {\n        const domElement = this._editableElementsMap.get(rootName);\n        if (!domElement) {\n            return;\n        }\n        this._editableElementsMap.delete(rootName);\n        this.editor.keystrokes.stopListening(domElement);\n        this.focusTracker.remove(domElement);\n        domElement.ckeditorInstance = null;\n    }\n    /**\n\t * Returns the editable editor element with the given name or null if editable does not exist.\n\t *\n\t * @param rootName The editable name.\n\t */ getEditableElement(rootName = 'main') {\n        return this._editableElementsMap.get(rootName);\n    }\n    /**\n\t * Returns array of names of all editor editable elements.\n\t */ getEditableElementsNames() {\n        return this._editableElementsMap.keys();\n    }\n    /**\n\t * Adds a toolbar to the editor UI. Used primarily to maintain the accessibility of the UI.\n\t *\n\t * Focusable toolbars can be accessed (focused) by users by pressing the <kbd>Alt</kbd> + <kbd>F10</kbd> keystroke.\n\t * Successive keystroke presses navigate over available toolbars.\n\t *\n\t * @param toolbarView A instance of the toolbar to be registered.\n\t */ addToolbar(toolbarView, options = {}) {\n        if (toolbarView.isRendered) {\n            this.focusTracker.add(toolbarView);\n            this.editor.keystrokes.listenTo(toolbarView.element);\n        } else {\n            toolbarView.once('render', ()=>{\n                this.focusTracker.add(toolbarView);\n                this.editor.keystrokes.listenTo(toolbarView.element);\n            });\n        }\n        this._focusableToolbarDefinitions.push({\n            toolbarView,\n            options\n        });\n    }\n    /**\n\t * Registers an extra menu bar element, which could be a single item, a group of items, or a menu containing groups.\n\t *\n\t * ```ts\n\t * // Register a new menu bar item.\n\t * editor.ui.extendMenuBar( {\n\t *   item: 'menuBar:customFunctionButton',\n\t *   position: 'after:menuBar:bold'\n\t * } );\n\t *\n\t * // Register a new menu bar group.\n\t * editor.ui.extendMenuBar( {\n\t *   group: {\n\t *     groupId: 'customGroup',\n\t *     items: [\n\t *       'menuBar:customFunctionButton'\n\t *     ]\n\t *   },\n\t *   position: 'start:help'\n\t * } );\n\t *\n\t * // Register a new menu bar menu.\n\t * editor.ui.extendMenuBar( {\n\t *   menu: {\n\t *     menuId: 'customMenu',\n\t *     label: 'customMenu',\n\t *     groups: [\n\t *       {\n\t *         groupId: 'customGroup',\n\t *         items: [\n\t *           'menuBar:customFunctionButton'\n\t *         ]\n\t *       }\n\t *     ]\n\t *   },\n\t *   position: 'after:help'\n\t * } );\n\t * ```\n\t */ extendMenuBar(config) {\n        this._extraMenuBarElements.push(config);\n    }\n    /**\n\t * Initializes menu bar.\n\t */ initMenuBar(menuBarView) {\n        const menuBarViewElement = menuBarView.element;\n        this.focusTracker.add(menuBarViewElement);\n        this.editor.keystrokes.listenTo(menuBarViewElement);\n        const normalizedMenuBarConfig = normalizeMenuBarConfig(this.editor.config.get('menuBar') || {});\n        menuBarView.fillFromConfig(normalizedMenuBarConfig, this.componentFactory, this._extraMenuBarElements);\n        this.editor.keystrokes.set('Esc', (data, cancel)=>{\n            if (!menuBarViewElement.contains(this.editor.ui.focusTracker.focusedElement)) {\n                return;\n            }\n            // Bring focus back to where it came from before focusing the toolbar:\n            // If it came from outside the engine view (e.g. source editing), move it there.\n            if (this._lastFocusedForeignElement) {\n                this._lastFocusedForeignElement.focus();\n                this._lastFocusedForeignElement = null;\n            } else {\n                this.editor.editing.view.focus();\n            }\n            cancel();\n        });\n        this.editor.keystrokes.set('Alt+F9', (data, cancel)=>{\n            // If menu bar is already focused do nothing.\n            if (menuBarViewElement.contains(this.editor.ui.focusTracker.focusedElement)) {\n                return;\n            }\n            this._saveLastFocusedForeignElement();\n            menuBarView.isFocusBorderEnabled = true;\n            menuBarView.focus();\n            cancel();\n        });\n    }\n    /**\n\t * Returns viewport offsets object:\n\t *\n\t * ```js\n\t * {\n\t * \ttop: Number,\n\t * \tright: Number,\n\t * \tbottom: Number,\n\t * \tleft: Number\n\t * }\n\t * ```\n\t *\n\t * Only top property is currently supported.\n\t */ _readViewportOffsetFromConfig() {\n        const editor = this.editor;\n        const viewportOffsetConfig = editor.config.get('ui.viewportOffset');\n        if (viewportOffsetConfig) {\n            return viewportOffsetConfig;\n        }\n        // Not present in EditorConfig type, because it's legacy. Hence the `as` expression.\n        const legacyOffsetConfig = editor.config.get('toolbar.viewportTopOffset');\n        // Fall back to deprecated toolbar config.\n        if (legacyOffsetConfig) {\n            /**\n\t\t\t * The {@link module:core/editor/editorconfig~EditorConfig#toolbar `EditorConfig#toolbar.viewportTopOffset`}\n\t\t\t * property has been deprecated and will be removed in the near future. Please use\n\t\t\t * {@link module:core/editor/editorconfig~EditorConfig#ui `EditorConfig#ui.viewportOffset`} instead.\n\t\t\t *\n\t\t\t * @error editor-ui-deprecated-viewport-offset-config\n\t\t\t */ console.warn('editor-ui-deprecated-viewport-offset-config: ' + 'The `toolbar.vieportTopOffset` configuration option is deprecated. ' + 'It will be removed from future CKEditor versions. Use `ui.viewportOffset.top` instead.');\n            return {\n                top: legacyOffsetConfig\n            };\n        }\n        // More keys to come in the future.\n        return {\n            top: 0\n        };\n    }\n    /**\n\t * Starts listening for <kbd>Alt</kbd> + <kbd>F10</kbd> and <kbd>Esc</kbd> keystrokes in the context of focusable\n\t * {@link #setEditableElement editable elements} and {@link #addToolbar toolbars}\n\t * to allow users navigate across the UI.\n\t */ _initFocusTracking() {\n        const editor = this.editor;\n        let candidateDefinitions;\n        // Focus the next focusable toolbar on <kbd>Alt</kbd> + <kbd>F10</kbd>.\n        editor.keystrokes.set('Alt+F10', (data, cancel)=>{\n            this._saveLastFocusedForeignElement();\n            const currentFocusedToolbarDefinition = this._getCurrentFocusedToolbarDefinition();\n            // * When focusing a toolbar for the first time, set the array of definitions for successive presses of Alt+F10.\n            // This ensures, the navigation works always the same and no pair of toolbars takes over\n            // (e.g. image and table toolbars when a selected image is inside a cell).\n            // * It could be that the focus went to the toolbar by clicking a toolbar item (e.g. a dropdown). In this case,\n            // there were no candidates so they must be obtained (#12339).\n            if (!currentFocusedToolbarDefinition || !candidateDefinitions) {\n                candidateDefinitions = this._getFocusableCandidateToolbarDefinitions();\n            }\n            // In a single Alt+F10 press, check all candidates but if none were focused, don't go any further.\n            // This prevents an infinite loop.\n            for(let i = 0; i < candidateDefinitions.length; i++){\n                const candidateDefinition = candidateDefinitions.shift();\n                // Put the first definition to the back of the array. This allows circular navigation over all toolbars\n                // on successive presses of Alt+F10.\n                candidateDefinitions.push(candidateDefinition);\n                // Don't focus the same toolbar again. If you did, this would move focus from the nth focused toolbar item back to the\n                // first item as per ToolbarView#focus() if the user navigated inside the toolbar.\n                if (candidateDefinition !== currentFocusedToolbarDefinition && this._focusFocusableCandidateToolbar(candidateDefinition)) {\n                    // Clean up after a current visible toolbar when switching to the next one.\n                    if (currentFocusedToolbarDefinition && currentFocusedToolbarDefinition.options.afterBlur) {\n                        currentFocusedToolbarDefinition.options.afterBlur();\n                    }\n                    break;\n                }\n            }\n            cancel();\n        });\n        // Blur the focused toolbar on <kbd>Esc</kbd> and bring the focus back to its origin.\n        editor.keystrokes.set('Esc', (data, cancel)=>{\n            const focusedToolbarDef = this._getCurrentFocusedToolbarDefinition();\n            if (!focusedToolbarDef) {\n                return;\n            }\n            // Bring focus back to where it came from before focusing the toolbar:\n            // 1. If it came from outside the engine view (e.g. source editing), move it there.\n            if (this._lastFocusedForeignElement) {\n                this._lastFocusedForeignElement.focus();\n                this._lastFocusedForeignElement = null;\n            } else {\n                editor.editing.view.focus();\n            }\n            // Clean up after the toolbar if there is anything to do there.\n            if (focusedToolbarDef.options.afterBlur) {\n                focusedToolbarDef.options.afterBlur();\n            }\n            cancel();\n        });\n    }\n    /**\n\t * Saves last focused element that doen not belong to editing view to restore focus on `Esc`.\n\t */ _saveLastFocusedForeignElement() {\n        const focusedElement = this.focusTracker.focusedElement;\n        // Focus moved out of a DOM element that\n        // * is not a toolbar,\n        // * does not belong to the editing view (e.g. source editing).\n        if (Array.from(this._editableElementsMap.values()).includes(focusedElement) && !Array.from(this.editor.editing.view.domRoots.values()).includes(focusedElement)) {\n            this._lastFocusedForeignElement = focusedElement;\n        }\n    }\n    /**\n\t * Returns definitions of toolbars that could potentially be focused, sorted by their importance for the user.\n\t *\n\t * Focusable toolbars candidates are either:\n\t * * already visible,\n\t * * have `beforeFocus()` set in their {@link module:ui/editorui/editorui~FocusableToolbarDefinition definition} that suggests that\n\t * they might show up when called. Keep in mind that determining whether a toolbar will show up (and become focusable) is impossible\n\t * at this stage because it depends on its implementation, that in turn depends on the editing context (selection).\n\t *\n\t * **Note**: Contextual toolbars take precedence over regular toolbars.\n\t */ _getFocusableCandidateToolbarDefinitions() {\n        const definitions = [];\n        for (const toolbarDef of this._focusableToolbarDefinitions){\n            const { toolbarView, options } = toolbarDef;\n            if (isVisible(toolbarView.element) || options.beforeFocus) {\n                definitions.push(toolbarDef);\n            }\n        }\n        // Contextual and already visible toolbars have higher priority. If both are true, the toolbar will always focus first.\n        // For instance, a selected widget toolbar vs inline editor toolbar: both are visible but the widget toolbar is contextual.\n        definitions.sort((defA, defB)=>getToolbarDefinitionWeight(defA) - getToolbarDefinitionWeight(defB));\n        return definitions;\n    }\n    /**\n\t * Returns a definition of the toolbar that is currently visible and focused (one of its children has focus).\n\t *\n\t * `null` is returned when no toolbar is currently focused.\n\t */ _getCurrentFocusedToolbarDefinition() {\n        for (const definition of this._focusableToolbarDefinitions){\n            if (definition.toolbarView.element && definition.toolbarView.element.contains(this.focusTracker.focusedElement)) {\n                return definition;\n            }\n        }\n        return null;\n    }\n    /**\n\t * Focuses a focusable toolbar candidate using its definition.\n\t *\n\t * @param candidateToolbarDefinition A definition of the toolbar to focus.\n\t * @returns `true` when the toolbar candidate was focused. `false` otherwise.\n\t */ _focusFocusableCandidateToolbar(candidateToolbarDefinition) {\n        const { toolbarView, options: { beforeFocus } } = candidateToolbarDefinition;\n        if (beforeFocus) {\n            beforeFocus();\n        }\n        // If it didn't show up after beforeFocus(), it's not focusable at all.\n        if (!isVisible(toolbarView.element)) {\n            return false;\n        }\n        toolbarView.focus();\n        return true;\n    }\n    /**\n\t * Provides an integration between {@link #viewportOffset} and {@link module:utils/dom/scroll~scrollViewportToShowTarget}.\n\t * It allows the UI-agnostic engine method to consider user-configured viewport offsets specific for the integration.\n\t *\n\t * @param evt The `scrollToTheSelection` event info.\n\t * @param data The payload carried by the `scrollToTheSelection` event.\n\t */ _handleScrollToTheSelection(evt, data) {\n        const configuredViewportOffset = {\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            ...this.viewportOffset\n        };\n        data.viewportOffset.top += configuredViewportOffset.top;\n        data.viewportOffset.bottom += configuredViewportOffset.bottom;\n        data.viewportOffset.left += configuredViewportOffset.left;\n        data.viewportOffset.right += configuredViewportOffset.right;\n    }\n    /**\n\t * Ensures that the focus tracker is aware of all views' DOM elements in the body collection.\n\t */ _bindBodyCollectionWithFocusTracker() {\n        const body = this.view.body;\n        for (const view of body){\n            this.focusTracker.add(view.element);\n        }\n        body.on('add', (evt, view)=>{\n            this.focusTracker.add(view.element);\n        });\n        body.on('remove', (evt, view)=>{\n            this.focusTracker.remove(view.element);\n        });\n    }\n    /**\n\t * Set initial viewport offset and setup visualTop augmentation.\n\t */ _initViewportOffset(viewportOffsetConfig) {\n        // Augment the viewport offset set from outside the editor with the visualTop property.\n        this.on('set:viewportOffset', (evt, name, value)=>{\n            const visualTop = this._getVisualViewportTopOffset(value);\n            // Update only if there is a change in a value, so we do not trigger\n            // listeners to the viewportOffset observable.\n            if (value.visualTop !== visualTop) {\n                evt.return = {\n                    ...value,\n                    visualTop\n                };\n            }\n        });\n        // Set the initial value after augmenting the setter.\n        this.set('viewportOffset', viewportOffsetConfig);\n    }\n    /**\n\t * Listen to visual viewport changes and update the viewportOffset with the visualTop property\n\t * according to the visible part of it (visual viewport).\n\t */ _initVisualViewportSupport() {\n        if (!global.window.visualViewport) {\n            return;\n        }\n        const updateViewport = ()=>{\n            const visualTop = this._getVisualViewportTopOffset(this.viewportOffset);\n            // Update only if there is a change in a value, so we do not trigger\n            // listeners to the viewportOffset observable.\n            if (this.viewportOffset.visualTop !== visualTop) {\n                this.viewportOffset = {\n                    ...this.viewportOffset,\n                    visualTop\n                };\n            }\n        };\n        // Listen to the changes in the visual viewport to adjust the visualTop of viewport offset.\n        this._domEmitter = new (DomEmitterMixin())();\n        this._domEmitter.listenTo(global.window.visualViewport, 'scroll', updateViewport);\n        this._domEmitter.listenTo(global.window.visualViewport, 'resize', updateViewport);\n    }\n    /**\n\t * Calculate the viewport top offset according to the visible part of it (visual viewport).\n\t */ _getVisualViewportTopOffset(viewportOffset) {\n        const visualViewportOffsetTop = getVisualViewportOffset().top;\n        const viewportTopOffset = viewportOffset.top || 0;\n        return visualViewportOffsetTop > viewportTopOffset ? 0 : viewportTopOffset - visualViewportOffsetTop;\n    }\n}\n/**\n * Returns a number (weight) for a toolbar definition. Visible toolbars have a higher priority and so do\n * contextual toolbars (displayed in the context of a content, for instance, an image toolbar).\n *\n * A standard invisible toolbar is the heaviest. A visible contextual toolbar is the lightest.\n *\n * @param toolbarDef A toolbar definition to be weighted.\n */ function getToolbarDefinitionWeight(toolbarDef) {\n    const { toolbarView, options } = toolbarDef;\n    let weight = 10;\n    // Prioritize already visible toolbars. They should get focused first.\n    if (isVisible(toolbarView.element)) {\n        weight--;\n    }\n    // Prioritize contextual toolbars. They are displayed at the selection.\n    if (options.isContextual) {\n        weight -= 2;\n    }\n    return weight;\n}\n\n/**\n * The editor UI view class. Base class for the editor main views.\n */ class EditorUIView extends View {\n    /**\n\t * Collection of the child views, detached from the DOM\n\t * structure of the editor, like panels, icons etc.\n\t */ body;\n    /**\n\t * Menu bar view instance. Initialized by default in:\n\t *\n\t * * balloon editor;\n\t * * decoupled editor;\n\t * * multiroot editor.\n\t */ menuBarView;\n    /**\n\t * Toolbar view instance. Initialized by default in:\n\t *\n\t * * classic editor;\n\t * * decoupled editor;\n\t * * inline editor;\n\t * * multiroot editor.\n\t */ toolbar;\n    /**\n\t * Creates an instance of the editor UI view class.\n\t *\n\t * @param locale The locale instance.\n\t */ constructor(locale){\n        super(locale);\n        this.body = new BodyCollection(locale);\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        this.body.attachToDom();\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        this.body.detachFromDom();\n        return super.destroy();\n    }\n}\n\n/**\n * The boxed editor UI view class. This class represents an editor interface\n * consisting of a toolbar and an editable area, enclosed within a box.\n */ class BoxedEditorUIView extends EditorUIView {\n    /**\n\t * Collection of the child views located in the top (`.ck-editor__top`)\n\t * area of the UI.\n\t */ top;\n    /**\n\t * Collection of the child views located in the main (`.ck-editor__main`)\n\t * area of the UI.\n\t */ main;\n    /**\n\t * Voice label of the UI.\n\t */ _voiceLabelView;\n    /**\n\t * Creates an instance of the boxed editor UI view class.\n\t *\n\t * @param locale The locale instance..\n\t */ constructor(locale){\n        super(locale);\n        this.top = this.createCollection();\n        this.main = this.createCollection();\n        this._voiceLabelView = this._createVoiceLabel();\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-reset',\n                    'ck-editor',\n                    'ck-rounded-corners'\n                ],\n                role: 'application',\n                dir: locale.uiLanguageDirection,\n                lang: locale.uiLanguage,\n                'aria-labelledby': this._voiceLabelView.id\n            },\n            children: [\n                this._voiceLabelView,\n                {\n                    tag: 'div',\n                    attributes: {\n                        class: [\n                            'ck',\n                            'ck-editor__top',\n                            'ck-reset_all'\n                        ],\n                        role: 'presentation'\n                    },\n                    children: this.top\n                },\n                {\n                    tag: 'div',\n                    attributes: {\n                        class: [\n                            'ck',\n                            'ck-editor__main'\n                        ],\n                        role: 'presentation'\n                    },\n                    children: this.main\n                }\n            ]\n        });\n    }\n    /**\n\t * Creates a voice label view instance.\n\t */ _createVoiceLabel() {\n        const t = this.t;\n        const voiceLabel = new LabelView();\n        voiceLabel.text = t('Rich Text Editor');\n        voiceLabel.extendTemplate({\n            attributes: {\n                class: 'ck-voice-label'\n            }\n        });\n        return voiceLabel;\n    }\n}\n\n/**\n * The editable UI view class.\n */ class EditableUIView extends View {\n    /**\n\t * The name of the editable UI view.\n\t */ name = null;\n    /**\n\t * The editing view instance the editable is related to. Editable uses the editing\n\t * view to dynamically modify its certain DOM attributes after {@link #render rendering}.\n\t *\n\t * **Note**: The DOM attributes are performed by the editing view and not UI\n\t * {@link module:ui/view~View#bindTemplate template bindings} because once rendered,\n\t * the editable DOM element must remain under the full control of the engine to work properly.\n\t */ _editingView;\n    /**\n\t * The element which is the main editable element (usually the one with `contentEditable=\"true\"`).\n\t */ _editableElement;\n    /**\n\t * Whether an external {@link #_editableElement} was passed into the constructor, which also means\n\t * the view will not render its {@link #template}.\n\t */ _hasExternalElement;\n    /**\n\t * Creates an instance of EditableUIView class.\n\t *\n\t * @param locale The locale instance.\n\t * @param editingView The editing view instance the editable is related to.\n\t * @param editableElement The editable element. If not specified, this view\n\t * should create it. Otherwise, the existing element should be used.\n\t */ constructor(locale, editingView, editableElement){\n        super(locale);\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-content',\n                    'ck-editor__editable',\n                    'ck-rounded-corners'\n                ],\n                lang: locale.contentLanguage,\n                dir: locale.contentLanguageDirection\n            }\n        });\n        this.set('isFocused', false);\n        this._editableElement = editableElement;\n        this._hasExternalElement = !!this._editableElement;\n        this._editingView = editingView;\n    }\n    /**\n\t * Renders the view by either applying the {@link #template} to the existing\n\t * {@link module:ui/editableui/editableuiview~EditableUIView#_editableElement} or assigning {@link #element}\n\t * as {@link module:ui/editableui/editableuiview~EditableUIView#_editableElement}.\n\t */ render() {\n        super.render();\n        if (this._hasExternalElement) {\n            this.template.apply(this.element = this._editableElement);\n        } else {\n            this._editableElement = this.element;\n        }\n        this.on('change:isFocused', ()=>this._updateIsFocusedClasses());\n        this._updateIsFocusedClasses();\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        if (this._hasExternalElement) {\n            this.template.revert(this._editableElement);\n        }\n        super.destroy();\n    }\n    /**\n\t * Whether an external {@link #_editableElement} was passed into the constructor, which also means\n\t * the view will not render its {@link #template}.\n\t */ get hasExternalElement() {\n        return this._hasExternalElement;\n    }\n    /**\n\t * Updates the `ck-focused` and `ck-blurred` CSS classes on the {@link #element} according to\n\t * the {@link #isFocused} property value using the {@link #_editingView editing view} API.\n\t */ _updateIsFocusedClasses() {\n        const editingView = this._editingView;\n        if (editingView.isRenderingInProgress) {\n            updateAfterRender(this);\n        } else {\n            update(this);\n        }\n        function update(view) {\n            editingView.change((writer)=>{\n                const viewRoot = editingView.document.getRoot(view.name);\n                writer.addClass(view.isFocused ? 'ck-focused' : 'ck-blurred', viewRoot);\n                writer.removeClass(view.isFocused ? 'ck-blurred' : 'ck-focused', viewRoot);\n            });\n        }\n        // In a case of a multi-root editor, a callback will be attached more than once (one callback for each root).\n        // While executing one callback the `isRenderingInProgress` observable is changing what causes executing another\n        // callback and render is called inside the already pending render.\n        // We need to be sure that callback is executed only when the value has changed from `true` to `false`.\n        // See https://github.com/ckeditor/ckeditor5/issues/1676.\n        function updateAfterRender(view) {\n            editingView.once('change:isRenderingInProgress', (evt, name, value)=>{\n                if (!value) {\n                    update(view);\n                } else {\n                    updateAfterRender(view);\n                }\n            });\n        }\n    }\n}\n\n/**\n * The inline editable UI class implementing an inline {@link module:ui/editableui/editableuiview~EditableUIView}.\n */ class InlineEditableUIView extends EditableUIView {\n    /**\n\t * The cached options object passed to the constructor.\n\t */ _options;\n    /**\n\t * Creates an instance of the InlineEditableUIView class.\n\t *\n\t * @param locale The locale instance.\n\t * @param editingView The editing view instance the editable is related to.\n\t * @param editableElement The editable element. If not specified, the\n\t * {@link module:ui/editableui/editableuiview~EditableUIView}\n\t * will create it. Otherwise, the existing element will be used.\n\t * @param options Additional configuration of the view.\n\t * @param options.label The label of the editable for assistive technologies. If not provided, a default label is used or,\n\t * the existing `aria-label` attribute value from the specified `editableElement` is preserved.\n\t */ constructor(locale, editingView, editableElement, options = {}){\n        super(locale, editingView, editableElement);\n        this._options = options;\n        this.extendTemplate({\n            attributes: {\n                role: 'textbox',\n                class: 'ck-editor__editable_inline'\n            }\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        const editingView = this._editingView;\n        editingView.change((writer)=>{\n            const viewRoot = editingView.document.getRoot(this.name);\n            writer.setAttribute('aria-label', this.getEditableAriaLabel(), viewRoot);\n        });\n    }\n    /**\n\t * Returns a normalized label for the editable view based on the environment.\n\t */ getEditableAriaLabel() {\n        const t = this.locale.t;\n        const label = this._options.label;\n        const editableElement = this._editableElement;\n        const editableName = this.name;\n        if (typeof label == 'string') {\n            return label;\n        } else if (typeof label === 'object') {\n            return label[editableName];\n        } else if (typeof label === 'function') {\n            return label(this);\n        } else if (editableElement) {\n            const existingLabel = editableElement.getAttribute('aria-label');\n            if (existingLabel) {\n                return existingLabel;\n            }\n        }\n        return t('Rich Text Editor. Editing area: %0', editableName);\n    }\n}\n\n/**\n * The class representing a single row in a form,\n */ class FormRowView extends View {\n    /**\n\t * A collection of row items (buttons, dropdowns, etc.).\n\t */ children;\n    /**\n\t * Creates an instance of the form row class.\n\t *\n\t * @param locale The locale instance.\n\t * @param options.labelView When passed, the row gets the `group` and `aria-labelledby`\n\t * DOM attributes and gets described by the label.\n\t */ constructor(locale, options = {}){\n        super(locale);\n        const bind = this.bindTemplate;\n        this.set('class', [\n            'ck',\n            'ck-form__row',\n            ...toArray(options.class || [])\n        ]);\n        this.children = this.createCollection();\n        if (options.children) {\n            options.children.forEach((child)=>this.children.add(child));\n        }\n        this.set('_role', null);\n        this.set('_ariaLabelledBy', null);\n        if (options.labelView) {\n            this.set({\n                _role: 'group',\n                _ariaLabelledBy: options.labelView.id\n            });\n        }\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: bind.to('class', (classes)=>classes.join(' ')),\n                role: bind.to('_role'),\n                'aria-labelledby': bind.to('_ariaLabelledBy')\n            },\n            children: this.children\n        });\n    }\n}\n\n/**\n * The iframe view class.\n *\n * ```ts\n * const iframe = new IframeView();\n *\n * iframe.render();\n * document.body.appendChild( iframe.element );\n *\n * iframe.on( 'loaded', () => {\n * \tconsole.log( 'The iframe has loaded', iframe.element.contentWindow );\n * } );\n *\n * iframe.element.src = 'https://ckeditor.com';\n * ```\n */ class IframeView extends View {\n    /**\n\t * Creates a new instance of the iframe view.\n\t *\n\t * @param locale The locale instance.\n\t */ constructor(locale){\n        super(locale);\n        const bind = this.bindTemplate;\n        this.setTemplate({\n            tag: 'iframe',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-reset_all'\n                ],\n                // It seems that we need to allow scripts in order to be able to listen to events.\n                // TODO: Research that. Perhaps the src must be set?\n                sandbox: 'allow-same-origin allow-scripts'\n            },\n            on: {\n                load: bind.to('loaded')\n            }\n        });\n    }\n    /**\n\t * Renders the iframe's {@link #element} and returns a `Promise` for asynchronous\n\t * child `contentDocument` loading process.\n\t *\n\t * @returns A promise which resolves once the iframe `contentDocument` has\n\t * been {@link #event:loaded}.\n\t */ render() {\n        return new Promise((resolve)=>{\n            this.on('loaded', resolve);\n            return super.render();\n        });\n    }\n}\n\n/**\n * The labeled input view class.\n */ class LabeledInputView extends View {\n    /**\n\t * The label view.\n\t */ labelView;\n    /**\n\t * The input view.\n\t */ inputView;\n    /**\n\t * The status view for the {@link #inputView}. It displays {@link #errorText} and\n\t * {@link #infoText}.\n\t */ statusView;\n    /**\n\t * Creates an instance of the labeled input view class.\n\t *\n\t * @param locale The locale instance.\n\t * @param InputView Constructor of the input view.\n\t */ constructor(locale, InputView){\n        super(locale);\n        const inputUid = `ck-input-${uid()}`;\n        const statusUid = `ck-status-${uid()}`;\n        this.set('label', undefined);\n        this.set('value', undefined);\n        this.set('isReadOnly', false);\n        this.set('errorText', null);\n        this.set('infoText', null);\n        this.labelView = this._createLabelView(inputUid);\n        this.inputView = this._createInputView(InputView, inputUid, statusUid);\n        this.statusView = this._createStatusView(statusUid);\n        this.bind('_statusText').to(this, 'errorText', this, 'infoText', (errorText, infoText)=>errorText || infoText);\n        const bind = this.bindTemplate;\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-labeled-input',\n                    bind.if('isReadOnly', 'ck-disabled')\n                ]\n            },\n            children: [\n                this.labelView,\n                this.inputView,\n                this.statusView\n            ]\n        });\n    }\n    /**\n\t * Creates label view class instance and bind with view.\n\t *\n\t * @param id Unique id to set as labelView#for attribute.\n\t */ _createLabelView(id) {\n        const labelView = new LabelView(this.locale);\n        labelView.for = id;\n        labelView.bind('text').to(this, 'label');\n        return labelView;\n    }\n    /**\n\t * Creates input view class instance and bind with view.\n\t *\n\t * @param InputView Input view constructor.\n\t * @param inputUid Unique id to set as inputView#id attribute.\n\t * @param statusUid Unique id of the status for the input's `aria-describedby` attribute.\n\t */ _createInputView(InputView, inputUid, statusUid) {\n        const inputView = new InputView(this.locale, statusUid);\n        inputView.id = inputUid;\n        inputView.ariaDescribedById = statusUid;\n        inputView.bind('value').to(this);\n        inputView.bind('isReadOnly').to(this);\n        inputView.bind('hasError').to(this, 'errorText', (value)=>!!value);\n        inputView.on('input', ()=>{\n            // UX: Make the error text disappear and disable the error indicator as the user\n            // starts fixing the errors.\n            this.errorText = null;\n        });\n        return inputView;\n    }\n    /**\n\t * Creates the status view instance. It displays {@link #errorText} and {@link #infoText}\n\t * next to the {@link #inputView}. See {@link #_statusText}.\n\t *\n\t * @param statusUid Unique id of the status, shared with the input's `aria-describedby` attribute.\n\t */ _createStatusView(statusUid) {\n        const statusView = new View(this.locale);\n        const bind = this.bindTemplate;\n        statusView.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-labeled-input__status',\n                    bind.if('errorText', 'ck-labeled-input__status_error'),\n                    bind.if('_statusText', 'ck-hidden', (value)=>!value)\n                ],\n                id: statusUid,\n                role: bind.if('errorText', 'alert')\n            },\n            children: [\n                {\n                    text: bind.to('_statusText')\n                }\n            ]\n        });\n        return statusView;\n    }\n    /**\n\t * Moves the focus to the input and selects the value.\n\t */ select() {\n        this.inputView.select();\n    }\n    /**\n\t * Focuses the input.\n\t */ focus() {\n        this.inputView.focus();\n    }\n}\n\n/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */ /**\n * @module ui/search/filtergroupanditemnames\n */ /**\n * A filter function that returns matching item and group names in the list view.\n */ function filterGroupAndItemNames(regExp, items) {\n    let totalItemsCount = 0;\n    let resultsCount = 0;\n    for (const groupView of items){\n        const group = groupView;\n        const groupItems = group.items;\n        const isGroupLabelMatching = regExp && !!group.label.match(regExp);\n        group.labelView.highlightText(isGroupLabelMatching ? regExp : null);\n        for (const listItemView of groupItems){\n            const buttonView = listItemView.children.first;\n            const labelView = buttonView.labelView;\n            if (!regExp) {\n                listItemView.isVisible = true;\n                labelView.highlightText(null);\n            } else {\n                const isItemLabelMatching = !!buttonView.label.match(regExp);\n                labelView.highlightText(isItemLabelMatching ? regExp : null);\n                listItemView.isVisible = isGroupLabelMatching || isItemLabelMatching;\n            }\n        }\n        const visibleInGroupCount = groupItems.filter((listItemView)=>listItemView.isVisible).length;\n        totalItemsCount += group.items.length;\n        resultsCount += isGroupLabelMatching ? group.items.length : visibleInGroupCount;\n        group.isVisible = isGroupLabelMatching || !!visibleInGroupCount;\n    }\n    return {\n        resultsCount,\n        totalItemsCount\n    };\n}\n\n/**\n * The Notification plugin.\n *\n * This plugin sends a few types of notifications: `success`, `info` and `warning`. The notifications need to be\n * handled and displayed by a plugin responsible for showing the UI of the notifications. Using this plugin for dispatching\n * notifications makes it possible to switch the notifications UI.\n *\n * Note that every unhandled and not stopped `warning` notification will be displayed as a system alert.\n * See {@link module:ui/notification/notification~Notification#showWarning}.\n */ class Notification extends ContextPlugin {\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'Notification';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n\t * @inheritDoc\n\t */ init() {\n        // Each unhandled and not stopped `show:warning` event is displayed as a system alert.\n        this.on('show:warning', (evt, data)=>{\n            window.alert(data.message); // eslint-disable-line no-alert\n        }, {\n            priority: 'lowest'\n        });\n    }\n    /**\n\t * Shows a success notification.\n\t *\n\t * By default, it fires the {@link #event:show:success `show:success` event} with the given `data`. The event namespace can be extended\n\t * using the `data.namespace` option. For example:\n\t *\n\t * ```ts\n\t * showSuccess( 'Image is uploaded.', {\n\t * \tnamespace: 'upload:image'\n\t * } );\n\t * ```\n\t *\n\t * will fire the `show:success:upload:image` event.\n\t *\n\t * You can provide the title of the notification:\n\t *\n\t * ```ts\n\t * showSuccess( 'Image is uploaded.', {\n\t * \ttitle: 'Image upload success'\n\t * } );\n\t * ```\n\t *\n\t * @param message The content of the notification.\n\t * @param data Additional data.\n\t * @param data.namespace Additional event namespace.\n\t * @param data.title The title of the notification.\n\t */ showSuccess(message, data = {}) {\n        this._showNotification({\n            message,\n            type: 'success',\n            namespace: data.namespace,\n            title: data.title\n        });\n    }\n    /**\n\t * Shows an information notification.\n\t *\n\t * By default, it fires the {@link #event:show:info `show:info` event} with the given `data`. The event namespace can be extended\n\t * using the `data.namespace` option. For example:\n\t *\n\t * ```ts\n\t * showInfo( 'Editor is offline.', {\n\t * \tnamespace: 'editor:status'\n\t * } );\n\t * ```\n\t *\n\t * will fire the `show:info:editor:status` event.\n\t *\n\t * You can provide the title of the notification:\n\t *\n\t * ```ts\n\t * showInfo( 'Editor is offline.', {\n\t * \ttitle: 'Network information'\n\t * } );\n\t * ```\n\t *\n\t * @param message The content of the notification.\n\t * @param data Additional data.\n\t * @param data.namespace Additional event namespace.\n\t * @param data.title The title of the notification.\n\t */ showInfo(message, data = {}) {\n        this._showNotification({\n            message,\n            type: 'info',\n            namespace: data.namespace,\n            title: data.title\n        });\n    }\n    /**\n\t * Shows a warning notification.\n\t *\n\t * By default, it fires the {@link #event:show:warning `show:warning` event}\n\t * with the given `data`. The event namespace can be extended using the `data.namespace` option. For example:\n\t *\n\t * ```ts\n\t * showWarning( 'Image upload error.', {\n\t * \tnamespace: 'upload:image'\n\t * } );\n\t * ```\n\t *\n\t * will fire the `show:warning:upload:image` event.\n\t *\n\t * You can provide the title of the notification:\n\t *\n\t * ```ts\n\t * showWarning( 'Image upload error.', {\n\t * \ttitle: 'Upload failed'\n\t * } );\n\t * ```\n\t *\n\t * Note that each unhandled and not stopped `warning` notification will be displayed as a system alert.\n\t * The plugin responsible for displaying warnings should `stop()` the event to prevent displaying it as an alert:\n\t *\n\t * ```ts\n\t * notifications.on( 'show:warning', ( evt, data ) => {\n\t * \t// Do something with the data.\n\t *\n\t * \t// Stop this event to prevent displaying it as an alert.\n\t * \tevt.stop();\n\t * } );\n\t * ```\n\t *\n\t * You can attach many listeners to the same event and `stop()` this event in a listener with a low priority:\n\t *\n\t * ```ts\n\t * notifications.on( 'show:warning', ( evt, data ) => {\n\t * \t// Show the warning in the UI, but do not stop it.\n\t * } );\n\t *\n\t * notifications.on( 'show:warning', ( evt, data ) => {\n\t * \t// Log the warning to some error tracker.\n\t *\n\t * \t// Stop this event to prevent displaying it as an alert.\n\t * \tevt.stop();\n\t * }, { priority: 'low' } );\n\t * ```\n\t *\n\t * @param message The content of the notification.\n\t * @param data Additional data.\n\t * @param data.namespace Additional event namespace.\n\t * @param data.title The title of the notification.\n\t */ showWarning(message, data = {}) {\n        this._showNotification({\n            message,\n            type: 'warning',\n            namespace: data.namespace,\n            title: data.title\n        });\n    }\n    /**\n\t * Fires the `show` event with the specified type, namespace and message.\n\t *\n\t * @param data The message data.\n\t * @param data.message The content of the notification.\n\t * @param data.type The type of the message.\n\t * @param data.namespace Additional event namespace.\n\t * @param data.title The title of the notification.\n\t */ _showNotification(data) {\n        const event = data.namespace ? `show:${data.type}:${data.namespace}` : `show:${data.type}`;\n        this.fire(event, {\n            message: data.message,\n            type: data.type,\n            title: data.title || ''\n        });\n    }\n}\n\n/**\n * The base MVC model class.\n */ class UIModel extends /* #__PURE__ */ ObservableMixin() {\n    /**\n\t * Creates a new Model instance.\n\t *\n\t * @param attributes The model state attributes to be defined during the instance creation.\n\t * @param properties The (out of state) properties to be appended to the instance during creation.\n\t */ constructor(attributes, properties){\n        super();\n        // Extend this instance with the additional (out of state) properties.\n        if (properties) {\n            extend(this, properties);\n        }\n        // Initialize the attributes.\n        if (attributes) {\n            this.set(attributes);\n        }\n    }\n}\n\nconst toPx$4 = /* #__PURE__ */ toUnit('px');\n/**\n * Provides the common contextual balloon for the editor.\n *\n * The role of this plugin is to unify the contextual balloons logic, simplify views management and help\n * avoid the unnecessary complexity of handling multiple {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView}\n * instances in the editor.\n *\n * This plugin allows for creating single or multiple panel stacks.\n *\n * Each stack may have multiple views, with the one on the top being visible. When the visible view is removed from the stack,\n * the previous view becomes visible.\n *\n * It might be useful to implement nested navigation in a balloon. For instance, a toolbar view may contain a link button.\n * When you click it, a link view (which lets you set the URL) is created and put on top of the toolbar view, so the link panel\n * is displayed. When you finish editing the link and close (remove) the link view, the toolbar view is visible again.\n *\n * However, there are cases when there are multiple independent balloons to be displayed, for instance, if the selection\n * is inside two inline comments at the same time. For such cases, you can create two independent panel stacks.\n * The contextual balloon plugin will create a navigation bar to let the users switch between these panel stacks using the \"Next\"\n * and \"Previous\" buttons.\n *\n * If there are no views in the current stack, the balloon panel will try to switch to the next stack. If there are no\n * panels in any stack, the balloon panel will be hidden.\n *\n * **Note**: To force the balloon panel to show only one view, even if there are other stacks, use the `singleViewMode=true` option\n * when {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon#add adding} a view to a panel.\n *\n * From the implementation point of view, the contextual ballon plugin is reusing a single\n * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView} instance to display multiple contextual balloon\n * panels in the editor. It also creates a special {@link module:ui/panel/balloon/contextualballoon~RotatorView rotator view},\n * used to manage multiple panel stacks. Rotator view is a child of the balloon panel view and the parent of the specific\n * view you want to display. If there is more than one panel stack to be displayed, the rotator view will add a\n * navigation bar. If there is only one stack, the rotator view is transparent (it does not add any UI elements).\n */ class ContextualBalloon extends Plugin {\n    /**\n\t * The {@link module:utils/dom/position~DomOptimalPositionOptions#limiter position limiter}\n\t * for the {@link #view balloon}, used when no `limiter` has been passed into {@link #add}\n\t * or {@link #updatePosition}.\n\t *\n\t * By default, a function that obtains the farthest DOM\n\t * {@link module:engine/view/rooteditableelement~ViewRootEditableElement}\n\t * of the {@link module:engine/view/document~ViewDocument#selection}.\n\t */ positionLimiter;\n    visibleStack;\n    /**\n\t * The map of views and their stacks.\n\t */ _viewToStack = new Map();\n    /**\n\t * The map of IDs and stacks.\n\t */ _idToStack = new Map();\n    /**\n\t * The common balloon panel view.\n\t */ _view = null;\n    /**\n\t * Rotator view embedded in the contextual balloon.\n\t * Displays the currently visible view in the balloon and provides navigation for switching stacks.\n\t */ _rotatorView = null;\n    /**\n\t * Displays fake panels under the balloon panel view when multiple stacks are added to the balloon.\n\t */ _fakePanelsView = null;\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'ContextualBalloon';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n\t * @inheritDoc\n\t */ constructor(editor){\n        super(editor);\n        this.positionLimiter = ()=>{\n            const view = this.editor.editing.view;\n            const viewDocument = view.document;\n            const editableElement = viewDocument.selection.editableElement;\n            if (editableElement) {\n                return view.domConverter.mapViewToDom(editableElement.root);\n            }\n            return null;\n        };\n        this.decorate('getPositionOptions');\n        this.set('visibleView', null);\n        this.set('_numberOfStacks', 0);\n        this.set('_singleViewMode', false);\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        super.destroy();\n        if (this._view) {\n            this._view.destroy();\n        }\n        if (this._rotatorView) {\n            this._rotatorView.destroy();\n        }\n        if (this._fakePanelsView) {\n            this._fakePanelsView.destroy();\n        }\n    }\n    /**\n\t * The common balloon panel view.\n\t */ get view() {\n        if (!this._view) {\n            this._createPanelView();\n        }\n        return this._view;\n    }\n    /**\n\t * Returns `true` when the given view is in one of the stacks. Otherwise returns `false`.\n\t */ hasView(view) {\n        return Array.from(this._viewToStack.keys()).includes(view);\n    }\n    /**\n\t * Adds a new view to the stack and makes it visible if the current stack is visible\n\t * or it is the first view in the balloon.\n\t *\n\t * @param data The configuration of the view.\n\t * @param data.stackId The ID of the stack that the view is added to. Defaults to `'main'`.\n\t * @param data.view The content of the balloon.\n\t * @param data.position Positioning options.\n\t * @param data.balloonClassName An additional CSS class added to the {@link #view balloon} when visible.\n\t * @param data.withArrow Whether the {@link #view balloon} should be rendered with an arrow. Defaults to `true`.\n\t * @param data.singleViewMode Whether the view should be the only visible view even if other stacks were added. Defaults to `false`.\n\t */ add(data) {\n        if (!this._view) {\n            this._createPanelView();\n        }\n        if (this.hasView(data.view)) {\n            /**\n\t\t\t * Trying to add configuration of the same view more than once.\n\t\t\t *\n\t\t\t * @error contextualballoon-add-view-exist\n\t\t\t */ throw new CKEditorError('contextualballoon-add-view-exist', [\n                this,\n                data\n            ]);\n        }\n        const stackId = data.stackId || 'main';\n        // If new stack is added, creates it and show view from this stack.\n        if (!this._idToStack.has(stackId)) {\n            this._idToStack.set(stackId, new Map([\n                [\n                    data.view,\n                    data\n                ]\n            ]));\n            this._viewToStack.set(data.view, this._idToStack.get(stackId));\n            this._numberOfStacks = this._idToStack.size;\n            if (!this._visibleStack || data.singleViewMode) {\n                this.showStack(stackId);\n            }\n            return;\n        }\n        const stack = this._idToStack.get(stackId);\n        if (data.singleViewMode) {\n            this.showStack(stackId);\n        }\n        // Add new view to the stack.\n        stack.set(data.view, data);\n        this._viewToStack.set(data.view, stack);\n        // And display it if is added to the currently visible stack.\n        if (stack === this._visibleStack) {\n            this._showView(data);\n        }\n    }\n    /**\n\t * Removes the given view from the stack. If the removed view was visible,\n\t * the view preceding it in the stack will become visible instead.\n\t * When there is no view in the stack, the next stack will be displayed.\n\t * When there are no more stacks, the balloon will hide.\n\t *\n\t * @param view A view to be removed from the balloon.\n\t */ remove(view) {\n        if (!this.hasView(view)) {\n            /**\n\t\t\t * Trying to remove the configuration of the view not defined in the stack.\n\t\t\t *\n\t\t\t * @error contextualballoon-remove-view-not-exist\n\t\t\t */ throw new CKEditorError('contextualballoon-remove-view-not-exist', [\n                this,\n                view\n            ]);\n        }\n        const stack = this._viewToStack.get(view);\n        if (this._singleViewMode && this.visibleView === view) {\n            this._singleViewMode = false;\n        }\n        // When visible view will be removed we need to show a preceding view or next stack\n        // if a view is the only view in the stack.\n        if (this.visibleView === view) {\n            if (stack.size === 1) {\n                if (this._idToStack.size > 1) {\n                    this._showNextStack();\n                } else {\n                    this.view.hide();\n                    this.visibleView = null;\n                    this._rotatorView.hideView();\n                }\n            } else {\n                this._showView(Array.from(stack.values())[stack.size - 2]);\n            }\n        }\n        if (stack.size === 1) {\n            this._idToStack.delete(this._getStackId(stack));\n            this._numberOfStacks = this._idToStack.size;\n        } else {\n            stack.delete(view);\n        }\n        this._viewToStack.delete(view);\n    }\n    /**\n\t * Updates the position of the balloon using the position data of the first visible view in the stack.\n\t * When new position data is given, the position data of the currently visible view will be updated.\n\t *\n\t * @param position Position options.\n\t */ updatePosition(position) {\n        if (position) {\n            this._visibleStack.get(this.visibleView).position = position;\n        }\n        this.view.pin(this.getPositionOptions());\n        this._fakePanelsView.updatePosition();\n    }\n    /**\n\t * Returns position options of the last view in the stack.\n\t * This keeps the balloon in the same position when the view is changed.\n\t */ getPositionOptions() {\n        let position = Array.from(this._visibleStack.values()).pop().position;\n        if (position) {\n            // Use the default limiter if none has been specified.\n            if (!position.limiter) {\n                // Don't modify the original options object.\n                position = Object.assign({}, position, {\n                    limiter: this.positionLimiter\n                });\n            }\n            // Don't modify the original options object.\n            position = Object.assign({}, position, {\n                viewportOffsetConfig: {\n                    ...this.editor.ui.viewportOffset,\n                    top: this.editor.ui.viewportOffset.visualTop\n                }\n            });\n        }\n        return position;\n    }\n    /**\n\t * Shows the last view from the stack of a given ID.\n\t */ showStack(id) {\n        this.visibleStack = id;\n        const stack = this._idToStack.get(id);\n        if (!stack) {\n            /**\n\t\t\t * Trying to show a stack that does not exist.\n\t\t\t *\n\t\t\t * @error contextualballoon-showstack-stack-not-exist\n\t\t\t */ throw new CKEditorError('contextualballoon-showstack-stack-not-exist', this);\n        }\n        if (this._visibleStack === stack) {\n            return;\n        }\n        this._showView(Array.from(stack.values()).pop());\n    }\n    /**\n\t * Initializes view instances.\n\t */ _createPanelView() {\n        this._view = new BalloonPanelView(this.editor.locale);\n        this.editor.ui.view.body.add(this._view);\n        this._rotatorView = this._createRotatorView();\n        this._fakePanelsView = this._createFakePanelsView();\n    }\n    /**\n\t * Returns the stack of the currently visible view.\n\t */ get _visibleStack() {\n        return this._viewToStack.get(this.visibleView);\n    }\n    /**\n\t * Returns the ID of the given stack.\n\t */ _getStackId(stack) {\n        const entry = Array.from(this._idToStack.entries()).find((entry)=>entry[1] === stack);\n        return entry[0];\n    }\n    /**\n\t * Shows the last view from the next stack.\n\t */ _showNextStack() {\n        const stacks = Array.from(this._idToStack.values());\n        let nextIndex = stacks.indexOf(this._visibleStack) + 1;\n        if (!stacks[nextIndex]) {\n            nextIndex = 0;\n        }\n        this.showStack(this._getStackId(stacks[nextIndex]));\n    }\n    /**\n\t * Shows the last view from the previous stack.\n\t */ _showPrevStack() {\n        const stacks = Array.from(this._idToStack.values());\n        let nextIndex = stacks.indexOf(this._visibleStack) - 1;\n        if (!stacks[nextIndex]) {\n            nextIndex = stacks.length - 1;\n        }\n        this.showStack(this._getStackId(stacks[nextIndex]));\n    }\n    /**\n\t * Creates a rotator view.\n\t */ _createRotatorView() {\n        const view = new RotatorView(this.editor.locale);\n        const t = this.editor.locale.t;\n        this.view.content.add(view);\n        // Hide navigation when there is only a one stack & not in single view mode.\n        view.bind('isNavigationVisible').to(this, '_numberOfStacks', this, '_singleViewMode', (value, isSingleViewMode)=>{\n            return !isSingleViewMode && value > 1;\n        });\n        // Update balloon position after toggling navigation.\n        view.on('change:isNavigationVisible', ()=>this.updatePosition(), {\n            priority: 'low'\n        });\n        // Update stacks counter value.\n        view.bind('counter').to(this, 'visibleView', this, '_numberOfStacks', (visibleView, numberOfStacks)=>{\n            if (numberOfStacks < 2) {\n                return '';\n            }\n            const current = Array.from(this._idToStack.values()).indexOf(this._visibleStack) + 1;\n            return t('%0 of %1', [\n                current,\n                numberOfStacks\n            ]);\n        });\n        view.buttonNextView.on('execute', ()=>{\n            // When current view has a focus then move focus to the editable before removing it,\n            // otherwise editor will lost focus.\n            if (view.focusTracker.isFocused) {\n                this.editor.editing.view.focus();\n            }\n            this._showNextStack();\n        });\n        view.buttonPrevView.on('execute', ()=>{\n            // When current view has a focus then move focus to the editable before removing it,\n            // otherwise editor will lost focus.\n            if (view.focusTracker.isFocused) {\n                this.editor.editing.view.focus();\n            }\n            this._showPrevStack();\n        });\n        return view;\n    }\n    /**\n\t * Creates a fake panels view.\n\t */ _createFakePanelsView() {\n        const view = new FakePanelsView(this.editor.locale, this.view);\n        view.bind('numberOfPanels').to(this, '_numberOfStacks', this, '_singleViewMode', (number, isSingleViewMode)=>{\n            const showPanels = !isSingleViewMode && number >= 2;\n            return showPanels ? Math.min(number - 1, 2) : 0;\n        });\n        view.listenTo(this.view, 'change:top', ()=>view.updatePosition());\n        view.listenTo(this.view, 'change:left', ()=>view.updatePosition());\n        this.editor.ui.view.body.add(view);\n        return view;\n    }\n    /**\n\t * Sets the view as the content of the balloon and attaches the balloon using position\n\t * options of the first view.\n\t *\n\t * @param data Configuration.\n\t * @param data.view The view to show in the balloon.\n\t * @param data.balloonClassName Additional class name which will be added to the {@link #view balloon}.\n\t * @param data.withArrow Whether the {@link #view balloon} should be rendered with an arrow.\n\t */ _showView({ view, balloonClassName = '', withArrow = true, singleViewMode = false }) {\n        this.view.class = balloonClassName;\n        this.view.withArrow = withArrow;\n        this._rotatorView.showView(view);\n        this.visibleView = view;\n        this.view.pin(this.getPositionOptions());\n        this._fakePanelsView.updatePosition();\n        if (singleViewMode) {\n            this._singleViewMode = true;\n        }\n    }\n}\n/**\n * Rotator view is a helper class for the {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon ContextualBalloon}.\n * It is used for displaying the last view from the current stack and providing navigation buttons for switching stacks.\n * See the {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon ContextualBalloon} documentation to learn more.\n * @internal\n */ class RotatorView extends View {\n    /**\n\t * Used for checking if a view is focused or not.\n\t */ focusTracker;\n    /**\n\t * Navigation button for switching the stack to the previous one.\n\t */ buttonPrevView;\n    /**\n\t * Navigation button for switching the stack to the next one.\n\t */ buttonNextView;\n    /**\n\t * A collection of the child views that creates the rotator content.\n\t */ content;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale){\n        super(locale);\n        const t = locale.t;\n        const bind = this.bindTemplate;\n        this.set('isNavigationVisible', true);\n        this.focusTracker = new FocusTracker();\n        this.buttonPrevView = this._createButtonView(t('Previous'), IconPreviousArrow);\n        this.buttonNextView = this._createButtonView(t('Next'), IconNextArrow);\n        this.content = this.createCollection();\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-balloon-rotator'\n                ],\n                'z-index': '-1'\n            },\n            children: [\n                {\n                    tag: 'div',\n                    attributes: {\n                        class: [\n                            'ck-balloon-rotator__navigation',\n                            bind.to('isNavigationVisible', (value)=>value ? '' : 'ck-hidden')\n                        ]\n                    },\n                    children: [\n                        this.buttonPrevView,\n                        {\n                            tag: 'span',\n                            attributes: {\n                                class: [\n                                    'ck-balloon-rotator__counter'\n                                ]\n                            },\n                            children: [\n                                {\n                                    text: bind.to('counter')\n                                }\n                            ]\n                        },\n                        this.buttonNextView\n                    ]\n                },\n                {\n                    tag: 'div',\n                    attributes: {\n                        class: 'ck-balloon-rotator__content'\n                    },\n                    children: this.content\n                }\n            ]\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        this.focusTracker.add(this.element);\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        super.destroy();\n        this.focusTracker.destroy();\n    }\n    /**\n\t * Shows a given view.\n\t *\n\t * @param view The view to show.\n\t */ showView(view) {\n        this.hideView();\n        this.content.add(view);\n    }\n    /**\n\t * Hides the currently displayed view.\n\t */ hideView() {\n        this.content.clear();\n    }\n    /**\n\t * Creates a navigation button view.\n\t *\n\t * @param label The button label.\n\t * @param icon The button icon.\n\t */ _createButtonView(label, icon) {\n        const view = new ButtonView(this.locale);\n        view.set({\n            label,\n            icon,\n            tooltip: true\n        });\n        return view;\n    }\n}\n/**\n * Displays additional layers under the balloon when multiple stacks are added to the balloon.\n */ class FakePanelsView extends View {\n    /**\n\t * Collection of the child views which creates fake panel content.\n\t */ content;\n    /**\n\t * Context.\n\t */ _balloonPanelView;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale, balloonPanelView){\n        super(locale);\n        const bind = this.bindTemplate;\n        this.set('top', 0);\n        this.set('left', 0);\n        this.set('height', 0);\n        this.set('width', 0);\n        this.set('numberOfPanels', 0);\n        this.content = this.createCollection();\n        this._balloonPanelView = balloonPanelView;\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck-fake-panel',\n                    bind.to('numberOfPanels', (number)=>number ? '' : 'ck-hidden')\n                ],\n                style: {\n                    top: bind.to('top', toPx$4),\n                    left: bind.to('left', toPx$4),\n                    width: bind.to('width', toPx$4),\n                    height: bind.to('height', toPx$4)\n                }\n            },\n            children: this.content\n        });\n        this.on('change:numberOfPanels', (evt, name, next, prev)=>{\n            if (next > prev) {\n                this._addPanels(next - prev);\n            } else {\n                this._removePanels(prev - next);\n            }\n            this.updatePosition();\n        });\n    }\n    _addPanels(number) {\n        while(number--){\n            const view = new View();\n            view.setTemplate({\n                tag: 'div'\n            });\n            this.content.add(view);\n            this.registerChild(view);\n        }\n    }\n    _removePanels(number) {\n        while(number--){\n            const view = this.content.last;\n            this.content.remove(view);\n            this.deregisterChild(view);\n            view.destroy();\n        }\n    }\n    /**\n\t * Updates coordinates of fake panels.\n\t */ updatePosition() {\n        if (this.numberOfPanels) {\n            const { top, left } = this._balloonPanelView;\n            const { width, height } = new Rect(this._balloonPanelView.element);\n            Object.assign(this, {\n                top,\n                left,\n                width,\n                height\n            });\n        }\n    }\n}\n\nconst toPx$3 = /* #__PURE__ */ toUnit('px');\n/**\n * The sticky panel view class.\n */ class StickyPanelView extends View {\n    /**\n\t * Collection of the child views which creates balloon panel contents.\n\t */ content;\n    /**\n\t * The panel which accepts children into {@link #content} collection.\n\t * Also an element which is positioned when {@link #isSticky}.\n\t */ contentPanelElement;\n    /**\n\t * A dummy element which visually fills the space as long as the\n\t * actual panel is sticky. It prevents flickering of the UI.\n\t */ _contentPanelPlaceholder;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale){\n        super(locale);\n        const bind = this.bindTemplate;\n        this.set('isActive', false);\n        this.set('isSticky', false);\n        this.set('limiterElement', null);\n        this.set('limiterBottomOffset', 50);\n        this.set('viewportTopOffset', 0);\n        this.set('_marginLeft', null);\n        this.set('_isStickyToTheBottomOfLimiter', false);\n        this.set('_stickyTopOffset', null);\n        this.set('_stickyBottomOffset', null);\n        this.content = this.createCollection();\n        this._contentPanelPlaceholder = new Template({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-sticky-panel__placeholder'\n                ],\n                style: {\n                    display: bind.to('isSticky', (isSticky)=>isSticky ? 'block' : 'none'),\n                    height: bind.to('isSticky', (isSticky)=>{\n                        return isSticky ? toPx$3(this._contentPanelRect.height) : null;\n                    })\n                }\n            }\n        }).render();\n        this.contentPanelElement = new Template({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-sticky-panel__content',\n                    // Toggle class of the panel when \"sticky\" state changes in the view.\n                    bind.if('isSticky', 'ck-sticky-panel__content_sticky'),\n                    bind.if('_isStickyToTheBottomOfLimiter', 'ck-sticky-panel__content_sticky_bottom-limit')\n                ],\n                style: {\n                    width: bind.to('isSticky', (isSticky)=>{\n                        return isSticky ? toPx$3(this._contentPanelPlaceholder.getBoundingClientRect().width) : null;\n                    }),\n                    top: bind.to('_stickyTopOffset', (value)=>value ? toPx$3(value) : value),\n                    bottom: bind.to('_stickyBottomOffset', (value)=>value ? toPx$3(value) : value),\n                    marginLeft: bind.to('_marginLeft')\n                }\n            },\n            children: this.content\n        }).render();\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-sticky-panel'\n                ]\n            },\n            children: [\n                this._contentPanelPlaceholder,\n                this.contentPanelElement\n            ]\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        // Check if the panel should go into the sticky state immediately.\n        this.checkIfShouldBeSticky();\n        // Update sticky state of the panel as the window and ancestors are being scrolled.\n        this.listenTo(global.document, 'scroll', ()=>{\n            this.checkIfShouldBeSticky();\n        }, {\n            useCapture: true\n        });\n        // Synchronize with `model.isActive` because sticking an inactive panel is pointless.\n        this.listenTo(this, 'change:isActive', ()=>{\n            this.checkIfShouldBeSticky();\n        });\n        if (global.window.visualViewport) {\n            this.listenTo(global.window.visualViewport, 'scroll', ()=>{\n                this.checkIfShouldBeSticky();\n            });\n            this.listenTo(global.window.visualViewport, 'resize', ()=>{\n                this.checkIfShouldBeSticky();\n            });\n        }\n    }\n    /**\n\t * Analyzes the environment to decide whether the panel should be sticky or not.\n\t * Then handles the positioning of the panel.\n\t */ checkIfShouldBeSticky() {\n        // @if CK_DEBUG_STICKYPANEL // RectDrawer.clear();\n        if (!this.limiterElement || !this.isActive) {\n            this._unstick();\n            return;\n        }\n        const limiterRect = new Rect(this.limiterElement);\n        let visibleLimiterRect = limiterRect.getVisible();\n        if (visibleLimiterRect) {\n            const windowRect = new Rect(global.window);\n            windowRect.top += this.viewportTopOffset;\n            windowRect.height -= this.viewportTopOffset;\n            visibleLimiterRect = visibleLimiterRect.getIntersection(windowRect);\n        }\n        const { left: visualViewportOffsetLeft, top: visualViewportOffsetTop } = getVisualViewportOffset();\n        limiterRect.moveBy(visualViewportOffsetLeft, visualViewportOffsetTop);\n        if (visibleLimiterRect) {\n            visibleLimiterRect.moveBy(visualViewportOffsetLeft, visualViewportOffsetTop);\n        }\n        // Stick the panel only if\n        // * the limiter's ancestors are intersecting with each other so that some of their rects are visible,\n        // * and the limiter's top edge is above the visible ancestors' top edge.\n        if (visibleLimiterRect && limiterRect.top < visibleLimiterRect.top) {\n            // Check if there's a change the panel can be sticky to the bottom of the limiter.\n            if (this._contentPanelRect.height + this.limiterBottomOffset > visibleLimiterRect.height) {\n                const stickyBottomOffset = Math.max(limiterRect.bottom - visibleLimiterRect.bottom, 0) + this.limiterBottomOffset;\n                // @if CK_DEBUG_STICKYPANEL // const stickyBottomOffsetRect = new Rect( {\n                // @if CK_DEBUG_STICKYPANEL // \ttop: limiterRect.bottom - stickyBottomOffset, left: 0, right: 2000,\n                // @if CK_DEBUG_STICKYPANEL // \tbottom: limiterRect.bottom - stickyBottomOffset, width: 2000, height: 1\n                // @if CK_DEBUG_STICKYPANEL // } );\n                // @if CK_DEBUG_STICKYPANEL // RectDrawer.draw( stickyBottomOffsetRect,\n                // @if CK_DEBUG_STICKYPANEL // \t{ outlineWidth: '1px', opacity: '.8', outlineColor: 'black' },\n                // @if CK_DEBUG_STICKYPANEL // \t'Sticky bottom offset',\n                // @if CK_DEBUG_STICKYPANEL // \t{ visualViewportOrigin: true }\n                // @if CK_DEBUG_STICKYPANEL // );\n                // Check if sticking the panel to the bottom of the limiter does not cause it to suddenly\n                // move upwards if there's not enough space for it.\n                // To avoid toolbar flickering we are adding 1 for potential style change (sticky has all borders set,\n                // non-sticky lacks bottom border).\n                if (this._contentPanelRect.height + stickyBottomOffset + 1 < limiterRect.height) {\n                    this._stickToBottomOfLimiter(stickyBottomOffset);\n                } else {\n                    this._unstick();\n                }\n            } else if (this._contentPanelRect.height + this.limiterBottomOffset < limiterRect.height) {\n                this._stickToTopOfAncestors(visibleLimiterRect.top);\n            } else {\n                this._unstick();\n            }\n        } else {\n            this._unstick();\n        }\n    // @if CK_DEBUG_STICKYPANEL // console.clear();\n    // @if CK_DEBUG_STICKYPANEL // console.log( 'isSticky', this.isSticky );\n    // @if CK_DEBUG_STICKYPANEL // console.log( '_isStickyToTheBottomOfLimiter', this._isStickyToTheBottomOfLimiter );\n    // @if CK_DEBUG_STICKYPANEL // console.log( '_stickyTopOffset', this._stickyTopOffset );\n    // @if CK_DEBUG_STICKYPANEL // console.log( '_stickyBottomOffset', this._stickyBottomOffset );\n    // @if CK_DEBUG_STICKYPANEL // if ( visibleLimiterRect ) {\n    // @if CK_DEBUG_STICKYPANEL // \tRectDrawer.draw( visibleLimiterRect,\n    // @if CK_DEBUG_STICKYPANEL // \t\t{ ...diagonalStylesBlack,\n    // @if CK_DEBUG_STICKYPANEL // \t\t\toutlineWidth: '3px', opacity: '.8', outlineColor: 'orange', outlineOffset: '-3px',\n    // @if CK_DEBUG_STICKYPANEL // \t\t\tbackgroundColor: 'rgba(0, 0, 255, .2)', zIndex: 2000 },\n    // @if CK_DEBUG_STICKYPANEL // \t\t'visibleLimiterRect',\n    // @if CK_DEBUG_STICKYPANEL // \t\t{ visualViewportOrigin: true }\n    // @if CK_DEBUG_STICKYPANEL // \t);\n    // @if CK_DEBUG_STICKYPANEL // }\n    }\n    /**\n\t * Sticks the panel at the given CSS `top` offset.\n\t *\n\t * @private\n\t * @param topOffset\n\t */ _stickToTopOfAncestors(topOffset) {\n        this.isSticky = true;\n        this._isStickyToTheBottomOfLimiter = false;\n        this._stickyTopOffset = topOffset;\n        this._stickyBottomOffset = null;\n        this._marginLeft = toPx$3(-global.window.scrollX + getVisualViewportOffset().left);\n    }\n    /**\n\t * Sticks the panel at the bottom of the limiter with a given CSS `bottom` offset.\n\t *\n\t * @private\n\t * @param stickyBottomOffset\n\t */ _stickToBottomOfLimiter(stickyBottomOffset) {\n        this.isSticky = true;\n        this._isStickyToTheBottomOfLimiter = true;\n        this._stickyTopOffset = null;\n        this._stickyBottomOffset = stickyBottomOffset;\n        this._marginLeft = toPx$3(-global.window.scrollX + getVisualViewportOffset().left);\n    }\n    /**\n\t * Unsticks the panel putting it back to its original position.\n\t *\n\t * @private\n\t */ _unstick() {\n        this.isSticky = false;\n        this._isStickyToTheBottomOfLimiter = false;\n        this._stickyTopOffset = null;\n        this._stickyBottomOffset = null;\n        this._marginLeft = null;\n    }\n    /**\n\t * Returns the bounding rect of the {@link #contentPanelElement}.\n\t *\n\t * @private\n\t */ get _contentPanelRect() {\n        return new Rect(this.contentPanelElement);\n    }\n}\n\n/**\n * A search input field for the {@link module:ui/search/text/searchtextview~SearchTextView} component.\n *\n * @internal\n * @extends module:ui/labeledfield/labeledfieldview~LabeledFieldView\n */ class SearchTextQueryView extends LabeledFieldView {\n    /**\n\t * The loupe icon displayed next to the {@link #fieldView}.\n\t */ iconView;\n    /**\n\t * The button that clears and focuses the {@link #fieldView}.\n\t */ resetButtonView;\n    /**\n\t * A reference to the view configuration.\n\t */ _viewConfig;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale, config){\n        const t = locale.t;\n        const viewConfig = Object.assign({}, {\n            showResetButton: true,\n            showIcon: true,\n            creator: createLabeledInputText\n        }, config);\n        super(locale, viewConfig.creator);\n        this.label = config.label;\n        this._viewConfig = viewConfig;\n        if (this._viewConfig.showIcon) {\n            this.iconView = new IconView();\n            this.iconView.content = IconLoupe;\n            this.fieldWrapperChildren.add(this.iconView, 0);\n            this.extendTemplate({\n                attributes: {\n                    class: 'ck-search__query_with-icon'\n                }\n            });\n        }\n        if (this._viewConfig.showResetButton) {\n            this.resetButtonView = new ButtonView(locale);\n            this.resetButtonView.set({\n                label: t('Clear'),\n                icon: IconCancel,\n                class: 'ck-search__reset',\n                isVisible: false,\n                tooltip: true\n            });\n            this.resetButtonView.on('execute', ()=>{\n                this.reset();\n                this.focus();\n                this.fire('reset');\n            });\n            this.resetButtonView.bind('isVisible').to(this.fieldView, 'isEmpty', (isEmpty)=>!isEmpty);\n            this.fieldWrapperChildren.add(this.resetButtonView);\n            this.extendTemplate({\n                attributes: {\n                    class: 'ck-search__query_with-reset'\n                }\n            });\n        }\n    }\n    /**\n\t * Resets the search field to its default state.\n\t */ reset() {\n        this.fieldView.reset();\n        if (this._viewConfig.showResetButton) {\n            this.resetButtonView.isVisible = false;\n        }\n    }\n}\n\n/**\n * A view displaying an information text related to different states of {@link module:ui/search/text/searchtextview~SearchTextView}.\n *\n * @internal\n */ class SearchInfoView extends View {\n    /**\n\t * @inheritDoc\n\t */ constructor(){\n        super();\n        const bind = this.bindTemplate;\n        this.set({\n            isVisible: false,\n            primaryText: '',\n            secondaryText: ''\n        });\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-search__info',\n                    bind.if('isVisible', 'ck-hidden', (value)=>!value)\n                ],\n                tabindex: -1\n            },\n            children: [\n                {\n                    tag: 'span',\n                    children: [\n                        {\n                            text: [\n                                bind.to('primaryText')\n                            ]\n                        }\n                    ]\n                },\n                {\n                    tag: 'span',\n                    children: [\n                        {\n                            text: [\n                                bind.to('secondaryText')\n                            ]\n                        }\n                    ]\n                }\n            ]\n        });\n    }\n    /**\n\t * Focuses the view\n\t */ focus() {\n        this.element.focus();\n    }\n}\n\n/**\n * A sub-component of {@link module:ui/search/text/searchtextview~SearchTextView}. It hosts the filtered and the information views.\n */ class SearchResultsView extends View {\n    /**\n\t * Tracks information about the DOM focus in the view.\n\t *\n\t * @readonly\n\t */ focusTracker;\n    /**\n\t * The collection of the child views inside of the list item {@link #element}.\n\t *\n\t * @readonly\n\t */ children;\n    /**\n\t * Provides the focus management (keyboard navigation) in the view.\n\t *\n\t * @readonly\n\t */ _focusCycler;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale){\n        super(locale);\n        this.children = this.createCollection();\n        this.focusTracker = new FocusTracker();\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-search__results'\n                ],\n                tabindex: -1\n            },\n            children: this.children\n        });\n        this._focusCycler = new FocusCycler({\n            focusables: this.children,\n            focusTracker: this.focusTracker\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        for (const child of this.children){\n            this.focusTracker.add(child.element);\n        }\n    }\n    /**\n\t * Focuses the view.\n\t */ focus() {\n        this._focusCycler.focusFirst();\n    }\n    /**\n\t * Focuses the first child view.\n\t */ focusFirst() {\n        this._focusCycler.focusFirst();\n    }\n    /**\n\t * Focuses the last child view.\n\t */ focusLast() {\n        this._focusCycler.focusLast();\n    }\n}\n\n/**\n * A search component that allows filtering of an arbitrary view based on a search query\n * specified by the user in a text field.\n *\n *```ts\n * // This view must specify the `filter()` and `focus()` methods.\n * const filteredView = ...;\n *\n * const searchView = new SearchTextView( locale, {\n * \tsearchFieldLabel: 'Search list items',\n * \tfilteredView\n * } );\n *\n * view.render();\n *\n * document.body.append( view.element );\n * ```\n */ class SearchTextView extends View {\n    /**\n\t * Tracks information about the DOM focus in the view.\n\t *\n\t * @readonly\n\t */ focusTracker;\n    /**\n\t * An instance of the keystroke handler managing user interaction and accessibility.\n\t *\n\t * @readonly\n\t */ keystrokes;\n    /**\n\t * A view hosting the {@link #filteredView} passed in the configuration and the {@link #infoView}.\n\t */ resultsView;\n    /**\n\t * The view that is filtered by the search query.\n\t */ filteredView;\n    /**\n\t * The view that displays the information about the search results.\n\t */ infoView;\n    /**\n\t * The view that allows the user to enter the search query.\n\t */ queryView;\n    /**\n\t * Provides the focus management (keyboard navigation) between {@link #queryView} and {@link #filteredView}.\n\t *\n\t * @readonly\n\t */ focusCycler;\n    /**\n\t * The cached configuration object.\n\t *\n\t * @internal\n\t */ _config;\n    /**\n\t * Creates an instance of the {@link module:ui/search/text/searchtextview~SearchTextView} class.\n\t *\n\t * @param locale The localization services instance.\n\t * @param config Configuration of the view.\n\t */ constructor(locale, config){\n        super(locale);\n        this._config = config;\n        this.filteredView = config.filteredView;\n        this.queryView = this._createSearchTextQueryView();\n        this.focusTracker = new FocusTracker();\n        this.keystrokes = new KeystrokeHandler();\n        this.resultsView = new SearchResultsView(locale);\n        this.children = this.createCollection();\n        this.focusableChildren = this.createCollection([\n            this.queryView,\n            this.resultsView\n        ]);\n        this.set('isEnabled', true);\n        this.set('resultsCount', 0);\n        this.set('totalItemsCount', 0);\n        if (config.infoView && config.infoView.instance) {\n            this.infoView = config.infoView.instance;\n        } else {\n            this.infoView = new SearchInfoView();\n            this._enableDefaultInfoViewBehavior();\n            this.on('render', ()=>{\n                // Initial search that determines if there are any searchable items\n                // and displays the corresponding info text.\n                this.search('');\n            });\n        }\n        this.resultsView.children.addMany([\n            this.infoView,\n            this.filteredView\n        ]);\n        this.focusCycler = new FocusCycler({\n            focusables: this.focusableChildren,\n            focusTracker: this.focusTracker,\n            keystrokeHandler: this.keystrokes,\n            actions: {\n                // Navigate form fields backwards using the Shift + Tab keystroke.\n                focusPrevious: 'shift + tab',\n                // Navigate form fields forwards using the Tab key.\n                focusNext: 'tab'\n            }\n        });\n        this.on('search', (evt, { resultsCount, totalItemsCount })=>{\n            this.resultsCount = resultsCount;\n            this.totalItemsCount = totalItemsCount;\n        });\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-search',\n                    config.class || null\n                ],\n                tabindex: '-1'\n            },\n            children: this.children\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        this.children.addMany([\n            this.queryView,\n            this.resultsView\n        ]);\n        const stopPropagation = (data)=>data.stopPropagation();\n        for (const focusableChild of this.focusableChildren){\n            this.focusTracker.add(focusableChild.element);\n        }\n        // Start listening for the keystrokes coming from #element.\n        this.keystrokes.listenTo(this.element);\n        // Since the form is in the dropdown panel which is a child of the toolbar, the toolbar's\n        // keystroke handler would take over the key management in the URL input. We need to prevent\n        // this ASAP. Otherwise, the basic caret movement using the arrow keys will be impossible.\n        this.keystrokes.set('arrowright', stopPropagation);\n        this.keystrokes.set('arrowleft', stopPropagation);\n        this.keystrokes.set('arrowup', stopPropagation);\n        this.keystrokes.set('arrowdown', stopPropagation);\n    }\n    /**\n\t * Focuses the {@link #queryView}.\n\t */ focus() {\n        this.queryView.focus();\n    }\n    /**\n\t * Resets the component to its initial state.\n\t */ reset() {\n        this.queryView.reset();\n        this.search('');\n        this.filteredView.element.scrollTo(0, 0);\n    }\n    /**\n\t * Searches the {@link #filteredView} for the given query.\n\t *\n\t * @internal\n\t * @param query The search query string.\n\t */ search(query) {\n        const regExp = query ? new RegExp(escapeRegExp(query), 'ig') : null;\n        const filteringResults = this.filteredView.filter(regExp);\n        this.fire('search', {\n            query,\n            ...filteringResults\n        });\n    }\n    /**\n\t * Creates a search field view based on configured creator..\n\t */ _createSearchTextQueryView() {\n        const queryView = new SearchTextQueryView(this.locale, this._config.queryView);\n        this.listenTo(queryView.fieldView, 'input', ()=>{\n            this.search(queryView.fieldView.element.value);\n        });\n        queryView.on('reset', ()=>this.reset());\n        queryView.bind('isEnabled').to(this);\n        return queryView;\n    }\n    /**\n\t * Initializes the default {@link #infoView} behavior with default text labels when no custom info view\n\t * was specified in the view config.\n\t */ _enableDefaultInfoViewBehavior() {\n        const t = this.locale.t;\n        const infoView = this.infoView;\n        this.on('search', (evt, data)=>{\n            if (!data.resultsCount) {\n                const defaultTextConfig = this._config.infoView && this._config.infoView.text;\n                let primaryText, secondaryText;\n                if (data.totalItemsCount) {\n                    if (defaultTextConfig?.notFound) {\n                        primaryText = defaultTextConfig.notFound.primary;\n                        secondaryText = defaultTextConfig.notFound.secondary;\n                    } else {\n                        primaryText = t('No results found');\n                        secondaryText = '';\n                    }\n                } else {\n                    if (defaultTextConfig?.noSearchableItems) {\n                        primaryText = defaultTextConfig.noSearchableItems.primary;\n                        secondaryText = defaultTextConfig.noSearchableItems.secondary;\n                    } else {\n                        primaryText = t('No searchable items');\n                        secondaryText = '';\n                    }\n                }\n                infoView.set({\n                    primaryText: normalizeInfoText(primaryText, data),\n                    secondaryText: normalizeInfoText(secondaryText, data),\n                    isVisible: true\n                });\n            } else {\n                infoView.set({\n                    isVisible: false\n                });\n            }\n        });\n        function normalizeInfoText(text, { query, resultsCount, totalItemsCount }) {\n            return typeof text === 'function' ? text(query, resultsCount, totalItemsCount) : text;\n        }\n    }\n}\n\n/**\n * The autocomplete component's view class. It extends the {@link module:ui/search/text/searchtextview~SearchTextView} class\n * with a floating {@link #resultsView} that shows up when the user starts typing and hides when they blur\n * the component.\n */ class AutocompleteView extends SearchTextView {\n    /**\n\t * The configuration of the autocomplete view.\n\t */ _config;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale, config){\n        super(locale, config);\n        this._config = config;\n        const toPx = toUnit('px');\n        this.extendTemplate({\n            attributes: {\n                class: [\n                    'ck-autocomplete'\n                ]\n            }\n        });\n        const bindResultsView = this.resultsView.bindTemplate;\n        this.resultsView.set('isVisible', false);\n        this.resultsView.set('_position', 's');\n        this.resultsView.set('_width', 0);\n        this.resultsView.extendTemplate({\n            attributes: {\n                class: [\n                    bindResultsView.if('isVisible', 'ck-hidden', (value)=>!value),\n                    bindResultsView.to('_position', (value)=>`ck-search__results_${value}`)\n                ],\n                style: {\n                    width: bindResultsView.to('_width', toPx)\n                }\n            }\n        });\n        // Update the visibility of the results view when the user focuses or blurs the component.\n        // This is also integration for the `resetOnBlur` configuration.\n        this.focusTracker.on('change:isFocused', (evt, name, isFocused)=>{\n            this._updateResultsVisibility();\n            if (isFocused) {\n                // Reset the scroll position of the results view whenever the autocomplete reopens.\n                this.resultsView.element.scrollTop = 0;\n            } else if (config.resetOnBlur) {\n                this.queryView.reset();\n            }\n        });\n        // Update the visibility of the results view when the user types in the query field.\n        // This is an integration for `queryMinChars` configuration.\n        // This is an integration for search results changing length and the #resultsView requiring to be repositioned.\n        this.on('search', ()=>{\n            this._updateResultsVisibility();\n            this._updateResultsViewWidthAndPosition();\n        });\n        // Hide the results view when the user presses the ESC key.\n        this.keystrokes.set('esc', (evt, cancel)=>{\n            // Let the DOM event pass through if the focus is in the query view.\n            if (!this.resultsView.isVisible) {\n                return;\n            }\n            // Focus the query view first and only then close the results view. Otherwise, if the focus\n            // was in the results view, it will get lost.\n            this.queryView.focus();\n            this.resultsView.isVisible = false;\n            cancel();\n        });\n        // Update the position of the results view when the user scrolls the page.\n        // TODO: This needs to be debounced down the road.\n        this.listenTo(global.document, 'scroll', ()=>{\n            this._updateResultsViewWidthAndPosition();\n        });\n        // Hide the results when the component becomes disabled.\n        this.on('change:isEnabled', ()=>{\n            this._updateResultsVisibility();\n        });\n        // Update the value of the query field when the user selects a result.\n        this.filteredView.on('execute', (evt, { value })=>{\n            // Focus the query view first to avoid losing the focus.\n            this.focus();\n            // Resetting the view will ensure that the #queryView will update its empty state correctly.\n            // This prevents bugs related to dynamic labels or auto-grow when re-setting the same value\n            // to #queryView.fieldView.value (which does not trigger empty state change) to an\n            // #queryView.fieldView.element that has been changed by the user.\n            this.reset();\n            // Update the value of the query field.\n            this.queryView.fieldView.value = this.queryView.fieldView.element.value = value;\n            // Finally, hide the results view. The focus has been moved earlier so this is safe.\n            this.resultsView.isVisible = false;\n        });\n        // Update the position and width of the results view when it becomes visible.\n        this.resultsView.on('change:isVisible', ()=>{\n            this._updateResultsViewWidthAndPosition();\n        });\n    }\n    /**\n\t * Updates the position of the results view on demand.\n\t */ _updateResultsViewWidthAndPosition() {\n        if (!this.resultsView.isVisible) {\n            return;\n        }\n        this.resultsView._width = new Rect(this.queryView.fieldView.element).width;\n        const optimalResultsPosition = AutocompleteView._getOptimalPosition({\n            element: this.resultsView.element,\n            target: this.queryView.element,\n            fitInViewport: true,\n            positions: AutocompleteView.defaultResultsPositions\n        });\n        // _getOptimalPosition will return null if there is no optimal position found (e.g. target is off the viewport).\n        this.resultsView._position = optimalResultsPosition ? optimalResultsPosition.name : 's';\n    }\n    /**\n\t * Updates the visibility of the results view on demand.\n\t */ _updateResultsVisibility() {\n        const queryMinChars = typeof this._config.queryMinChars === 'undefined' ? 0 : this._config.queryMinChars;\n        const queryLength = this.queryView.fieldView.element.value.length;\n        this.resultsView.isVisible = this.focusTracker.isFocused && this.isEnabled && queryLength >= queryMinChars;\n    }\n    /**\n\t * Positions for the autocomplete results view. Two positions are defined by default:\n\t * * `s` - below the search field,\n\t * * `n` - above the search field.\n\t */ static defaultResultsPositions = [\n        (fieldRect)=>{\n            return {\n                top: fieldRect.bottom,\n                left: fieldRect.left,\n                name: 's'\n            };\n        },\n        (fieldRect, resultsRect)=>{\n            return {\n                top: fieldRect.top - resultsRect.height,\n                left: fieldRect.left,\n                name: 'n'\n            };\n        }\n    ];\n    /**\n\t * A function used to calculate the optimal position for the dropdown panel.\n\t */ static _getOptimalPosition = getOptimalPosition;\n}\n\n/**\n * A class representing a view that displays a text which subset can be highlighted using the\n * {@link #highlightText} method.\n */ class HighlightedTextView extends View {\n    /**\n\t * @inheritDoc\n\t */ constructor(){\n        super();\n        this.set('text', undefined);\n        this.setTemplate({\n            tag: 'span',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-highlighted-text'\n                ]\n            }\n        });\n        this.on('render', ()=>{\n            // Classic setTemplate binding for #text will not work because highlightText() replaces the\n            // pre-rendered DOM text node new a new one (and <mark> elements).\n            this.on('change:text', ()=>{\n                this._updateInnerHTML(this.text);\n            });\n            this._updateInnerHTML(this.text);\n        });\n    }\n    /**\n\t * Highlights view's {@link #text} according to the specified `RegExp`. If the passed RegExp is `null`, the\n\t * highlighting is removed\n\t *\n\t * @param regExp\n\t */ highlightText(regExp) {\n        this._updateInnerHTML(markText(this.text || '', regExp));\n    }\n    /**\n\t * Updates element's `innerHTML` with the passed content.\n\t */ _updateInnerHTML(newInnerHTML) {\n        this.element.innerHTML = newInnerHTML || '';\n    }\n}\n/**\n * Replaces `regExp` occurrences with `<mark>` tags in a text.\n *\n * @param text A text to get marked.\n * @param regExp An optional `RegExp`. If not passed, this is a pass-through function.\n * @returns A text with `RegExp` occurrences marked by `<mark>`.\n */ function markText(text, regExp) {\n    if (!regExp) {\n        return escape(text);\n    }\n    const textParts = [];\n    let lastMatchEnd = 0;\n    let matchInfo = regExp.exec(text);\n    // Iterate over all matches and create an array of text parts. The idea is to mark which parts are query matches\n    // so that later on they can be highlighted.\n    while(matchInfo !== null){\n        const curMatchStart = matchInfo.index;\n        // Detect if there was something between last match and this one.\n        if (curMatchStart !== lastMatchEnd) {\n            textParts.push({\n                text: text.substring(lastMatchEnd, curMatchStart),\n                isMatch: false\n            });\n        }\n        textParts.push({\n            text: matchInfo[0],\n            isMatch: true\n        });\n        lastMatchEnd = regExp.lastIndex;\n        matchInfo = regExp.exec(text);\n    }\n    // Your match might not be the last part of a string. Be sure to add any plain text following the last match.\n    if (lastMatchEnd !== text.length) {\n        textParts.push({\n            text: text.substring(lastMatchEnd),\n            isMatch: false\n        });\n    }\n    const outputHtml = textParts// The entire text should be escaped.\n    .map((part)=>{\n        part.text = escape(part.text);\n        return part;\n    })// Only matched text should be wrapped with HTML mark element.\n    .map((part)=>part.isMatch ? `<mark>${part.text}</mark>` : part.text).join('');\n    return outputHtml;\n}\n\n/**\n * A button label view that can highlight a text fragment.\n */ class ButtonLabelWithHighlightView extends HighlightedTextView {\n    /**\n\t * @inheritDoc\n\t */ constructor(){\n        super();\n        this.set({\n            style: undefined,\n            text: undefined,\n            id: undefined\n        });\n        const bind = this.bindTemplate;\n        this.extendTemplate({\n            attributes: {\n                class: [\n                    'ck-button__label'\n                ],\n                style: bind.to('style'),\n                id: bind.to('id')\n            }\n        });\n    }\n}\n\n/**\n * A label view that can highlight a text fragment.\n */ class LabelWithHighlightView extends HighlightedTextView {\n    /**\n\t * @inheritDoc\n\t */ id;\n    /**\n\t * @inheritDoc\n\t */ constructor(){\n        super();\n        this.set('for', undefined);\n        const bind = this.bindTemplate;\n        this.id = `ck-editor__label_${uid()}`;\n        this.extendTemplate({\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-label'\n                ],\n                id: this.id,\n                for: bind.to('for')\n            }\n        });\n    }\n}\n\n/**\n * The spinner view class.\n */ class SpinnerView extends View {\n    /**\n\t * @inheritDoc\n\t */ constructor(){\n        super();\n        this.set('isVisible', false);\n        const bind = this.bindTemplate;\n        this.setTemplate({\n            tag: 'span',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-spinner-container',\n                    bind.if('isVisible', 'ck-hidden', (value)=>!value)\n                ]\n            },\n            children: [\n                {\n                    tag: 'span',\n                    attributes: {\n                        class: [\n                            'ck',\n                            'ck-spinner'\n                        ]\n                    }\n                }\n            ]\n        });\n    }\n}\n\nconst toPx$2 = /* #__PURE__ */ toUnit('px');\n/**\n * The contextual toolbar.\n *\n * It uses the {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon plugin}.\n */ class BalloonToolbar extends Plugin {\n    /**\n\t * The toolbar view displayed in the balloon.\n\t */ toolbarView;\n    /**\n\t * Tracks the focus of the {@link module:ui/editorui/editorui~EditorUI#getEditableElement editable element}\n\t * and the {@link #toolbarView}. When both are blurred then the toolbar should hide.\n\t */ focusTracker;\n    /**\n\t * A cached and normalized `config.balloonToolbar` object.\n\t */ _balloonConfig;\n    /**\n\t * An instance of the resize observer that allows to respond to changes in editable's geometry\n\t * so the toolbar can stay within its boundaries (and group toolbar items that do not fit).\n\t *\n\t * **Note**: Used only when `shouldNotGroupWhenFull` was **not** set in the\n\t * {@link module:core/editor/editorconfig~EditorConfig#balloonToolbar configuration}.\n\t *\n\t * **Note:** Created in {@link #init}.\n\t */ _resizeObserver = null;\n    /**\n\t * The contextual balloon plugin instance.\n\t */ _balloon;\n    /**\n\t * Fires `_selectionChangeDebounced` event using `es-toolkit#debounce`.\n\t *\n\t * This event is an internal plugin event which is fired 200 ms after model selection last change.\n\t * This is to makes easy test debounced action without need to use `setTimeout`.\n\t *\n\t * This function is stored as a plugin property to make possible to cancel\n\t * trailing debounced invocation on destroy.\n\t */ _fireSelectionChangeDebounced;\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'BalloonToolbar';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n\t * @inheritDoc\n\t */ static get requires() {\n        return [\n            ContextualBalloon\n        ];\n    }\n    /**\n\t * @inheritDoc\n\t */ constructor(editor){\n        super(editor);\n        this._balloonConfig = normalizeToolbarConfig(editor.config.get('balloonToolbar'));\n        this.toolbarView = this._createToolbarView();\n        this.focusTracker = new FocusTracker();\n        // Track focusable elements in the toolbar and the editable elements.\n        this._trackFocusableEditableElements();\n        this.focusTracker.add(this.toolbarView);\n        // Register the toolbar so it becomes available for Alt+F10 and Esc navigation.\n        editor.ui.addToolbar(this.toolbarView, {\n            beforeFocus: ()=>this.show(true),\n            afterBlur: ()=>this.hide(),\n            isContextual: true\n        });\n        this._balloon = editor.plugins.get(ContextualBalloon);\n        this._fireSelectionChangeDebounced = debounce(()=>this.fire('_selectionChangeDebounced'), 200);\n        // The appearance of the BalloonToolbar method is event–driven.\n        // It is possible to stop the #show event and this prevent the toolbar from showing up.\n        this.decorate('show');\n    }\n    /**\n\t * @inheritDoc\n\t */ init() {\n        const editor = this.editor;\n        const selection = editor.model.document.selection;\n        // Show/hide the toolbar on editable focus/blur.\n        this.listenTo(this.focusTracker, 'change:isFocused', (evt, name, isFocused)=>{\n            const isToolbarVisible = this._balloon.visibleView === this.toolbarView;\n            if (!isFocused && isToolbarVisible) {\n                this.hide();\n            } else if (isFocused) {\n                this.show();\n            }\n        });\n        // Hide the toolbar when the selection is changed by a direct change or has changed to collapsed.\n        this.listenTo(selection, 'change:range', (evt, data)=>{\n            if (data.directChange || selection.isCollapsed) {\n                this.hide();\n            }\n            // Fire internal `_selectionChangeDebounced` event to use it for showing\n            // the toolbar after the selection stops changing.\n            this._fireSelectionChangeDebounced();\n        });\n        // Show the toolbar when the selection stops changing.\n        this.listenTo(this, '_selectionChangeDebounced', ()=>{\n            if (this.editor.editing.view.document.isFocused) {\n                this.show();\n            }\n        });\n        if (!this._balloonConfig.shouldNotGroupWhenFull) {\n            this.listenTo(editor, 'ready', ()=>{\n                const editableElement = editor.ui.view.editable.element;\n                // Set #toolbarView's max-width on the initialization and update it on the editable resize.\n                this._resizeObserver = new ResizeObserver(editableElement, (entry)=>{\n                    // The max-width equals 90% of the editable's width for the best user experience.\n                    // The value keeps the balloon very close to the boundaries of the editable and limits the cases\n                    // when the balloon juts out from the editable element it belongs to.\n                    this.toolbarView.maxWidth = toPx$2(entry.contentRect.width * .9);\n                });\n            });\n        }\n        // Listen to the toolbar view and whenever it changes its geometry due to some items being\n        // grouped or ungrouped, update the position of the balloon because a shorter/longer toolbar\n        // means the balloon could be pointing at the wrong place. Once updated, the balloon will point\n        // at the right selection in the content again.\n        // https://github.com/ckeditor/ckeditor5/issues/6444\n        this.listenTo(this.toolbarView, 'groupedItemsUpdate', ()=>{\n            this._updatePosition();\n        });\n        // Creates toolbar components based on given configuration.\n        // This needs to be done when all plugins are ready.\n        editor.ui.once('ready', ()=>{\n            this.toolbarView.fillFromConfig(this._balloonConfig, this.editor.ui.componentFactory);\n        });\n    }\n    /**\n\t * Creates the toolbar view instance.\n\t */ _createToolbarView() {\n        const t = this.editor.locale.t;\n        const shouldGroupWhenFull = !this._balloonConfig.shouldNotGroupWhenFull;\n        const toolbarView = new ToolbarView(this.editor.locale, {\n            shouldGroupWhenFull,\n            isFloating: true\n        });\n        toolbarView.ariaLabel = t('Editor contextual toolbar');\n        toolbarView.render();\n        return toolbarView;\n    }\n    /**\n\t * Shows the toolbar and attaches it to the selection.\n\t *\n\t * Fires {@link #event:show} event which can be stopped to prevent the toolbar from showing up.\n\t *\n\t * @param showForCollapsedSelection When set `true`, the toolbar will show despite collapsed selection in the\n\t * editing view.\n\t */ show(showForCollapsedSelection = false) {\n        const editor = this.editor;\n        const selection = editor.model.document.selection;\n        const schema = editor.model.schema;\n        // Do not add the toolbar to the balloon stack twice.\n        if (this._balloon.hasView(this.toolbarView)) {\n            return;\n        }\n        // Do not show the toolbar when the selection is collapsed.\n        if (selection.isCollapsed && !showForCollapsedSelection) {\n            return;\n        }\n        // Do not show the toolbar when there is more than one range in the selection and they fully contain selectable elements.\n        // See https://github.com/ckeditor/ckeditor5/issues/6443.\n        if (selectionContainsOnlyMultipleSelectables(selection, schema)) {\n            return;\n        }\n        // Do not show the toolbar when all components inside are disabled\n        // see https://github.com/ckeditor/ckeditor5-ui/issues/269.\n        if (Array.from(this.toolbarView.items).every((item)=>item.isEnabled !== undefined && !item.isEnabled)) {\n            return;\n        }\n        // Update the toolbar position when the editor ui should be refreshed.\n        this.listenTo(this.editor.ui, 'update', ()=>{\n            this._updatePosition();\n        });\n        // Add the toolbar to the common editor contextual balloon.\n        this._balloon.add({\n            view: this.toolbarView,\n            position: this._getBalloonPositionData(),\n            balloonClassName: 'ck-toolbar-container'\n        });\n    }\n    /**\n\t * Hides the toolbar.\n\t */ hide() {\n        if (this._balloon.hasView(this.toolbarView)) {\n            this.stopListening(this.editor.ui, 'update');\n            this._balloon.remove(this.toolbarView);\n        }\n    }\n    /**\n\t * Add or remove editable elements to the focus tracker. It watches added and removed roots\n\t * and adds or removes their editable elements to the focus tracker.\n\t */ _trackFocusableEditableElements() {\n        const { editor, focusTracker } = this;\n        const { editing } = editor;\n        editing.view.addObserver(class TrackEditableElements extends Observer {\n            /**\n\t\t\t * @inheritDoc\n\t\t\t */ observe(domElement) {\n                focusTracker.add(domElement);\n            }\n            /**\n\t\t\t * @inheritDoc\n\t\t\t */ stopObserving(domElement) {\n                focusTracker.remove(domElement);\n            }\n        });\n    }\n    /**\n\t * Returns positioning options for the {@link #_balloon}. They control the way balloon is attached\n\t * to the selection.\n\t */ _getBalloonPositionData() {\n        const editor = this.editor;\n        const view = editor.editing.view;\n        const viewDocument = view.document;\n        const viewSelection = viewDocument.selection;\n        // Get direction of the selection.\n        const isBackward = viewDocument.selection.isBackward;\n        return {\n            // Because the target for BalloonPanelView is a Rect (not DOMRange), it's geometry will stay fixed\n            // as the window scrolls. To let the BalloonPanelView follow such Rect, is must be continuously\n            // computed and hence, the target is defined as a function instead of a static value.\n            // https://github.com/ckeditor/ckeditor5-ui/issues/195\n            target: ()=>{\n                const range = isBackward ? viewSelection.getFirstRange() : viewSelection.getLastRange();\n                const rangeRects = Rect.getDomRangeRects(view.domConverter.viewRangeToDom(range));\n                // Select the proper range rect depending on the direction of the selection.\n                if (isBackward) {\n                    return rangeRects[0];\n                } else {\n                    // Ditch the zero-width \"orphan\" rect in the next line for the forward selection if there's\n                    // another one preceding it. It is not rendered as a selection by the web browser anyway.\n                    // https://github.com/ckeditor/ckeditor5-ui/issues/308\n                    if (rangeRects.length > 1 && rangeRects[rangeRects.length - 1].width === 0) {\n                        rangeRects.pop();\n                    }\n                    return rangeRects[rangeRects.length - 1];\n                }\n            },\n            positions: this._getBalloonPositions(isBackward)\n        };\n    }\n    /**\n\t * Updates the position of the {@link #_balloon} to make up for changes:\n\t *\n\t * * in the geometry of the selection it is attached to (e.g. the selection moved in the viewport or expanded or shrunk),\n\t * * or the geometry of the balloon toolbar itself (e.g. the toolbar has grouped or ungrouped some items and it is shorter or longer).\n\t */ _updatePosition() {\n        this._balloon.updatePosition(this._getBalloonPositionData());\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        super.destroy();\n        this.stopListening();\n        this._fireSelectionChangeDebounced.cancel();\n        this.toolbarView.destroy();\n        this.focusTracker.destroy();\n        if (this._resizeObserver) {\n            this._resizeObserver.destroy();\n        }\n    }\n    /**\n\t * Returns toolbar positions for the given direction of the selection.\n\t */ _getBalloonPositions(isBackward) {\n        const isSafariIniOS = env.isSafari && env.isiOS;\n        // https://github.com/ckeditor/ckeditor5/issues/7707\n        const positions = isSafariIniOS ? BalloonPanelView.generatePositions({\n            // 20px when zoomed out. Less then 20px when zoomed in; the \"radius\" of the native selection handle gets\n            // smaller as the user zooms in. No less than the default v-offset, though.\n            heightOffset: Math.max(BalloonPanelView.arrowHeightOffset, Math.round(20 / global.window.visualViewport.scale))\n        }) : BalloonPanelView.defaultPositions;\n        return isBackward ? [\n            positions.northWestArrowSouth,\n            positions.northWestArrowSouthWest,\n            positions.northWestArrowSouthEast,\n            positions.northWestArrowSouthMiddleEast,\n            positions.northWestArrowSouthMiddleWest,\n            positions.southWestArrowNorth,\n            positions.southWestArrowNorthWest,\n            positions.southWestArrowNorthEast,\n            positions.southWestArrowNorthMiddleWest,\n            positions.southWestArrowNorthMiddleEast\n        ] : [\n            positions.southEastArrowNorth,\n            positions.southEastArrowNorthEast,\n            positions.southEastArrowNorthWest,\n            positions.southEastArrowNorthMiddleEast,\n            positions.southEastArrowNorthMiddleWest,\n            positions.northEastArrowSouth,\n            positions.northEastArrowSouthEast,\n            positions.northEastArrowSouthWest,\n            positions.northEastArrowSouthMiddleEast,\n            positions.northEastArrowSouthMiddleWest\n        ];\n    }\n}\n/**\n * Returns \"true\" when the selection has multiple ranges and each range contains a selectable element\n * and nothing else.\n */ function selectionContainsOnlyMultipleSelectables(selection, schema) {\n    // It doesn't contain multiple objects if there is only one range.\n    if (selection.rangeCount === 1) {\n        return false;\n    }\n    return [\n        ...selection.getRanges()\n    ].every((range)=>{\n        const element = range.getContainedElement();\n        return element && schema.isSelectable(element);\n    });\n}\n\nconst toPx$1 = /* #__PURE__ */ toUnit('px');\n/**\n * The block button view class.\n *\n * This view represents a button attached next to block element where the selection is anchored.\n *\n * See {@link module:ui/toolbar/block/blocktoolbar~BlockToolbar}.\n */ class BlockButtonView extends ButtonView {\n    /**\n\t * @inheritDoc\n\t */ constructor(locale){\n        super(locale);\n        const bind = this.bindTemplate;\n        // Hide button on init.\n        this.isVisible = false;\n        this.isToggleable = true;\n        this.set('top', 0);\n        this.set('left', 0);\n        this.extendTemplate({\n            attributes: {\n                class: 'ck-block-toolbar-button',\n                style: {\n                    top: bind.to('top', (val)=>toPx$1(val)),\n                    left: bind.to('left', (val)=>toPx$1(val))\n                }\n            }\n        });\n    }\n}\n\nconst toPx = /* #__PURE__ */ toUnit('px');\n/**\n * The block toolbar plugin.\n *\n * This plugin provides a button positioned next to the block of content where the selection is anchored.\n * Upon clicking the button, a dropdown providing access to editor features shows up, as configured in\n * {@link module:core/editor/editorconfig~EditorConfig#blockToolbar}.\n *\n * By default, the button is displayed next to all elements marked in {@link module:engine/model/schema~ModelSchema}\n * as `$block` for which the toolbar provides at least one option.\n *\n * By default, the button is attached so its right boundary is touching the\n * {@link module:engine/view/editableelement~ViewEditableElement}:\n *\n * ```\n *  __ |\n * |  ||  This is a block of content that the\n *  ¯¯ |  button is attached to. This is a\n *     |  block of content that the button is\n *     |  attached to.\n * ```\n *\n * The position of the button can be adjusted using the CSS `transform` property:\n *\n * ```css\n * .ck-block-toolbar-button {\n * \ttransform: translateX( -10px );\n * }\n * ```\n *\n * ```\n *  __   |\n * |  |  |  This is a block of content that the\n *  ¯¯   |  button is attached to. This is a\n *       |  block of content that the button is\n *       |  attached to.\n * ```\n *\n * **Note**: If you plan to run the editor in a right–to–left (RTL) language, keep in mind the button\n * will be attached to the **right** boundary of the editable area. In that case, make sure the\n * CSS position adjustment works properly by adding the following styles:\n *\n * ```css\n * .ck[dir=\"rtl\"] .ck-block-toolbar-button {\n * \ttransform: translateX( 10px );\n * }\n * ```\n */ class BlockToolbar extends Plugin {\n    /**\n\t * The toolbar view.\n\t */ toolbarView;\n    /**\n\t * The balloon panel view, containing the {@link #toolbarView}.\n\t */ panelView;\n    /**\n\t * The button view that opens the {@link #toolbarView}.\n\t */ buttonView;\n    /**\n\t * An instance of the resize observer that allows to respond to changes in editable's geometry\n\t * so the toolbar can stay within its boundaries (and group toolbar items that do not fit).\n\t *\n\t * **Note**: Used only when `shouldNotGroupWhenFull` was **not** set in the\n\t * {@link module:core/editor/editorconfig~EditorConfig#blockToolbar configuration}.\n\t */ _resizeObserver = null;\n    /**\n\t * A cached and normalized `config.blockToolbar` object.\n\t */ _blockToolbarConfig;\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'BlockToolbar';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n\t * @inheritDoc\n\t */ constructor(editor){\n        super(editor);\n        this._blockToolbarConfig = normalizeToolbarConfig(this.editor.config.get('blockToolbar'));\n        this.toolbarView = this._createToolbarView();\n        this.panelView = this._createPanelView();\n        this.buttonView = this._createButtonView();\n        // Close the #panelView upon clicking outside of the plugin UI.\n        clickOutsideHandler({\n            emitter: this.panelView,\n            contextElements: [\n                this.panelView.element,\n                this.buttonView.element\n            ],\n            activator: ()=>this.panelView.isVisible,\n            callback: ()=>this._hidePanel()\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ init() {\n        const editor = this.editor;\n        const t = editor.t;\n        const editBlockText = t('Click to edit block');\n        const dragToMoveText = t('Drag to move');\n        const editBlockLabel = t('Edit block');\n        const isDragDropBlockToolbarPluginLoaded = editor.plugins.has('DragDropBlockToolbar');\n        const label = isDragDropBlockToolbarPluginLoaded ? `${editBlockText}\\n${dragToMoveText}` : editBlockLabel;\n        this.buttonView.label = label;\n        if (isDragDropBlockToolbarPluginLoaded) {\n            this.buttonView.element.dataset.ckeTooltipClass = 'ck-tooltip_multi-line';\n        }\n        // Hides panel on a direct selection change.\n        this.listenTo(editor.model.document.selection, 'change:range', (evt, data)=>{\n            if (data.directChange) {\n                this._hidePanel();\n            }\n        });\n        this.listenTo(editor.ui, 'update', ()=>this._updateButton());\n        // `low` priority is used because of https://github.com/ckeditor/ckeditor5-core/issues/133.\n        this.listenTo(editor, 'change:isReadOnly', ()=>this._updateButton(), {\n            priority: 'low'\n        });\n        this.listenTo(editor.ui.focusTracker, 'change:isFocused', ()=>this._updateButton());\n        // Reposition button on resize.\n        this.listenTo(this.buttonView, 'change:isVisible', (evt, name, isVisible)=>{\n            if (isVisible) {\n                // Keep correct position of button and panel on window#resize.\n                this.buttonView.listenTo(window, 'resize', ()=>this._updateButton());\n            } else {\n                // Stop repositioning button when is hidden.\n                this.buttonView.stopListening(window, 'resize');\n                // Hide the panel when the button disappears.\n                this._hidePanel();\n            }\n        });\n        // Reposition button on scroll.\n        this._repositionButtonOnScroll();\n        // Register the toolbar so it becomes available for Alt+F10 and Esc navigation.\n        editor.ui.addToolbar(this.toolbarView, {\n            beforeFocus: ()=>this._showPanel(),\n            afterBlur: ()=>this._hidePanel()\n        });\n        // Fills the toolbar with its items based on the configuration.\n        // This needs to be done after all plugins are ready.\n        editor.ui.once('ready', ()=>{\n            this.toolbarView.fillFromConfig(this._blockToolbarConfig, this.editor.ui.componentFactory);\n            // Hide panel before executing each button in the panel.\n            for (const item of this.toolbarView.items){\n                item.on('execute', ()=>this._hidePanel(true), {\n                    priority: 'high'\n                });\n            }\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        super.destroy();\n        // Destroy created UI components as they are not automatically destroyed (see ckeditor5#1341).\n        this.panelView.destroy();\n        this.buttonView.destroy();\n        this.toolbarView.destroy();\n        if (this._resizeObserver) {\n            this._resizeObserver.destroy();\n        }\n    }\n    /**\n\t * Creates the {@link #toolbarView}.\n\t */ _createToolbarView() {\n        const t = this.editor.locale.t;\n        const shouldGroupWhenFull = !this._blockToolbarConfig.shouldNotGroupWhenFull;\n        const toolbarView = new ToolbarView(this.editor.locale, {\n            shouldGroupWhenFull,\n            isFloating: true\n        });\n        toolbarView.ariaLabel = t('Editor block content toolbar');\n        return toolbarView;\n    }\n    /**\n\t * Creates the {@link #panelView}.\n\t */ _createPanelView() {\n        const editor = this.editor;\n        const panelView = new BalloonPanelView(editor.locale);\n        panelView.content.add(this.toolbarView);\n        panelView.class = 'ck-toolbar-container';\n        editor.ui.view.body.add(panelView);\n        // Close #panelView on `Esc` press.\n        this.toolbarView.keystrokes.set('Esc', (evt, cancel)=>{\n            this._hidePanel(true);\n            cancel();\n        });\n        return panelView;\n    }\n    /**\n\t * Creates the {@link #buttonView}.\n\t */ _createButtonView() {\n        const editor = this.editor;\n        const t = editor.t;\n        const buttonView = new BlockButtonView(editor.locale);\n        const iconFromConfig = this._blockToolbarConfig.icon;\n        const icon = NESTED_TOOLBAR_ICONS[iconFromConfig] || iconFromConfig || NESTED_TOOLBAR_ICONS.dragIndicator;\n        buttonView.set({\n            label: t('Edit block'),\n            icon,\n            withText: false\n        });\n        // Bind the panelView observable properties to the buttonView.\n        buttonView.bind('isOn').to(this.panelView, 'isVisible');\n        buttonView.bind('tooltip').to(this.panelView, 'isVisible', (isVisible)=>!isVisible);\n        // Toggle the panelView upon buttonView#execute.\n        this.listenTo(buttonView, 'execute', ()=>{\n            if (!this.panelView.isVisible) {\n                this._showPanel();\n            } else {\n                this._hidePanel(true);\n            }\n        });\n        // Hide the panelView when the buttonView is disabled. `isEnabled` flag might be changed when\n        // user scrolls the viewport and the button is no longer visible. In such case, the panel should be hidden\n        // otherwise it will be displayed in the wrong place.\n        this.listenTo(buttonView, 'change:isEnabled', (evt, name, isEnabled)=>{\n            if (!isEnabled && this.panelView.isVisible) {\n                this._hidePanel(false);\n            }\n        });\n        editor.ui.view.body.add(buttonView);\n        return buttonView;\n    }\n    /**\n\t * Shows or hides the button.\n\t * When all the conditions for displaying the button are matched, it shows the button. Hides otherwise.\n\t */ _updateButton() {\n        const editor = this.editor;\n        const model = editor.model;\n        const view = editor.editing.view;\n        // Hides the button when the editor is not focused.\n        if (!editor.ui.focusTracker.isFocused) {\n            this._hideButton();\n            return;\n        }\n        // Hides the button when the selection is in non-editable place.\n        if (!editor.model.canEditAt(editor.model.document.selection)) {\n            this._hideButton();\n            return;\n        }\n        // Get the first selected block, button will be attached to this element.\n        const modelTarget = Array.from(model.document.selection.getSelectedBlocks())[0];\n        // Hides the button when there is no enabled item in toolbar for the current block element.\n        if (!modelTarget || Array.from(this.toolbarView.items).every((item)=>!item.isEnabled)) {\n            this._hideButton();\n            return;\n        }\n        // Get DOM target element.\n        const domTarget = view.domConverter.mapViewToDom(editor.editing.mapper.toViewElement(modelTarget));\n        // Show block button.\n        this.buttonView.isVisible = true;\n        // Make sure that the block toolbar panel is resized properly.\n        this._setupToolbarResize();\n        // Attach block button to target DOM element.\n        this._attachButtonToElement(domTarget);\n        // When panel is opened then refresh it position to be properly aligned with block button.\n        if (this.panelView.isVisible) {\n            this._showPanel();\n        }\n    }\n    /**\n\t * Hides the button.\n\t */ _hideButton() {\n        this.buttonView.isVisible = false;\n    }\n    /**\n\t * Shows the {@link #toolbarView} attached to the {@link #buttonView}.\n\t * If the toolbar is already visible, then it simply repositions it.\n\t */ _showPanel() {\n        // Usually, the only way to show the toolbar is by pressing the block button. It makes it impossible for\n        // the toolbar to show up when the button is invisible (feature does not make sense for the selection then).\n        // The toolbar navigation using Alt+F10 does not access the button but shows the panel directly using this method.\n        // So we need to check whether this is possible first.\n        if (!this.buttonView.isVisible) {\n            return;\n        }\n        const wasVisible = this.panelView.isVisible;\n        // So here's the thing: If there was no initial panelView#show() or these two were in different order, the toolbar\n        // positioning will break in RTL editors. Weird, right? What you show know is that the toolbar\n        // grouping works thanks to:\n        //\n        // * the ResizeObserver, which kicks in as soon as the toolbar shows up in DOM (becomes visible again).\n        // * the observable ToolbarView#maxWidth, which triggers re-grouping when changed.\n        //\n        // Here are the possible scenarios:\n        //\n        // 1. (WRONG ❌) If the #maxWidth is set when the toolbar is invisible, it won't affect item grouping (no DOMRects, no grouping).\n        //    Then, when panelView.pin() is called, the position of the toolbar will be calculated for the old\n        //    items grouping state, and when finally ResizeObserver kicks in (hey, the toolbar is visible now, right?)\n        //    it will group/ungroup some items and the length of the toolbar will change. But since in RTL the toolbar\n        //    is attached on the right side and the positioning uses CSS \"left\", it will result in the toolbar shifting\n        //    to the left and being displayed in the wrong place.\n        // 2. (WRONG ❌) If the panelView.pin() is called first and #maxWidth set next, then basically the story repeats. The balloon\n        //    calculates the position for the old toolbar grouping state, then the toolbar re-groups items and because\n        //    it is positioned using CSS \"left\" it will move.\n        // 3. (RIGHT ✅) We show the panel first (the toolbar does re-grouping but it does not matter), then the #maxWidth\n        //    is set allowing the toolbar to re-group again and finally panelView.pin() does the positioning when the\n        //    items grouping state is stable and final.\n        //\n        // https://github.com/ckeditor/ckeditor5/issues/6449, https://github.com/ckeditor/ckeditor5/issues/6575\n        this.panelView.show();\n        const editableElement = this._getSelectedEditableElement();\n        this.toolbarView.maxWidth = this._getToolbarMaxWidth(editableElement);\n        this.panelView.pin({\n            target: this.buttonView.element,\n            limiter: editableElement\n        });\n        if (!wasVisible) {\n            this.toolbarView.items.get(0).focus();\n        }\n    }\n    /**\n\t * Returns currently selected editable, based on the model selection.\n\t */ _getSelectedEditableElement() {\n        const selectedModelRootName = this.editor.model.document.selection.getFirstRange().root.rootName;\n        return this.editor.ui.getEditableElement(selectedModelRootName);\n    }\n    /**\n\t * Hides the {@link #toolbarView}.\n\t *\n\t * @param focusEditable When `true`, the editable will be focused after hiding the panel.\n\t */ _hidePanel(focusEditable) {\n        this.panelView.isVisible = false;\n        if (focusEditable) {\n            this.editor.editing.view.focus();\n        }\n    }\n    /**\n\t * Repositions the button on scroll.\n\t */ _repositionButtonOnScroll() {\n        const { buttonView } = this;\n        let pendingAnimationFrame = false;\n        // Reposition the button on scroll, but do it only once per animation frame to avoid performance issues.\n        const repositionOnScroll = (evt, domEvt)=>{\n            if (pendingAnimationFrame) {\n                return;\n            }\n            // It makes no sense to reposition the button when the user scrolls the dropdown or any other\n            // nested scrollable element. The button should be repositioned only when the user scrolls the\n            // editable or any other scrollable parent of the editable. Leaving it as it is buggy on Chrome\n            // where scrolling nested scrollables is not properly handled.\n            // See more: https://github.com/ckeditor/ckeditor5/issues/17067\n            const editableElement = this._getSelectedEditableElement();\n            if (domEvt.target !== global.document && !getAncestors(editableElement).includes(domEvt.target)) {\n                return;\n            }\n            pendingAnimationFrame = true;\n            global.window.requestAnimationFrame(()=>{\n                this._updateButton();\n                pendingAnimationFrame = false;\n            });\n        };\n        // Watch scroll event only when the button is visible, it prevents attaching the scroll event listener\n        // to the document when the button is not visible.\n        buttonView.on('change:isVisible', (evt, name, isVisible)=>{\n            if (isVisible) {\n                buttonView.listenTo(global.document, 'scroll', repositionOnScroll, {\n                    useCapture: true,\n                    usePassive: true\n                });\n            } else {\n                buttonView.stopListening(global.document, 'scroll', repositionOnScroll);\n            }\n        });\n    }\n    /**\n\t * Attaches the {@link #buttonView} to the target block of content.\n\t *\n\t * @param targetElement Target element.\n\t */ _attachButtonToElement(targetElement) {\n        const buttonElement = this.buttonView.element;\n        const editableElement = this._getSelectedEditableElement();\n        const contentStyles = window.getComputedStyle(targetElement);\n        const editableRect = new Rect(editableElement);\n        const contentPaddingTop = parseInt(contentStyles.paddingTop, 10);\n        // When line height is not an integer then treat it as \"normal\".\n        // MDN says that 'normal' == ~1.2 on desktop browsers.\n        const contentLineHeight = parseInt(contentStyles.lineHeight, 10) || parseInt(contentStyles.fontSize, 10) * 1.2;\n        const buttonRect = new Rect(buttonElement);\n        const contentRect = new Rect(targetElement);\n        let positionLeft;\n        if (this.editor.locale.uiLanguageDirection === 'ltr') {\n            positionLeft = editableRect.left - buttonRect.width;\n        } else {\n            positionLeft = editableRect.right;\n        }\n        const positionTop = contentRect.top + contentPaddingTop + (contentLineHeight - buttonRect.height) / 2;\n        buttonRect.moveTo(positionLeft, positionTop);\n        const absoluteButtonRect = buttonRect.toAbsoluteRect();\n        this.buttonView.top = absoluteButtonRect.top;\n        this.buttonView.left = absoluteButtonRect.left;\n        this._clipButtonToViewport(this.buttonView, editableElement);\n    }\n    /**\n\t * Clips the button element to the viewport of the editable element.\n\t *\n\t * \t* If the button overflows the editable viewport, it is clipped to make it look like it's cut off by the editable scrollable region.\n\t * \t* If the button is fully hidden by the top of the editable, it is not clickable but still visible in the DOM.\n\t *\n\t * @param buttonView The button view to clip.\n\t * @param editableElement The editable element whose viewport is used for clipping.\n\t */ _clipButtonToViewport(buttonView, editableElement) {\n        const absoluteButtonRect = new Rect(buttonView.element);\n        const scrollViewportRect = new Rect(editableElement).getVisible();\n        // Sets polygon clip path for the button element, if there is no argument provided, the clip path is removed.\n        const setButtonClipping = (...paths)=>{\n            buttonView.element.style.clipPath = paths.length ? `polygon(${paths.join(',')})` : '';\n        };\n        // Hide the button if it's fully hidden by the top of the editable.\n        // Note that the button is still visible in the DOM, but it's not clickable. It's because we don't\n        // want to hide the button completely, as there are plenty of `isVisible` watchers which toggles\n        // the button scroll listeners.\n        const markAsHidden = (isHidden)=>{\n            buttonView.isEnabled = !isHidden;\n            buttonView.element.style.pointerEvents = isHidden ? 'none' : '';\n        };\n        if (scrollViewportRect && scrollViewportRect.bottom < absoluteButtonRect.bottom) {\n            // Calculate the delta between the button bottom and the editable bottom, and clip the button\n            // to make it look like it's cut off by the editable scrollable region.\n            const delta = Math.min(absoluteButtonRect.height, absoluteButtonRect.bottom - scrollViewportRect.bottom);\n            markAsHidden(delta >= absoluteButtonRect.height);\n            setButtonClipping('0 0', '100% 0', `100% calc(100% - ${toPx(delta)})`, `0 calc(100% - ${toPx(delta)}`);\n        } else if (scrollViewportRect && scrollViewportRect.top > absoluteButtonRect.top) {\n            // Calculate the delta between the button top and the editable top, and clip the button\n            // to make it look like it's cut off by the editable scrollable region.\n            const delta = Math.min(absoluteButtonRect.height, scrollViewportRect.top - absoluteButtonRect.top);\n            markAsHidden(delta >= absoluteButtonRect.height);\n            setButtonClipping(`0 ${toPx(delta)}`, `100% ${toPx(delta)}`, '100% 100%', '0 100%');\n        } else {\n            // Reset the clip path if button is fully visible.\n            markAsHidden(false);\n            setButtonClipping();\n        }\n    }\n    /**\n\t * Creates a resize observer that observes selected editable and resizes the toolbar panel accordingly.\n\t */ _setupToolbarResize() {\n        const editableElement = this._getSelectedEditableElement();\n        // Do this only if the automatic grouping is turned on.\n        if (!this._blockToolbarConfig.shouldNotGroupWhenFull) {\n            // If resize observer is attached to a different editable than currently selected editable, re-attach it.\n            if (this._resizeObserver && this._resizeObserver.element !== editableElement) {\n                this._resizeObserver.destroy();\n                this._resizeObserver = null;\n            }\n            if (!this._resizeObserver) {\n                this._resizeObserver = new ResizeObserver(editableElement, ()=>{\n                    this.toolbarView.maxWidth = this._getToolbarMaxWidth(editableElement);\n                });\n            }\n        }\n    }\n    /**\n\t * Gets the {@link #toolbarView} max-width, based on given `editableElement` width plus the distance between the farthest\n\t * edge of the {@link #buttonView} and the editable.\n\t *\n\t * @returns A maximum width that toolbar can have, in pixels.\n\t */ _getToolbarMaxWidth(editableElement) {\n        const editableRect = new Rect(editableElement);\n        const buttonRect = new Rect(this.buttonView.element);\n        const isRTL = this.editor.locale.uiLanguageDirection === 'rtl';\n        const offset = isRTL ? buttonRect.left - editableRect.right + buttonRect.width : editableRect.left - buttonRect.left;\n        return toPx(editableRect.width + offset);\n    }\n}\n\n/**\n * A menu {@link module:ui/menubar/menubarmenuview~MenuBarMenuView#buttonView} class. Buttons like this one\n * open both top-level bar menus as well as sub-menus.\n */ class MenuBarMenuButtonView extends ListItemButtonView {\n    /**\n\t * An icon that displays an arrow to indicate a direction of the menu.\n\t */ arrowView;\n    /**\n\t * Creates an instance of the menu bar button view.\n\t *\n\t * @param locale The localization services instance.\n\t */ constructor(locale){\n        super(locale);\n        const bind = this.bindTemplate;\n        this.set({\n            withText: true,\n            role: 'menuitem'\n        });\n        this.arrowView = this._createArrowView();\n        this.extendTemplate({\n            attributes: {\n                class: [\n                    'ck-menu-bar__menu__button'\n                ],\n                'aria-haspopup': true,\n                'aria-expanded': this.bindTemplate.to('isOn', (value)=>String(value)),\n                'data-cke-tooltip-disabled': bind.to('isOn')\n            },\n            on: {\n                'mouseenter': bind.to('mouseenter')\n            }\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        this.children.add(this.arrowView);\n    }\n    /**\n\t * Creates the {@link #arrowView} instance.\n\t */ _createArrowView() {\n        const arrowView = new IconView();\n        arrowView.content = IconDropdownArrow;\n        arrowView.extendTemplate({\n            attributes: {\n                class: 'ck-menu-bar__menu__button__arrow'\n            }\n        });\n        return arrowView;\n    }\n}\n\n/**\n * A view representing a {@link module:ui/menubar/menubarmenuview~MenuBarMenuView#panelView} of a menu.\n */ class MenuBarMenuPanelView extends View {\n    /**\n\t * Collection of the child views in this panel.\n\t */ children;\n    /**\n\t * Creates an instance of the menu panel view.\n\t *\n\t * @param locale The localization services instance.\n\t */ constructor(locale){\n        super(locale);\n        const bind = this.bindTemplate;\n        this.set('isVisible', false);\n        this.set('position', 'se');\n        this.children = this.createCollection();\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-reset',\n                    'ck-menu-bar__menu__panel',\n                    bind.to('position', (value)=>`ck-menu-bar__menu__panel_position_${value}`),\n                    bind.if('isVisible', 'ck-hidden', (value)=>!value)\n                ],\n                tabindex: '-1'\n            },\n            children: this.children,\n            on: {\n                // Drag and drop in the panel should not break the selection in the editor.\n                // https://github.com/ckeditor/ckeditor5-ui/issues/228\n                selectstart: bind.to((evt)=>{\n                    if (evt.target.tagName.toLocaleLowerCase() === 'input') {\n                        return;\n                    }\n                    evt.preventDefault();\n                })\n            }\n        });\n    }\n    /**\n\t * Focuses the first child of the panel (default) or the last one if the `direction` is `-1`.\n\t */ focus(direction = 1) {\n        if (this.children.length) {\n            if (direction === 1) {\n                this.children.first.focus();\n            } else {\n                this.children.last.focus();\n            }\n        }\n    }\n}\n\n/**\n * A menu view for the {@link module:ui/menubar/menubarview~MenuBarView}. Menus are building blocks of the menu bar,\n * they host other sub-menus and menu items (buttons) that users can interact with.\n */ class MenuBarMenuView extends View {\n    /**\n\t * Button of the menu view.\n\t */ buttonView;\n    /**\n\t * Panel of the menu. It hosts children of the menu.\n\t */ panelView;\n    /**\n\t * Tracks information about the DOM focus in the menu.\n\t */ focusTracker;\n    /**\n\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}. It manages\n\t * keystrokes of the menu.\n\t */ keystrokes;\n    /**\n\t * Creates an instance of the menu view.\n\t *\n\t * @param locale The localization services instance.\n\t */ constructor(locale){\n        super(locale);\n        const bind = this.bindTemplate;\n        this.buttonView = new MenuBarMenuButtonView(locale);\n        this.buttonView.delegate('mouseenter').to(this);\n        this.buttonView.bind('isOn', 'isEnabled').to(this, 'isOpen', 'isEnabled');\n        this.panelView = new MenuBarMenuPanelView(locale);\n        this.panelView.bind('isVisible').to(this, 'isOpen');\n        this.keystrokes = new KeystrokeHandler();\n        this.focusTracker = new FocusTracker();\n        this.set('isOpen', false);\n        this.set('isEnabled', true);\n        this.set('panelPosition', 'w');\n        this.set('class', undefined);\n        this.set('parentMenuView', null);\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-menu-bar__menu',\n                    bind.to('class'),\n                    bind.if('isEnabled', 'ck-disabled', (value)=>!value),\n                    bind.if('parentMenuView', 'ck-menu-bar__menu_top-level', (value)=>!value)\n                ]\n            },\n            children: [\n                this.buttonView,\n                this.panelView\n            ]\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        this.focusTracker.add(this.buttonView.element);\n        this.focusTracker.add(this.panelView.element);\n        // Listen for keystrokes coming from within #element.\n        this.keystrokes.listenTo(this.element);\n        MenuBarMenuBehaviors.closeOnEscKey(this);\n        this._repositionPanelOnOpen();\n    }\n    // For now, this method cannot be called in the render process because the `parentMenuView` may be assigned\n    // after the rendering process.\n    //\n    // TODO: We should reconsider the way we handle this logic.\n    /**\n\t * Attach all keyboard behaviors for the menu bar view.\n\t *\n\t * @internal\n\t */ _attachBehaviors() {\n        // Top-level menus.\n        if (!this.parentMenuView) {\n            this._propagateArrowKeystrokeEvents();\n            MenuBarMenuBehaviors.openAndFocusPanelOnArrowDownKey(this);\n            MenuBarMenuBehaviors.toggleOnButtonClick(this);\n        } else {\n            MenuBarMenuBehaviors.openOnButtonClick(this);\n            MenuBarMenuBehaviors.openOnArrowRightKey(this);\n            MenuBarMenuBehaviors.closeOnArrowLeftKey(this);\n            MenuBarMenuBehaviors.openAndFocusOnEnterKeyPress(this);\n            MenuBarMenuBehaviors.closeOnParentClose(this);\n        }\n    }\n    /**\n\t * Fires `arrowright` and `arrowleft` events when the user pressed corresponding arrow keys.\n\t */ _propagateArrowKeystrokeEvents() {\n        this.keystrokes.set('arrowright', (data, cancel)=>{\n            this.fire('arrowright');\n            cancel();\n        });\n        this.keystrokes.set('arrowleft', (data, cancel)=>{\n            this.fire('arrowleft');\n            cancel();\n        });\n    }\n    /**\n\t * Sets the position of the panel when the menu opens. The panel is positioned\n\t * so that it optimally uses the available space in the viewport.\n\t */ _repositionPanelOnOpen() {\n        // Let the menu control the position of the panel. The position must be updated every time the menu is open.\n        this.on('change:isOpen', (evt, name, isOpen)=>{\n            if (!isOpen) {\n                return;\n            }\n            const optimalPanelPosition = MenuBarMenuView._getOptimalPosition({\n                element: this.panelView.element,\n                target: this.buttonView.element,\n                fitInViewport: true,\n                positions: this._panelPositions\n            });\n            this.panelView.position = optimalPanelPosition ? optimalPanelPosition.name : this._defaultMenuPositionName;\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ focus() {\n        this.buttonView.focus();\n    }\n    /**\n\t * Positioning functions for the {@link #panelView} . They change depending on the role of the menu (top-level vs sub-menu) in\n\t * the {@link module:ui/menubar/menubarview~MenuBarView menu bar} and the UI language direction.\n\t */ get _panelPositions() {\n        const { southEast, southWest, northEast, northWest, westSouth, eastSouth, westNorth, eastNorth } = MenuBarMenuViewPanelPositioningFunctions;\n        if (this.locale.uiLanguageDirection === 'ltr') {\n            if (this.parentMenuView) {\n                return [\n                    eastSouth,\n                    eastNorth,\n                    westSouth,\n                    westNorth\n                ];\n            } else {\n                return [\n                    southEast,\n                    southWest,\n                    northEast,\n                    northWest\n                ];\n            }\n        } else {\n            if (this.parentMenuView) {\n                return [\n                    westSouth,\n                    westNorth,\n                    eastSouth,\n                    eastNorth\n                ];\n            } else {\n                return [\n                    southWest,\n                    southEast,\n                    northWest,\n                    northEast\n                ];\n            }\n        }\n    }\n    /**\n\t * The default position of the panel when the menu is opened.\n\t * It is used when the optimal position cannot be calculated.\n\t */ get _defaultMenuPositionName() {\n        if (this.locale.uiLanguageDirection === 'ltr') {\n            if (this.parentMenuView) {\n                return 'es';\n            } else {\n                return 'se';\n            }\n        } else {\n            if (this.parentMenuView) {\n                return 'ws';\n            } else {\n                return 'sw';\n            }\n        }\n    }\n    /**\n\t * A function used to calculate the optimal position for the dropdown panel.\n\t *\n\t * Referenced for unit testing purposes.\n\t */ static _getOptimalPosition = getOptimalPosition;\n}\n\n/**\n * A list of menu bar items, a child of {@link module:ui/menubar/menubarmenuview~MenuBarMenuView#panelView}.\n *\n * Use this class to create a list of items (options, buttons) to be displayed in a menu bar.\n *\n * To populate this list, use {@link module:ui/menubar/menubarmenulistitemview~MenuBarMenuListItemView} instances.\n */ class MenuBarMenuListView extends ListView {\n    /**\n\t * Creates an instance of the list view.\n\t *\n\t * @param locale The localization services instance.\n\t */ constructor(locale){\n        super(locale);\n        this.role = 'menu';\n        this.items.on('change', this._setItemsCheckSpace.bind(this));\n    }\n    /**\n\t * This method adds empty space if there is any toggleable item in the list.\n\t * It makes the list properly aligned.\n\t */ _setItemsCheckSpace() {\n        const hasAnyToggleableItem = Array.from(this.items).some((item)=>{\n            const listButtonView = pickListButtonMenuViewIfPresent(item);\n            return listButtonView && listButtonView.isToggleable;\n        });\n        this.items.forEach((item)=>{\n            const listButtonView = pickListButtonMenuViewIfPresent(item);\n            if (listButtonView) {\n                listButtonView.hasCheckSpace = hasAnyToggleableItem;\n            }\n        });\n    }\n}\n/**\n * Picks the first button menu view from the given item if present.\n *\n * @param item The item to check for a button menu view.\n * @returns The first button menu view found in the item, or `null` if not found.\n */ function pickListButtonMenuViewIfPresent(item) {\n    if (!(item instanceof ListItemView)) {\n        return null;\n    }\n    return item.children.map((child)=>isNestedMenuLikeView(child) ? child.buttonView : child).find((item)=>item instanceof ListItemButtonView);\n}\n/**\n * Checks if the given item is a nested menu-like view. `MenuBarMenuView` imports this file\n * so to avoid circular dependencies, this function is defined in more generic way.\n *\n * @param item The item to check.\n * @returns `true` if the item is a nested menu-like view, `false` otherwise.\n */ function isNestedMenuLikeView(item) {\n    return typeof item === 'object' && 'buttonView' in item && item.buttonView instanceof ButtonView;\n}\n\n/**\n * A menu bar list file dialog button view. Buttons like this one execute user actions.\n *\n * This component provides a button that opens the native file selection dialog.\n */ class MenuBarMenuListItemFileDialogButtonView extends FileDialogListItemButtonView {\n    /**\n\t * Creates an instance of the menu bar list button view.\n\t *\n\t * @param locale The localization services instance.\n\t */ constructor(locale){\n        super(locale);\n        this.set({\n            withText: true,\n            withKeystroke: true,\n            tooltip: false,\n            role: 'menuitem'\n        });\n        this.extendTemplate({\n            attributes: {\n                class: [\n                    'ck-menu-bar__menu__item__button'\n                ]\n            }\n        });\n    }\n}\n\nconst EVENT_NAME_DELEGATES = [\n    'mouseenter',\n    'arrowleft',\n    'arrowright',\n    'change:isOpen'\n];\n/**\n * The application menu bar component. It brings a set of top-level menus (and sub-menus) that can be used\n * to organize and access a large number of buttons.\n */ class MenuBarView extends View {\n    /**\n\t * Collection of the child views inside the {@link #element}.\n\t */ children;\n    /**\n\t * A list of {@link module:ui/menubar/menubarmenuview~MenuBarMenuView} instances registered in the menu bar.\n\t *\n\t * @observable\n\t */ menus = [];\n    /**\n\t * Creates an instance of the menu bar view.\n\t *\n\t * @param locale The localization services instance.\n\t */ constructor(locale){\n        super(locale);\n        const t = locale.t;\n        const bind = this.bindTemplate;\n        this.set({\n            isOpen: false,\n            isFocusBorderEnabled: false\n        });\n        this._setupIsOpenUpdater();\n        this.children = this.createCollection();\n        // @if CK_DEBUG_MENU_BAR // // Logs events in the main event bus of the component.\n        // @if CK_DEBUG_MENU_BAR // this.on( 'menu', ( evt, data ) => {\n        // @if CK_DEBUG_MENU_BAR // \tconsole.log( `MenuBarView:${ evt.name }`, evt.path.map( view => view.element ) );\n        // @if CK_DEBUG_MENU_BAR // } );\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-menu-bar',\n                    bind.if('isFocusBorderEnabled', 'ck-menu-bar_focus-border-enabled')\n                ],\n                'aria-label': t('Editor menu bar'),\n                role: 'menubar'\n            },\n            children: this.children\n        });\n    }\n    /**\n\t * A utility that expands a plain menu bar configuration into a structure of menus (also: sub-menus)\n\t * and items using a given {@link module:ui/componentfactory~ComponentFactory component factory}.\n\t *\n\t * See the {@link module:core/editor/editorconfig~EditorConfig#menuBar menu bar} in the editor\n\t * configuration reference to learn how to configure the menu bar.\n\t */ fillFromConfig(config, componentFactory, extraItems = []) {\n        const locale = this.locale;\n        const processedConfig = processMenuBarConfig({\n            normalizedConfig: config,\n            locale,\n            componentFactory,\n            extraItems\n        });\n        const topLevelCategoryMenuViews = processedConfig.items.map((menuDefinition)=>this._createMenu({\n                componentFactory,\n                menuDefinition\n            }));\n        this.children.addMany(topLevelCategoryMenuViews);\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        MenuBarBehaviors.toggleMenusAndFocusItemsOnHover(this);\n        MenuBarBehaviors.closeMenusWhenTheBarCloses(this);\n        MenuBarBehaviors.closeMenuWhenAnotherOnTheSameLevelOpens(this);\n        MenuBarBehaviors.focusCycleMenusOnArrows(this);\n        MenuBarBehaviors.closeOnClickOutside(this);\n        MenuBarBehaviors.enableFocusHighlightOnInteraction(this);\n    }\n    /**\n\t * Focuses the menu bar.\n\t */ focus() {\n        if (this.children.first) {\n            this.children.first.focus();\n        }\n    }\n    /**\n\t * Closes all menus in the bar.\n\t */ close() {\n        for (const topLevelCategoryMenuView of this.children){\n            topLevelCategoryMenuView.isOpen = false;\n        }\n    }\n    /**\n\t * Disables all menus in the bar.\n\t */ disable() {\n        for (const topLevelCategoryMenuView of this.children){\n            topLevelCategoryMenuView.isEnabled = false;\n        }\n    }\n    /**\n\t * Enables all menus in the bar.\n\t */ enable() {\n        for (const topLevelCategoryMenuView of this.children){\n            topLevelCategoryMenuView.isEnabled = true;\n        }\n    }\n    /**\n\t * Registers a menu view in the menu bar. Every {@link module:ui/menubar/menubarmenuview~MenuBarMenuView} instance must be registered\n\t * in the menu bar to be properly managed.\n\t */ registerMenu(menuView, parentMenuView = null) {\n        if (parentMenuView) {\n            menuView.delegate(...EVENT_NAME_DELEGATES).to(parentMenuView);\n            menuView.parentMenuView = parentMenuView;\n        } else {\n            menuView.delegate(...EVENT_NAME_DELEGATES).to(this, (name)=>'menu:' + name);\n        }\n        menuView._attachBehaviors();\n        this.menus.push(menuView);\n    }\n    /**\n\t * Creates a {@link module:ui/menubar/menubarmenuview~MenuBarMenuView} based on the given definition.\n\t */ _createMenu({ componentFactory, menuDefinition, parentMenuView }) {\n        const locale = this.locale;\n        const menuView = new MenuBarMenuView(locale);\n        this.registerMenu(menuView, parentMenuView);\n        menuView.buttonView.set({\n            label: menuDefinition.label\n        });\n        // Defer the creation of the menu structure until it gets open. This is a performance optimization\n        // that shortens the time needed to create the editor.\n        menuView.once('change:isOpen', ()=>{\n            const listView = new MenuBarMenuListView(locale);\n            listView.ariaLabel = menuDefinition.label;\n            menuView.panelView.children.add(listView);\n            listView.items.addMany(this._createMenuItems({\n                menuDefinition,\n                parentMenuView: menuView,\n                componentFactory\n            }));\n        });\n        return menuView;\n    }\n    /**\n\t * Creates a {@link module:ui/menubar/menubarmenuview~MenuBarMenuView} items based on the given definition.\n\t */ _createMenuItems({ menuDefinition, parentMenuView, componentFactory }) {\n        const locale = this.locale;\n        const items = [];\n        for (const menuGroupDefinition of menuDefinition.groups){\n            for (const itemDefinition of menuGroupDefinition.items){\n                const menuItemView = new MenuBarMenuListItemView(locale, parentMenuView);\n                if (isObject(itemDefinition)) {\n                    menuItemView.children.add(this._createMenu({\n                        componentFactory,\n                        menuDefinition: itemDefinition,\n                        parentMenuView\n                    }));\n                } else {\n                    const componentView = this._createMenuItemContentFromFactory({\n                        componentName: itemDefinition,\n                        componentFactory,\n                        parentMenuView\n                    });\n                    if (!componentView) {\n                        continue;\n                    }\n                    menuItemView.children.add(componentView);\n                }\n                items.push(menuItemView);\n            }\n            // Separate groups with a separator.\n            if (menuGroupDefinition !== menuDefinition.groups[menuDefinition.groups.length - 1]) {\n                items.push(new ListSeparatorView(locale));\n            }\n        }\n        return items;\n    }\n    /**\n\t * Uses the component factory to create a content of the menu item (a button or a sub-menu).\n\t */ _createMenuItemContentFromFactory({ componentName, parentMenuView, componentFactory }) {\n        const componentView = componentFactory.create(componentName);\n        if (!(componentView instanceof MenuBarMenuView || componentView instanceof MenuBarMenuListItemButtonView || componentView instanceof MenuBarMenuListItemFileDialogButtonView)) {\n            /**\n\t\t\t * Adding unsupported components to the {@link module:ui/menubar/menubarview~MenuBarView} is not possible.\n\t\t\t *\n\t\t\t * A component should be either a {@link module:ui/menubar/menubarmenuview~MenuBarMenuView} (sub-menu) or a\n\t\t\t * {@link module:ui/menubar/menubarmenulistitembuttonview~MenuBarMenuListItemButtonView} (button).\n\t\t\t *\n\t\t\t * @error menu-bar-component-unsupported\n\t\t\t * @param {string} componentName A name of the unsupported component used in the configuration.\n\t\t\t * @param {module:ui/view~View} componentView An unsupported component view.\n\t\t\t */ logWarning('menu-bar-component-unsupported', {\n                componentName,\n                componentView\n            });\n            return null;\n        }\n        this._registerMenuTree(componentView, parentMenuView);\n        // Close the whole menu bar when a component is executed.\n        componentView.on('execute', ()=>{\n            this.close();\n        });\n        return componentView;\n    }\n    /**\n\t * Checks component and its children recursively and calls {@link #registerMenu}\n\t * for each item that is {@link module:ui/menubar/menubarmenuview~MenuBarMenuView}.\n\t *\n\t * @internal\n\t */ _registerMenuTree(componentView, parentMenuView) {\n        if (!(componentView instanceof MenuBarMenuView)) {\n            componentView.delegate('mouseenter').to(parentMenuView);\n            return;\n        }\n        this.registerMenu(componentView, parentMenuView);\n        const menuBarItemsList = componentView.panelView.children.filter((child)=>child instanceof MenuBarMenuListView)[0];\n        if (!menuBarItemsList) {\n            componentView.delegate('mouseenter').to(parentMenuView);\n            return;\n        }\n        const nonSeparatorItems = menuBarItemsList.items.filter((item)=>item instanceof ListItemView);\n        for (const item of nonSeparatorItems){\n            this._registerMenuTree(item.children.get(0), componentView);\n        }\n    }\n    /**\n\t * Manages the state of the {@link #isOpen} property of the menu bar. Because the state is a sum of individual\n\t * top-level menus' states, it's necessary to listen to their changes and update the state accordingly.\n\t *\n\t * Additionally, it prevents from unnecessary changes of `isOpen` when one top-level menu opens and another closes\n\t * (regardless of in which order), maintaining a stable `isOpen === true` in that situation.\n\t */ _setupIsOpenUpdater() {\n        let closeTimeout;\n        // TODO: This is not the prettiest approach but at least it's simple.\n        this.on('menu:change:isOpen', (evt, name, isOpen)=>{\n            clearTimeout(closeTimeout);\n            if (isOpen) {\n                this.isOpen = true;\n            } else {\n                closeTimeout = setTimeout(()=>{\n                    this.isOpen = Array.from(this.children).some((menuView)=>menuView.isOpen);\n                }, 0);\n            }\n        });\n    }\n}\n\nexport { AccessibilityHelp, AccessibilityHelpContentView, AriaLiveAnnouncer, AriaLiveAnnouncerPoliteness, AriaLiveAnnouncerRegionView, AriaLiveAnnouncerView, AutocompleteView, Badge, BalloonPanelView, BalloonToolbar, BlockButtonView, BlockToolbar, BodyCollection, BoxedEditorUIView, ButtonLabelView, ButtonLabelWithHighlightView, ButtonView, CollapsibleView, ColorGridView, ColorGridsFragmentView, ColorPickerFragmentView, ColorPickerInputRowView, ColorPickerView, ColorSelectorView, ColorTileView, ComponentFactory, ContextualBalloon, CssTransitionDisablerMixin, DefaultMenuBarItems, Dialog, DialogActionsView, DialogContentView, DialogView, DialogViewPosition, DocumentColorCollection, DraggableViewMixin, DropdownButtonView, DropdownMenuButtonView, DropdownMenuListItemButtonView, DropdownMenuListItemView, DropdownMenuListView, DropdownMenuNestedMenuPanelView, DropdownMenuNestedMenuView, DropdownMenuPanelPositioningFunctions, DropdownMenuRootListView, DropdownPanelView, DropdownView, EditableUIView, EditorUI, EditorUIView, EvaluationBadge, FileDialogButtonView, FileDialogListItemButtonView, FileDialogViewMixin, FocusCycler, FormHeaderView, FormRowView, HighlightedTextView, IconView, IframeView, InlineEditableUIView, InputBase, InputNumberView, InputTextView, InputView, ItemsView, LabelView, LabelWithHighlightView, LabeledFieldView, LabeledInputView, ListItemButtonView, ListItemGroupView, ListItemView, ListSeparatorView, ListView, MenuBarMenuButtonView, MenuBarMenuListItemButtonView, MenuBarMenuListItemFileDialogButtonView, MenuBarMenuListItemView, MenuBarMenuListView, MenuBarMenuPanelView, MenuBarMenuView, MenuBarView, NESTED_TOOLBAR_ICONS, Notification, PoweredBy, SearchInfoView, SearchResultsView, SearchTextView, SliderView, SpinnerView, SplitButtonView, StickyPanelView, SwitchButtonView, Template, TextareaView, ToolbarLineBreakView, ToolbarSeparatorView, ToolbarView, TooltipManager, UIModel, View, ViewCollection, UIModel as ViewModel, CheckIconHolderView as _CheckIconHolderView, CollapsibleView as _CollapsibleView, RotatorView as _ContextualBalloonRotatorView, DropdownMenuBehaviors as _DropdownMenuBehaviors, DropdownRootMenuBehaviors as _DropdownRootMenuBehaviors, MenuBarBehaviors as _MenuBarBehaviors, MenuBarMenuBehaviors as _MenuBarMenuBehaviors, MenuBarMenuViewPanelPositioningFunctions as _MenuBarMenuViewPanelPositioningFunctions, SearchInfoView as _SearchInfoView, SearchTextQueryView as _SearchTextQueryView, TemplateBinding as _TemplateBinding, TemplateIfBinding as _TemplateIfBinding, TemplateToBinding as _TemplateToBinding, convertColor as _convertColor, convertToHex as _convertColorToHex, preventDefault as _preventUiViewDefault, processMenuBarConfig as _processMenuBarConfig, registerCustomElement as _registerCustomElement, tryParseHexColor as _tryNormalizeHexColor, addKeyboardHandlingForGrid, addListToDropdown, addMenuToDropdown, addToolbarToDropdown, clickOutsideHandler, createDropdown, createLabeledDropdown, createLabeledInputNumber, createLabeledInputText, createLabeledTextarea, filterGroupAndItemNames, focusChildOnDropdownOpen, getLocalizedColorOptions, isFocusable, isViewWithFocusCycler, normalizeColorOptions, normalizeMenuBarConfig, normalizeSingleColorDefinition, normalizeToolbarConfig, submitHandler };\n//# sourceMappingURL=index.js.map\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/viewcollection\n */\n\nimport {\n\tCKEditorError,\n\tCollection,\n\ttype CollectionAddEvent,\n\ttype CollectionRemoveEvent,\n\ttype EmitterMixinDelegateChain\n} from '@ckeditor/ckeditor5-utils';\n\nimport { type View } from './view.js';\n\n/**\n * Collects {@link module:ui/view~View} instances.\n *\n * ```ts\n * const parentView = new ParentView( locale );\n * const collection = new ViewCollection( locale );\n *\n * collection.setParent( parentView.element );\n *\n * const viewA = new ChildView( locale );\n * const viewB = new ChildView( locale );\n * ```\n *\n * View collection renders and manages view {@link module:ui/view~View#element elements}:\n *\n * ```ts\n * collection.add( viewA );\n * collection.add( viewB );\n *\n * console.log( parentView.element.firsChild ); // -> viewA.element\n * console.log( parentView.element.lastChild ); // -> viewB.element\n * ```\n *\n * It {@link module:ui/viewcollection~ViewCollection#delegate propagates} DOM events too:\n *\n * ```ts\n * // Delegate #click and #keydown events from viewA and viewB to the parentView.\n * collection.delegate( 'click' ).to( parentView );\n *\n * parentView.on( 'click', ( evt ) => {\n * \tconsole.log( `${ evt.source } has been clicked.` );\n * } );\n *\n * // This event will be delegated to the parentView.\n * viewB.fire( 'click' );\n * ```\n *\n * **Note**: A view collection can be used directly in the {@link module:ui/template~TemplateDefinition definition}\n * of a {@link module:ui/template~Template template}.\n */\nexport class ViewCollection<TView extends View = View> extends Collection<TView> {\n\tpublic declare id?: string;\n\n\t/**\n\t * A parent element within which child views are rendered and managed in DOM.\n\t */\n\tprivate _parentElement: DocumentFragment | HTMLElement | null;\n\n\t/**\n\t * Creates a new instance of the {@link module:ui/viewcollection~ViewCollection}.\n\t *\n\t * @param initialItems The initial items of the collection.\n\t */\n\tconstructor( initialItems: Iterable<TView> = [] ) {\n\t\tsuper( initialItems, {\n\t\t\t// An #id Number attribute should be legal and not break the `ViewCollection` instance.\n\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/93\n\t\t\tidProperty: 'viewUid'\n\t\t} );\n\n\t\t// Handle {@link module:ui/view~View#element} in DOM when a new view is added to the collection.\n\t\tthis.on<CollectionAddEvent<TView>>( 'add', ( evt, view, index ) => {\n\t\t\tthis._renderViewIntoCollectionParent( view, index );\n\t\t} );\n\n\t\t// Handle {@link module:ui/view~View#element} in DOM when a view is removed from the collection.\n\t\tthis.on<CollectionRemoveEvent<TView>>( 'remove', ( evt, view ) => {\n\t\t\tif ( view.element && this._parentElement ) {\n\t\t\t\tview.element.remove();\n\t\t\t}\n\t\t} );\n\n\t\tthis._parentElement = null;\n\t}\n\n\t/**\n\t * Destroys the view collection along with child views.\n\t * See the view {@link module:ui/view~View#destroy} method.\n\t */\n\tpublic destroy(): void {\n\t\tthis.map( view => view.destroy() );\n\t}\n\n\t/**\n\t * Sets the parent HTML element of this collection. When parent is set, {@link #add adding} and\n\t * {@link #remove removing} views in the collection synchronizes their\n\t * {@link module:ui/view~View#element elements} in the parent element.\n\t *\n\t * @param elementOrDocFragment A new parent element or document fragment.\n\t */\n\tpublic setParent( elementOrDocFragment: DocumentFragment | HTMLElement ): void {\n\t\tthis._parentElement = elementOrDocFragment;\n\n\t\t// Take care of the initial collection items passed to the constructor.\n\t\tfor ( const view of this ) {\n\t\t\tthis._renderViewIntoCollectionParent( view );\n\t\t}\n\t}\n\n\t/**\n\t * Delegates selected events coming from within views in the collection to any\n\t * {@link module:utils/emittermixin~Emitter}.\n\t *\n\t * For the following views and collection:\n\t *\n\t * ```ts\n\t * const viewA = new View();\n\t * const viewB = new View();\n\t * const viewC = new View();\n\t *\n\t * const views = parentView.createCollection();\n\t *\n\t * views.delegate( 'eventX' ).to( viewB );\n\t * views.delegate( 'eventX', 'eventY' ).to( viewC );\n\t *\n\t * views.add( viewA );\n\t * ```\n\t *\n\t * the `eventX` is delegated (fired by) `viewB` and `viewC` along with `customData`:\n\t *\n\t * ```ts\n\t * viewA.fire( 'eventX', customData );\n\t * ```\n\t *\n\t * and `eventY` is delegated (fired by) `viewC` along with `customData`:\n\t *\n\t * ```ts\n\t * viewA.fire( 'eventY', customData );\n\t * ```\n\t *\n\t * See {@link module:utils/emittermixin~Emitter#delegate}.\n\t *\n\t * @param events {@link module:ui/view~View} event names to be delegated to another\n\t * {@link module:utils/emittermixin~Emitter}.\n\t * @returns Object with `to` property, a function which accepts the destination\n\t * of {@link module:utils/emittermixin~Emitter#delegate delegated} events.\n\t */\n\tpublic override delegate( ...events: Array<string> ): EmitterMixinDelegateChain {\n\t\tif ( !events.length || !isStringArray( events ) ) {\n\t\t\t/**\n\t\t\t * All event names must be strings.\n\t\t\t *\n\t\t\t * @error ui-viewcollection-delegate-wrong-events\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'ui-viewcollection-delegate-wrong-events',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\treturn {\n\t\t\tto: dest => {\n\t\t\t\t// Activate delegating on existing views in this collection.\n\t\t\t\tfor ( const view of this ) {\n\t\t\t\t\tfor ( const evtName of events ) {\n\t\t\t\t\t\tview.delegate( evtName ).to( dest );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Activate delegating on future views in this collection.\n\t\t\t\tthis.on<CollectionAddEvent<View>>( 'add', ( evt, view ) => {\n\t\t\t\t\tfor ( const evtName of events ) {\n\t\t\t\t\t\tview.delegate( evtName ).to( dest );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\t// Deactivate delegating when view is removed from this collection.\n\t\t\t\tthis.on<CollectionRemoveEvent<View>>( 'remove', ( evt, view ) => {\n\t\t\t\t\tfor ( const evtName of events ) {\n\t\t\t\t\t\tview.stopDelegating( evtName, dest );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * This method {@link module:ui/view~View#render renders} a new view added to the collection.\n\t *\n\t * If the {@link #_parentElement parent element} of the collection is set, this method also adds\n\t * the view's {@link module:ui/view~View#element} as a child of the parent in DOM at a specified index.\n\t *\n\t * **Note**: If index is not specified, the view's element is pushed as the last child\n\t * of the parent element.\n\t *\n\t * @param view A new view added to the collection.\n\t * @param index An index the view holds in the collection. When not specified,\n\t * the view is added at the end.\n\t */\n\tprivate _renderViewIntoCollectionParent( view: View, index?: number ): void {\n\t\tif ( !view.isRendered ) {\n\t\t\tview.render();\n\t\t}\n\n\t\tif ( view.element && this._parentElement ) {\n\t\t\tthis._parentElement.insertBefore( view.element, this._parentElement.children[ index! ] );\n\t\t}\n\t}\n\n\t/**\n\t * Removes a child view from the collection. If the {@link #setParent parent element} of the\n\t * collection has been set, the {@link module:ui/view~View#element element} of the view is also removed\n\t * in DOM, reflecting the order of the collection.\n\t *\n\t * See the {@link #add} method.\n\t *\n\t * @param subject The view to remove, its id or index in the collection.\n\t * @returns The removed view.\n\t */\n\tpublic override remove( subject: TView | number | string ): TView {\n\t\treturn super.remove( subject );\n\t}\n}\n\n/**\n * Check if all entries of the array are of `String` type.\n *\n * @param arr An array to be checked.\n */\nfunction isStringArray( arr: Array<unknown> ): arr is Array<string> {\n\treturn arr.every( a => typeof a == 'string' );\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/template\n */\n\nimport { View } from './view.js';\nimport { ViewCollection } from './viewcollection.js';\n\nimport {\n\tCKEditorError,\n\tEmitterMixin,\n\tisNode,\n\ttoArray,\n\ttype ArrayOrItem,\n\ttype Emitter,\n\ttype Observable,\n\ttype ObservableChangeEvent\n} from '@ckeditor/ckeditor5-utils';\n\nimport { isObject, cloneDeepWith } from 'es-toolkit/compat';\n\nconst xhtmlNs = 'http://www.w3.org/1999/xhtml';\n\n/**\n * A basic Template class. It renders a DOM HTML element or text from a\n * {@link module:ui/template~TemplateDefinition definition} and supports element attributes, children,\n * bindings to {@link module:utils/observablemixin~Observable observables} and DOM event propagation.\n *\n * A simple template can look like this:\n *\n * ```ts\n * const bind = Template.bind( observable, emitter );\n *\n * new Template( {\n * \ttag: 'p',\n * \tattributes: {\n * \t\tclass: 'foo',\n * \t\tstyle: {\n * \t\t\tbackgroundColor: 'yellow'\n * \t\t}\n * \t},\n * \ton: {\n * \t\tclick: bind.to( 'clicked' )\n * \t},\n * \tchildren: [\n * \t\t'A paragraph.'\n * \t]\n * } ).render();\n * ```\n *\n * and it will render the following HTML element:\n *\n * ```html\n * <p class=\"foo\" style=\"background-color: yellow;\">A paragraph.</p>\n * ```\n *\n * Additionally, the `observable` will always fire `clicked` upon clicking `<p>` in the DOM.\n *\n * See {@link module:ui/template~TemplateDefinition} to know more about templates and complex\n * template definitions.\n */\nexport class Template extends /* #__PURE__ */ EmitterMixin() {\n\tpublic ns?: string;\n\n\t/**\n\t * The tag (`tagName`) of this template, e.g. `div`. It also indicates that the template\n\t * renders to an HTML element.\n\t */\n\tpublic tag?: string;\n\n\t/**\n\t * The text of the template. It also indicates that the template renders to a DOM text node.\n\t */\n\tpublic text?: Array<TemplateSimpleValue | TemplateBinding>;\n\n\t/**\n\t * The attributes of the template, e.g. `{ id: [ 'ck-id' ] }`, corresponding with\n\t * the attributes of an HTML element.\n\t *\n\t * **Note**: This property only makes sense when {@link #tag} is defined.\n\t */\n\tpublic attributes?: Record<string, AttributeValues>;\n\n\t/**\n\t * The children of the template. They can be either:\n\t * * independent instances of {@link ~Template} (sub–templates),\n\t * * native DOM Nodes.\n\t *\n\t * **Note**: This property only makes sense when {@link #tag} is defined.\n\t */\n\tpublic children?: Array<ViewCollection | View | Node | Template>;\n\n\t/**\n\t * The DOM event listeners of the template.\n\t */\n\tpublic eventListeners?: Record<string, Array<TemplateToBinding>>;\n\n\t/**\n\t * Indicates whether this particular Template instance has been\n\t * {@link #render rendered}.\n\t */\n\tprivate _isRendered: boolean;\n\n\t/**\n\t * The data used by the {@link #revert} method to restore a node to its original state.\n\t *\n\t * See: {@link #apply}.\n\t */\n\tprivate _revertData: RevertData | null;\n\n\t/**\n\t * Creates an instance of the {@link ~Template} class.\n\t *\n\t * @param def The definition of the template.\n\t */\n\tconstructor( def: TemplateDefinition ) {\n\t\tsuper();\n\n\t\tObject.assign( this, normalize( clone( def ) ) );\n\n\t\tthis._isRendered = false;\n\t\tthis._revertData = null;\n\t}\n\n\t/**\n\t * Renders a DOM Node (an HTML element or text) out of the template.\n\t *\n\t * ```ts\n\t * const domNode = new Template( { ... } ).render();\n\t * ```\n\t *\n\t * See: {@link #apply}.\n\t */\n\tpublic render(): HTMLElement | Text {\n\t\tconst node = this._renderNode( {\n\t\t\tintoFragment: true\n\t\t} as any );\n\n\t\tthis._isRendered = true;\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Applies the template to an existing DOM Node, either HTML element or text.\n\t *\n\t * **Note:** No new DOM nodes will be created. Applying extends:\n\t *\n\t * {@link module:ui/template~TemplateDefinition attributes},\n\t * {@link module:ui/template~TemplateDefinition event listeners}, and\n\t * `textContent` of {@link module:ui/template~TemplateDefinition children} only.\n\t *\n\t * **Note:** Existing `class` and `style` attributes are extended when a template\n\t * is applied to an HTML element, while other attributes and `textContent` are overridden.\n\t *\n\t * **Note:** The process of applying a template can be easily reverted using the\n\t * {@link module:ui/template~Template#revert} method.\n\t *\n\t * ```ts\n\t * const element = document.createElement( 'div' );\n\t * const observable = new Model( { divClass: 'my-div' } );\n\t * const emitter = Object.create( EmitterMixin );\n\t * const bind = Template.bind( observable, emitter );\n\t *\n\t * new Template( {\n\t * \tattributes: {\n\t * \t\tid: 'first-div',\n\t * \t\tclass: bind.to( 'divClass' )\n\t * \t},\n\t * \ton: {\n\t * \t\tclick: bind( 'elementClicked' ) // Will be fired by the observable.\n\t * \t},\n\t * \tchildren: [\n\t * \t\t'Div text.'\n\t * \t]\n\t * } ).apply( element );\n\t *\n\t * console.log( element.outerHTML ); // -> '<div id=\"first-div\" class=\"my-div\"></div>'\n\t * ```\n\t *\n\t * @see module:ui/template~Template#render\n\t * @see module:ui/template~Template#revert\n\t * @param node Root node for the template to apply.\n\t */\n\tpublic apply( node: HTMLElement | Text ): HTMLElement | Text {\n\t\tthis._revertData = getEmptyRevertData();\n\n\t\tthis._renderNode( {\n\t\t\tnode,\n\t\t\tintoFragment: false,\n\t\t\tisApplying: true,\n\t\t\trevertData: this._revertData\n\t\t} );\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Reverts a template {@link module:ui/template~Template#apply applied} to a DOM node.\n\t *\n\t * @param node The root node for the template to revert. In most of the cases, it is the\n\t * same node used by {@link module:ui/template~Template#apply}.\n\t */\n\tpublic revert( node: HTMLElement | Text ): void {\n\t\tif ( !this._revertData ) {\n\t\t\t/**\n\t\t\t * Attempting to revert a template which has not been applied yet.\n\t\t\t *\n\t\t\t * @error ui-template-revert-not-applied\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'ui-template-revert-not-applied',\n\t\t\t\t[ this, node ]\n\t\t\t);\n\t\t}\n\n\t\tthis._revertTemplateFromNode( node, this._revertData );\n\t}\n\n\t/**\n\t * Returns an iterator which traverses the template in search of {@link module:ui/view~View}\n\t * instances and returns them one by one.\n\t *\n\t * ```ts\n\t * const viewFoo = new View();\n\t * const viewBar = new View();\n\t * const viewBaz = new View();\n\t * const template = new Template( {\n\t * \ttag: 'div',\n\t * \tchildren: [\n\t * \t\tviewFoo,\n\t * \t\t{\n\t * \t\t\ttag: 'div',\n\t * \t\t\tchildren: [\n\t * \t\t\t\tviewBar\n\t * \t\t\t]\n\t * \t\t},\n\t * \t\tviewBaz\n\t * \t]\n\t * } );\n\t *\n\t * // Logs: viewFoo, viewBar, viewBaz\n\t * for ( const view of template.getViews() ) {\n\t * \tconsole.log( view );\n\t * }\n\t * ```\n\t */\n\tpublic* getViews(): IterableIterator<View> {\n\t\tfunction* search( def: Template ): Iterable<View> {\n\t\t\tif ( def.children ) {\n\t\t\t\tfor ( const child of def.children ) {\n\t\t\t\t\tif ( isView( child ) ) {\n\t\t\t\t\t\tyield child;\n\t\t\t\t\t} else if ( isTemplate( child ) ) {\n\t\t\t\t\t\tyield* search( child );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tyield* search( this );\n\t}\n\n\t/**\n\t * An entry point to the interface which binds DOM nodes to\n\t * {@link module:utils/observablemixin~Observable observables}.\n\t * There are two types of bindings:\n\t *\n\t * * HTML element attributes or text `textContent` synchronized with attributes of an\n\t * {@link module:utils/observablemixin~Observable}. Learn more about {@link module:ui/template~BindChain#to}\n\t * and {@link module:ui/template~BindChain#if}.\n\t *\n\t * ```ts\n\t * const bind = Template.bind( observable, emitter );\n\t *\n\t * new Template( {\n\t * \tattributes: {\n\t * \t\t// Binds the element \"class\" attribute to observable#classAttribute.\n\t * \t\tclass: bind.to( 'classAttribute' )\n\t * \t}\n\t * } ).render();\n\t * ```\n\t *\n\t * * DOM events fired on HTML element propagated through\n\t * {@link module:utils/observablemixin~Observable}. Learn more about {@link module:ui/template~BindChain#to}.\n\t *\n\t * ```ts\n\t * const bind = Template.bind( observable, emitter );\n\t *\n\t * new Template( {\n\t * \ton: {\n\t * \t\t// Will be fired by the observable.\n\t * \t\tclick: bind( 'elementClicked' )\n\t * \t}\n\t * } ).render();\n\t * ```\n\t *\n\t * Also see {@link module:ui/view~View#bindTemplate}.\n\t *\n\t * @param observable An observable which provides boundable attributes.\n\t * @param emitter An emitter that listens to observable attribute\n\t * changes or DOM Events (depending on the kind of the binding). Usually, a {@link module:ui/view~View} instance.\n\t */\n\tpublic static override bind<TObservable extends Observable>(\n\t\tobservable: TObservable,\n\t\temitter: Emitter\n\t): BindChain<TObservable> {\n\t\treturn {\n\t\t\tto( eventNameOrFunctionOrAttribute: any, callback?: any ) {\n\t\t\t\treturn new TemplateToBinding( {\n\t\t\t\t\teventNameOrFunction: eventNameOrFunctionOrAttribute,\n\t\t\t\t\tattribute: eventNameOrFunctionOrAttribute,\n\t\t\t\t\tobservable, emitter, callback\n\t\t\t\t} );\n\t\t\t},\n\n\t\t\tif( attribute: string, valueIfTrue?: string, callback?: any ) {\n\t\t\t\treturn new TemplateIfBinding( {\n\t\t\t\t\tobservable, emitter, attribute, valueIfTrue, callback\n\t\t\t\t} );\n\t\t\t}\n\t\t} as any;\n\t}\n\n\t/**\n\t * Extends an existing {@link module:ui/template~Template} instance with some additional content\n\t * from another {@link module:ui/template~TemplateDefinition}.\n\t *\n\t * ```ts\n\t * const bind = Template.bind( observable, emitter );\n\t *\n\t * const template = new Template( {\n\t * \ttag: 'p',\n\t * \tattributes: {\n\t * \t\tclass: 'a',\n\t * \t\tdata-x: bind.to( 'foo' )\n\t * \t},\n\t * \tchildren: [\n\t * \t\t{\n\t * \t\t\ttag: 'span',\n\t * \t\t\tattributes: {\n\t * \t\t\t\tclass: 'b'\n\t * \t\t\t},\n\t * \t\t\tchildren: [\n\t * \t\t\t\t'Span'\n\t * \t\t\t]\n\t * \t\t}\n\t * \t]\n\t *  } );\n\t *\n\t * // Instance-level extension.\n\t * Template.extend( template, {\n\t * \tattributes: {\n\t * \t\tclass: 'b',\n\t * \t\tdata-x: bind.to( 'bar' )\n\t * \t},\n\t * \tchildren: [\n\t * \t\t{\n\t * \t\t\tattributes: {\n\t * \t\t\t\tclass: 'c'\n\t * \t\t\t}\n\t * \t\t}\n\t * \t]\n\t * } );\n\t *\n\t * // Child extension.\n\t * Template.extend( template.children[ 0 ], {\n\t * \tattributes: {\n\t * \t\tclass: 'd'\n\t * \t}\n\t * } );\n\t * ```\n\t *\n\t * the `outerHTML` of `template.render()` is:\n\t *\n\t * ```html\n\t * <p class=\"a b\" data-x=\"{ observable.foo } { observable.bar }\">\n\t * \t<span class=\"b c d\">Span</span>\n\t * </p>\n\t * ```\n\t *\n\t * @param template An existing template instance to be extended.\n\t * @param def Additional definition to be applied to a template.\n\t */\n\tpublic static extend( template: Template, def: Partial<TemplateDefinition> ): void {\n\t\tif ( template._isRendered ) {\n\t\t\t/**\n\t\t\t * Extending a template after rendering may not work as expected. To make sure\n\t\t\t * the {@link module:ui/template~Template.extend extending} works for an element,\n\t\t\t * make sure it happens before {@link module:ui/template~Template#render} is called.\n\t\t\t *\n\t\t\t * @error template-extend-render\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'template-extend-render',\n\t\t\t\t[ this, template ]\n\t\t\t);\n\t\t}\n\n\t\textendTemplate( template, normalize( clone( def ) ) );\n\t}\n\n\t/**\n\t * Renders a DOM Node (either an HTML element or text) out of the template.\n\t *\n\t * @param data Rendering data.\n\t */\n\tprivate _renderNode( data: RenderData ) {\n\t\tlet isInvalid;\n\n\t\tif ( data.node ) {\n\t\t\t// When applying, a definition cannot have \"tag\" and \"text\" at the same time.\n\t\t\tisInvalid = this.tag && this.text;\n\t\t} else {\n\t\t\t// When rendering, a definition must have either \"tag\" or \"text\": XOR( this.tag, this.text ).\n\t\t\tisInvalid = this.tag ? this.text : !this.text;\n\t\t}\n\n\t\tif ( isInvalid ) {\n\t\t\t/**\n\t\t\t * Node definition cannot have the \"tag\" and \"text\" properties at the same time.\n\t\t\t * Node definition must have either \"tag\" or \"text\" when rendering a new Node.\n\t\t\t *\n\t\t\t * @error ui-template-wrong-syntax\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'ui-template-wrong-syntax',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tif ( this.text ) {\n\t\t\treturn this._renderText( data );\n\t\t} else {\n\t\t\treturn this._renderElement( data );\n\t\t}\n\t}\n\n\t/**\n\t * Renders an HTML element out of the template.\n\t *\n\t * @param data Rendering data.\n\t */\n\tprivate _renderElement( data: RenderData ) {\n\t\tlet node = data.node;\n\n\t\tif ( !node ) {\n\t\t\tnode = data.node = document.createElementNS( this.ns || xhtmlNs, this.tag! ) as any;\n\t\t}\n\n\t\tthis._renderAttributes( data );\n\t\tthis._renderElementChildren( data );\n\t\tthis._setUpListeners( data );\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Renders a text node out of {@link module:ui/template~Template#text}.\n\t *\n\t * @param data Rendering data.\n\t */\n\tprivate _renderText( data: RenderData ) {\n\t\tlet node = data.node;\n\n\t\t// Save the original textContent to revert it in #revert().\n\t\tif ( node ) {\n\t\t\tdata.revertData!.text = node.textContent;\n\t\t} else {\n\t\t\tnode = data.node = document.createTextNode( '' );\n\t\t}\n\n\t\t// Check if this Text Node is bound to Observable. Cases:\n\t\t//\n\t\t//\t\ttext: [ Template.bind( ... ).to( ... ) ]\n\t\t//\n\t\t//\t\ttext: [\n\t\t//\t\t\t'foo',\n\t\t//\t\t\tTemplate.bind( ... ).to( ... ),\n\t\t//\t\t\t...\n\t\t//\t\t]\n\t\t//\n\t\tif ( hasTemplateBinding( this.text ) ) {\n\t\t\tthis._bindToObservable( {\n\t\t\t\tschema: this.text!,\n\t\t\t\tupdater: getTextUpdater( node ),\n\t\t\t\tdata\n\t\t\t} );\n\t\t}\n\t\t// Simply set text. Cases:\n\t\t//\n\t\t//\t\ttext: [ 'all', 'are', 'static' ]\n\t\t//\n\t\t//\t\ttext: [ 'foo' ]\n\t\t//\n\t\telse {\n\t\t\tnode.textContent = this.text!.join( '' );\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * Renders HTML element attributes out of {@link module:ui/template~Template#attributes}.\n\t *\n\t * @param data Rendering data.\n\t */\n\tprivate _renderAttributes( data: RenderData ) {\n\t\tif ( !this.attributes ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst node = data.node as HTMLElement;\n\t\tconst revertData = data.revertData;\n\n\t\tfor ( const attrName in this.attributes ) {\n\t\t\t// Current attribute value in DOM.\n\t\t\tconst domAttrValue = node.getAttribute( attrName );\n\n\t\t\t// The value to be set.\n\t\t\tconst attrValue = this.attributes[ attrName ];\n\n\t\t\t// Save revert data.\n\t\t\tif ( revertData ) {\n\t\t\t\trevertData.attributes[ attrName ] = domAttrValue;\n\t\t\t}\n\n\t\t\t// Detect custom namespace:\n\t\t\t//\n\t\t\t//\t\tclass: {\n\t\t\t//\t\t\tns: 'abc',\n\t\t\t//\t\t\tvalue: Template.bind( ... ).to( ... )\n\t\t\t//\t\t}\n\t\t\t//\n\t\t\tconst attrNs = isNamespaced( attrValue ) ? attrValue[ 0 ].ns : null;\n\n\t\t\t// Activate binding if one is found. Cases:\n\t\t\t//\n\t\t\t//\t\tclass: [\n\t\t\t//\t\t\tTemplate.bind( ... ).to( ... )\n\t\t\t//\t\t]\n\t\t\t//\n\t\t\t//\t\tclass: [\n\t\t\t//\t\t\t'bar',\n\t\t\t//\t\t\tTemplate.bind( ... ).to( ... ),\n\t\t\t//\t\t\t'baz'\n\t\t\t//\t\t]\n\t\t\t//\n\t\t\t//\t\tclass: {\n\t\t\t//\t\t\tns: 'abc',\n\t\t\t//\t\t\tvalue: Template.bind( ... ).to( ... )\n\t\t\t//\t\t}\n\t\t\t//\n\t\t\tif ( hasTemplateBinding( attrValue ) ) {\n\t\t\t\t// Normalize attributes with additional data like namespace:\n\t\t\t\t//\n\t\t\t\t//\t\tclass: {\n\t\t\t\t//\t\t\tns: 'abc',\n\t\t\t\t//\t\t\tvalue: [ ... ]\n\t\t\t\t//\t\t}\n\t\t\t\t//\n\t\t\t\tconst valueToBind = isNamespaced( attrValue ) ? attrValue[ 0 ].value : attrValue;\n\n\t\t\t\t// Extend the original value of attributes like \"style\" and \"class\",\n\t\t\t\t// don't override them.\n\t\t\t\tif ( revertData && shouldExtend( attrName ) ) {\n\t\t\t\t\tvalueToBind.unshift( domAttrValue );\n\t\t\t\t}\n\n\t\t\t\tthis._bindToObservable( {\n\t\t\t\t\tschema: valueToBind,\n\t\t\t\t\tupdater: getAttributeUpdater( node, attrName, attrNs ),\n\t\t\t\t\tdata\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Style attribute could be an Object so it needs to be parsed in a specific way.\n\t\t\t//\n\t\t\t//\t\tstyle: {\n\t\t\t//\t\t\twidth: '100px',\n\t\t\t//\t\t\theight: Template.bind( ... ).to( ... )\n\t\t\t//\t\t}\n\t\t\t//\n\t\t\telse if ( attrName == 'style' && typeof attrValue[ 0 ] !== 'string' ) {\n\t\t\t\tthis._renderStyleAttribute( attrValue[ 0 ] as any, data );\n\t\t\t}\n\n\t\t\t// Otherwise simply set the static attribute:\n\t\t\t//\n\t\t\t//\t\tclass: [ 'foo' ]\n\t\t\t//\n\t\t\t//\t\tclass: [ 'all', 'are', 'static' ]\n\t\t\t//\n\t\t\t//\t\tclass: [\n\t\t\t//\t\t\t{\n\t\t\t//\t\t\t\tns: 'abc',\n\t\t\t//\t\t\t\tvalue: [ 'foo' ]\n\t\t\t//\t\t\t}\n\t\t\t//\t\t]\n\t\t\t//\n\t\t\telse {\n\t\t\t\t// Extend the original value of attributes like \"style\" and \"class\",\n\t\t\t\t// don't override them.\n\t\t\t\tif ( revertData && domAttrValue && shouldExtend( attrName ) ) {\n\t\t\t\t\tattrValue.unshift( domAttrValue as any );\n\t\t\t\t}\n\n\t\t\t\tconst value: any = attrValue\n\t\t\t\t\t// Retrieve \"values\" from:\n\t\t\t\t\t//\n\t\t\t\t\t//\t\tclass: [\n\t\t\t\t\t//\t\t\t{\n\t\t\t\t\t//\t\t\t\tns: 'abc',\n\t\t\t\t\t//\t\t\t\tvalue: [ ... ]\n\t\t\t\t\t//\t\t\t}\n\t\t\t\t\t//\t\t]\n\t\t\t\t\t//\n\t\t\t\t\t.map( ( val: any ) => val ? ( val.value || val ) : val )\n\t\t\t\t\t// Flatten the array.\n\t\t\t\t\t.reduce( ( prev, next ) => prev.concat( next ), [] )\n\t\t\t\t\t// Convert into string.\n\t\t\t\t\t.reduce( arrayValueReducer, '' );\n\n\t\t\t\tif ( !isFalsy( value ) ) {\n\t\t\t\t\tnode.setAttributeNS( attrNs, attrName, value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Renders the `style` attribute of an HTML element based on\n\t * {@link module:ui/template~Template#attributes}.\n\t *\n\t * A style attribute is an object with static values:\n\t *\n\t * ```ts\n\t * attributes: {\n\t * \tstyle: {\n\t * \t\tcolor: 'red'\n\t * \t}\n\t * }\n\t * ```\n\t *\n\t * or values bound to {@link module:ui/model~UIModel} properties:\n\t *\n\t * ```ts\n\t * attributes: {\n\t * \tstyle: {\n\t * \t\tcolor: bind.to( ... )\n\t * \t}\n\t * }\n\t * ```\n\t *\n\t * Note: The `style` attribute is rendered without setting the namespace. It does not seem to be\n\t * needed.\n\t *\n\t * @param styles Styles located in `attributes.style` of {@link module:ui/template~TemplateDefinition}.\n\t * @param data Rendering data.\n\t */\n\tprivate _renderStyleAttribute( styles: Record<string, TemplateSimpleValue | TemplateBinding>, data: RenderData ) {\n\t\tconst node = data.node;\n\n\t\tfor ( const styleName in styles ) {\n\t\t\tconst styleValue = styles[ styleName ];\n\n\t\t\t// Cases:\n\t\t\t//\n\t\t\t//\t\tstyle: {\n\t\t\t//\t\t\tcolor: bind.to( 'attribute' )\n\t\t\t//\t\t}\n\t\t\t//\n\t\t\tif ( hasTemplateBinding( styleValue ) ) {\n\t\t\t\tthis._bindToObservable( {\n\t\t\t\t\tschema: [ styleValue ],\n\t\t\t\t\tupdater: getStyleUpdater( node, styleName ),\n\t\t\t\t\tdata\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Cases:\n\t\t\t//\n\t\t\t//\t\tstyle: {\n\t\t\t//\t\t\tcolor: 'red'\n\t\t\t//\t\t}\n\t\t\t//\n\t\t\telse {\n\t\t\t\t( node as any ).style[ styleName ] = styleValue;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Recursively renders HTML element's children from {@link module:ui/template~Template#children}.\n\t *\n\t * @param data Rendering data.\n\t */\n\tprivate _renderElementChildren( data: RenderData ) {\n\t\tconst node = data.node as HTMLElement;\n\t\tconst container = data.intoFragment ? document.createDocumentFragment() : node;\n\t\tconst isApplying = data.isApplying;\n\t\tlet childIndex = 0;\n\n\t\tfor ( const child of this.children! ) {\n\t\t\tif ( isViewCollection( child ) ) {\n\t\t\t\tif ( !isApplying ) {\n\t\t\t\t\tchild.setParent( node );\n\n\t\t\t\t\t// Note: ViewCollection renders its children.\n\t\t\t\t\tfor ( const view of child ) {\n\t\t\t\t\t\tcontainer.appendChild( view.element! );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if ( isView( child ) ) {\n\t\t\t\tif ( !isApplying ) {\n\t\t\t\t\tif ( !child.isRendered ) {\n\t\t\t\t\t\tchild.render();\n\t\t\t\t\t}\n\n\t\t\t\t\tcontainer.appendChild( child.element! );\n\t\t\t\t}\n\t\t\t} else if ( isNode( child ) ) {\n\t\t\t\tcontainer.appendChild( child );\n\t\t\t} else {\n\t\t\t\tif ( isApplying ) {\n\t\t\t\t\tconst revertData = data.revertData!;\n\t\t\t\t\tconst childRevertData = getEmptyRevertData();\n\n\t\t\t\t\trevertData.children.push( childRevertData );\n\n\t\t\t\t\tchild._renderNode( {\n\t\t\t\t\t\tintoFragment: false,\n\t\t\t\t\t\tnode: container.childNodes[ childIndex++ ] as any,\n\t\t\t\t\t\tisApplying: true,\n\t\t\t\t\t\trevertData: childRevertData\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\tcontainer.appendChild( child.render() );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( data.intoFragment ) {\n\t\t\tnode.appendChild( container );\n\t\t}\n\t}\n\n\t/**\n\t * Activates `on` event listeners from the {@link module:ui/template~TemplateDefinition}\n\t * on an HTML element.\n\t *\n\t * @param data Rendering data.\n\t */\n\tprivate _setUpListeners( data: RenderData ) {\n\t\tif ( !this.eventListeners ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor ( const key in this.eventListeners ) {\n\t\t\tconst revertBindings = this.eventListeners[ key ].map( schemaItem => {\n\t\t\t\tconst [ domEvtName, domSelector ] = key.split( '@' );\n\n\t\t\t\treturn schemaItem.activateDomEventListener( domEvtName, domSelector, data );\n\t\t\t} );\n\n\t\t\tif ( data.revertData ) {\n\t\t\t\tdata.revertData.bindings.push( revertBindings );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * For a given {@link module:ui/template~TemplateValueSchema} containing {@link module:ui/template~TemplateBinding}\n\t * activates the binding and sets its initial value.\n\t *\n\t * Note: {@link module:ui/template~TemplateValueSchema} can be for HTML element attributes or\n\t * text node `textContent`.\n\t *\n\t * @param options Binding options.\n\t * @param options.updater A function which updates the DOM (like attribute or text).\n\t * @param options.data Rendering data.\n\t */\n\tprivate _bindToObservable( { schema, updater, data }: {\n\t\tschema: Array<TemplateSimpleValue | TemplateBinding>;\n\t\tupdater: Updater;\n\t\tdata: RenderData;\n\t} ) {\n\t\tconst revertData = data.revertData;\n\n\t\t// Set initial values.\n\t\tsyncValueSchemaValue( schema, updater, data );\n\n\t\tconst revertBindings = schema\n\t\t\t// Filter \"falsy\" (false, undefined, null, '') value schema components out.\n\t\t\t.filter( item => !isFalsy( item ) )\n\t\t\t// Filter inactive bindings from schema, like static strings ('foo'), numbers (42), etc.\n\t\t\t.filter( ( item: any ): item is TemplateBinding => item.observable )\n\t\t\t// Once only the actual binding are left, let the emitter listen to observable change:attribute event.\n\t\t\t// TODO: Reduce the number of listeners attached as many bindings may listen\n\t\t\t// to the same observable attribute.\n\t\t\t.map( templateBinding => templateBinding.activateAttributeListener( schema, updater, data ) );\n\n\t\tif ( revertData ) {\n\t\t\trevertData.bindings.push( revertBindings );\n\t\t}\n\t}\n\n\t/**\n\t * Reverts {@link module:ui/template~RenderData#revertData template data} from a node to\n\t * return it to the original state.\n\t *\n\t * @param node A node to be reverted.\n\t * @param revertData An object that stores information about what changes have been made by\n\t * {@link #apply} to the node. See {@link module:ui/template~RenderData#revertData} for more information.\n\t */\n\tprivate _revertTemplateFromNode( node: HTMLElement | Text, revertData: RevertData ) {\n\t\tfor ( const binding of revertData.bindings ) {\n\t\t\t// Each binding may consist of several observable+observable#attribute.\n\t\t\t// like the following has 2:\n\t\t\t//\n\t\t\t//\t\tclass: [\n\t\t\t//\t\t\t'x',\n\t\t\t//\t\t\tbind.to( 'foo' ),\n\t\t\t//\t\t\t'y',\n\t\t\t//\t\t\tbind.to( 'bar' )\n\t\t\t//\t\t]\n\t\t\t//\n\t\t\tfor ( const revertBinding of binding ) {\n\t\t\t\trevertBinding();\n\t\t\t}\n\t\t}\n\n\t\tif ( revertData.text ) {\n\t\t\tnode.textContent = revertData.text;\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst element = node as HTMLElement;\n\n\t\tfor ( const attrName in revertData.attributes ) {\n\t\t\tconst attrValue = revertData.attributes[ attrName ];\n\n\t\t\t// When the attribute has **not** been set before #apply().\n\t\t\tif ( attrValue === null ) {\n\t\t\t\telement.removeAttribute( attrName );\n\t\t\t} else {\n\t\t\t\telement.setAttribute( attrName, attrValue );\n\t\t\t}\n\t\t}\n\n\t\tfor ( let i = 0; i < revertData.children.length; ++i ) {\n\t\t\tthis._revertTemplateFromNode( element.childNodes[ i ] as any, revertData.children[ i ] );\n\t\t}\n\t}\n}\n\nexport type AttributeValues = Array<TemplateSimpleValue | TemplateBinding> |\n\t[ NamespacedValue<Array<TemplateSimpleValue | TemplateBinding>> ];\n\n/**\n * Describes a binding created by the {@link module:ui/template~Template.bind} interface.\n *\n * @internal\n */\nexport abstract class TemplateBinding {\n\t/**\n\t * The name of the {@link module:ui/template~TemplateBinding#observable observed attribute}.\n\t */\n\tpublic readonly attribute: string;\n\n\t/**\n\t * An observable instance of the binding. It either:\n\t *\n\t * * provides the attribute with the value,\n\t * * or passes the event when a corresponding DOM event is fired.\n\t */\n\tpublic readonly observable: Observable;\n\n\t/**\n\t * An {@link module:utils/emittermixin~Emitter} used by the binding to:\n\t *\n\t * * listen to the attribute change in the {@link module:ui/template~TemplateBinding#observable},\n\t * * or listen to the event in the DOM.\n\t */\n\tpublic readonly emitter: Emitter;\n\n\t/**\n\t * A custom function to process the value of the {@link module:ui/template~TemplateBinding#attribute}.\n\t */\n\tpublic readonly callback?: ( value: any, node: Node ) => TemplateSimpleValue;\n\n\t/**\n\t * Creates an instance of the {@link module:ui/template~TemplateBinding} class.\n\t *\n\t * @param def The definition of the binding.\n\t */\n\tconstructor( def: {\n\t\tattribute: string;\n\t\tobservable: Observable;\n\t\temitter: Emitter;\n\t\tcallback?: ( value: any, node: Node ) => TemplateSimpleValue;\n\t} ) {\n\t\tthis.attribute = def.attribute;\n\t\tthis.observable = def.observable;\n\t\tthis.emitter = def.emitter;\n\t\tthis.callback = def.callback;\n\t}\n\n\t/**\n\t * Returns the value of the binding. It is the value of the {@link module:ui/template~TemplateBinding#attribute} in\n\t * {@link module:ui/template~TemplateBinding#observable}. The value may be processed by the\n\t * {@link module:ui/template~TemplateBinding#callback}, if such has been passed to the binding.\n\t *\n\t * @param node A native DOM node, passed to the custom {@link module:ui/template~TemplateBinding#callback}.\n\t * @returns The value of {@link module:ui/template~TemplateBinding#attribute} in\n\t * {@link module:ui/template~TemplateBinding#observable}.\n\t */\n\tpublic getValue( node: Node ): TemplateSimpleValue {\n\t\tconst value = ( this.observable as any )[ this.attribute ];\n\n\t\treturn this.callback ? this.callback( value, node ) : value;\n\t}\n\n\t/**\n\t * Activates the listener which waits for changes of the {@link module:ui/template~TemplateBinding#attribute} in\n\t * {@link module:ui/template~TemplateBinding#observable}, then updates the DOM with the aggregated\n\t * value of {@link module:ui/template~TemplateValueSchema}.\n\t *\n\t * @param schema A full schema to generate an attribute or text in the DOM.\n\t * @param updater A DOM updater function used to update the native DOM attribute or text.\n\t * @param data Rendering data.\n\t * @returns A function to sever the listener binding.\n\t */\n\tpublic activateAttributeListener(\n\t\tschema: Array<TemplateSimpleValue | TemplateBinding>,\n\t\tupdater: Updater,\n\t\tdata: RenderData\n\t): () => void {\n\t\tconst callback = () => syncValueSchemaValue( schema, updater, data );\n\n\t\tthis.emitter.listenTo<ObservableChangeEvent>( this.observable, `change:${ this.attribute }`, callback );\n\n\t\t// Allows revert of the listener.\n\t\treturn () => {\n\t\t\tthis.emitter.stopListening( this.observable, `change:${ this.attribute }`, callback );\n\t\t};\n\t}\n}\n\n/**\n * Describes either:\n *\n * * a binding to an {@link module:utils/observablemixin~Observable},\n * * or a native DOM event binding.\n *\n * It is created by the {@link module:ui/template~BindChain#to} method.\n *\n * @internal\n */\nexport class TemplateToBinding extends TemplateBinding {\n\tpublic readonly eventNameOrFunction: string | ( ( domEvent: Event ) => void );\n\n\tconstructor( def: ConstructorParameters<typeof TemplateBinding>[ 0 ] & {\n\t\teventNameOrFunction: string | ( ( domEvent: Event ) => void );\n\t} ) {\n\t\tsuper( def );\n\n\t\tthis.eventNameOrFunction = def.eventNameOrFunction;\n\t}\n\n\t/**\n\t * Activates the listener for the native DOM event, which when fired, is propagated by\n\t * the {@link module:ui/template~TemplateBinding#emitter}.\n\t *\n\t * @param domEvtName The name of the native DOM event.\n\t * @param domSelector The selector in the DOM to filter delegated events.\n\t * @param data Rendering data.\n\t * @returns A function to sever the listener binding.\n\t */\n\tpublic activateDomEventListener(\n\t\tdomEvtName: string,\n\t\tdomSelector: string,\n\t\tdata: { node: any }\n\t): () => void {\n\t\tconst callback = ( evt: unknown, domEvt: Event ) => {\n\t\t\tif ( !domSelector || ( domEvt.target as Element ).matches( domSelector ) ) {\n\t\t\t\tif ( typeof this.eventNameOrFunction == 'function' ) {\n\t\t\t\t\tthis.eventNameOrFunction( domEvt );\n\t\t\t\t} else {\n\t\t\t\t\tthis.observable.fire( this.eventNameOrFunction, domEvt );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.emitter.listenTo( data.node, domEvtName, callback );\n\n\t\t// Allows revert of the listener.\n\t\treturn () => {\n\t\t\tthis.emitter.stopListening( data.node, domEvtName, callback );\n\t\t};\n\t}\n}\n\n/**\n * Describes a binding to {@link module:utils/observablemixin~Observable} created by the {@link module:ui/template~BindChain#if}\n * method.\n *\n * @internal\n */\nexport class TemplateIfBinding extends TemplateBinding {\n\t/**\n\t * The value of the DOM attribute or text to be set if the {@link module:ui/template~TemplateBinding#attribute} in\n\t * {@link module:ui/template~TemplateBinding#observable} is `true`.\n\t */\n\tpublic readonly valueIfTrue?: string;\n\n\tconstructor( def: ConstructorParameters<typeof TemplateBinding>[ 0 ] & {\n\t\tvalueIfTrue?: string;\n\t} ) {\n\t\tsuper( def );\n\n\t\tthis.valueIfTrue = def.valueIfTrue;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override getValue( node: Node ): TemplateSimpleValue {\n\t\tconst value = super.getValue( node );\n\n\t\treturn isFalsy( value ) ? false : ( this.valueIfTrue || true ) as any;\n\t}\n}\n\n/**\n * Checks whether given {@link module:ui/template~TemplateValueSchema} contains a\n * {@link module:ui/template~TemplateBinding}.\n */\nfunction hasTemplateBinding( schema: any ) {\n\tif ( !schema ) {\n\t\treturn false;\n\t}\n\n\t// Normalize attributes with additional data like namespace:\n\t//\n\t//\t\tclass: {\n\t//\t\t\tns: 'abc',\n\t//\t\t\tvalue: [ ... ]\n\t//\t\t}\n\t//\n\tif ( schema.value ) {\n\t\tschema = schema.value;\n\t}\n\n\tif ( Array.isArray( schema ) ) {\n\t\treturn schema.some( hasTemplateBinding );\n\t} else if ( schema instanceof TemplateBinding ) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * Assembles the value using {@link module:ui/template~TemplateValueSchema} and stores it in a form of\n * an Array. Each entry of the Array corresponds to one of {@link module:ui/template~TemplateValueSchema}\n * items.\n *\n * @param node DOM Node updated when {@link module:utils/observablemixin~Observable} changes.\n */\nfunction getValueSchemaValue( schema: Array<TemplateSimpleValue | TemplateBinding>, node: Node ) {\n\treturn schema.map( schemaItem => {\n\t\t// Process {@link module:ui/template~TemplateBinding} bindings.\n\t\tif ( schemaItem instanceof TemplateBinding ) {\n\t\t\treturn schemaItem.getValue( node );\n\t\t}\n\n\t\t// All static values like strings, numbers, and \"falsy\" values (false, null, undefined, '', etc.) just pass.\n\t\treturn schemaItem;\n\t} );\n}\n\n/**\n * A function executed each time the bound Observable attribute changes, which updates the DOM with a value\n * constructed from {@link module:ui/template~TemplateValueSchema}.\n *\n * @param updater A function which updates the DOM (like attribute or text).\n * @param node DOM Node updated when {@link module:utils/observablemixin~Observable} changes.\n */\nfunction syncValueSchemaValue(\n\tschema: Array<TemplateSimpleValue | TemplateBinding>,\n\tupdater: Updater,\n\t{ node }: { node: Node }\n) {\n\tconst values = getValueSchemaValue( schema, node );\n\tlet value: TemplateSimpleValue;\n\n\t// Check if schema is a single Template.bind.if, like:\n\t//\n\t//\t\tclass: Template.bind.if( 'foo' )\n\t//\n\tif ( schema.length == 1 && schema[ 0 ] instanceof TemplateIfBinding ) {\n\t\tvalue = values[ 0 ];\n\t} else {\n\t\tvalue = values.reduce( arrayValueReducer, '' );\n\t}\n\n\tif ( isFalsy( value ) ) {\n\t\tupdater.remove();\n\t} else {\n\t\tupdater.set( value );\n\t}\n}\n\ninterface Updater {\n\tset( value: any ): void;\n\tremove(): void;\n}\n\n/**\n * Returns an object consisting of `set` and `remove` functions, which\n * can be used in the context of DOM Node to set or reset `textContent`.\n * @see module:ui/view~View#_bindToObservable\n *\n * @param node DOM Node to be modified.\n */\nfunction getTextUpdater( node: Node ): Updater {\n\treturn {\n\t\tset( value ) {\n\t\t\tnode.textContent = value;\n\t\t},\n\n\t\tremove() {\n\t\t\tnode.textContent = '';\n\t\t}\n\t};\n}\n\n/**\n * Returns an object consisting of `set` and `remove` functions, which\n * can be used in the context of DOM Node to set or reset an attribute.\n * @see module:ui/view~View#_bindToObservable\n *\n * @param el DOM Node to be modified.\n * @param attrName Name of the attribute to be modified.\n * @param ns Namespace to use.\n */\nfunction getAttributeUpdater( el: Element, attrName: string, ns: string | null ): Updater {\n\treturn {\n\t\tset( value ) {\n\t\t\tel.setAttributeNS( ns, attrName, value );\n\t\t},\n\n\t\tremove() {\n\t\t\tel.removeAttributeNS( ns, attrName );\n\t\t}\n\t};\n}\n\n/**\n * Returns an object consisting of `set` and `remove` functions, which\n * can be used in the context of CSSStyleDeclaration to set or remove a style.\n * @see module:ui/view~View#_bindToObservable\n *\n * @param el DOM Node to be modified.\n * @param styleName Name of the style to be modified.\n */\nfunction getStyleUpdater( el: any, styleName: string ): Updater {\n\treturn {\n\t\tset( value ) {\n\t\t\tel.style[ styleName ] = value;\n\t\t},\n\n\t\tremove() {\n\t\t\tel.style[ styleName ] = null;\n\t\t}\n\t};\n}\n\n/**\n * Clones definition of the template.\n */\nfunction clone( def: unknown ) {\n\tconst clone = cloneDeepWith( def, value => {\n\t\t// Don't clone the `Template.bind`* bindings because of the references to Observable\n\t\t// and DomEmitterMixin instances inside, which would also be traversed and cloned by greedy\n\t\t// cloneDeepWith algorithm. There's no point in cloning Observable/DomEmitterMixins\n\t\t// along with the definition.\n\t\t//\n\t\t// Don't clone Template instances if provided as a child. They're simply #render()ed\n\t\t// and nothing should interfere.\n\t\t//\n\t\t// Also don't clone View instances if provided as a child of the Template. The template\n\t\t// instance will be extracted from the View during the normalization and there's no need\n\t\t// to clone it.\n\t\tif ( value && ( value instanceof TemplateBinding || isTemplate( value ) || isView( value ) || isViewCollection( value ) ) ) {\n\t\t\treturn value;\n\t\t}\n\t} );\n\n\treturn clone;\n}\n\n/**\n * Normalizes given {@link module:ui/template~TemplateDefinition}.\n *\n * See:\n *  * {@link normalizeAttributes}\n *  * {@link normalizeListeners}\n *  * {@link normalizePlainTextDefinition}\n *  * {@link normalizeTextDefinition}\n *\n * @param def A template definition.\n * @returns Normalized definition.\n */\nfunction normalize( def: any ) {\n\tif ( typeof def == 'string' ) {\n\t\tdef = normalizePlainTextDefinition( def );\n\t} else if ( def.text ) {\n\t\tnormalizeTextDefinition( def );\n\t}\n\n\tif ( def.on ) {\n\t\tdef.eventListeners = normalizeListeners( def.on );\n\n\t\t// Template mixes EmitterMixin, so delete #on to avoid collision.\n\t\tdelete def.on;\n\t}\n\n\tif ( !def.text ) {\n\t\tif ( def.attributes ) {\n\t\t\tnormalizeAttributes( def.attributes );\n\t\t}\n\n\t\tconst children = [];\n\n\t\tif ( def.children ) {\n\t\t\tif ( isViewCollection( def.children ) ) {\n\t\t\t\tchildren.push( def.children );\n\t\t\t} else {\n\t\t\t\tfor ( const child of def.children ) {\n\t\t\t\t\tif ( isTemplate( child ) || isView( child ) || isNode( child ) ) {\n\t\t\t\t\t\tchildren.push( child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchildren.push( new Template( child ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdef.children = children;\n\t}\n\n\treturn def;\n}\n\n/**\n * Normalizes \"attributes\" section of {@link module:ui/template~TemplateDefinition}.\n *\n * ```\n * attributes: {\n * \ta: 'bar',\n * \tb: {@link module:ui/template~TemplateBinding},\n * \tc: {\n * \t\tvalue: 'bar'\n * \t}\n * }\n * ```\n *\n * becomes\n *\n * ```\n * attributes: {\n * \ta: [ 'bar' ],\n * \tb: [ {@link module:ui/template~TemplateBinding} ],\n * \tc: {\n * \t\tvalue: [ 'bar' ]\n * \t}\n * }\n * ```\n */\nfunction normalizeAttributes( attributes: any ) {\n\tfor ( const a in attributes ) {\n\t\tif ( attributes[ a ].value ) {\n\t\t\tattributes[ a ].value = toArray( attributes[ a ].value );\n\t\t}\n\n\t\tarrayify( attributes, a );\n\t}\n}\n\n/**\n * Normalizes \"on\" section of {@link module:ui/template~TemplateDefinition}.\n *\n * ```\n * on: {\n * \ta: 'bar',\n * \tb: {@link module:ui/template~TemplateBinding},\n * \tc: [ {@link module:ui/template~TemplateBinding}, () => { ... } ]\n * }\n * ```\n *\n * becomes\n *\n * ```\n * on: {\n * \ta: [ 'bar' ],\n * \tb: [ {@link module:ui/template~TemplateBinding} ],\n * \tc: [ {@link module:ui/template~TemplateBinding}, () => { ... } ]\n * }\n * ```\n *\n * @returns Object containing normalized listeners.\n */\nfunction normalizeListeners( listeners: any ) {\n\tfor ( const l in listeners ) {\n\t\tarrayify( listeners, l );\n\t}\n\n\treturn listeners;\n}\n\n/**\n * Normalizes \"string\" {@link module:ui/template~TemplateDefinition}.\n *\n * ```\n * \"foo\"\n * ```\n *\n * becomes\n *\n * ```\n * { text: [ 'foo' ] },\n * ```\n *\n * @returns Normalized template definition.\n */\nfunction normalizePlainTextDefinition( def: string ) {\n\treturn {\n\t\ttext: [ def ]\n\t};\n}\n\n/**\n * Normalizes text {@link module:ui/template~TemplateDefinition}.\n *\n * ```\n * children: [\n * \t{ text: 'def' },\n * \t{ text: {@link module:ui/template~TemplateBinding} }\n * ]\n * ```\n *\n * becomes\n *\n * ```\n * children: [\n * \t{ text: [ 'def' ] },\n * \t{ text: [ {@link module:ui/template~TemplateBinding} ] }\n * ]\n * ```\n */\nfunction normalizeTextDefinition( def: any ) {\n\tdef.text = toArray( def.text );\n}\n\n/**\n * Wraps an entry in Object in an Array, if not already one.\n *\n * ```\n * {\n * \tx: 'y',\n * \ta: [ 'b' ]\n * }\n * ```\n *\n * becomes\n *\n * ```\n * {\n * \tx: [ 'y' ],\n * \ta: [ 'b' ]\n * }\n * ```\n */\nfunction arrayify( obj: any, key: string ) {\n\tobj[ key ] = toArray( obj[ key ] );\n}\n\n/**\n * A helper which concatenates the value avoiding unwanted\n * leading white spaces.\n */\nfunction arrayValueReducer( prev: TemplateSimpleValue, cur: TemplateSimpleValue ) {\n\tif ( isFalsy( cur ) ) {\n\t\treturn prev;\n\t} else if ( isFalsy( prev ) ) {\n\t\treturn cur;\n\t} else {\n\t\treturn `${ prev } ${ cur }`;\n\t}\n}\n\n/**\n * Extends one object defined in the following format:\n *\n * ```\n * {\n * \tkey1: [Array1],\n * \tkey2: [Array2],\n * \t...\n * \tkeyN: [ArrayN]\n * }\n * ```\n *\n * with another object of the same data format.\n *\n * @param obj Base object.\n * @param ext Object extending base.\n */\nfunction extendObjectValueArray( obj: any, ext: any ) {\n\tfor ( const a in ext ) {\n\t\tif ( obj[ a ] ) {\n\t\t\tobj[ a ].push( ...ext[ a ] );\n\t\t} else {\n\t\t\tobj[ a ] = ext[ a ];\n\t\t}\n\t}\n}\n\n/**\n * A helper for {@link module:ui/template~Template#extend}. Recursively extends {@link module:ui/template~Template} instance\n * with content from {@link module:ui/template~TemplateDefinition}. See {@link module:ui/template~Template#extend} to learn more.\n *\n * @param def A template instance to be extended.\n * @param def A definition which is to extend the template instance.\n * @param Error context.\n */\nfunction extendTemplate( template: Template, def: any ) {\n\tif ( def.attributes ) {\n\t\tif ( !template.attributes ) {\n\t\t\ttemplate.attributes = {};\n\t\t}\n\n\t\textendObjectValueArray( template.attributes, def.attributes );\n\t}\n\n\tif ( def.eventListeners ) {\n\t\tif ( !template.eventListeners ) {\n\t\t\ttemplate.eventListeners = {};\n\t\t}\n\n\t\textendObjectValueArray( template.eventListeners, def.eventListeners );\n\t}\n\n\tif ( def.text ) {\n\t\ttemplate.text!.push( ...def.text );\n\t}\n\n\tif ( def.children && def.children.length ) {\n\t\tif ( template.children!.length != def.children.length ) {\n\t\t\t/**\n\t\t\t * The number of children in extended definition does not match.\n\t\t\t *\n\t\t\t * @error ui-template-extend-children-mismatch\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'ui-template-extend-children-mismatch',\n\t\t\t\ttemplate\n\t\t\t);\n\t\t}\n\n\t\tlet childIndex = 0;\n\n\t\tfor ( const childDef of def.children ) {\n\t\t\textendTemplate( template.children![ childIndex++ ] as any, childDef );\n\t\t}\n\t}\n}\n\n/**\n * Checks if value is \"falsy\".\n * Note: 0 (Number) is not \"falsy\" in this context.\n *\n * @param value Value to be checked.\n */\nfunction isFalsy( value: unknown ): value is FalsyValue {\n\treturn !value && value !== 0;\n}\n\n/**\n * Checks if the item is an instance of {@link module:ui/view~View}\n *\n * @param value Value to be checked.\n */\nfunction isView( item: unknown ): item is View {\n\treturn item instanceof View;\n}\n\n/**\n * Checks if the item is an instance of {@link module:ui/template~Template}\n *\n * @param value Value to be checked.\n */\nfunction isTemplate( item: unknown ): item is Template {\n\treturn item instanceof Template;\n}\n\n/**\n * Checks if the item is an instance of {@link module:ui/viewcollection~ViewCollection}\n *\n * @param value Value to be checked.\n */\nfunction isViewCollection( item: unknown ): item is ViewCollection {\n\treturn item instanceof ViewCollection;\n}\n\n/**\n * Checks if value array contains the one with namespace.\n */\nfunction isNamespaced(\n\tattrValue: AttributeValues\n): attrValue is [ NamespacedValue<Array<TemplateSimpleValue | TemplateBinding>> ] {\n\treturn isObject( attrValue[ 0 ] ) && ( attrValue[ 0 ] as any ).ns;\n}\n\n/**\n * Creates an empty skeleton for {@link module:ui/template~Template#revert}\n * data.\n */\nfunction getEmptyRevertData(): RevertData {\n\treturn {\n\t\tchildren: [],\n\t\tbindings: [],\n\t\tattributes: {}\n\t};\n}\n\n/**\n * Checks whether an attribute should be extended when\n * {@link module:ui/template~Template#apply} is called.\n *\n * @param attrName Attribute name to check.\n */\nfunction shouldExtend( attrName: string ) {\n\treturn attrName == 'class' || attrName == 'style';\n}\n\n/**\n * A definition of the {@link module:ui/template~Template}. It describes what kind of\n * node a template will render (HTML element or text), attributes of an element, DOM event\n * listeners and children.\n *\n * Also see:\n * * {@link module:ui/template~TemplateValueSchema} to learn about HTML element attributes,\n * * {@link module:ui/template~TemplateListenerSchema} to learn about DOM event listeners.\n *\n * A sample definition on an HTML element can look like this:\n *\n * ```ts\n * new Template( {\n * \ttag: 'p',\n * \tchildren: [\n * \t\t{\n * \t\t\ttag: 'span',\n * \t\t\tattributes: { ... },\n * \t\t\tchildren: [ ... ],\n * \t\t},\n * \t\t{\n * \t\t\ttext: 'static–text'\n * \t\t},\n * \t\t'also-static–text',\n * \t],\n * \tattributes: {\n * \t\tclass: {@link module:ui/template~TemplateValueSchema},\n * \t\tid: {@link module:ui/template~TemplateValueSchema},\n * \t\tstyle: {@link module:ui/template~TemplateValueSchema}\n *\n * \t\t// ...\n * \t},\n * \ton: {\n * \t\t'click': {@link module:ui/template~TemplateListenerSchema}\n *\n * \t\t// Document.querySelector format is also accepted.\n * \t\t'keyup@a.some-class': {@link module:ui/template~TemplateListenerSchema}\n *\n * \t\t// ...\n * \t}\n * } );\n * ```\n *\n * A {@link module:ui/view~View}, another {@link module:ui/template~Template} or a native DOM node\n * can also become a child of a template. When a view is passed, its {@link module:ui/view~View#element} is used:\n *\n * ```ts\n * const view = new SomeView();\n * const childTemplate = new Template( { ... } );\n * const childNode = document.createElement( 'b' );\n *\n * new Template( {\n * \ttag: 'p',\n *\n * \tchildren: [\n * \t\t// view#element will be added as a child of this <p>.\n * \t\tview,\n *\n * \t\t// The output of childTemplate.render() will be added here.\n * \t\tchildTemplate,\n *\n * \t\t// Native DOM nodes are included directly in the rendered output.\n * \t\tchildNode\n * \t]\n * } );\n * ```\n *\n * An entire {@link module:ui/viewcollection~ViewCollection} can be used as a child in the definition:\n *\n * ```ts\n * const collection = new ViewCollection();\n * collection.add( someView );\n *\n * new Template( {\n * \ttag: 'p',\n *\n * \tchildren: collection\n * } );\n * ```\n */\nexport type TemplateDefinition = string |\n\tTemplate |\n\tTemplateElementDefinition |\n\tTemplateTextDefinition;\n\nexport type TemplateElementDefinition = {\n\n\t/**\n\t * See the template {@link module:ui/template~Template#tag} property.\n\t */\n\ttag: string;\n\n\t/**\n\t * See the template {@link module:ui/template~Template#attributes} property.\n\t */\n\tattributes?: Record<string, TemplateValueSchema>;\n\n\t/**\n\t * See the template {@link module:ui/template~Template#children} property.\n\t */\n\tchildren?: Iterable<View | Node | Template | TemplateDefinition>;\n\n\t/**\n\t * See the template {@link module:ui/template~Template#eventListeners} property.\n\t */\n\ton?: Record<string, TemplateListenerSchema>;\n};\n\nexport type TemplateTextDefinition = {\n\n\t/**\n\t * See the template {@link module:ui/template~Template#text} property.\n\t */\n\ttext: ArrayOrItem<TemplateSimpleValueSchema>;\n};\n\nexport type FalsyValue = false | null | undefined | '';\n\nexport type NamespacedValue<T> = { ns: string; value: T };\n\nexport type TemplateSimpleValue = string | boolean | number | null | undefined;\n\nexport type TemplateSimpleValueSchema = TemplateSimpleValue | AttributeBinding;\n\n/**\n * Describes a value of an HTML element attribute or `textContent`. It allows combining multiple\n * data sources like static values and {@link module:utils/observablemixin~Observable} attributes.\n *\n * Also see:\n * * {@link module:ui/template~TemplateDefinition} to learn where to use it,\n * * {@link module:ui/template~Template.bind} to learn how to configure\n * {@link module:utils/observablemixin~Observable} attribute bindings,\n * * {@link module:ui/template~Template#render} to learn how to render a template,\n * * {@link module:ui/template~BindChain#to `to()`} and {@link module:ui/template~BindChain#if `if()`}\n * methods to learn more about bindings.\n *\n * Attribute values can be described in many different ways:\n *\n * ```ts\n * // Bind helper will create bindings to attributes of the observable.\n * const bind = Template.bind( observable, emitter );\n *\n * new Template( {\n * \ttag: 'p',\n * \tattributes: {\n * \t\t// A plain string schema.\n * \t\t'class': 'static-text',\n *\n * \t\t// An object schema, binds to the \"foo\" attribute of the\n * \t\t// observable and follows its value.\n * \t\t'class': bind.to( 'foo' ),\n *\n * \t\t// An array schema, combines the above.\n * \t\t'class': [\n * \t\t\t'static-text',\n * \t\t\tbind.to( 'bar', () => { ... } ),\n *\n * \t\t\t// Bindings can also be conditional.\n * \t\t\tbind.if( 'baz', 'class-when-baz-is-true' )\n * \t\t],\n *\n * \t\t// An array schema, with a custom namespace, e.g. useful for creating SVGs.\n * \t\t'class': {\n * \t\t\tns: 'http://ns.url',\n * \t\t\tvalue: [\n * \t\t\t\tbind.if( 'baz', 'value-when-true' ),\n * \t\t\t\t'static-text'\n * \t\t\t]\n * \t\t},\n *\n * \t\t// An object schema, specific for styles.\n * \t\tstyle: {\n * \t\t\tcolor: 'red',\n * \t\t\tbackgroundColor: bind.to( 'qux', () => { ... } )\n * \t\t}\n * \t}\n * } );\n * ```\n *\n * Text nodes can also have complex values:\n *\n * ```ts\n * const bind = Template.bind( observable, emitter );\n *\n * // Will render a \"foo\" text node.\n * new Template( {\n * \ttext: 'foo'\n * } );\n *\n * // Will render a \"static text: {observable.foo}\" text node.\n * // The text of the node will be updated as the \"foo\" attribute changes.\n * new Template( {\n * \ttext: [\n * \t\t'static text: ',\n * \t\tbind.to( 'foo', () => { ... } )\n * \t]\n * } );\n * ```\n */\nexport type TemplateValueSchema = ArrayOrItem<\n\tTemplateSimpleValueSchema |\n\tNamespacedValue<TemplateSimpleValueSchema>\n> |\n\tRecord<string, TemplateSimpleValueSchema>;\n\n/**\n * Describes an event listener attached to an HTML element. Such listener can propagate DOM events\n * through an {@link module:utils/observablemixin~Observable} instance, execute custom callbacks\n * or both, if necessary.\n *\n * Also see:\n * * {@link module:ui/template~TemplateDefinition} to learn more about template definitions,\n * * {@link module:ui/template~BindChain#to `to()`} method to learn more about bindings.\n *\n * Check out different ways of attaching event listeners below:\n *\n * ```ts\n * // Bind helper will propagate events through the observable.\n * const bind = Template.bind( observable, emitter );\n *\n * new Template( {\n * \ttag: 'p',\n * \ton: {\n * \t\t// An object schema. The observable will fire the \"clicked\" event upon DOM \"click\".\n * \t\tclick: bind.to( 'clicked' )\n *\n * \t\t// An object schema. It will work for \"click\" event on \"a.foo\" children only.\n * \t\t'click@a.foo': bind.to( 'clicked' )\n *\n * \t\t// An array schema, makes the observable propagate multiple events.\n * \t\tclick: [\n * \t\t\tbind.to( 'clicked' ),\n * \t\t\tbind.to( 'executed' )\n * \t\t],\n *\n * \t\t// An array schema with a custom callback.\n * \t\t'click@a.foo': {\n * \t\t\tbind.to( 'clicked' ),\n * \t\t\tbind.to( evt => {\n * \t\t\t\tconsole.log( `${ evt.target } has been clicked!` );\n * \t\t\t} }\n * \t\t}\n * \t}\n * } );\n * ```\n */\nexport type TemplateListenerSchema = ArrayOrItem<ListenerBinding>;\n\n// `Template.bind( observable, emitter ).to( name )` is used in two different contexts:\n// - in `attribute` (or `text`) section of the `TemplateDefinition` - `name` is an observed property of the provided `observable`, or\n// - in `on` section - `name` is the event to be fired.\n//\n// In both cases, the returned type is `TemplateToBinding` which can be misleading.\n// Moreover, some forms of `to()` can be used in specific context only:\n// - `to( name, callback )` can only be used in `attribute` or `text`\n// - `to( callback )` can only be used in `on`.\n//\n// But note, that the fact it's `Template{To,If}Binding` is not relevant to the user.\n// The instances are both produced and consumed by this file only.\n// So let's invent some opaque types for outside use and only keep using `TemplateBinding` internally. They can be different for\n// `attribute` and `on` contexts.\n// To make them opaque, a non-exported symbol is used, so it's not possible to accidentally create an instance outside.\ndeclare const AttributeBindingSymbol: unique symbol; // eslint-disable-line @typescript-eslint/no-unused-vars\ndeclare const ListenerBindingSymbol: unique symbol; // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport interface AttributeBinding { _opaqueAttributeBinding: typeof AttributeBindingSymbol }\nexport interface ListenerBinding { _opaqueListenerBinding: typeof ListenerBindingSymbol }\n\n/**\n * The return value of {@link ~Template.bind `Template.bind()`}. It provides `to()` and `if()`\n * methods to create the {@link module:utils/observablemixin~Observable observable} attribute and event bindings.\n */\nexport interface BindChain<TObservable> {\n\n\t/**\n\t * Binds an {@link module:utils/observablemixin~Observable observable} to either:\n\t *\n\t * * an HTML element attribute or a text node `textContent`, so it remains in sync with the observable\n\t * attribute as it changes,\n\t * * or an HTML element DOM event, so the DOM events are propagated through an observable.\n\t *\n\t * Some common use cases of `to()` bindings are presented below:\n\t *\n\t * ```ts\n\t * const bind = Template.bind( observable, emitter );\n\t *\n\t * new Template( {\n\t * \ttag: 'p',\n\t * \tattributes: {\n\t * \t\t// class=\"...\" attribute gets bound to `observable#a`\n\t * \t\tclass: bind.to( 'a' )\n\t * \t},\n\t * \tchildren: [\n\t * \t\t// <p>...</p> gets bound to observable#b; always `toUpperCase()`.\n\t * \t\t{\n\t * \t\t\ttext: bind.to( 'b', ( value, node ) => value.toUpperCase() )\n\t * \t\t}\n\t * \t],\n\t * \ton: {\n\t * \t\tclick: [\n\t * \t\t\t// An observable will fire \"clicked\" upon \"click\" in the DOM.\n\t * \t\t\tbind.to( 'clicked' ),\n\t *\n\t * \t\t\t// A custom callback will be executed upon \"click\" in the DOM.\n\t * \t\t\tbind.to( () => {\n\t * \t\t\t\t...\n\t * \t\t\t} )\n\t * \t\t]\n\t * \t}\n\t * } ).render();\n\t * ```\n\t *\n\t * Learn more about using `to()` in the {@link module:ui/template~TemplateValueSchema} and\n\t * {@link module:ui/template~TemplateListenerSchema}.\n\t *\n\t * @label ATTRIBUTE\n\t * @param attribute An attribute name of {@link module:utils/observablemixin~Observable}.\n\t */\n\tto<TAttribute extends keyof TObservable & string>(\n\t\tattribute: TAttribute\n\t): AttributeBinding & ListenerBinding;\n\n\t/**\n\t * Binds an {@link module:utils/observablemixin~Observable observable} to either:\n\t *\n\t * * an HTML element attribute or a text node `textContent`, so it remains in sync with the observable\n\t * attribute as it changes,\n\t * * or an HTML element DOM event, so the DOM events are propagated through an observable.\n\t *\n\t * Some common use cases of `to()` bindings are presented below:\n\t *\n\t * ```ts\n\t * const bind = Template.bind( observable, emitter );\n\t *\n\t * new Template( {\n\t * \ttag: 'p',\n\t * \tattributes: {\n\t * \t\t// class=\"...\" attribute gets bound to `observable#a`\n\t * \t\tclass: bind.to( 'a' )\n\t * \t},\n\t * \tchildren: [\n\t * \t\t// <p>...</p> gets bound to observable#b; always `toUpperCase()`.\n\t * \t\t{\n\t * \t\t\ttext: bind.to( 'b', ( value, node ) => value.toUpperCase() )\n\t * \t\t}\n\t * \t],\n\t * \ton: {\n\t * \t\tclick: [\n\t * \t\t\t// An observable will fire \"clicked\" upon \"click\" in the DOM.\n\t * \t\t\tbind.to( 'clicked' ),\n\t *\n\t * \t\t\t// A custom callback will be executed upon \"click\" in the DOM.\n\t * \t\t\tbind.to( () => {\n\t * \t\t\t\t...\n\t * \t\t\t} )\n\t * \t\t]\n\t * \t}\n\t * } ).render();\n\t * ```\n\t *\n\t * Learn more about using `to()` in the {@link module:ui/template~TemplateValueSchema} and\n\t * {@link module:ui/template~TemplateListenerSchema}.\n\t *\n\t * @label ATTRIBUTE_CALLBACK\n\t * @param attribute An attribute name of {@link module:utils/observablemixin~Observable}.\n\t * @param callback Allows for processing of the value. Accepts `Node` and `value` as arguments.\n\t */\n\tto<TAttribute extends keyof TObservable & string>(\n\t\tattribute: TAttribute,\n\t\tcallback: ( value: TObservable[ TAttribute ], node: Node ) => ( TemplateSimpleValue )\n\t): AttributeBinding;\n\n\t/**\n\t * Binds an {@link module:utils/observablemixin~Observable observable} to either:\n\t *\n\t * * an HTML element attribute or a text node `textContent`, so it remains in sync with the observable\n\t * attribute as it changes,\n\t * * or an HTML element DOM event, so the DOM events are propagated through an observable.\n\t *\n\t * Some common use cases of `to()` bindings are presented below:\n\t *\n\t * ```ts\n\t * const bind = Template.bind( observable, emitter );\n\t *\n\t * new Template( {\n\t * \ttag: 'p',\n\t * \tattributes: {\n\t * \t\t// class=\"...\" attribute gets bound to `observable#a`\n\t * \t\tclass: bind.to( 'a' )\n\t * \t},\n\t * \tchildren: [\n\t * \t\t// <p>...</p> gets bound to observable#b; always `toUpperCase()`.\n\t * \t\t{\n\t * \t\t\ttext: bind.to( 'b', ( value, node ) => value.toUpperCase() )\n\t * \t\t}\n\t * \t],\n\t * \ton: {\n\t * \t\tclick: [\n\t * \t\t\t// An observable will fire \"clicked\" upon \"click\" in the DOM.\n\t * \t\t\tbind.to( 'clicked' ),\n\t *\n\t * \t\t\t// A custom callback will be executed upon \"click\" in the DOM.\n\t * \t\t\tbind.to( () => {\n\t * \t\t\t\t...\n\t * \t\t\t} )\n\t * \t\t]\n\t * \t}\n\t * } ).render();\n\t * ```\n\t *\n\t * Learn more about using `to()` in the {@link module:ui/template~TemplateValueSchema} and\n\t * {@link module:ui/template~TemplateListenerSchema}.\n\t *\n\t * @label EVENT\n\t * @param eventNameOrCallback A DOM event name or an event callback.\n\t */\n\tto( eventNameOrCallback: string | ( ( domEvent: Event ) => void ) ): ListenerBinding;\n\n\t/**\n\t * Binds an {@link module:utils/observablemixin~Observable observable} to an HTML element attribute or a text\n\t * node `textContent` so it remains in sync with the observable attribute as it changes.\n\t *\n\t * Unlike {@link module:ui/template~BindChain#to}, it controls the presence of the attribute or `textContent`\n\t * depending on the \"falseness\" of an {@link module:utils/observablemixin~Observable} attribute.\n\t *\n\t * ```ts\n\t * const bind = Template.bind( observable, emitter );\n\t *\n\t * new Template( {\n\t * \ttag: 'input',\n\t * \tattributes: {\n\t * \t\t// <input checked> when `observable#a` is not undefined/null/false/''\n\t * \t\t// <input> when `observable#a` is undefined/null/false\n\t * \t\tchecked: bind.if( 'a' )\n\t * \t},\n\t * \tchildren: [\n\t * \t\t{\n\t * \t\t\t// <input>\"b-is-not-set\"</input> when `observable#b` is undefined/null/false/''\n\t * \t\t\t// <input></input> when `observable#b` is not \"falsy\"\n\t * \t\t\ttext: bind.if( 'b', 'b-is-not-set', ( value, node ) => !value )\n\t * \t\t}\n\t * \t]\n\t * } ).render();\n\t * ```\n\t *\n\t * Learn more about using `if()` in the {@link module:ui/template~TemplateValueSchema}.\n\t *\n\t * @param attribute An attribute name of {@link module:utils/observablemixin~Observable} used in the binding.\n\t * @param valueIfTrue Value set when the {@link module:utils/observablemixin~Observable} attribute is not\n\t * undefined/null/false/'' (empty string).\n\t * @param callback Allows for processing of the value. Accepts `Node` and `value` as arguments.\n\t */\n\tif<TAttribute extends keyof TObservable & string>(\n\t\tattribute: TAttribute,\n\t\tvalueIfTrue?: unknown,\n\t\tcallback?: ( value: TObservable[ TAttribute ], node: Node ) => ( boolean | FalsyValue )\n\t): AttributeBinding;\n}\n\n/**\n * The {@link module:ui/template~Template#_renderNode} configuration.\n * @internal\n */\nexport interface RenderData {\n\n\t/**\n\t * A node which is being rendered.\n\t */\n\tnode: HTMLElement | Text;\n\n\t/**\n\t * Tells {@link module:ui/template~Template#_renderNode} to render\n\t * children into `DocumentFragment` first and then append the fragment\n\t * to the parent element. It is a speed optimization.\n\t */\n\tintoFragment: boolean;\n\n\t/**\n\t * Indicates whether the {@link #node} has been provided by {@link module:ui/template~Template#apply}.\n\t */\n\tisApplying: boolean;\n\n\t/**\n\t * An object storing the data that helps {@link module:ui/template~Template#revert}\n\t * bringing back an element to its initial state, i.e. before\n\t * {@link module:ui/template~Template#apply} was called.\n\t */\n\trevertData?: RevertData;\n}\n\ninterface RevertData {\n\ttext?: string | null;\n\tchildren: Array<RevertData>;\n\tbindings: Array<Array<() => void>>;\n\tattributes: Record<string, string | null>;\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/view\n */\n\nimport { ViewCollection } from './viewcollection.js';\nimport { Template, type BindChain, type TemplateDefinition } from './template.js';\n\nimport {\n\tCKEditorError,\n\tCollection,\n\tDomEmitterMixin,\n\tObservableMixin,\n\tisIterable,\n\ttype CollectionAddEvent,\n\ttype DecoratedMethodEvent,\n\ttype Locale,\n\ttype LocaleTranslate\n} from '@ckeditor/ckeditor5-utils';\n\nimport '../theme/globals/globals.css';\n\n/**\n * The basic view class, which represents an HTML element created out of a\n * {@link module:ui/view~View#template}. Views are building blocks of the user interface and handle\n * interaction\n *\n * Views {@link module:ui/view~View#registerChild aggregate} children in\n * {@link module:ui/view~View#createCollection collections} and manage the life cycle of DOM\n * listeners e.g. by handling rendering and destruction.\n *\n * See the {@link module:ui/template~TemplateDefinition} syntax to learn more about shaping view\n * elements, attributes and listeners.\n *\n * ```ts\n * class SampleView extends View {\n * \tconstructor( locale ) {\n * \t\tsuper( locale );\n *\n * \t\tconst bind = this.bindTemplate;\n *\n * \t\t// Views define their interface (state) using observable attributes.\n * \t\tthis.set( 'elementClass', 'bar' );\n *\n * \t\tthis.setTemplate( {\n * \t\t\ttag: 'p',\n *\n * \t\t\t// The element of the view can be defined with its children.\n * \t\t\tchildren: [\n * \t\t\t\t'Hello',\n * \t\t\t\t{\n * \t\t\t\t\ttag: 'b',\n * \t\t\t\t\tchildren: [ 'world!' ]\n * \t\t\t\t}\n * \t\t\t],\n * \t\t\tattributes: {\n * \t\t\t\tclass: [\n * \t\t\t\t\t'foo',\n *\n * \t\t\t\t\t// Observable attributes control the state of the view in DOM.\n * \t\t\t\t\tbind.to( 'elementClass' )\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\ton: {\n * \t\t\t\t// Views listen to DOM events and propagate them.\n * \t\t\t\tclick: bind.to( 'clicked' )\n * \t\t\t}\n * \t\t} );\n * \t}\n * }\n *\n * const view = new SampleView( locale );\n *\n * view.render();\n *\n * // Append <p class=\"foo bar\">Hello<b>world</b></p> to the <body>\n * document.body.appendChild( view.element );\n *\n * // Change the class attribute to <p class=\"foo baz\">Hello<b>world</b></p>\n * view.elementClass = 'baz';\n *\n * // Respond to the \"click\" event in DOM by executing a custom action.\n * view.on( 'clicked', () => {\n * \tconsole.log( 'The view has been clicked!' );\n * } );\n * ```\n */\nexport class View<TElement extends HTMLElement = HTMLElement>\n\textends /* #__PURE__ */ DomEmitterMixin( /* #__PURE__ */ ObservableMixin() )\n{\n\t/**\n\t * An HTML element of the view. `null` until {@link #render rendered}\n\t * from the {@link #template}.\n\t *\n\t * ```ts\n\t * class SampleView extends View {\n\t * \tconstructor() {\n\t * \t\tsuper();\n\t *\n\t * \t\t// A template instance the #element will be created from.\n\t * \t\tthis.setTemplate( {\n\t * \t\t\ttag: 'p'\n\t *\n\t * \t\t\t// ...\n\t * \t\t} );\n\t * \t}\n\t * }\n\t *\n\t * const view = new SampleView();\n\t *\n\t * // Renders the #template.\n\t * view.render();\n\t *\n\t * // Append the HTML element of the view to <body>.\n\t * document.body.appendChild( view.element );\n\t * ```\n\t *\n\t * **Note**: The element of the view can also be assigned directly:\n\t *\n\t * ```ts\n\t * view.element = document.querySelector( '#my-container' );\n\t * ```\n\t */\n\tpublic element: TElement | null;\n\n\t/**\n\t * Set `true` when the view has already been {@link module:ui/view~View#render rendered}.\n\t *\n\t * @readonly\n\t */\n\tpublic isRendered: boolean;\n\n\t/**\n\t * A set of tools to localize the user interface.\n\t *\n\t * Also see {@link module:core/editor/editor~Editor#locale}.\n\t *\n\t * @readonly\n\t */\n\tpublic locale: Locale | undefined;\n\n\t/**\n\t * Shorthand for {@link module:utils/locale~Locale#t}.\n\t *\n\t * Note: If {@link #locale} instance hasn't been passed to the view this method may not\n\t * be available.\n\t *\n\t * @see module:utils/locale~Locale#t\n\t */\n\tpublic t: LocaleTranslate | undefined;\n\n\t/**\n\t * Template of this view. It provides the {@link #element} representing\n\t * the view in DOM, which is {@link #render rendered}.\n\t */\n\tpublic template?: Template;\n\n\tpublic declare viewUid?: string;\n\n\t/**\n\t * Collections registered with {@link #createCollection}.\n\t */\n\tprotected _viewCollections: Collection<ViewCollection>;\n\n\t/**\n\t * A collection of view instances, which have been added directly\n\t * into the {@link module:ui/template~Template#children}.\n\t */\n\tprotected _unboundChildren: ViewCollection;\n\n\t/**\n\t * Cached {@link module:ui/template~BindChain bind chain} object created by the\n\t * {@link #template}. See {@link #bindTemplate}.\n\t */\n\tprivate _bindTemplate?: BindChain<this>;\n\n\t/**\n\t * Creates an instance of the {@link module:ui/view~View} class.\n\t *\n\t * Also see {@link #render}.\n\t *\n\t * @param locale The localization services instance.\n\t */\n\tconstructor( locale?: Locale ) {\n\t\tsuper();\n\n\t\tthis.element = null;\n\t\tthis.isRendered = false;\n\n\t\tthis.locale = locale;\n\t\tthis.t = locale && locale.t;\n\n\t\tthis._viewCollections = new Collection();\n\t\tthis._unboundChildren = this.createCollection();\n\n\t\t// Pass parent locale to its children.\n\t\tthis._viewCollections.on<CollectionAddEvent<View>>( 'add', ( evt, collection ) => {\n\t\t\tcollection.locale = locale;\n\t\t\tcollection.t = locale && locale.t;\n\t\t} );\n\n\t\tthis.decorate( 'render' );\n\t}\n\n\t/**\n\t * Shorthand for {@link module:ui/template~Template.bind}, a binding\n\t * {@link module:ui/template~BindChain interface} pre–configured for the view instance.\n\t *\n\t * It provides {@link module:ui/template~BindChain#to `to()`} and\n\t * {@link module:ui/template~BindChain#if `if()`} methods that initialize bindings with\n\t * observable attributes and attach DOM listeners.\n\t *\n\t * ```ts\n\t * class SampleView extends View {\n\t * \tconstructor( locale ) {\n\t * \t\tsuper( locale );\n\t *\n\t * \t\tconst bind = this.bindTemplate;\n\t *\n\t * \t\t// These {@link module:utils/observablemixin~Observable observable} attributes will control\n\t * \t\t// the state of the view in DOM.\n\t * \t\tthis.set( {\n\t * \t\t\telementClass: 'foo',\n\t * \t\t \tisEnabled: true\n\t * \t\t } );\n\t *\n\t * \t\tthis.setTemplate( {\n\t * \t\t\ttag: 'p',\n\t *\n\t * \t\t\tattributes: {\n\t * \t\t\t\t// The class HTML attribute will follow elementClass\n\t * \t\t\t\t// and isEnabled view attributes.\n\t * \t\t\t\tclass: [\n\t * \t\t\t\t\tbind.to( 'elementClass' )\n\t * \t\t\t\t\tbind.if( 'isEnabled', 'present-when-enabled' )\n\t * \t\t\t\t]\n\t * \t\t\t},\n\t *\n\t * \t\t\ton: {\n\t * \t\t\t\t// The view will fire the \"clicked\" event upon clicking <p> in DOM.\n\t * \t\t\t\tclick: bind.to( 'clicked' )\n\t * \t\t\t}\n\t * \t\t} );\n\t * \t}\n\t * }\n\t * ```\n\t */\n\tpublic get bindTemplate(): BindChain<this> {\n\t\tif ( this._bindTemplate ) {\n\t\t\treturn this._bindTemplate;\n\t\t}\n\n\t\treturn ( this._bindTemplate = Template.bind( this, this ) );\n\t}\n\n\t/**\n\t * Creates a new collection of views, which can be used as\n\t * {@link module:ui/template~Template#children} of this view.\n\t *\n\t * ```ts\n\t * class SampleView extends View {\n\t * \tconstructor( locale ) {\n\t * \t\tsuper( locale );\n\t *\n\t * \t\tconst child = new ChildView( locale );\n\t * \t\tthis.items = this.createCollection( [ child ] );\n \t *\n\t * \t\tthis.setTemplate( {\n\t * \t\t\ttag: 'p',\n\t *\n\t * \t\t\t// `items` collection will render here.\n\t * \t\t\tchildren: this.items\n\t * \t\t} );\n\t * \t}\n\t * }\n\t *\n\t * const view = new SampleView( locale );\n\t * view.render();\n\t *\n\t * // It will append <p><child#element></p> to the <body>.\n\t * document.body.appendChild( view.element );\n\t * ```\n\t *\n\t * @param views Initial views of the collection.\n\t * @returns A new collection of view instances.\n\t */\n\tpublic createCollection<T extends View = View>( views?: Iterable<T> ): ViewCollection<T> {\n\t\tconst collection = new ViewCollection<T>( views );\n\n\t\tthis._viewCollections.add( collection );\n\n\t\treturn collection;\n\t}\n\n\t/**\n\t * Registers a new child view under the view instance. Once registered, a child\n\t * view is managed by its parent, including {@link #render rendering}\n\t * and {@link #destroy destruction}.\n\t *\n\t * To revert this, use {@link #deregisterChild}.\n\t *\n\t * ```ts\n\t * class SampleView extends View {\n\t * \tconstructor( locale ) {\n\t * \t\tsuper( locale );\n\t *\n\t * \t\tthis.childA = new SomeChildView( locale );\n\t * \t\tthis.childB = new SomeChildView( locale );\n\t *\n\t * \t\tthis.setTemplate( { tag: 'p' } );\n\t *\n\t * \t\t// Register the children.\n\t * \t\tthis.registerChild( [ this.childA, this.childB ] );\n\t * \t}\n\t *\n\t * \trender() {\n\t * \t\tsuper.render();\n\t *\n\t * \t\tthis.element.appendChild( this.childA.element );\n\t * \t\tthis.element.appendChild( this.childB.element );\n\t * \t}\n\t * }\n\t *\n\t * const view = new SampleView( locale );\n\t *\n\t * view.render();\n\t *\n\t * // Will append <p><childA#element><b></b><childB#element></p>.\n\t * document.body.appendChild( view.element );\n\t * ```\n\t *\n\t * **Note**: There's no need to add child views if they're already referenced in the\n\t * {@link #template}:\n\t *\n\t * ```ts\n\t * class SampleView extends View {\n\t * \tconstructor( locale ) {\n\t * \t\tsuper( locale );\n\t *\n\t * \t\tthis.childA = new SomeChildView( locale );\n\t * \t\tthis.childB = new SomeChildView( locale );\n\t *\n\t * \t\tthis.setTemplate( {\n\t * \t\t\ttag: 'p',\n\t *\n \t * \t\t\t// These children will be added automatically. There's no\n \t * \t\t\t// need to call {@link #registerChild} for any of them.\n\t * \t\t\tchildren: [ this.childA, this.childB ]\n\t * \t\t} );\n\t * \t}\n\t *\n\t * \t// ...\n\t * }\n\t * ```\n\t *\n\t * @param children Children views to be registered.\n\t */\n\tpublic registerChild( children: View | Iterable<View> ): void {\n\t\tif ( !isIterable( children ) ) {\n\t\t\tchildren = [ children ];\n\t\t}\n\n\t\tfor ( const child of children ) {\n\t\t\tthis._unboundChildren.add( child );\n\t\t}\n\t}\n\n\t/**\n\t * The opposite of {@link #registerChild}. Removes a child view from this view instance.\n\t * Once removed, the child is no longer managed by its parent, e.g. it can safely\n\t * become a child of another parent view.\n\t *\n\t * @see #registerChild\n\t * @param children Child views to be removed.\n\t */\n\tpublic deregisterChild( children: View | Iterable<View> ): void {\n\t\tif ( !isIterable( children ) ) {\n\t\t\tchildren = [ children ];\n\t\t}\n\n\t\tfor ( const child of children ) {\n\t\t\tthis._unboundChildren.remove( child );\n\t\t}\n\t}\n\n\t/**\n\t * Sets the {@link #template} of the view with with given definition.\n\t *\n\t * A shorthand for:\n\t *\n\t * ```ts\n\t * view.setTemplate( definition );\n\t * ```\n\t *\n\t * @param definition Definition of view's template.\n\t */\n\tpublic setTemplate( definition: TemplateDefinition ): void {\n\t\tthis.template = new Template( definition );\n\t}\n\n\t/**\n\t * {@link module:ui/template~Template.extend Extends} the {@link #template} of the view with\n\t * with given definition.\n\t *\n\t * A shorthand for:\n\t *\n\t * ```ts\n\t * Template.extend( view.template, definition );\n\t * ```\n\t *\n\t * **Note**: Is requires the {@link #template} to be already set. See {@link #setTemplate}.\n\t *\n\t * @param definition Definition which extends the {@link #template}.\n\t */\n\tpublic extendTemplate( definition: Partial<TemplateDefinition> ): void {\n\t\tTemplate.extend( this.template!, definition );\n\t}\n\n\t/**\n\t * Recursively renders the view.\n\t *\n\t * Once the view is rendered:\n\t * * the {@link #element} becomes an HTML element out of {@link #template},\n\t * * the {@link #isRendered} flag is set `true`.\n\t *\n\t * **Note**: The children of the view:\n\t * * defined directly in the {@link #template}\n\t * * residing in collections created by the {@link #createCollection} method,\n\t * * and added by {@link #registerChild}\n\t * are also rendered in the process.\n\t *\n\t * In general, `render()` method is the right place to keep the code which refers to the\n\t * {@link #element} and should be executed at the very beginning of the view's life cycle.\n\t *\n\t * It is possible to {@link module:ui/template~Template.extend} the {@link #template} before\n\t * the view is rendered. To allow an early customization of the view (e.g. by its parent),\n\t * such references should be done in `render()`.\n\t *\n\t * ```ts\n\t * class SampleView extends View {\n\t * \tconstructor() {\n\t * \t\tthis.setTemplate( {\n\t * \t\t\t// ...\n\t * \t\t} );\n\t * \t},\n\t *\n\t * \trender() {\n\t * \t\t// View#element becomes available.\n\t * \t\tsuper.render();\n\t *\n\t * \t\t// The \"scroll\" listener depends on #element.\n\t * \t\tthis.listenTo( window, 'scroll', () => {\n\t * \t\t\t// A reference to #element would render the #template and make it non-extendable.\n\t * \t\t\tif ( window.scrollY > 0 ) {\n\t * \t\t\t\tthis.element.scrollLeft = 100;\n\t * \t\t\t} else {\n\t * \t\t\t\tthis.element.scrollLeft = 0;\n\t * \t\t\t}\n\t * \t\t} );\n\t * \t}\n\t * }\n\t *\n\t * const view = new SampleView();\n\t *\n\t * // Let's customize the view before it gets rendered.\n\t * view.extendTemplate( {\n\t * \tattributes: {\n\t * \t\tclass: [\n\t * \t\t\t'additional-class'\n\t * \t\t]\n\t * \t}\n\t * } );\n\t *\n\t * // Late rendering allows customization of the view.\n\t * view.render();\n\t * ```\n\t */\n\tpublic render(): void {\n\t\tif ( this.isRendered ) {\n\t\t\t/**\n\t\t\t * This View has already been rendered.\n\t\t\t *\n\t\t\t * @error ui-view-render-already-rendered\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'ui-view-render-already-rendered', this );\n\t\t}\n\n\t\t// Render #element of the view.\n\t\tif ( this.template ) {\n\t\t\tthis.element = this.template.render() as TElement;\n\n\t\t\t// Auto–register view children from #template.\n\t\t\tthis.registerChild( this.template.getViews() );\n\t\t}\n\n\t\tthis.isRendered = true;\n\t}\n\n\t/**\n\t * Recursively destroys the view instance and child views added by {@link #registerChild} and\n\t * residing in collections created by the {@link #createCollection}.\n\t *\n\t * Destruction disables all event listeners:\n\t * * created on the view, e.g. `view.on( 'event', () => {} )`,\n\t * * defined in the {@link #template} for DOM events.\n\t */\n\tpublic destroy(): void {\n\t\tthis.stopListening();\n\n\t\tthis._viewCollections.map( c => c.destroy() );\n\n\t\t// Template isn't obligatory for views.\n\t\tif ( this.template && ( this.template as any )._revertData ) {\n\t\t\tthis.template.revert( this.element! );\n\t\t}\n\t}\n}\n\n/**\n * Event fired by the {@link module:ui/view~View#render} method. Actual rendering is executed as a listener to\n * this event with the default priority.\n *\n * See {@link module:utils/observablemixin~Observable#decorate} for more information and samples.\n *\n * @eventName ~View#render\n */\nexport type UIViewRenderEvent = DecoratedMethodEvent<View, 'render'>;\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/arialiveannouncer\n */\n\nimport type { ViewDomConverter } from '@ckeditor/ckeditor5-engine';\nimport type { Editor } from '@ckeditor/ckeditor5-core';\nimport type { Locale } from '@ckeditor/ckeditor5-utils';\nimport { type ViewCollection } from './viewcollection.js';\nimport { View } from './view.js';\n\nimport '../theme/components/arialiveannouncer/arialiveannouncer.css';\n\n/**\n * The politeness level of an `aria-live` announcement.\n *\n * Available keys are:\n * * `AriaLiveAnnouncerPoliteness.POLITE`,\n * * `AriaLiveAnnouncerPoliteness.ASSERTIVE`\n *\n * [Learn more](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions#Politeness_levels).\n */\nexport const AriaLiveAnnouncerPoliteness = {\n\tPOLITE: 'polite',\n\tASSERTIVE: 'assertive'\n} as const;\n\n/**\n * An accessibility helper that manages all ARIA live regions associated with an editor instance. ARIA live regions announce changes\n * to the state of the editor features.\n *\n * These announcements are consumed and propagated by screen readers and give users a better understanding of the current\n * state of the editor.\n *\n * To announce a state change to an editor use the {@link #announce} method:\n *\n * ```ts\n * editor.ui.ariaLiveAnnouncer.announce( 'Text of an announcement.' );\n * ```\n */\nexport class AriaLiveAnnouncer {\n\t/**\n\t * The editor instance.\n\t */\n\tpublic readonly editor: Editor;\n\n\t/**\n\t * The view that aggregates all `aria-live` regions.\n\t */\n\tpublic view?: AriaLiveAnnouncerView;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor: Editor ) {\n\t\tthis.editor = editor;\n\n\t\t/**\n\t\t * Some screen readers only look at changes in the aria-live region.\n\t\t * They might not read a region that already has content when it is added.\n\t\t * To stop this problem, make sure to set up regions for all politeness settings when the editor starts.\n\t\t */\n\t\teditor.once( 'ready', () => {\n\t\t\tfor ( const politeness of Object.values( AriaLiveAnnouncerPoliteness ) ) {\n\t\t\t\tthis.announce( '', politeness );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Sets an announcement text to an aria region that is then announced by a screen reader to the user.\n\t *\n\t * If the aria region of a specified politeness does not exist, it will be created and can be re-used later.\n\t *\n\t * The default announcement politeness level is `'polite'`.\n\t *\n\t * ```ts\n\t * // Most screen readers will queue announcements from multiple aria-live regions and read them out in the order they were emitted.\n \t * editor.ui.ariaLiveAnnouncer.announce( 'Image uploaded.' );\n \t * editor.ui.ariaLiveAnnouncer.announce( 'Connection lost. Reconnecting.' );\n \t * ```\n\t */\n\tpublic announce(\n\t\tannouncement: string,\n\t\tattributes: AriaLiveAnnouncerPolitenessValue | AriaLiveAnnounceConfig = AriaLiveAnnouncerPoliteness.POLITE\n\t): void {\n\t\tconst editor = this.editor;\n\n\t\tif ( !editor.ui.view ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !this.view ) {\n\t\t\tthis.view = new AriaLiveAnnouncerView( editor.locale );\n\t\t\teditor.ui.view.body.add( this.view );\n\t\t}\n\n\t\tconst { politeness, isUnsafeHTML }: AriaLiveAnnounceConfig = typeof attributes === 'string' ? {\n\t\t\tpoliteness: attributes\n\t\t} : attributes;\n\n\t\tlet politenessRegionView = this.view.regionViews.find( view => view.politeness === politeness );\n\n\t\tif ( !politenessRegionView ) {\n\t\t\tpolitenessRegionView = new AriaLiveAnnouncerRegionView( editor, politeness );\n\t\t\tthis.view.regionViews.add( politenessRegionView );\n\t\t}\n\n\t\tpolitenessRegionView.announce( {\n\t\t\tannouncement,\n\t\t\tisUnsafeHTML\n\t\t} );\n\t}\n}\n\n/**\n * The view that aggregates all `aria-live` regions.\n */\nexport class AriaLiveAnnouncerView extends View {\n\t/**\n\t * A collection of all views that represent individual `aria-live` regions.\n\t */\n\tpublic readonly regionViews: ViewCollection<AriaLiveAnnouncerRegionView>;\n\n\tconstructor( locale: Locale ) {\n\t\tsuper( locale );\n\n\t\tthis.regionViews = this.createCollection();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-aria-live-announcer'\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: this.regionViews\n\t\t} );\n\t}\n}\n\n/**\n * The view that represents a single `aria-live`.\n */\nexport class AriaLiveAnnouncerRegionView extends View {\n\t/**\n\t * Current politeness level of the region.\n\t */\n\tpublic readonly politeness: AriaLiveAnnouncerPolitenessValue;\n\n\t/**\n\t * DOM converter used to sanitize unsafe HTML passed to {@link #announce} method.\n\t */\n\tprivate _domConverter: ViewDomConverter;\n\n\t/**\n\t * Interval used to remove additions. It prevents accumulation of added nodes in region.\n\t */\n\tprivate _pruneAnnouncementsInterval: ReturnType<typeof setInterval> | null;\n\n\tconstructor( editor: Editor, politeness: AriaLiveAnnouncerPolitenessValue ) {\n\t\tsuper( editor.locale );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\t'aria-live': politeness,\n\t\t\t\t'aria-relevant': 'additions'\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'ul',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t\t'ck-aria-live-region-list'\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\teditor.on( 'destroy', () => {\n\t\t\tif ( this._pruneAnnouncementsInterval !== null ) {\n\t\t\t\tclearInterval( this._pruneAnnouncementsInterval! );\n\t\t\t\tthis._pruneAnnouncementsInterval = null;\n\t\t\t}\n\t\t} );\n\n\t\tthis.politeness = politeness;\n\t\tthis._domConverter = editor.data.htmlProcessor.domConverter;\n\t\tthis._pruneAnnouncementsInterval = setInterval( () => {\n\t\t\tif ( this.element && this._listElement!.firstChild ) {\n\t\t\t\tthis._listElement!.firstChild!.remove();\n\t\t\t}\n\t\t}, 5000 );\n\t}\n\n\t/**\n\t * Appends new announcement to region.\n\t */\n\tpublic announce( { announcement, isUnsafeHTML }: AriaLiveAppendContentAttributes ): void {\n\t\tif ( !announcement.trim().length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst messageListItem = document.createElement( 'li' );\n\n\t\tif ( isUnsafeHTML ) {\n\t\t\tthis._domConverter.setContentOf( messageListItem, announcement );\n\t\t} else {\n\t\t\tmessageListItem.innerText = announcement;\n\t\t}\n\n\t\tthis._listElement!.appendChild( messageListItem );\n\t}\n\n\t/**\n\t * Return current announcements list HTML element.\n\t */\n\tprivate get _listElement(): HTMLElement | null {\n\t\treturn this.element!.querySelector( 'ul' )!;\n\t}\n}\n\nexport type AriaLiveAnnouncerPolitenessValue = typeof AriaLiveAnnouncerPoliteness[ keyof typeof AriaLiveAnnouncerPoliteness ];\n\nexport type AriaLiveAppendContentAttributes = {\n\tannouncement: string;\n\tisUnsafeHTML?: boolean;\n};\n\nexport type AriaLiveAnnounceConfig = {\n\tpoliteness: AriaLiveAnnouncerPolitenessValue;\n\tisUnsafeHTML?: boolean;\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/bindings/clickoutsidehandler\n */\n\nimport type { CallbackOptions, DomEmitter } from '@ckeditor/ckeditor5-utils';\n\n/**\n * Handles clicking **outside** of a specified set of elements, then fires an action.\n *\n * **Note**: Actually, the action is executed upon `mousedown`, not `click`. It prevents\n * certain issues when the user keeps holding the mouse button and the UI cannot react\n * properly.\n *\n * @param options Configuration options.\n * @param options.emitter The emitter to which this behavior should be added.\n * @param options.activator Function returning a `Boolean`, to determine whether the handler is active.\n * @param options.contextElements Array of HTML elements or a callback returning an array of HTML elements\n * that determine the scope of the handler. Clicking any of them or their descendants will **not** fire the callback.\n * @param options.callback An action executed by the handler.\n * @param options.listenerOptions Additional options for the listener (like priority).\n */\nexport function clickOutsideHandler(\n\t{ emitter, activator, callback, contextElements, listenerOptions }: {\n\t\temitter: DomEmitter;\n\t\tactivator: () => boolean;\n\t\tcontextElements: Array<Element> | ( () => Array<Element> );\n\t\tcallback: () => void;\n\t\tlistenerOptions?: CallbackOptions;\n\t}\n): void {\n\temitter.listenTo( document, 'mousedown', ( evt, domEvt ) => {\n\t\tif ( !activator() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Check if `composedPath` is `undefined` in case the browser does not support native shadow DOM.\n\t\t// Can be removed when all supported browsers support native shadow DOM.\n\t\tconst path = typeof domEvt.composedPath == 'function' ? domEvt.composedPath() : [];\n\n\t\tconst contextElementsList = typeof contextElements == 'function' ? contextElements() : contextElements;\n\n\t\tfor ( const contextElement of contextElementsList ) {\n\t\t\tif ( contextElement.contains( domEvt.target as Node ) || path.includes( contextElement ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tcallback();\n\t}, listenerOptions );\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/bindings/csstransitiondisablermixin\n */\n\nimport type { Constructor, Mixed } from '@ckeditor/ckeditor5-utils';\n\nimport { type View } from '../view.js';\n\n/**\n * A mixin that brings the possibility to temporarily disable CSS transitions using\n * {@link module:ui/view~View} methods. It is helpful when, for instance, the transitions should not happen\n * when the view is first displayed but they should work normal in other cases.\n *\n * The methods to control the CSS transitions are:\n * * `disableCssTransitions()` – Adds the `.ck-transitions-disabled` class to the\n * {@link module:ui/view~View#element view element}.\n * * `enableCssTransitions()` – Removes the `.ck-transitions-disabled` class from the\n * {@link module:ui/view~View#element view element}.\n *\n * The usage comes down to:\n *\n * ```ts\n * const MyViewWithCssTransitionDisabler = CssTransitionDisablerMixin( MyView );\n * const view = new MyViewWithCssTransitionDisabler();\n *\n * // ...\n *\n * view.disableCssTransitions();\n * view.show();\n * view.enableCssTransitions();\n * ```\n *\n * @param view View instance that should get this functionality.\n */\nexport function CssTransitionDisablerMixin<Base extends Constructor<View>>( view: Base ): Mixed<Base, ViewWithCssTransitionDisabler>\n{\n\tabstract class Mixin extends view {\n\t\tdeclare public _isCssTransitionsDisabled: boolean;\n\n\t\tpublic disableCssTransitions() {\n\t\t\tthis._isCssTransitionsDisabled = true;\n\t\t}\n\n\t\tpublic enableCssTransitions() {\n\t\t\tthis._isCssTransitionsDisabled = false;\n\t\t}\n\n\t\tconstructor( ...args: Array<any> ) {\n\t\t\tsuper( ...args );\n\n\t\t\tthis.set( '_isCssTransitionsDisabled', false );\n\t\t\tthis.initializeCssTransitionDisablerMixin();\n\t\t}\n\n\t\tprotected initializeCssTransitionDisablerMixin(): void {\n\t\t\tif ( this.template ) {\n\t\t\t\tthis.extendTemplate( {\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\tthis.bindTemplate.if( '_isCssTransitionsDisabled', 'ck-transitions-disabled' )\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn Mixin as any;\n}\n\nexport declare class ViewWithCssTransitionDisabler extends View {\n\tpublic disableCssTransitions(): void;\n\tpublic enableCssTransitions(): void;\n\n\tprotected initializeCssTransitionDisablerMixin(): void;\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/bindings/draggableviewmixin\n */\n\nimport { type View } from '../view.js';\nimport { global, type Constructor, type Mixed, type EventInfo } from '@ckeditor/ckeditor5-utils';\n\n/**\n * A mixin that brings the possibility to observe dragging of the view element.\n * The view has to implement the {@link ~DraggableView} interface to use it:\n *\n * ```js\n * export class MyDraggableView extends DraggableViewMixin( View ) implements DraggableView {\n * \t\t// ...\n * }\n * ```\n *\n * Creating a class extending it attaches a set of mouse and touch listeners allowing to observe dragging of the view element:\n * * `mousedown` and `touchstart` on the view element - starting the dragging.\n * * `mousemove` and `touchmove` on the document - updating the view coordinates.\n * * `mouseup` and `touchend` on the document - stopping the dragging.\n *\n * The mixin itself does not provide a visual feedback (that is, the dragged element does not change its position) -\n * it is up to the developer to implement it.\n */\nexport function DraggableViewMixin<Base extends Constructor<View>>( view: Base ): Mixed<Base, DraggableView> {\n\tabstract class DraggableMixin extends view implements DraggableView {\n\t\t/**\n\t\t * A flag indicating whether the view is currently being dragged.\n\t\t *\n\t\t * @observable\n\t\t */\n\t\tdeclare public isDragging: boolean;\n\n\t\t/**\n\t\t * A bound version of {@link #_onDrag}.\n\t\t */\n\t\tprivate _onDragBound = this._onDrag.bind( this );\n\n\t\t/**\n\t\t * A bound version of {@link #_onDragEnd}.\n\t\t */\n\t\tprivate _onDragEndBound = this._onDragEnd.bind( this );\n\n\t\t/**\n\t\t * The last coordinates of the view. It is updated on every mouse move.\n\t\t */\n\t\tprivate _lastDraggingCoordinates: { x: number; y: number } = { x: 0, y: 0 };\n\n\t\t/**\n\t\t * @inheritDoc\n\t\t */\n\t\tconstructor( ...args: Array<any> ) {\n\t\t\tsuper( ...args );\n\n\t\t\tthis.on( 'render', () => {\n\t\t\t\tthis._attachListeners();\n\t\t\t} );\n\n\t\t\tthis.set( 'isDragging', false );\n\t\t}\n\n\t\t/**\n\t\t * Attaches the listeners for the drag start.\n\t\t */\n\t\tprivate _attachListeners() {\n\t\t\tthis.listenTo( this.element!, 'mousedown', this._onDragStart.bind( this ) );\n\t\t\tthis.listenTo( this.element!, 'touchstart', this._onDragStart.bind( this ) );\n\t\t}\n\n\t\t/**\n\t\t * Attaches the listeners for the dragging and drag end.\n\t\t */\n\t\tprivate _attachDragListeners() {\n\t\t\tthis.listenTo( global.document, 'mouseup', this._onDragEndBound );\n\t\t\tthis.listenTo( global.document, 'touchend', this._onDragEndBound );\n\t\t\tthis.listenTo( global.document, 'mousemove', this._onDragBound );\n\t\t\tthis.listenTo( global.document, 'touchmove', this._onDragBound );\n\t\t}\n\n\t\t/**\n\t\t * Detaches the listeners after the drag end.\n\t\t */\n\t\tprivate _detachDragListeners() {\n\t\t\tthis.stopListening( global.document, 'mouseup', this._onDragEndBound );\n\t\t\tthis.stopListening( global.document, 'touchend', this._onDragEndBound );\n\t\t\tthis.stopListening( global.document, 'mousemove', this._onDragBound );\n\t\t\tthis.stopListening( global.document, 'touchmove', this._onDragBound );\n\t\t}\n\n\t\t/**\n\t\t * Starts the dragging listeners and sets the initial view coordinates.\n\t\t */\n\t\tprivate _onDragStart( evt: EventInfo, domEvt: MouseEvent | TouchEvent ) {\n\t\t\tif ( !this._isHandleElementPressed( domEvt ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._attachDragListeners();\n\n\t\t\tlet x = 0;\n\t\t\tlet y = 0;\n\n\t\t\t// If dragging is performed with a mouse, there is only one set of coordinates available.\n\t\t\t// But when using a touch device, there may be many of them, so use the coordinates from the first touch.\n\t\t\tif ( domEvt instanceof MouseEvent ) {\n\t\t\t\tx = domEvt.clientX;\n\t\t\t\ty = domEvt.clientY;\n\t\t\t} else {\n\t\t\t\tx = domEvt.touches[ 0 ].clientX;\n\t\t\t\ty = domEvt.touches[ 0 ].clientY;\n\t\t\t}\n\n\t\t\tthis._lastDraggingCoordinates = { x, y };\n\n\t\t\tthis.isDragging = true;\n\t\t}\n\n\t\t/**\n\t\t * Updates the view coordinates and fires the `drag` event.\n\t\t */\n\t\tprivate _onDrag( evt: EventInfo, domEvt: MouseEvent | TouchEvent ) {\n\t\t\t// If dragging was stopped by some external intervention, stop listening.\n\t\t\tif ( !this.isDragging ) {\n\t\t\t\tthis._detachDragListeners();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet newX = 0;\n\t\t\tlet newY = 0;\n\n\t\t\t// If dragging is performed with a mouse, there is only one set of coordinates available.\n\t\t\t// But when using a touch device, there may be many of them, so use the coordinates from the first touch.\n\t\t\tif ( domEvt instanceof MouseEvent ) {\n\t\t\t\tnewX = domEvt.clientX;\n\t\t\t\tnewY = domEvt.clientY;\n\t\t\t} else {\n\t\t\t\tnewX = domEvt.touches[ 0 ].clientX;\n\t\t\t\tnewY = domEvt.touches[ 0 ].clientY;\n\t\t\t}\n\n\t\t\t// Prevents selection of text while dragging on Safari.\n\t\t\tdomEvt.preventDefault();\n\n\t\t\tthis.fire<DraggableViewDragEvent>( 'drag', {\n\t\t\t\tdeltaX: Math.round( newX - this._lastDraggingCoordinates.x ),\n\t\t\t\tdeltaY: Math.round( newY - this._lastDraggingCoordinates.y )\n\t\t\t} );\n\n\t\t\tthis._lastDraggingCoordinates = { x: newX, y: newY };\n\t\t}\n\n\t\t/**\n\t\t * Stops the dragging and detaches the listeners.\n\t\t */\n\t\tprivate _onDragEnd() {\n\t\t\tthis._detachDragListeners();\n\n\t\t\tthis.isDragging = false;\n\t\t}\n\n\t\t/**\n\t\t * Checks if the drag handle element was pressed.\n\t\t */\n\t\tprivate _isHandleElementPressed( domEvt: MouseEvent | TouchEvent ) {\n\t\t\tif ( !this.dragHandleElement ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn this.dragHandleElement === domEvt.target ||\n\t\t\t\t( domEvt.target instanceof HTMLElement && this.dragHandleElement.contains( domEvt.target ) );\n\t\t}\n\n\t\tpublic abstract get dragHandleElement(): HTMLElement | null;\n\t}\n\n\treturn DraggableMixin as any;\n}\n\n/**\n * An interface that should be implemented by views that want to be draggable.\n */\nexport interface DraggableView extends View {\n\tget dragHandleElement(): HTMLElement | null;\n}\n\n/**\n * An event data object for the {@link ~DraggableView} `drag` event. Fired when the view is dragged.\n */\nexport type DraggableViewDragEvent = {\n\tname: 'drag';\n\targs: [ {\n\t\tdeltaX: number;\n\t\tdeltaY: number;\n\t} ];\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/bindings/submithandler\n */\n\nimport { type View } from '../view.js';\n\n/**\n * A handler useful for {@link module:ui/view~View views} working as HTML forms. It intercepts a native DOM\n * `submit` event, prevents the default web browser behavior (navigation and page reload) and\n * fires the `submit` event on a view instead. Such a custom event can be then used by any\n * {@link module:utils/dom/emittermixin~DomEmitter emitter}, e.g. to serialize the form data.\n *\n * ```ts\n * import { submitHandler } from '@ckeditor/ckeditor5-ui/src/bindings/submithandler';\n *\n * // ...\n *\n * class AnyFormView extends View {\n * \tconstructor() {\n * \t\tsuper();\n *\n * \t\t// ...\n *\n * \t\tsubmitHandler( {\n * \t\t\tview: this\n * \t\t} );\n * \t}\n * }\n *\n * // ...\n *\n * const view = new AnyFormView();\n *\n * // A sample listener attached by an emitter working with the view.\n * this.listenTo( view, 'submit', () => {\n * \tsaveTheFormData();\n * \thideTheForm();\n * } );\n * ```\n *\n * @param options Configuration options.\n * @param options.view The view which DOM `submit` events should be handled.\n */\nexport function submitHandler( { view }: { view: View } ): void {\n\tview.listenTo( view.element!, 'submit', ( evt, domEvt ) => {\n\t\tdomEvt.preventDefault();\n\t\tview.fire<SubmitHandlerEvent>( 'submit' );\n\t}, { useCapture: true } );\n}\n\n/**\n * Fired by {@link module:ui/bindings/submithandler~submitHandler} helper.\n *\n * @eventName module:ui/view~View#submit\n */\nexport type SubmitHandlerEvent = {\n\tname: 'submit';\n\targs: [];\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/bindings/addkeyboardhandlingforgrid\n */\n\nimport type { FocusTracker, KeystrokeHandler } from '@ckeditor/ckeditor5-utils';\nimport type { FocusableView } from '../focuscycler.js';\nimport { type ViewCollection } from '../viewcollection.js';\n\n/**\n * A helper that adds a keyboard navigation support (arrow up/down/left/right) for grids.\n *\n * @param options Configuration options.\n * @param options.keystrokeHandler Keystroke handler to register navigation with arrow keys.\n * @param options.focusTracker A focus tracker for grid elements.\n * @param options.gridItems A collection of grid items.\n * @param options.numberOfColumns Number of columns in the grid. Can be specified as a function that returns\n * the number (e.g. for responsive grids).\n * @param options.uiLanguageDirection String of ui language direction.\n */\nexport function addKeyboardHandlingForGrid(\n\t{ keystrokeHandler, focusTracker, gridItems, numberOfColumns, uiLanguageDirection }: {\n\t\tkeystrokeHandler: KeystrokeHandler;\n\t\tfocusTracker: FocusTracker;\n\t\tgridItems: ViewCollection;\n\t\tnumberOfColumns: number | ( () => number );\n\t\tuiLanguageDirection?: string;\n\t}\n): void {\n\tconst getNumberOfColumns = typeof numberOfColumns === 'number' ? () => numberOfColumns : numberOfColumns;\n\n\tkeystrokeHandler.set( 'arrowright', getGridItemFocuser( ( focusedElementIndex, gridItems ) => {\n\t\treturn uiLanguageDirection === 'rtl' ?\n\t\t\tgetLeftElementIndex( focusedElementIndex, gridItems.length ) :\n\t\t\tgetRightElementIndex( focusedElementIndex, gridItems.length );\n\t} ) );\n\n\tkeystrokeHandler.set( 'arrowleft', getGridItemFocuser( ( focusedElementIndex, gridItems ) => {\n\t\treturn uiLanguageDirection === 'rtl' ?\n\t\t\tgetRightElementIndex( focusedElementIndex, gridItems.length ) :\n\t\t\tgetLeftElementIndex( focusedElementIndex, gridItems.length );\n\t} ) );\n\n\tkeystrokeHandler.set( 'arrowup', getGridItemFocuser( ( focusedElementIndex, gridItems ) => {\n\t\tlet nextIndex = focusedElementIndex - getNumberOfColumns();\n\n\t\tif ( nextIndex < 0 ) {\n\t\t\tnextIndex = focusedElementIndex + getNumberOfColumns() * Math.floor( gridItems.length / getNumberOfColumns() );\n\n\t\t\tif ( nextIndex > gridItems.length - 1 ) {\n\t\t\t\tnextIndex -= getNumberOfColumns();\n\t\t\t}\n\t\t}\n\n\t\treturn nextIndex;\n\t} ) );\n\n\tkeystrokeHandler.set( 'arrowdown', getGridItemFocuser( ( focusedElementIndex, gridItems ) => {\n\t\tlet nextIndex = focusedElementIndex + getNumberOfColumns();\n\n\t\tif ( nextIndex > gridItems.length - 1 ) {\n\t\t\tnextIndex = focusedElementIndex % getNumberOfColumns();\n\t\t}\n\n\t\treturn nextIndex;\n\t} ) );\n\n\tfunction getGridItemFocuser( getIndexToFocus: ( focusedElementIndex: number, gridItems: ViewCollection ) => number ) {\n\t\treturn ( evt: KeyboardEvent ) => {\n\t\t\tconst focusedElement = gridItems.find( item => item.element === focusTracker.focusedElement );\n\t\t\tconst focusedElementIndex = gridItems.getIndex( focusedElement! );\n\t\t\tconst nextIndexToFocus = getIndexToFocus( focusedElementIndex, gridItems );\n\n\t\t\t( gridItems.get( nextIndexToFocus ) as FocusableView ).focus();\n\n\t\t\tevt.stopPropagation();\n\t\t\tevt.preventDefault();\n\t\t};\n\t}\n\n\t/**\n\t * Function returning the next index.\n\t *\n\t * ```\n\t * before: [ ][x][ ]\tafter: [ ][ ][x]\n\t * index = 1            index = 2\n\t * ```\n\t *\n\t * If current index is last, function returns first index.\n\t *\n\t * ```\n\t * before: [ ][ ][x]\tafter: [x][ ][ ]\n\t * index = 2            index = 0\n\t * ```\n\t *\n\t * @param elementIndex Number of current index.\n\t * @param collectionLength A count of collection items.\n\t */\n\tfunction getRightElementIndex( elementIndex: number, collectionLength: number ) {\n\t\tif ( elementIndex === collectionLength - 1 ) {\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn elementIndex + 1;\n\t\t}\n\t}\n\n\t/**\n\t * Function returning the previous index.\n\t *\n\t * ```\n\t * before: [ ][x][ ]\tafter: [x][ ][ ]\n\t * index = 1            index = 0\n\t * ```\n\t *\n\t * If current index is first, function returns last index.\n\t *\n\t * ```\n\t * before: [x][ ][ ]\tafter: [ ][ ][x]\n\t * index = 0            index = 2\n\t * ```\n\t *\n\t * @param elementIndex Number of current index.\n\t * @param collectionLength A count of collection items.\n\t */\n\tfunction getLeftElementIndex( elementIndex: number, collectionLength: number ) {\n\t\tif ( elementIndex === 0 ) {\n\t\t\treturn collectionLength - 1;\n\t\t} else {\n\t\t\treturn elementIndex - 1;\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/label/labelview\n */\n\nimport { View } from '../view.js';\n\nimport { uid, type Locale } from '@ckeditor/ckeditor5-utils';\n\nimport '../../theme/components/label/label.css';\n\n/**\n * The label view class.\n */\nexport class LabelView extends View {\n\t/**\n\t * An unique id of the label. It can be used by other UI components to reference\n\t * the label, for instance, using the `aria-describedby` DOM attribute.\n\t */\n\tpublic readonly id: string;\n\n\t/**\n\t * The text of the label.\n\t *\n\t * @observable\n\t */\n\tdeclare public text: string | undefined;\n\n\t/**\n\t * The `for` attribute of the label (i.e. to pair with an `<input>` element).\n\t *\n\t * @observable\n\t */\n\tdeclare public for: string | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale?: Locale ) {\n\t\tsuper( locale );\n\n\t\tthis.set( 'text', undefined );\n\t\tthis.set( 'for', undefined );\n\n\t\tthis.id = `ck-editor__label_${ uid() }`;\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'label',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-label'\n\t\t\t\t],\n\t\t\t\tid: this.id,\n\t\t\t\tfor: bind.to( 'for' )\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttext: bind.to( 'text' )\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/editorui/accessibilityhelp/accessibilityhelpcontentview\n */\n\nimport {\n\tcreateElement,\n\tenv,\n\tgetEnvKeystrokeText,\n\ttype Locale\n} from '@ckeditor/ckeditor5-utils';\n\nimport { View } from '../../view.js';\nimport { LabelView } from '../../label/labelview.js';\nimport type {\n\tKeystrokeInfoCategoryDefinition,\n\tKeystrokeInfoDefinition,\n\tKeystrokeInfoDefinitions,\n\tKeystrokeInfoGroupDefinition\n} from '@ckeditor/ckeditor5-core';\n\n/**\n * The view displaying keystrokes in the Accessibility help dialog.\n */\nexport class AccessibilityHelpContentView extends View<HTMLDivElement> {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale: Locale, keystrokes: KeystrokeInfoDefinitions ) {\n\t\tsuper( locale );\n\n\t\tconst t = locale.t;\n\t\tconst helpLabel = new LabelView();\n\n\t\thelpLabel.text = t( 'Help Contents. To close this dialog press ESC.' );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [ 'ck', 'ck-accessibility-help-dialog__content' ],\n\t\t\t\t'aria-labelledby': helpLabel.id,\n\t\t\t\trole: 'document',\n\t\t\t\ttabindex: -1\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\tcreateElement( document, 'p', {}, t( 'Below, you can find a list of keyboard shortcuts that can be used in the editor.' ) ),\n\t\t\t\t...this._createCategories( Array.from( keystrokes.values() ) ),\n\t\t\t\thelpLabel\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic focus(): void {\n\t\tthis.element!.focus();\n\t}\n\n\t/**\n\t * Creates `<section><h3>Category label</h3>...</section>` elements for each category of keystrokes.\n\t */\n\tprivate _createCategories( categories: Array<KeystrokeInfoCategoryDefinition> ): Array<HTMLElement> {\n\t\treturn categories.map( categoryDefinition => {\n\t\t\tconst elements: Array<HTMLElement> = [\n\t\t\t\t// Category header.\n\t\t\t\tcreateElement( document, 'h3', {}, categoryDefinition.label ),\n\n\t\t\t\t// Category definitions (<dl>) and their optional headers (<h4>).\n\t\t\t\t...Array.from( categoryDefinition.groups.values() )\n\t\t\t\t\t.map( groupDefinition => this._createGroup( groupDefinition ) )\n\t\t\t\t\t.flat()\n\t\t\t];\n\n\t\t\t// Category description (<p>).\n\t\t\tif ( categoryDefinition.description ) {\n\t\t\t\telements.splice( 1, 0, createElement( document, 'p', {}, categoryDefinition.description ) );\n\t\t\t}\n\n\t\t\treturn createElement( document, 'section', {}, elements );\n\t\t} );\n\t}\n\n\t/**\n\t * Creates `[<h4>Optional label</h4>]<dl>...</dl>` elements for each group of keystrokes in a category.\n\t */\n\tprivate _createGroup( groupDefinition: KeystrokeInfoGroupDefinition ): Array<HTMLElement> {\n\t\tconst definitionAndDescriptionElements = groupDefinition.keystrokes\n\t\t\t.sort( ( a, b ) => a.label.localeCompare( b.label ) )\n\t\t\t.map( keystrokeDefinition => this._createGroupRow( keystrokeDefinition ) )\n\t\t\t.flat();\n\n\t\tconst elements: Array<HTMLElement> = [\n\t\t\tcreateElement( document, 'dl', {}, definitionAndDescriptionElements )\n\t\t];\n\n\t\tif ( groupDefinition.label ) {\n\t\t\telements.unshift( createElement( document, 'h4', {}, groupDefinition.label ) );\n\t\t}\n\n\t\treturn elements;\n\t}\n\n\t/**\n\t * Creates `<dt>Keystroke label</dt><dd>Keystroke definition</dd>` elements for each keystroke in a group.\n\t */\n\tprivate _createGroupRow( keystrokeDefinition: KeystrokeInfoDefinition ): [ HTMLElement, HTMLElement ] {\n\t\tconst t = this.locale!.t;\n\t\tconst dt = createElement( document, 'dt' );\n\t\tconst dd = createElement( document, 'dd' );\n\t\tconst normalizedKeystrokeDefinition = normalizeKeystrokeDefinition( keystrokeDefinition.keystroke );\n\t\tconst keystrokeAlternativeHTMLs = [];\n\n\t\tfor ( const keystrokeAlternative of normalizedKeystrokeDefinition ) {\n\t\t\tkeystrokeAlternativeHTMLs.push( keystrokeAlternative.map( keystrokeToEnvKbd ).join( '' ) );\n\t\t}\n\n\t\tdt.innerHTML = keystrokeDefinition.label;\n\t\tdd.innerHTML = keystrokeAlternativeHTMLs.join( ', ' ) +\n\t\t\t( keystrokeDefinition.mayRequireFn && env.isMac ? ` ${ t( '(may require <kbd>Fn</kbd>)' ) }` : '' );\n\n\t\treturn [ dt, dd ];\n\t}\n}\n\nfunction keystrokeToEnvKbd( keystroke: string ): string {\n\treturn getEnvKeystrokeText( keystroke )\n\t\t.split( '+' )\n\t\t.map( part => `<kbd>${ part }</kbd>` )\n\t\t.join( '+' );\n}\n\nfunction normalizeKeystrokeDefinition( definition: KeystrokeInfoDefinition[ 'keystroke' ] ): Array<Array<string>> {\n\tif ( typeof definition === 'string' ) {\n\t\treturn [ [ definition ] ];\n\t}\n\n\tif ( typeof definition[ 0 ] === 'string' ) {\n\t\treturn [ definition as Array<string> ];\n\t}\n\n\treturn definition as Array<Array<string>>;\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/icon/iconview\n */\n\nimport { View } from '../view.js';\n\nimport { CKEditorError, type ObservableChangeEvent } from '@ckeditor/ckeditor5-utils';\n\nimport '../../theme/components/icon/icon.css';\n\n/**\n * The icon view class.\n */\nexport class IconView extends View {\n\t/**\n\t * The SVG source of the icon.\n\t *\n\t * The user must provide the entire XML string, not just the path. See the\n\t * {@glink framework/architecture/ui-library#setting-label-icon-and-tooltip UI library} guide for details.\n\t *\n\t * @observable\n\t */\n\tdeclare public content: string | undefined;\n\n\t/**\n\t * This attribute specifies the boundaries to which the\n\t * icon content should stretch.\n\t *\n\t * @observable\n\t * @default '0 0 20 20'\n\t */\n\tdeclare public viewBox: string;\n\n\t/**\n\t * The fill color of the child `path.ck-icon__fill`.\n\t *\n\t * @observable\n\t * @default ''\n\t */\n\tdeclare public fillColor: string;\n\n\t/**\n\t * When set true (default), all parts of the icon inherit the fill color from the CSS `color` property of the\n\t * icon's DOM parent.\n\t *\n\t * This effectively makes the icon monochromatic and allows it to change its fill color dynamically, for instance,\n\t * when a {@link module:ui/button/buttonview~ButtonView} displays an icon and it switches between different states\n\t * (pushed, hovered, etc.) the icon will follow along.\n\t *\n\t * **Note**: For the monochromatic icon to render properly, it must be made up of shapes that can be filled\n\t * with color instead of, for instance, paths with strokes. Be sure to use the *outline stroke* tool\n\t * (the name could be different in your vector graphics editor) before exporting your icon. Also, remove any\n\t * excess `fill=\"...\"` attributes that could break the color inheritance.\n\t *\n\t * **Note**: If you want to preserve the original look of your icon and disable dynamic color inheritance,\n\t * set this flag to `false`.\n\t *\n\t * @observable\n\t * @default true\n\t */\n\tdeclare public isColorInherited: boolean;\n\n\t/**\n\t * Controls whether the icon is visible.\n\t *\n\t * @observable\n\t * @default true\n\t */\n\tdeclare public isVisible: boolean;\n\n\t/**\n\t * A list of presentational attributes that can be set on the `<svg>` element and should be preserved\n\t * when the icon {@link module:ui/icon/iconview~IconView#content content} is loaded.\n\t *\n\t * See the [specification](https://www.w3.org/TR/SVG/styling.html#TermPresentationAttribute) to learn more.\n\t */\n\tprivate static presentationalAttributeNames: Array<string> = [\n\t\t'alignment-baseline', 'baseline-shift', 'clip-path', 'clip-rule', 'color', 'color-interpolation',\n\t\t'color-interpolation-filters', 'color-rendering', 'cursor', 'direction', 'display', 'dominant-baseline', 'fill', 'fill-opacity',\n\t\t'fill-rule', 'filter', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style',\n\t\t'font-variant', 'font-weight', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start',\n\t\t'mask', 'opacity', 'overflow', 'paint-order', 'pointer-events', 'shape-rendering', 'stop-color', 'stop-opacity', 'stroke',\n\t\t'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width',\n\t\t'text-anchor', 'text-decoration', 'text-overflow', 'text-rendering', 'transform', 'unicode-bidi', 'vector-effect',\n\t\t'visibility', 'white-space', 'word-spacing', 'writing-mode'\n\t];\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.set( 'content', '' );\n\t\tthis.set( 'viewBox', '0 0 20 20' );\n\t\tthis.set( 'fillColor', '' );\n\t\tthis.set( 'isColorInherited', true );\n\t\tthis.set( 'isVisible', true );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'svg',\n\t\t\tns: 'http://www.w3.org/2000/svg',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-icon',\n\t\t\t\t\tbind.if( 'isVisible', 'ck-hidden', value => !value ),\n\n\t\t\t\t\t// Exclude icon internals from the CSS reset to allow rich (non-monochromatic) icons\n\t\t\t\t\t// (https://github.com/ckeditor/ckeditor5/issues/12599).\n\t\t\t\t\t'ck-reset_all-excluded',\n\n\t\t\t\t\t// The class to remove the dynamic color inheritance is toggleable\n\t\t\t\t\t// (https://github.com/ckeditor/ckeditor5/issues/12599).\n\t\t\t\t\tbind.if( 'isColorInherited', 'ck-icon_inherit-color' )\n\t\t\t\t],\n\t\t\t\tviewBox: bind.to( 'viewBox' ),\n\t\t\t\t'aria-hidden': true\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tthis._updateXMLContent();\n\t\tthis._colorFillPaths();\n\n\t\t// This is a hack for lack of innerHTML binding.\n\t\t// See: https://github.com/ckeditor/ckeditor5-ui/issues/99.\n\t\tthis.on<ObservableChangeEvent>( 'change:content', () => {\n\t\t\tthis._updateXMLContent();\n\t\t\tthis._colorFillPaths();\n\t\t} );\n\n\t\tthis.on<ObservableChangeEvent>( 'change:fillColor', () => {\n\t\t\tthis._colorFillPaths();\n\t\t} );\n\t}\n\n\t/**\n\t * Updates the {@link #element} with the value of {@link #content}.\n\t */\n\tprivate _updateXMLContent() {\n\t\tif ( this.content ) {\n\t\t\tconst parsed = new DOMParser().parseFromString( this.content.trim(), 'image/svg+xml' );\n\t\t\tconst svg = parsed.querySelector( 'svg' );\n\n\t\t\tif ( !svg ) {\n\t\t\t\t/**\n\t\t\t\t * The provided icon content is not a valid SVG.\n\t\t\t\t *\n\t\t\t\t * @error ui-iconview-invalid-svg\n\t\t\t\t */\n\t\t\t\tthrow new CKEditorError( 'ui-iconview-invalid-svg', this );\n\t\t\t}\n\n\t\t\tconst viewBox = svg.getAttribute( 'viewBox' );\n\n\t\t\tif ( viewBox ) {\n\t\t\t\tthis.viewBox = viewBox;\n\t\t\t}\n\n\t\t\t// Preserve presentational attributes of the <svg> element from the source.\n\t\t\t// They can affect rendering of the entire icon (https://github.com/ckeditor/ckeditor5/issues/12597).\n\t\t\tfor ( const { name, value } of Array.from( svg.attributes ) ) {\n\t\t\t\tif ( IconView.presentationalAttributeNames.includes( name ) ) {\n\t\t\t\t\tthis.element!.setAttribute( name, value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile ( this.element!.firstChild ) {\n\t\t\t\tthis.element!.removeChild( this.element!.firstChild );\n\t\t\t}\n\n\t\t\twhile ( svg.childNodes.length > 0 ) {\n\t\t\t\tthis.element!.appendChild( svg.childNodes[ 0 ] );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Fills all child `path.ck-icon__fill` with the `#fillColor`.\n\t */\n\tprivate _colorFillPaths() {\n\t\tif ( this.fillColor ) {\n\t\t\tthis.element!.querySelectorAll( '.ck-icon__fill' ).forEach( path => {\n\t\t\t\t( path as HTMLElement ).style.fill = this.fillColor;\n\t\t\t} );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/button/buttonlabelview\n */\n\nimport { View } from '../view.js';\nimport { type ButtonLabel } from './buttonlabel.js';\n\n/**\n * A default implementation of the button view's label. It comes with a dynamic text support\n * via {@link module:ui/button/buttonlabelview~ButtonLabelView#text} property.\n */\nexport class ButtonLabelView extends View implements ButtonLabel {\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public id: string | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public style: string | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public text: string | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.set( {\n\t\t\tstyle: undefined,\n\t\t\ttext: undefined,\n\t\t\tid: undefined\n\t\t} );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'span',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-button__label'\n\t\t\t\t],\n\t\t\t\tstyle: bind.to( 'style' ),\n\t\t\t\tid: bind.to( 'id' )\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttext: bind.to( 'text' )\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/button/buttonview\n */\n\nimport { View } from '../view.js';\nimport { IconView } from '../icon/iconview.js';\n\nimport type { TemplateDefinition } from '../template.js';\nimport { type ViewCollection } from '../viewcollection.js';\nimport type { Button, ButtonExecuteEvent } from './button.js';\nimport { type ButtonLabel } from './buttonlabel.js';\nimport { ButtonLabelView } from './buttonlabelview.js';\n\nimport {\n\tenv,\n\tgetEnvKeystrokeText,\n\tuid,\n\tdelay,\n\ttype Locale,\n\ttype DelayedFunc\n} from '@ckeditor/ckeditor5-utils';\n\nimport '../../theme/components/button/button.css';\n\n/**\n * The button view class.\n *\n * ```ts\n * const view = new ButtonView();\n *\n * view.set( {\n * \tlabel: 'A button',\n * \tkeystroke: 'Ctrl+B',\n * \ttooltip: true,\n * \twithText: true\n * } );\n *\n * view.render();\n *\n * document.body.append( view.element );\n * ```\n */\nexport class ButtonView extends View<HTMLButtonElement> implements Button {\n\t/**\n\t * Collection of the child views inside of the button {@link #element}.\n\t */\n\tpublic readonly children: ViewCollection;\n\n\t/**\n\t * Label of the button view. Its text is configurable using the {@link #label label attribute}.\n\t *\n\t * If not configured otherwise in the `constructor()`, by default the label is an instance\n\t * of {@link module:ui/button/buttonlabelview~ButtonLabelView}.\n\t */\n\tpublic readonly labelView: ButtonLabel;\n\n\t/**\n\t * The icon view of the button. Will be added to {@link #children} when the\n\t * {@link #icon icon attribute} is defined.\n\t */\n\tpublic readonly iconView: IconView;\n\n\t/**\n\t * A view displaying the keystroke of the button next to the {@link #labelView label}.\n\t * Added to {@link #children} when the {@link #withKeystroke `withKeystroke` attribute}\n\t * is defined.\n\t */\n\tpublic readonly keystrokeView: View;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public class: string | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public labelStyle: string | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public icon: string | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public isEnabled: boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public isOn: boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public isVisible: boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public isToggleable: boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public keystroke: string | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public label: string | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public tabindex: number;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public tooltip: Button[ 'tooltip' ];\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public tooltipPosition: Button[ 'tooltipPosition' ];\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public type: Button[ 'type' ];\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public withText: boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public withKeystroke: boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public role: string | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public ariaLabel?: string | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public ariaLabelledBy: string | undefined;\n\n\t/**\n\t * Aria-pressed attribute of element. It is calculated based on {@link #isToggleable isToggleable} and {@link #role}.\n\t * It's set to true if the button is on and the role is not checkable.\n\t *\n\t * @readonly\n\t * @internal\n\t */\n\tdeclare public _ariaPressed: string | false;\n\n\t/**\n\t * Aria-checked attribute of element. It is calculated based on {@link #isToggleable isToggleable} and {@link #role}.\n\t * It's set to true if the button is on and the role is checkable.\n\t *\n\t * @readonly\n\t * @internal\n\t */\n\tdeclare public _ariaChecked: string | false;\n\n\t/**\n\t * Tooltip of the button bound to the template.\n\t *\n\t * @see #tooltip\n\t * @see module:ui/button/buttonview~ButtonView#_getTooltipString\n\t * @internal\n\t * @observable\n\t */\n\tdeclare public _tooltipString: string;\n\n\t/**\n\t * Delayed focus function for focus handling in Safari.\n\t */\n\tprivate _focusDelayed: DelayedFunc<() => void> | null = null;\n\n\t/**\n\t * Creates an instance of the button view class.\n\t *\n\t * @param locale The {@link module:core/editor/editor~Editor#locale} instance.\n\t * @param labelView The instance of the button's label. If not provided, an instance of\n\t * {@link module:ui/button/buttonlabelview~ButtonLabelView} is used.\n\t */\n\tconstructor( locale?: Locale, labelView: ButtonLabel = new ButtonLabelView() ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\t\tconst ariaLabelUid = uid();\n\n\t\t// Implement the Button interface.\n\t\tthis.set( '_ariaPressed', false );\n\t\tthis.set( '_ariaChecked', false );\n\t\tthis.set( 'ariaLabel', undefined );\n\t\tthis.set( 'ariaLabelledBy', `ck-editor__aria-label_${ ariaLabelUid }` );\n\t\tthis.set( 'class', undefined );\n\t\tthis.set( 'labelStyle', undefined );\n\t\tthis.set( 'icon', undefined );\n\t\tthis.set( 'isEnabled', true );\n\t\tthis.set( 'isOn', false );\n\t\tthis.set( 'isVisible', true );\n\t\tthis.set( 'isToggleable', false );\n\t\tthis.set( 'keystroke', undefined );\n\t\tthis.set( 'label', undefined );\n\t\tthis.set( 'role', undefined );\n\t\tthis.set( 'tabindex', -1 );\n\t\tthis.set( 'tooltip', false );\n\t\tthis.set( 'tooltipPosition', 's' );\n\t\tthis.set( 'type', 'button' );\n\t\tthis.set( 'withText', false );\n\t\tthis.set( 'withKeystroke', false );\n\n\t\tthis.children = this.createCollection();\n\t\tthis.labelView = this._setupLabelView( labelView );\n\n\t\tthis.iconView = new IconView();\n\t\tthis.iconView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-button__icon'\n\t\t\t}\n\t\t} );\n\t\tthis.iconView.bind( 'content' ).to( this, 'icon' );\n\n\t\tthis.keystrokeView = this._createKeystrokeView();\n\n\t\tthis.bind( '_tooltipString' ).to(\n\t\t\tthis, 'tooltip',\n\t\t\tthis, 'label',\n\t\t\tthis, 'keystroke',\n\t\t\tthis._getTooltipString.bind( this )\n\t\t);\n\n\t\tconst template: TemplateDefinition & { on: object } = {\n\t\t\ttag: 'button',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-button',\n\t\t\t\t\tbind.to( 'class' ),\n\t\t\t\t\tbind.if( 'isEnabled', 'ck-disabled', value => !value ),\n\t\t\t\t\tbind.if( 'isVisible', 'ck-hidden', value => !value ),\n\t\t\t\t\tbind.to( 'isOn', value => value ? 'ck-on' : 'ck-off' ),\n\t\t\t\t\tbind.if( 'withText', 'ck-button_with-text' ),\n\t\t\t\t\tbind.if( 'withKeystroke', 'ck-button_with-keystroke' )\n\t\t\t\t],\n\t\t\t\trole: bind.to( 'role' ),\n\t\t\t\ttype: bind.to( 'type', value => value ? value : 'button' ),\n\t\t\t\ttabindex: bind.to( 'tabindex' ),\n\t\t\t\t'aria-checked': bind.to( '_ariaChecked' ),\n\t\t\t\t'aria-pressed': bind.to( '_ariaPressed' ),\n\t\t\t\t'aria-label': bind.to( 'ariaLabel' ),\n\t\t\t\t'aria-labelledby': bind.to( 'ariaLabelledBy' ),\n\t\t\t\t'aria-disabled': bind.if( 'isEnabled', true, value => !value ),\n\t\t\t\t'data-cke-tooltip-text': bind.to( '_tooltipString' ),\n\t\t\t\t'data-cke-tooltip-position': bind.to( 'tooltipPosition' )\n\t\t\t},\n\n\t\t\tchildren: this.children,\n\n\t\t\ton: {\n\t\t\t\tclick: bind.to( evt => {\n\t\t\t\t\t// We can't make the button disabled using the disabled attribute, because it won't be focusable.\n\t\t\t\t\t// Though, shouldn't this condition be moved to the button controller?\n\t\t\t\t\tif ( this.isEnabled ) {\n\t\t\t\t\t\tthis.fire<ButtonExecuteEvent>( 'execute' );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Prevent the default when button is disabled, to block e.g.\n\t\t\t\t\t\t// automatic form submitting. See ckeditor/ckeditor5-link#74.\n\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t}\n\t\t};\n\n\t\tthis.bind( '_ariaPressed' ).to(\n\t\t\tthis, 'isOn', this, 'isToggleable', this, 'role',\n\t\t\t( isOn, isToggleable, role ) => {\n\t\t\t\tif ( !isToggleable || isCheckableRole( role ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn String( !!isOn );\n\t\t\t}\n\t\t);\n\n\t\tthis.bind( '_ariaChecked' ).to(\n\t\t\tthis, 'isOn', this, 'isToggleable', this, 'role',\n\t\t\t( isOn, isToggleable, role ) => {\n\t\t\t\tif ( !isToggleable || !isCheckableRole( role ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn String( !!isOn );\n\t\t\t}\n\t\t);\n\n\t\t// On Safari we have to force the focus on a button on click as it's the only browser\n\t\t// that doesn't do that automatically. See #12115.\n\t\tif ( env.isSafari ) {\n\t\t\tif ( !this._focusDelayed ) {\n\t\t\t\tthis._focusDelayed = delay( () => this.focus(), 0 );\n\t\t\t}\n\n\t\t\ttemplate.on.mousedown = bind.to( () => {\n\t\t\t\tthis._focusDelayed!();\n\t\t\t} );\n\n\t\t\ttemplate.on.mouseup = bind.to( () => {\n\t\t\t\tthis._focusDelayed!.cancel();\n\t\t\t} );\n\t\t}\n\n\t\tthis.setTemplate( template );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tif ( this.icon ) {\n\t\t\tthis.children.add( this.iconView );\n\t\t}\n\n\t\tthis.on( 'change:icon', ( evt, prop, newIcon, oldIcon ) => {\n\t\t\tif ( newIcon && !oldIcon ) {\n\t\t\t\tthis.children.add( this.iconView, 0 );\n\t\t\t} else if ( !newIcon && oldIcon ) {\n\t\t\t\tthis.children.remove( this.iconView );\n\t\t\t}\n\t\t} );\n\n\t\tthis.children.add( this.labelView );\n\n\t\tif ( this.withKeystroke && this.keystroke ) {\n\t\t\tthis.children.add( this.keystrokeView );\n\t\t}\n\t}\n\n\t/**\n\t * Focuses the {@link #element} of the button.\n\t */\n\tpublic focus(): void {\n\t\tthis.element!.focus();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tif ( this._focusDelayed ) {\n\t\t\tthis._focusDelayed.cancel();\n\t\t}\n\n\t\tsuper.destroy();\n\t}\n\n\t/**\n\t * Binds the label view instance it with button attributes.\n\t */\n\tprivate _setupLabelView( labelView: ButtonLabelView ) {\n\t\tlabelView.bind( 'text', 'style', 'id' ).to( this, 'label', 'labelStyle', 'ariaLabelledBy' );\n\n\t\treturn labelView;\n\t}\n\n\t/**\n\t * Creates a view that displays a keystroke next to a {@link #labelView label }\n\t * and binds it with button attributes.\n\t */\n\tprivate _createKeystrokeView() {\n\t\tconst keystrokeView = new View();\n\n\t\tkeystrokeView.setTemplate( {\n\t\t\ttag: 'span',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-button__keystroke'\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttext: this.bindTemplate.to( 'keystroke', text => getEnvKeystrokeText( text! ) )\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\treturn keystrokeView;\n\t}\n\n\t/**\n\t * Gets the text for the tooltip from the combination of\n\t * {@link #tooltip}, {@link #label} and {@link #keystroke} attributes.\n\t *\n\t * @see #tooltip\n\t * @see #_tooltipString\n\t * @param tooltip Button tooltip.\n\t * @param label Button label.\n\t * @param keystroke Button keystroke.\n\t */\n\tprivate _getTooltipString(\n\t\ttooltip: Button[ 'tooltip' ],\n\t\tlabel: string | undefined,\n\t\tkeystroke: string | undefined\n\t): string {\n\t\tif ( tooltip ) {\n\t\t\tif ( typeof tooltip == 'string' ) {\n\t\t\t\treturn tooltip;\n\t\t\t} else {\n\t\t\t\tif ( keystroke ) {\n\t\t\t\t\tkeystroke = getEnvKeystrokeText( keystroke );\n\t\t\t\t}\n\n\t\t\t\tif ( tooltip instanceof Function ) {\n\t\t\t\t\treturn tooltip( label!, keystroke );\n\t\t\t\t} else {\n\t\t\t\t\treturn `${ label }${ keystroke ? ` (${ keystroke })` : '' }`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn '';\n\t}\n}\n\n/**\n * Checks if `aria-checkbox` can be used with specified role.\n */\nfunction isCheckableRole( role: string | undefined ) {\n\tswitch ( role ) {\n\t\tcase 'radio':\n\t\tcase 'checkbox':\n\t\tcase 'option':\n\t\tcase 'switch':\n\t\tcase 'menuitemcheckbox':\n\t\tcase 'menuitemradio':\n\t\t\treturn true;\n\n\t\tdefault:\n\t\t\treturn false;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/formheader/formheaderview\n */\n\nimport { View } from '../view.js';\nimport { type ViewCollection } from '../viewcollection.js';\nimport { IconView } from '../icon/iconview.js';\n\nimport type { Locale } from '@ckeditor/ckeditor5-utils';\n\nimport '../../theme/components/formheader/formheader.css';\n\n/**\n * The class component representing a form header view. It should be used in more advanced forms to\n * describe the main purpose of the form.\n *\n * By default the component contains a bolded label view that has to be set. The label is usually a short (at most 3-word) string.\n * The component can also be extended by any other elements, like: icons, dropdowns, etc.\n *\n * It is used i.a.\n * by {@link module:table/tablecellproperties/ui/tablecellpropertiesview~TableCellPropertiesView}.\n *\n * The latter is an example, where the component has been extended by {@link module:ui/dropdown/dropdownview~DropdownView} view.\n */\nexport class FormHeaderView extends View {\n\t/**\n\t * A collection of header items.\n\t */\n\tpublic readonly children: ViewCollection;\n\n\t/**\n\t * The label of the header.\n\t *\n\t * @observable\n\t */\n\tpublic declare label: string;\n\n\t/**\n\t * An additional CSS class added to the {@link #element}.\n\t *\n\t * @observable\n\t */\n\tpublic declare class: string | null;\n\n\t/**\n\t * The icon view instance. Defined only if icon was passed in the constructor's options.\n\t */\n\tpublic readonly iconView?: IconView;\n\n\t/**\n\t * Creates an instance of the form header class.\n\t *\n\t * @param locale The locale instance.\n\t * @param options.label A label.\n\t * @param options.class An additional class.\n\t */\n\tconstructor(\n\t\tlocale: Locale | undefined,\n\t\toptions: {\n\t\t\tlabel?: string | null;\n\t\t\tclass?: string | null;\n\t\t\ticon?: string | null;\n\t\t} = {}\n\t) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.set( 'label', options.label || '' );\n\t\tthis.set( 'class', options.class || null );\n\n\t\tthis.children = this.createCollection();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-form__header',\n\t\t\t\t\tbind.to( 'class' )\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: this.children\n\t\t} );\n\n\t\tif ( options.icon ) {\n\t\t\tthis.iconView = new IconView();\n\t\t\tthis.iconView.content = options.icon;\n\n\t\t\tthis.children.add( this.iconView );\n\t\t}\n\n\t\tconst label = new View( locale );\n\n\t\tlabel.setTemplate( {\n\t\t\ttag: 'h2',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-form__header__label'\n\t\t\t\t],\n\t\t\t\trole: 'presentation'\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{ text: bind.to( 'label' ) }\n\t\t\t]\n\t\t} );\n\n\t\tthis.children.add( label );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/focuscycler\n */\n\nimport {\n\tisVisible,\n\tEmitterMixin,\n\ttype ArrayOrItem,\n\ttype FocusTracker,\n\ttype KeystrokeHandler,\n\ttype KeystrokeHandlerOptions\n} from '@ckeditor/ckeditor5-utils';\n\nimport { type View } from './view.js';\nimport { type ViewCollection } from './viewcollection.js';\n\n/**\n * A utility class that helps cycling over {@link module:ui/focuscycler~FocusableView focusable views} in a\n * {@link module:ui/viewcollection~ViewCollection} when the focus is tracked by the\n * {@link module:utils/focustracker~FocusTracker} instance. It helps implementing keyboard\n * navigation in HTML forms, toolbars, lists and the like.\n *\n * To work properly it requires:\n * * a collection of focusable (HTML `tabindex` attribute) views that implement the `focus()` method,\n * * an associated focus tracker to determine which view is focused.\n *\n * A simple cycler setup can look like this:\n *\n * ```ts\n * const focusables = new ViewCollection<FocusableView>();\n * const focusTracker = new FocusTracker();\n *\n * // Add focusable views to the focus tracker.\n * focusTracker.add( ... );\n * ```\n *\n * Then, the cycler can be used manually:\n *\n * ```ts\n * const cycler = new FocusCycler( { focusables, focusTracker } );\n *\n * // Will focus the first focusable view in #focusables.\n * cycler.focusFirst();\n *\n * // Will log the next focusable item in #focusables.\n * console.log( cycler.next );\n * ```\n *\n * Alternatively, it can work side by side with the {@link module:utils/keystrokehandler~KeystrokeHandler}:\n *\n * ```ts\n * const keystrokeHandler = new KeystrokeHandler();\n *\n * // Activate the keystroke handler.\n * keystrokeHandler.listenTo( sourceOfEvents );\n *\n * const cycler = new FocusCycler( {\n * \tfocusables, focusTracker, keystrokeHandler,\n * \tactions: {\n * \t\t// When arrowup of arrowleft is detected by the #keystrokeHandler,\n * \t\t// focusPrevious() will be called on the cycler.\n * \t\tfocusPrevious: [ 'arrowup', 'arrowleft' ],\n * \t}\n * } );\n * ```\n *\n * Check out the {@glink framework/deep-dive/ui/focus-tracking \"Deep dive into focus tracking\"} guide to learn more.\n */\nexport class FocusCycler extends /* #__PURE__ */ EmitterMixin() {\n\t/**\n\t * A {@link module:ui/focuscycler~FocusableView focusable views} collection that the cycler operates on.\n\t */\n\tpublic readonly focusables: ViewCollection<FocusableView>;\n\n\t/**\n\t * A focus tracker instance that the cycler uses to determine the current focus\n\t * state in {@link #focusables}.\n\t */\n\tpublic readonly focusTracker: FocusTracker;\n\n\t/**\n\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}\n\t * which can respond to certain keystrokes and cycle the focus.\n\t */\n\tpublic readonly keystrokeHandler?: KeystrokeHandler;\n\n\t/**\n\t * Actions that the cycler can take when a keystroke is pressed. Requires\n\t * `options.keystrokeHandler` to be passed and working. When an action is\n\t * performed, `preventDefault` and `stopPropagation` will be called on the event\n\t * the keystroke fired in the DOM.\n\t *\n\t * ```ts\n\t * actions: {\n\t * \t// Will call #focusPrevious() when arrowleft or arrowup is pressed.\n\t * \tfocusPrevious: [ 'arrowleft', 'arrowup' ],\n\t *\n\t * \t// Will call #focusNext() when arrowdown is pressed.\n\t * \tfocusNext: 'arrowdown'\n\t * }\n\t * ```\n\t */\n\tpublic readonly actions?: FocusCyclerActions;\n\n\t/**\n\t * Creates an instance of the focus cycler utility.\n\t *\n\t * @param options Configuration options.\n\t */\n\tconstructor( options: {\n\t\tfocusables: ViewCollection<FocusableView>;\n\t\tfocusTracker: FocusTracker;\n\t\tkeystrokeHandler?: KeystrokeHandler;\n\t\tkeystrokeHandlerOptions?: KeystrokeHandlerOptions;\n\t\tactions?: FocusCyclerActions;\n\t} ) {\n\t\tsuper();\n\n\t\tthis.focusables = options.focusables;\n\t\tthis.focusTracker = options.focusTracker;\n\t\tthis.keystrokeHandler = options.keystrokeHandler;\n\t\tthis.actions = options.actions;\n\n\t\tif ( options.actions && options.keystrokeHandler ) {\n\t\t\tfor ( const methodName in options.actions ) {\n\t\t\t\tlet actions = options.actions[ methodName as keyof FocusCyclerActions ]!;\n\n\t\t\t\tif ( typeof actions == 'string' ) {\n\t\t\t\t\tactions = [ actions ];\n\t\t\t\t}\n\n\t\t\t\tfor ( const keystroke of actions ) {\n\t\t\t\t\toptions.keystrokeHandler.set( keystroke, ( data, cancel ) => {\n\t\t\t\t\t\tthis[ methodName as keyof FocusCyclerActions ]();\n\t\t\t\t\t\tcancel();\n\t\t\t\t\t}, options.keystrokeHandlerOptions );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.on<FocusCyclerForwardCycleEvent>( 'forwardCycle', () => this.focusFirst(), { priority: 'low' } );\n\t\tthis.on<FocusCyclerBackwardCycleEvent>( 'backwardCycle', () => this.focusLast(), { priority: 'low' } );\n\t}\n\n\t/**\n\t * Returns the first focusable view in {@link #focusables}.\n\t * Returns `null` if there is none.\n\t *\n\t * **Note**: Hidden views (e.g. with `display: none`) are ignored.\n\t */\n\tpublic get first(): FocusableView | null {\n\t\treturn ( this.focusables.find( isDomFocusable ) || null ) as FocusableView | null;\n\t}\n\n\t/**\n\t * Returns the last focusable view in {@link #focusables}.\n\t * Returns `null` if there is none.\n\t *\n\t * **Note**: Hidden views (e.g. with `display: none`) are ignored.\n\t */\n\tpublic get last(): FocusableView | null {\n\t\treturn ( this.focusables.filter( isDomFocusable ).slice( -1 )[ 0 ] || null ) as FocusableView | null;\n\t}\n\n\t/**\n\t * Returns the next focusable view in {@link #focusables} based on {@link #current}.\n\t * Returns `null` if there is none.\n\t *\n\t * **Note**: Hidden views (e.g. with `display: none`) are ignored.\n\t */\n\tpublic get next(): FocusableView | null {\n\t\treturn this._getDomFocusableItem( 1 );\n\t}\n\n\t/**\n\t * Returns the previous focusable view in {@link #focusables} based on {@link #current}.\n\t * Returns `null` if there is none.\n\t *\n\t * **Note**: Hidden views (e.g. with `display: none`) are ignored.\n\t */\n\tpublic get previous(): FocusableView | null {\n\t\treturn this._getDomFocusableItem( -1 );\n\t}\n\n\t/**\n\t * An index of the view in the {@link #focusables} which is focused according\n\t * to {@link #focusTracker}. Returns `null` when there is no such view.\n\t */\n\tpublic get current(): number | null {\n\t\tlet index: number | null = null;\n\n\t\t// There's no focused view in the focusables.\n\t\tif ( this.focusTracker.focusedElement === null ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tthis.focusables.find( ( view, viewIndex ) => {\n\t\t\tconst focused = view.element === this.focusTracker.focusedElement;\n\n\t\t\tif ( focused ) {\n\t\t\t\tindex = viewIndex;\n\t\t\t}\n\n\t\t\treturn focused;\n\t\t} );\n\n\t\treturn index;\n\t}\n\n\t/**\n\t * Focuses the {@link #first} item in {@link #focusables}.\n\t *\n\t * **Note**: Hidden views (e.g. with `display: none`) are ignored.\n\t */\n\tpublic focusFirst(): void {\n\t\tthis._focus( this.first, 1 );\n\t}\n\n\t/**\n\t * Focuses the {@link #last} item in {@link #focusables}.\n\t *\n\t * **Note**: Hidden views (e.g. with `display: none`) are ignored.\n\t */\n\tpublic focusLast(): void {\n\t\tthis._focus( this.last, -1 );\n\t}\n\n\t/**\n\t * Focuses the {@link #next} item in {@link #focusables}.\n\t *\n\t * **Note**: Hidden views (e.g. with `display: none`) are ignored.\n\t */\n\tpublic focusNext(): void {\n\t\tconst next = this.next;\n\n\t\t// If there's only one focusable item, we need to let the outside world know\n\t\t// that the next cycle is about to happen. This may be useful\n\t\t// e.g. if you want to move the focus to the parent focus cycler.\n\t\t// Note that the focus is not actually moved in this case.\n\t\tif ( next && this.focusables.getIndex( next ) === this.current ) {\n\t\t\tthis.fire<FocusCyclerForwardCycleEvent>( 'forwardCycle' );\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( next === this.first ) {\n\t\t\tthis.fire<FocusCyclerForwardCycleEvent>( 'forwardCycle' );\n\t\t} else {\n\t\t\tthis._focus( next, 1 );\n\t\t}\n\t}\n\n\t/**\n\t * Focuses the {@link #previous} item in {@link #focusables}.\n\t *\n\t * **Note**: Hidden views (e.g. with `display: none`) are ignored.\n\t */\n\tpublic focusPrevious(): void {\n\t\tconst previous = this.previous;\n\n\t\tif ( previous && this.focusables.getIndex( previous ) === this.current ) {\n\t\t\tthis.fire<FocusCyclerBackwardCycleEvent>( 'backwardCycle' );\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( previous === this.last ) {\n\t\t\tthis.fire<FocusCyclerBackwardCycleEvent>( 'backwardCycle' );\n\t\t} else {\n\t\t\tthis._focus( previous, -1 );\n\t\t}\n\t}\n\n\t/**\n\t * Allows for creating continuous focus cycling across multiple focus cyclers and their collections of {@link #focusables}.\n\t *\n\t * It starts listening to the {@link module:ui/focuscycler~FocusCyclerForwardCycleEvent} and\n\t * {@link module:ui/focuscycler~FocusCyclerBackwardCycleEvent} events of the chained focus cycler and engages,\n\t * whenever the user reaches the last (forwards navigation) or first (backwards navigation) focusable view\n\t * and would normally start over. Instead, the navigation continues on the higher level (flattens).\n\t *\n\t * For instance, for the following nested focus navigation structure, the focus would get stuck the moment\n\t * the AB gets focused and its focus cycler starts managing it:\n\t *\n\t *\t   ┌────────────┐   ┌──────────────────────────────────┐   ┌────────────┐\n\t *\t   │ AA         │   │ AB                               │   │ AC         │\n\t *\t   │            │   │                                  │   │            │\n\t *\t   │            │   │    ┌─────┐  ┌─────┐  ┌─────┐     │   │            │\n\t *\t   │            │   │ ┌──► ABA ├──► ABB ├──► ABC ├───┐ │   │            │\n\t *\t   │            ├───► │  └─────┘  └─────┘  └─────┘   │ │   │            │\n\t *\t   │            │   │ │                              │ │   │            │\n\t *\t   │            │   │ │                              │ │   │            │\n\t *\t   │            │   │ └──────────────────────────────┘ │   │            │\n\t *\t   │            │   │                                  │   │            │\n\t *\t   └────────────┘   └──────────────────────────────────┘   └────────────┘\n\t *\n\t * Chaining a focus tracker that manages AA, AB, and AC with the focus tracker that manages ABA, ABB, and ABC\n\t * creates a seamless navigation experience instead:\n\t *\n\t *\t   ┌────────────┐   ┌──────────────────────────────────┐   ┌────────────┐\n\t *\t   │ AA         │   │ AB                               │   │ AC         │\n\t *\t   │            │   │                                  │   │            │\n\t *\t   │            │   │    ┌─────┐  ┌─────┐  ┌─────┐     │   │            │\n\t *\t   │            │   │ ┌──► ABA ├──► ABB ├──► ABC ├──┐  │   │            │\n\t *\t┌──►            ├───┼─┘  └─────┘  └─────┘  └─────┘  └──┼───►            ├──┐\n\t *\t│  │            │   │                                  │   │            │  │\n\t *\t│  │            │   │                                  │   │            │  │\n\t *\t│  │            │   │                                  │   │            │  │\n\t *\t│  │            │   │                                  │   │            │  │\n\t *\t│  └────────────┘   └──────────────────────────────────┘   └────────────┘  │\n\t *\t│                                                                          │\n\t *\t│                                                                          │\n\t *\t└──────────────────────────────────────────────────────────────────────────┘\n\t *\n\t * See {@link #unchain} to reverse the chaining.\n\t */\n\tpublic chain( chainedFocusCycler: FocusCycler ): void {\n\t\tconst getCurrentFocusedView = () => {\n\t\t\t// This may happen when one focus cycler does not include focusables of the other (horizontal case).\n\t\t\tif ( this.current === null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn this.focusables.get( this.current );\n\t\t};\n\n\t\tthis.listenTo<FocusCyclerForwardCycleEvent>( chainedFocusCycler, 'forwardCycle', evt => {\n\t\t\tconst oldCurrent = getCurrentFocusedView();\n\n\t\t\tthis.focusNext();\n\n\t\t\t// Stop the event propagation only if an attempt at focusing the view actually moved the focus.\n\t\t\t// If not, let the otherFocusCycler handle the event.\n\t\t\tif ( oldCurrent !== getCurrentFocusedView() ) {\n\t\t\t\tevt.stop();\n\t\t\t}\n\n\t\t// The priority is critical for cycling across multiple chain levels when there's a single view at some of them only.\n\t\t}, { priority: 'low' } );\n\n\t\tthis.listenTo<FocusCyclerBackwardCycleEvent>( chainedFocusCycler, 'backwardCycle', evt => {\n\t\t\tconst oldCurrent = getCurrentFocusedView();\n\n\t\t\tthis.focusPrevious();\n\n\t\t\t// Stop the event propagation only if an attempt at focusing the view actually moved the focus.\n\t\t\t// If not, let the otherFocusCycler handle the event.\n\t\t\tif ( oldCurrent !== getCurrentFocusedView() ) {\n\t\t\t\tevt.stop();\n\t\t\t}\n\n\t\t// The priority is critical for cycling across multiple chain levels when there's a single view at some of them only.\n\t\t}, { priority: 'low' } );\n\t}\n\n\t/**\n\t * Reverses a chaining made by {@link #chain}.\n\t */\n\tpublic unchain( otherFocusCycler: FocusCycler ): void {\n\t\tthis.stopListening( otherFocusCycler );\n\t}\n\n\t/**\n\t * Focuses the given view if it exists.\n\t *\n\t * @param view The view to be focused\n\t * @param direction The direction of the focus if the view has focusable children.\n\t * @returns\n\t */\n\tprivate _focus( view: FocusableView | null, direction: 1 | -1 ) {\n\t\t// Don't fire focus events if the view is already focused.\n\t\t// Such attempt may occur when cycling with only one focusable item:\n\t\t// even though `focusNext()` method returns without changing focus,\n\t\t// the `forwardCycle` event is fired, triggering the `focusFirst()` method.\n\t\tif ( view && this.focusTracker.focusedElement !== view.element ) {\n\t\t\tview.focus( direction );\n\t\t}\n\t}\n\n\t/**\n\t * Returns the next or previous focusable view in {@link #focusables} with respect\n\t * to {@link #current}.\n\t *\n\t * @param step Either `1` for checking forward from {@link #current} or `-1` for checking backwards.\n\t */\n\tprivate _getDomFocusableItem( step: 1 | -1 ): FocusableView | null {\n\t\t// Cache for speed.\n\t\tconst collectionLength = this.focusables.length;\n\n\t\tif ( !collectionLength ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst current = this.current;\n\n\t\t// Start from the beginning if no view is focused.\n\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/206\n\t\tif ( current === null ) {\n\t\t\treturn this[ step === 1 ? 'first' : 'last' ];\n\t\t}\n\n\t\t// Note: If current is the only focusable view, it will also be returned for the given step.\n\t\tlet focusableItem = this.focusables.get( current )!;\n\n\t\t// Cycle in both directions.\n\t\tlet index = ( current + collectionLength + step ) % collectionLength;\n\n\t\tdo {\n\t\t\tconst focusableItemCandidate = this.focusables.get( index )!;\n\n\t\t\tif ( isDomFocusable( focusableItemCandidate ) ) {\n\t\t\t\tfocusableItem = focusableItemCandidate;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Cycle in both directions.\n\t\t\tindex = ( index + collectionLength + step ) % collectionLength;\n\t\t} while ( index !== current );\n\n\t\treturn focusableItem;\n\t}\n}\n\n/**\n * A {@link module:ui/view~View} that can be focused (e.g. has `focus()` method).\n */\nexport type FocusableView = View & {\n\n\t/**\n\t * Focuses the view.\n\t *\n\t * @param direction This optional parameter helps improve the UX by providing additional information about the direction the focus moved\n\t * (e.g. in a complex view or a form). It is useful for views that host multiple focusable children (e.g. lists, toolbars):\n\t * * `1` indicates that the focus moved forward and, in most cases, the first child of the focused view should get focused,\n\t * * `-1` indicates that the focus moved backwards, and the last focusable child should get focused\n\t *\n\t * See {@link module:ui/focuscycler~FocusCycler#event:forwardCycle} and {@link module:ui/focuscycler~FocusCycler#event:backwardCycle}\n\t * to learn more.\n\t */\n\tfocus( direction?: 1 | -1 ): void;\n};\n\n/**\n * A {@link module:ui/view~View} that hosts one or more of focusable children being managed by a {@link module:ui/focuscycler~FocusCycler}\n * instance exposed under `focusCycler` property.\n */\nexport type ViewWithFocusCycler = FocusableView & {\n\tfocusCycler: FocusCycler;\n};\n\nexport type FocusCyclerActions = {\n\t[ key in 'focusFirst' | 'focusLast' | 'focusPrevious' | 'focusNext' ]?: ArrayOrItem<string>\n};\n\n/**\n * Fired when the focus cycler is about to move the focus from the last focusable item\n * to the first one.\n *\n * @eventName ~FocusCycler#forwardCycle\n */\nexport type FocusCyclerForwardCycleEvent = {\n\tname: 'forwardCycle';\n\targs: [];\n};\n\n/**\n * Fired when the focus cycler is about to move the focus from the first focusable item\n * to the last one.\n *\n * @eventName ~FocusCycler#backwardCycle\n */\nexport type FocusCyclerBackwardCycleEvent = {\n\tname: 'backwardCycle';\n\targs: [];\n};\n\n/**\n * Checks whether a view can be focused (has `focus()` method and is visible).\n *\n * @param view A view to be checked.\n */\nfunction isDomFocusable( view: View ) {\n\treturn isFocusable( view ) && isVisible( view.element );\n}\n\n/**\n * Checks whether a view is {@link ~FocusableView}.\n *\n * @param view A view to be checked.\n */\nexport function isFocusable( view: View ): view is FocusableView {\n\treturn !!( 'focus' in view && typeof view.focus == 'function' );\n}\n\n/**\n * Checks whether a view is an instance of {@link ~ViewWithFocusCycler}.\n *\n * @param view A view to be checked.\n */\nexport function isViewWithFocusCycler( view: View ): view is ViewWithFocusCycler {\n\treturn isFocusable( view ) && 'focusCycler' in view && view.focusCycler instanceof FocusCycler;\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/dialog/dialogactionsview\n */\n\nimport {\n\tFocusTracker,\n\tKeystrokeHandler,\n\ttype Locale\n} from '@ckeditor/ckeditor5-utils';\nimport type { Button, ButtonExecuteEvent } from '../button/button.js';\nimport { ButtonView } from '../button/buttonview.js';\nimport { View } from '../view.js';\nimport { ViewCollection } from '../viewcollection.js';\nimport { FocusCycler, type FocusableView } from '../focuscycler.js';\n\nimport '../../theme/components/dialog/dialogactions.css';\n\n/**\n * A dialog actions view class. It contains button views which are used to execute dialog actions.\n */\nexport class DialogActionsView extends View {\n\t/**\n\t * A collection of button views.\n\t */\n\tpublic readonly children: ViewCollection<FocusableView>;\n\n\t/**\n\t * A keystroke handler instance.\n\t */\n\tpublic readonly keystrokes: KeystrokeHandler;\n\n\t/**\n\t * A focus cycler instance.\n\t */\n\tpublic readonly focusCycler: FocusCycler;\n\n\t/**\n\t * A focus tracker instance.\n\t */\n\tprivate readonly _focusTracker: FocusTracker;\n\n\t/**\n\t * A collection of focusable views.\n\t */\n\tprivate readonly _focusables: ViewCollection<FocusableView>;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale?: Locale ) {\n\t\tsuper( locale );\n\n\t\tthis.children = this.createCollection<ButtonView>();\n\t\tthis.keystrokes = new KeystrokeHandler();\n\t\tthis._focusTracker = new FocusTracker();\n\t\tthis._focusables = new ViewCollection();\n\t\tthis.focusCycler = new FocusCycler( {\n\t\t\tfocusables: this._focusables,\n\t\t\tfocusTracker: this._focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate form fields backwards using the Shift + Tab keystroke.\n\t\t\t\tfocusPrevious: 'shift + tab',\n\n\t\t\t\t// Navigate form fields forwards using the Tab key.\n\t\t\t\tfocusNext: 'tab'\n\t\t\t}\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-dialog__actions'\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: this.children\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tthis.keystrokes.listenTo( this.element! );\n\t}\n\n\t/**\n\t * Creates the button views based on the given definitions.\n\t * Then adds them to the {@link #children} collection and to the focus cycler.\n\t */\n\tpublic setButtons( definitions: Array<DialogActionButtonDefinition> ): void {\n\t\tfor ( const definition of definitions ) {\n\t\t\tconst button = new ButtonView( this.locale );\n\n\t\t\tlet property: keyof DialogActionButtonDefinition;\n\t\t\tbutton.on<ButtonExecuteEvent>( 'execute', () => definition.onExecute() );\n\n\t\t\tif ( definition.onCreate ) {\n\t\t\t\tdefinition.onCreate( button );\n\t\t\t}\n\n\t\t\tfor ( property in definition ) {\n\t\t\t\tif ( property != 'onExecute' && property != 'onCreate' ) {\n\t\t\t\t\tbutton.set( property, definition[ property ] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.children.add( button );\n\t\t}\n\n\t\tthis._updateFocusCyclableItems();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic focus( direction?: 1 | -1 ): void {\n\t\tif ( direction === -1 ) {\n\t\t\tthis.focusCycler.focusLast();\n\t\t} else {\n\t\t\tthis.focusCycler.focusFirst();\n\t\t}\n\t}\n\n\t/**\n\t * Adds all elements from the {@link #children} collection to the {@link #_focusables} collection\n\t * and to the {@link #_focusTracker} instance.\n\t */\n\tprivate _updateFocusCyclableItems() {\n\t\tArray.from( this.children ).forEach( v => {\n\t\t\tthis._focusables.add( v );\n\t\t\tthis._focusTracker.add( v.element! );\n\t\t} );\n\t}\n}\n\n/**\n * A dialog action button definition. It is a slightly modified version\n * of the {@link module:ui/button/button~Button} definition.\n */\nexport type DialogActionButtonDefinition =\n\tPick<Button, 'label'> &\n\tPartial<Pick<Button, 'withText' | 'class' | 'icon'>> &\n\t{\n\t\tonExecute: Function;\n\t\tonCreate?: ( button: ButtonView ) => void;\n\t};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/dialog/dialogcontentview\n */\n\nimport { View } from '../view.js';\nimport { type ViewCollection } from '../viewcollection.js';\n\nimport type { Locale } from '@ckeditor/ckeditor5-utils';\n\n/**\n * A dialog content view class.\n */\nexport class DialogContentView extends View {\n\t/**\n\t * A collection of content items.\n\t */\n\tpublic readonly children: ViewCollection;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor(\n\t\tlocale: Locale | undefined\n\t) {\n\t\tsuper( locale );\n\n\t\tthis.children = this.createCollection();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [ 'ck', 'ck-dialog__content' ]\n\t\t\t},\n\t\t\tchildren: this.children\n\t\t} );\n\t}\n\n\t/**\n\t * Removes all the child views.\n\t */\n\tpublic reset(): void {\n\t\twhile ( this.children.length ) {\n\t\t\tthis.children.remove( 0 );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/dialog/dialogview\n */\n\nimport {\n\tKeystrokeHandler,\n\tFocusTracker,\n\tRect,\n\tglobal,\n\ttoUnit,\n\ttype EventInfo,\n\ttype Locale,\n\ttype DecoratedMethodEvent,\n\ttype KeystrokeHandlerOptions\n} from '@ckeditor/ckeditor5-utils';\nimport { IconCancel } from '@ckeditor/ckeditor5-icons';\nimport { ViewCollection } from '../viewcollection.js';\nimport { View } from '../view.js';\nimport { FormHeaderView } from '../formheader/formheaderview.js';\nimport { ButtonView } from '../button/buttonview.js';\nimport { type ButtonExecuteEvent } from '../button/button.js';\nimport { FocusCycler, isViewWithFocusCycler,\n\ttype FocusableView,\n\tisFocusable\n}\n\tfrom '../focuscycler.js';\nimport { DraggableViewMixin, type DraggableView, type DraggableViewDragEvent } from '../bindings/draggableviewmixin.js';\nimport { DialogActionsView, type DialogActionButtonDefinition } from './dialogactionsview.js';\nimport { DialogContentView } from './dialogcontentview.js';\nimport { type EditorUI } from '../editorui/editorui.js';\n\nimport '../../theme/components/dialog/dialog.css';\n// @if CK_DEBUG_DIALOG // const RectDrawer = require( '@ckeditor/ckeditor5-utils/tests/_utils/rectdrawer' ).default;\n\n/**\n * Available dialog view positions:\n *\n * * `DialogViewPosition.SCREEN_CENTER` &ndash; A fixed position in the center of the screen.\n * * `DialogViewPosition.EDITOR_CENTER` &ndash; A dynamic position in the center of the editor editable area.\n * * `DialogViewPosition.EDITOR_TOP_SIDE` &ndash; A dynamic position at the top-right (for the left-to-right languages)\n * or top-left (for right-to-left languages) corner of the editor editable area.\n * * `DialogViewPosition.EDITOR_TOP_CENTER` &ndash; A dynamic position at the top-center of the editor editable area.\n * * `DialogViewPosition.EDITOR_BOTTOM_CENTER` &ndash; A dynamic position at the bottom-center of the editor editable area.\n * * `DialogViewPosition.EDITOR_ABOVE_CENTER` &ndash; A dynamic position centered above the editor editable area.\n * * `DialogViewPosition.EDITOR_BELOW_CENTER` &ndash; A dynamic position centered below the editor editable area.\n *\n * The position of a dialog is specified by a {@link module:ui/dialog/dialog~DialogDefinition#position `position` property} of a\n * definition passed to the {@link module:ui/dialog/dialog~Dialog#show} method.\n */\nexport const DialogViewPosition = {\n\tSCREEN_CENTER: 'screen-center',\n\tEDITOR_CENTER: 'editor-center',\n\tEDITOR_TOP_SIDE: 'editor-top-side',\n\tEDITOR_TOP_CENTER: 'editor-top-center',\n\tEDITOR_BOTTOM_CENTER: 'editor-bottom-center',\n\tEDITOR_ABOVE_CENTER: 'editor-above-center',\n\tEDITOR_BELOW_CENTER: 'editor-below-center'\n} as const;\n\nconst toPx = /* #__PURE__ */ toUnit( 'px' );\n\n/**\n * A dialog view class.\n */\nexport class DialogView extends /* #__PURE__ */ DraggableViewMixin( View ) implements DraggableView {\n\t/**\n\t * A collection of the child views inside of the dialog.\n\t * A dialog can have 3 optional parts: header, content, and actions.\n\t */\n\tpublic readonly parts: ViewCollection;\n\n\t/**\n\t * A header view of the dialog. It is also a drag handle of the dialog.\n\t */\n\tpublic headerView?: FormHeaderView;\n\n\t/**\n\t * A close button view. It is automatically added to the header view if present.\n\t */\n\tpublic closeButtonView?: ButtonView;\n\n\t/**\n\t * A view with the action buttons available to the user.\n\t */\n\tpublic actionsView?: DialogActionsView;\n\n\t/**\n\t * A default dialog element offset from the reference element (e.g. editor editable area).\n\t */\n\tpublic static defaultOffset: number = 15;\n\n\t/**\n\t * A view with the dialog content.\n\t */\n\tpublic contentView?: DialogContentView;\n\n\t/**\n\t * A keystroke handler instance.\n\t */\n\tpublic readonly keystrokes: KeystrokeHandler;\n\n\t/**\n\t * A focus tracker instance.\n\t */\n\tpublic readonly focusTracker: FocusTracker;\n\n\t/**\n\t * A flag indicating if the dialog was moved manually. If so, its position\n\t * will not be updated automatically upon window resize or document scroll.\n\t */\n\tpublic wasMoved: boolean = false;\n\n\t/**\n\t * A flag indicating if this dialog view is a modal.\n\t *\n\t * @observable\n\t */\n\tdeclare public isModal: boolean;\n\n\t/**\n\t * A label for the view dialog element to be used by the assistive technologies.\n\t *\n\t * @observable\n\t */\n\tdeclare public ariaLabel: string;\n\n\t/**\n\t * A custom class name to be added to the dialog element.\n\t *\n\t * @observable\n\t */\n\tdeclare public className: string | undefined;\n\n\t/**\n\t * The position of the dialog view.\n\t *\n\t * @observable\n\t */\n\tdeclare public position: typeof DialogViewPosition[ keyof typeof DialogViewPosition ] | null;\n\n\t/**\n\t * A flag indicating that the dialog should be shown. Once set to `true`, the dialog will be shown\n\t * after its position is calculated. Until then, the dialog is transparent and not visible.\n\t *\n\t * See {@link #_isTransparent} property.\n\t *\n\t * @observable\n\t * @internal\n\t */\n\tdeclare public _isVisible: boolean;\n\n\t/**\n\t * A flag indicating if a dialog is transparent. It is used to prevent the dialog from being visible\n\t * before its position is calculated.\n\t *\n\t * @observable\n\t * @internal\n\t */\n\tdeclare public _isTransparent: boolean;\n\n\t/**\n\t * The calculated dialog `top` CSS property used for positioning.\n\t *\n\t * @observable\n\t * @internal\n\t */\n\tdeclare public _top: number;\n\n\t/**\n\t * The calculated dialog `left` CSS property used for positioning.\n\t *\n\t * @observable\n\t * @internal\n\t */\n\tdeclare public _left: number;\n\n\t/**\n\t * A callback returning the DOM root that requested the dialog.\n\t */\n\tprivate _getCurrentDomRoot: () => HTMLElement;\n\n\t/**\n\t * A callback returning the configured editor viewport offset.\n\t */\n\tprivate _getViewportOffset: () => EditorUI[ 'viewportOffset' ];\n\n\t/**\n\t * The list of the focusable elements inside the dialog view.\n\t */\n\tprivate readonly _focusables: ViewCollection<FocusableView>;\n\n\t/**\n\t * The focus cycler instance.\n\t */\n\tprivate readonly _focusCycler: FocusCycler;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale: Locale,\n\t\t{\n\t\t\tgetCurrentDomRoot,\n\t\t\tgetViewportOffset,\n\t\t\tkeystrokeHandlerOptions\n\t\t}: {\n\t\t\tgetCurrentDomRoot: () => HTMLElement;\n\t\t\tgetViewportOffset: () => EditorUI[ 'viewportOffset' ];\n\t\t\tkeystrokeHandlerOptions?: KeystrokeHandlerOptions;\n\t\t}\n\t) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\t\tconst t = locale.t;\n\n\t\tthis.set( 'className', '' );\n\t\tthis.set( 'ariaLabel', t( 'Editor dialog' ) );\n\t\tthis.set( 'isModal', false );\n\t\tthis.set( 'position', DialogViewPosition.SCREEN_CENTER );\n\t\tthis.set( '_isVisible', false );\n\t\tthis.set( '_isTransparent', false );\n\t\tthis.set( '_top', 0 );\n\t\tthis.set( '_left', 0 );\n\t\tthis._getCurrentDomRoot = getCurrentDomRoot;\n\t\tthis._getViewportOffset = getViewportOffset;\n\n\t\tthis.decorate( 'moveTo' );\n\n\t\tthis.parts = this.createCollection();\n\n\t\tthis.keystrokes = new KeystrokeHandler();\n\t\tthis.focusTracker = new FocusTracker();\n\t\tthis._focusables = new ViewCollection();\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this._focusables,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate form fields backwards using the Shift + Tab keystroke.\n\t\t\t\tfocusPrevious: 'shift + tab',\n\n\t\t\t\t// Navigate form fields forwards using the Tab key.\n\t\t\t\tfocusNext: 'tab'\n\t\t\t},\n\t\t\tkeystrokeHandlerOptions\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-dialog-overlay',\n\t\t\t\t\tbind.if( 'isModal', 'ck-dialog-overlay__transparent', isModal => !isModal ),\n\t\t\t\t\tbind.if( '_isVisible', 'ck-hidden', value => !value )\n\t\t\t\t],\n\t\t\t\t// Prevent from editor losing focus when clicking on the modal overlay.\n\t\t\t\ttabindex: '-1'\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\ttabindex: '-1',\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t\t'ck-dialog',\n\t\t\t\t\t\t\tbind.if( 'isModal', 'ck-dialog_modal' ),\n\t\t\t\t\t\t\tbind.to( 'className' )\n\t\t\t\t\t\t],\n\t\t\t\t\t\trole: 'dialog',\n\t\t\t\t\t\t'aria-label': bind.to( 'ariaLabel' ),\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\ttop: bind.to( '_top', top => toPx( top ) ),\n\t\t\t\t\t\t\tleft: bind.to( '_left', left => toPx( left ) ),\n\t\t\t\t\t\t\tvisibility: bind.if( '_isTransparent', 'hidden' )\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tchildren: this.parts\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tthis.keystrokes.set( 'Esc', ( data, cancel ) => {\n\t\t\t// Do not react to the Esc key if the event has already been handled and defaultPrevented\n\t\t\t// by some logic of the dialog guest (child) view (https://github.com/ckeditor/ckeditor5/issues/17343).\n\t\t\tif ( !data.defaultPrevented ) {\n\t\t\t\tthis.fire<DialogViewCloseEvent>( 'close', { source: 'escKeyPress' } );\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\n\t\t// Support for dragging the modal.\n\t\tthis.on<DraggableViewDragEvent>( 'drag', ( evt: EventInfo, { deltaX, deltaY } ) => {\n\t\t\tthis.wasMoved = true;\n\t\t\tthis.moveBy( deltaX, deltaY );\n\t\t} );\n\n\t\t// Update dialog position upon window resize, if the position was not changed manually.\n\t\tthis.listenTo( global.window, 'resize', () => {\n\t\t\tif ( this._isVisible && !this.wasMoved ) {\n\t\t\t\tthis.updatePosition();\n\t\t\t}\n\t\t} );\n\n\t\t// Update dialog position upon document scroll, if the position was not changed manually.\n\t\tthis.listenTo( global.document, 'scroll', () => {\n\t\t\tif ( this._isVisible && !this.wasMoved ) {\n\t\t\t\tthis.updatePosition();\n\t\t\t}\n\t\t} );\n\n\t\tthis.on( 'change:_isVisible', ( evt, name, isVisible ) => {\n\t\t\tif ( isVisible ) {\n\t\t\t\t// Let the content render first, then apply the position. Otherwise, the calculated DOM Rects\n\t\t\t\t// will not reflect the final look of the dialog. Note that we're not using #_moveOffScreen() here because\n\t\t\t\t// it causes a violent movement of the viewport on iOS (because the dialog still keeps the DOM focus).\n\t\t\t\tthis._isTransparent = true;\n\n\t\t\t\t// FYI: RAF is too short. We need to wait a bit longer.\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tthis.updatePosition();\n\n\t\t\t\t\tthis._isTransparent = false;\n\n\t\t\t\t\t// The view must get the focus after it gets visible. But this is only possible\n\t\t\t\t\t// after the dialog is no longer transparent.\n\t\t\t\t\tthis.focus();\n\t\t\t\t}, 10 );\n\t\t\t}\n\t\t} );\n\n\t\tthis.keystrokes.listenTo( this.element! );\n\t}\n\n\t/**\n\t * Returns the element that should be used as a drag handle.\n\t */\n\tpublic override get dragHandleElement(): HTMLElement | null {\n\t\t// Modals should not be draggable.\n\t\tif ( this.headerView && !this.isModal ) {\n\t\t\treturn this.headerView.element;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Creates the dialog parts. Which of them are created depends on the arguments passed to the method.\n\t * There are no rules regarding the dialog construction, that is, no part is mandatory.\n\t * Each part can only be created once.\n\t *\n\t * @internal\n\t */\n\tpublic setupParts( { icon, title, hasCloseButton = true, content, actionButtons }: {\n\t\ticon?: string;\n\t\ttitle?: string;\n\t\thasCloseButton?: boolean;\n\t\tcontent?: View | Array<View>;\n\t\tactionButtons?: Array<DialogActionButtonDefinition>;\n\t} ): void {\n\t\tif ( title ) {\n\t\t\tthis.headerView = new FormHeaderView( this.locale, { icon } );\n\n\t\t\tif ( hasCloseButton ) {\n\t\t\t\tthis.closeButtonView = this._createCloseButton();\n\t\t\t\tthis.headerView.children.add( this.closeButtonView );\n\t\t\t}\n\n\t\t\tthis.headerView.label = title;\n\t\t\tthis.ariaLabel = title;\n\t\t\tthis.parts.add( this.headerView, 0 );\n\t\t}\n\n\t\tif ( content ) {\n\t\t\t// Normalize the content specified in the arguments.\n\t\t\tif ( content instanceof View ) {\n\t\t\t\tcontent = [ content ];\n\t\t\t}\n\n\t\t\tthis.contentView = new DialogContentView( this.locale );\n\t\t\tthis.contentView.children.addMany( content );\n\t\t\tthis.parts.add( this.contentView );\n\t\t}\n\n\t\tif ( actionButtons ) {\n\t\t\tthis.actionsView = new DialogActionsView( this.locale );\n\t\t\tthis.actionsView.setButtons( actionButtons );\n\t\t\tthis.parts.add( this.actionsView );\n\t\t}\n\n\t\tthis._updateFocusCyclableItems();\n\t}\n\n\t/**\n\t * Focuses the first focusable element inside the dialog.\n\t */\n\tpublic focus(): void {\n\t\tthis._focusCycler.focusFirst();\n\t}\n\n\t/**\n\t * Normalizes the passed coordinates to make sure the dialog view\n\t * is displayed within the visible viewport and moves it there.\n\t *\n\t * @internal\n\t */\n\tpublic moveTo( left: number, top: number ): void {\n\t\tconst viewportRect = this._getViewportRect();\n\t\tconst dialogRect = this._getDialogRect();\n\n\t\t// Don't let the dialog go beyond the right edge of the viewport.\n\t\tif ( left + dialogRect.width > viewportRect.right ) {\n\t\t\tleft = viewportRect.right - dialogRect.width;\n\t\t}\n\n\t\t// Don't let the dialog go beyond the left edge of the viewport.\n\t\tif ( left < viewportRect.left ) {\n\t\t\tleft = viewportRect.left;\n\t\t}\n\n\t\t// Don't let the dialog go beyond the top edge of the viewport.\n\t\tif ( top < viewportRect.top ) {\n\t\t\ttop = viewportRect.top;\n\t\t}\n\n\t\t// Note: We don't do the same for the bottom edge to allow users to resize the window vertically\n\t\t// and let the dialog to stay put instead of covering the editing root.\n\n\t\tthis._moveTo( left, top );\n\t}\n\n\t/**\n\t * Moves the dialog to the specified coordinates.\n\t */\n\tprivate _moveTo( left: number, top: number ): void {\n\t\tthis._left = left;\n\t\tthis._top = top;\n\t}\n\n\t/**\n\t * Moves the dialog by the specified offset.\n\t *\n\t * @internal\n\t */\n\tpublic moveBy( left: number, top: number ): void {\n\t\tthis.moveTo( this._left + left, this._top + top );\n\t}\n\n\t/**\n\t * Moves the dialog view to the off-screen position.\n\t * Used when there is no space to display the dialog.\n\t */\n\tprivate _moveOffScreen(): void {\n\t\tthis._moveTo( -9999, -9999 );\n\t}\n\n\t/**\n\t * Recalculates the dialog according to the set position and viewport,\n\t * and moves it to the new position.\n\t */\n\tpublic updatePosition(): void {\n\t\tif ( !this.element || !this.element.parentNode ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst viewportRect = this._getViewportRect();\n\n\t\t// Actual position may be different from the configured one if there's no DOM root.\n\t\tlet configuredPosition = this.position;\n\t\tlet domRootRect;\n\n\t\tif ( !this._getCurrentDomRoot() ) {\n\t\t\tconfiguredPosition = DialogViewPosition.SCREEN_CENTER;\n\t\t} else {\n\t\t\tdomRootRect = this._getVisibleDomRootRect( viewportRect );\n\t\t}\n\n\t\tconst defaultOffset = DialogView.defaultOffset;\n\t\tconst dialogRect = this._getDialogRect();\n\n\t\t// @if CK_DEBUG_DIALOG // RectDrawer.clear();\n\t\t// @if CK_DEBUG_DIALOG // RectDrawer.draw( viewportRect, { outlineColor: 'blue' }, 'Viewport' );\n\n\t\tswitch ( configuredPosition ) {\n\t\t\tcase DialogViewPosition.EDITOR_TOP_SIDE: {\n\t\t\t\t// @if CK_DEBUG_DIALOG // if ( domRootRect ) {\n\t\t\t\t// @if CK_DEBUG_DIALOG // \tRectDrawer.draw( domRootRect, { outlineColor: 'red', zIndex: 9999999 }, 'DOM ROOT' );\n\t\t\t\t// @if CK_DEBUG_DIALOG // }\n\n\t\t\t\tif ( domRootRect ) {\n\t\t\t\t\tconst leftCoordinate = this.locale!.contentLanguageDirection === 'ltr' ?\n\t\t\t\t\t\tdomRootRect.right - dialogRect.width - defaultOffset :\n\t\t\t\t\t\tdomRootRect.left + defaultOffset;\n\n\t\t\t\t\tthis.moveTo( leftCoordinate, domRootRect.top + defaultOffset );\n\t\t\t\t} else {\n\t\t\t\t\tthis._moveOffScreen();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase DialogViewPosition.EDITOR_CENTER: {\n\t\t\t\tif ( domRootRect ) {\n\t\t\t\t\tthis.moveTo(\n\t\t\t\t\t\tMath.round( domRootRect.left + domRootRect.width / 2 - dialogRect.width / 2 ),\n\t\t\t\t\t\tMath.round( domRootRect.top + domRootRect.height / 2 - dialogRect.height / 2 )\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthis._moveOffScreen();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase DialogViewPosition.SCREEN_CENTER: {\n\t\t\t\tthis.moveTo(\n\t\t\t\t\tMath.round( ( viewportRect.width - dialogRect.width ) / 2 ),\n\t\t\t\t\tMath.round( ( viewportRect.height - dialogRect.height ) / 2 )\n\t\t\t\t);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase DialogViewPosition.EDITOR_TOP_CENTER: {\n\t\t\t\t// @if CK_DEBUG_DIALOG // if ( domRootRect ) {\n\t\t\t\t// @if CK_DEBUG_DIALOG // \tRectDrawer.draw( domRootRect, { outlineColor: 'red', zIndex: 9999999 }, 'DOM ROOT' );\n\t\t\t\t// @if CK_DEBUG_DIALOG // }\n\n\t\t\t\tif ( domRootRect ) {\n\t\t\t\t\tthis.moveTo(\n\t\t\t\t\t\tMath.round( domRootRect.left + domRootRect.width / 2 - dialogRect.width / 2 ),\n\t\t\t\t\t\tdomRootRect.top + defaultOffset\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthis._moveOffScreen();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase DialogViewPosition.EDITOR_BOTTOM_CENTER: {\n\t\t\t\t// @if CK_DEBUG_DIALOG // if ( domRootRect ) {\n\t\t\t\t// @if CK_DEBUG_DIALOG // \tRectDrawer.draw( domRootRect, { outlineColor: 'red', zIndex: 9999999 }, 'DOM ROOT' );\n\t\t\t\t// @if CK_DEBUG_DIALOG // }\n\n\t\t\t\tif ( domRootRect ) {\n\t\t\t\t\tthis.moveTo(\n\t\t\t\t\t\tMath.round( domRootRect.left + domRootRect.width / 2 - dialogRect.width / 2 ),\n\t\t\t\t\t\tdomRootRect.bottom - dialogRect.height - defaultOffset\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthis._moveOffScreen();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase DialogViewPosition.EDITOR_ABOVE_CENTER: {\n\t\t\t\t// @if CK_DEBUG_DIALOG // if ( domRootRect ) {\n\t\t\t\t// @if CK_DEBUG_DIALOG // \tRectDrawer.draw( domRootRect, { outlineColor: 'red', zIndex: 9999999 }, 'DOM ROOT' );\n\t\t\t\t// @if CK_DEBUG_DIALOG // }\n\n\t\t\t\tif ( domRootRect ) {\n\t\t\t\t\tthis.moveTo(\n\t\t\t\t\t\tMath.round( domRootRect.left + domRootRect.width / 2 - dialogRect.width / 2 ),\n\t\t\t\t\t\tdomRootRect.top - dialogRect.height - defaultOffset\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthis._moveOffScreen();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase DialogViewPosition.EDITOR_BELOW_CENTER: {\n\t\t\t\t// @if CK_DEBUG_DIALOG // if ( domRootRect ) {\n\t\t\t\t// @if CK_DEBUG_DIALOG // \tRectDrawer.draw( domRootRect, { outlineColor: 'red', zIndex: 9999999 }, 'DOM ROOT' );\n\t\t\t\t// @if CK_DEBUG_DIALOG // }\n\n\t\t\t\tif ( domRootRect ) {\n\t\t\t\t\tthis.moveTo(\n\t\t\t\t\t\tMath.round( domRootRect.left + domRootRect.width / 2 - dialogRect.width / 2 ),\n\t\t\t\t\t\tdomRootRect.bottom + defaultOffset\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthis._moveOffScreen();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Calculates the visible DOM root part.\n\t */\n\tprivate _getVisibleDomRootRect( viewportRect: Rect ): Rect | null {\n\t\tlet visibleDomRootRect = new Rect( this._getCurrentDomRoot() ).getVisible();\n\n\t\tif ( !visibleDomRootRect ) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tvisibleDomRootRect = viewportRect.getIntersection( visibleDomRootRect );\n\n\t\t\tif ( !visibleDomRootRect ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\treturn visibleDomRootRect;\n\t}\n\n\t/**\n\t * Calculates the dialog element rect.\n\t */\n\tprivate _getDialogRect() {\n\t\treturn new Rect( this.element!.firstElementChild as HTMLElement );\n\t}\n\n\t/**\n\t * Returns a viewport `Rect` shrunk by the viewport offset config from all sides.\n\t *\n\t * TODO: This is a duplicate from position.ts module. It should either be exported there or land somewhere in utils.\n\t */\n\tprivate _getViewportRect(): Rect {\n\t\tconst viewportRect = new Rect( global.window );\n\n\t\t// Modals should not be restricted by the viewport offsets as they are always displayed on top of the page.\n\t\tif ( this.isModal ) {\n\t\t\treturn viewportRect;\n\t\t}\n\n\t\tconst viewportOffset = {\n\t\t\ttop: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\t...this._getViewportOffset()\n\t\t};\n\n\t\tviewportRect.top += viewportOffset.top!;\n\t\tviewportRect.height -= viewportOffset.top!;\n\t\tviewportRect.bottom -= viewportOffset.bottom!;\n\t\tviewportRect.height -= viewportOffset.bottom!;\n\t\tviewportRect.left += viewportOffset.left!;\n\t\tviewportRect.right -= viewportOffset.right!;\n\t\tviewportRect.width -= viewportOffset.left! + viewportOffset.right!;\n\n\t\treturn viewportRect;\n\t}\n\n\t/**\n\t * Collects all focusable elements inside the dialog parts\n\t * and adds them to the focus tracker and focus cycler.\n\t */\n\tprivate _updateFocusCyclableItems() {\n\t\tconst focusables: Array<FocusableView> = [];\n\n\t\tif ( this.contentView ) {\n\t\t\tfor ( const child of this.contentView.children ) {\n\t\t\t\tif ( isFocusable( child ) ) {\n\t\t\t\t\tfocusables.push( child );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( this.actionsView ) {\n\t\t\tfocusables.push( this.actionsView );\n\t\t}\n\n\t\tif ( this.closeButtonView ) {\n\t\t\tfocusables.push( this.closeButtonView );\n\t\t}\n\n\t\tfocusables.forEach( focusable => {\n\t\t\tthis._focusables.add( focusable );\n\t\t\tthis.focusTracker.add( focusable.element! );\n\n\t\t\tif ( isViewWithFocusCycler( focusable ) ) {\n\t\t\t\tthis._focusCycler.chain( focusable.focusCycler );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Creates the close button view that is displayed in the header view corner.\n\t */\n\tprivate _createCloseButton(): ButtonView {\n\t\tconst buttonView = new ButtonView( this.locale );\n\t\tconst t = this.locale!.t;\n\n\t\tbuttonView.set( {\n\t\t\tlabel: t( 'Close' ),\n\t\t\ttooltip: true,\n\t\t\ticon: IconCancel\n\t\t} );\n\n\t\tbuttonView.on<ButtonExecuteEvent>( 'execute', () => this.fire<DialogViewCloseEvent>( 'close', { source: 'closeButton' } ) );\n\n\t\treturn buttonView;\n\t}\n}\n\n/**\n * An event fired when the dialog is closed.\n *\n * @eventName ~DialogView#close\n */\nexport type DialogViewCloseEvent = {\n\tname: 'close';\n\targs: [ { source: 'closeButton' | 'escKeyPress' } ];\n};\n\n/**\n * An event fired when the dialog is moved.\n *\n * @eventName ~DialogView#moveTo\n */\nexport type DialogViewMoveToEvent = DecoratedMethodEvent<DialogView, 'moveTo'>;\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/dialog/dialog\n */\n\nimport { type View } from '../view.js';\nimport { type Editor, Plugin } from '@ckeditor/ckeditor5-core';\nimport { DialogView, type DialogViewCloseEvent, DialogViewPosition } from './dialogview.js';\nimport type { DialogActionButtonDefinition } from './dialogactionsview.js';\nimport type { ModelDocumentChangeEvent } from '@ckeditor/ckeditor5-engine';\nimport type { KeystrokeHandlerOptions } from '@ckeditor/ckeditor5-utils';\n\n/**\n * The dialog controller class. It is used to show and hide the {@link module:ui/dialog/dialogview~DialogView}.\n */\nexport class Dialog extends Plugin {\n\t/**\n\t * The name of the currently visible dialog view instance.\n\t *\n\t * @observable\n\t */\n\tdeclare public id: string | null;\n\n\t/**\n\t * The currently visible dialog view instance.\n\t */\n\tpublic view?: DialogView;\n\n\t/**\n\t * The `Dialog` plugin instance which most recently showed the dialog.\n\t *\n\t * Only one dialog can be visible at once, even if there are many editor instances on the page.\n\t * If an editor wants to show a dialog, it should first hide the dialog that is already opened.\n\t * But only the `Dialog` instance that showed the dialog is able able to properly hide it.\n\t * This is why we need to store it in a globally available space (static property).\n\t * This way every `Dialog` plugin in every editor is able to correctly close any open dialog window.\n\t */\n\tprivate static _visibleDialogPlugin: Dialog | null;\n\n\t/**\n\t * A flag indicating whether the dialog is currently visible.\n\t *\n\t * @observable\n\t */\n\tdeclare public isOpen: boolean;\n\n\t/**\n\t * A configurable callback called when the dialog is hidden.\n\t */\n\tprivate _onHide: ( ( dialog: Dialog ) => void ) | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'Dialog' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor: Editor ) {\n\t\tsuper( editor );\n\n\t\tconst t = editor.t;\n\n\t\tthis._initShowHideListeners();\n\t\tthis._initFocusToggler();\n\t\tthis._initMultiRootIntegration();\n\n\t\tthis.set( {\n\t\t\tid: null,\n\t\t\tisOpen: false\n\t\t} );\n\n\t\t// Add the information about the keystroke to the accessibility database.\n\t\teditor.accessibility.addKeystrokeInfos( {\n\t\t\tcategoryId: 'navigation',\n\t\t\tkeystrokes: [ {\n\t\t\t\tlabel: t( 'Move focus in and out of an active dialog window' ),\n\t\t\t\tkeystroke: 'Ctrl+F6',\n\t\t\t\tmayRequireFn: true\n\t\t\t} ]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\n\t\tif ( Dialog._visibleDialogPlugin === this ) {\n\t\t\tthis._unlockBodyScroll();\n\t\t}\n\t}\n\n\t/**\n\t * Initiates listeners for the `show` and `hide` events emitted by this plugin.\n\t *\n\t * We could not simply decorate the {@link #show} and {@link #hide} methods to fire events,\n\t * because they would be fired in the wrong order &ndash; first would be `show` and then `hide`\n\t * (because showing the dialog actually starts with hiding the previously visible one).\n\t * Hence, we added private methods {@link #_show} and {@link #_hide} which are called on events\n\t * in the desired sequence.\n\t */\n\tprivate _initShowHideListeners() {\n\t\tthis.on<DialogShowEvent>( 'show', ( evt, args ) => {\n\t\t\tthis._show( args );\n\t\t} );\n\n\t\t// 'low' priority allows to add custom callback between `_show()` and `onShow()`.\n\t\tthis.on<DialogShowEvent>( 'show', ( evt, args ) => {\n\t\t\tif ( args.onShow ) {\n\t\t\t\targs.onShow( this );\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\n\t\tthis.on<DialogHideEvent>( 'hide', () => {\n\t\t\tif ( Dialog._visibleDialogPlugin ) {\n\t\t\t\tDialog._visibleDialogPlugin._hide();\n\t\t\t}\n\t\t} );\n\n\t\t// 'low' priority allows to add custom callback between `_hide()` and `onHide()`.\n\t\tthis.on<DialogHideEvent>( 'hide', () => {\n\t\t\tif ( this._onHide ) {\n\t\t\t\tthis._onHide( this );\n\t\t\t\tthis._onHide = undefined;\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\t}\n\n\t/**\n\t * Initiates keystroke handler for toggling the focus between the editor and the dialog view.\n\t */\n\tprivate _initFocusToggler() {\n\t\tconst editor = this.editor;\n\n\t\teditor.keystrokes.set( 'Ctrl+F6', ( data, cancel ) => {\n\t\t\tif ( !this.isOpen || this.view!.isModal ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( this.view!.focusTracker.isFocused ) {\n\t\t\t\teditor.editing.view.focus();\n\t\t\t} else {\n\t\t\t\tthis.view!.focus();\n\t\t\t}\n\n\t\t\tcancel();\n\t\t} );\n\t}\n\n\t/**\n\t * Provides an integration between the root attaching and detaching and positioning of the view.\n\t */\n\tprivate _initMultiRootIntegration() {\n\t\tconst model = this.editor.model;\n\n\t\tmodel.document.on<ModelDocumentChangeEvent>( 'change:data', () => {\n\t\t\tif ( !this.view ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst changedRoots = model.document.differ.getChangedRoots();\n\n\t\t\tfor ( const changes of changedRoots ) {\n\t\t\t\tif ( changes.state ) {\n\t\t\t\t\tthis.view.updatePosition();\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Displays a dialog window.\n\t *\n\t * This method requires a {@link ~DialogDefinition} that defines the dialog's content, title, icon, action buttons, etc.\n\t *\n\t * For example, the following definition will create a dialog with:\n\t * * A header consisting of an icon, a title, and a \"Close\" button (it is added by default).\n\t * * A content consisting of a view with a single paragraph.\n\t * * A footer consisting of two buttons: \"Yes\" and \"No\".\n\t *\n\t * ```js\n\t * // Create the view that will be used as the dialog's content.\n\t * const textView = new View( locale );\n\t *\n\t * textView.setTemplate( {\n\t * \ttag: 'div',\n\t * \tattributes: {\n\t * \t\tstyle: {\n\t * \t\t\tpadding: 'var(--ck-spacing-large)',\n\t * \t\t\twhiteSpace: 'initial',\n\t * \t\t\twidth: '100%',\n\t * \t\t\tmaxWidth: '500px'\n\t * \t\t},\n\t * \t\ttabindex: -1\n\t * \t},\n\t * \tchildren: [\n\t * \t\t'Lorem ipsum dolor sit amet...'\n\t * \t]\n\t * } );\n\t *\n\t * // Show the dialog.\n\t * editor.plugins.get( 'Dialog' ).show( {\n\t *\tid: 'myDialog',\n\t * \ticon: 'myIcon', // This should be an SVG string.\n\t * \ttitle: 'My dialog',\n\t * \tcontent: textView,\n\t * \tactionButtons: [\n\t *\t\t{\n\t *\t\t\tlabel: t( 'Yes' ),\n\t *\t\t\tclass: 'ck-button-action',\n\t *\t\t\twithText: true,\n\t *\t\t\tonExecute: () => dialog.hide()\n\t *\t\t},\n\t *\t\t{\n\t *\t\t\tlabel: t( 'No' ),\n\t *\t\t\twithText: true,\n\t *\t\t\tonExecute: () => dialog.hide()\n\t *\t\t}\n\t *\t]\n\t * } );\n\t * ```\n\t *\n\t * By specifying the {@link ~DialogDefinition#onShow} and {@link ~DialogDefinition#onHide} callbacks\n\t * it is also possible to add callbacks that will be called when the dialog is shown or hidden.\n\t *\n\t * For example, the callbacks in the following definition:\n\t * * Disable the default behavior of the <kbd>Esc</kbd> key.\n\t * * Fire a custom event when the dialog gets hidden.\n\t *\n\t * ```js\n\t * editor.plugins.get( 'Dialog' ).show( {\n\t * \t// ...\n\t * \tonShow: dialog => {\n\t * \t\tdialog.view.on( 'close', ( evt, data ) => {\n\t * \t\t\t// Only prevent the event from the \"Esc\" key - do not affect the other ways of closing the dialog.\n\t * \t\t\tif ( data.source === 'escKeyPress' ) {\n\t * \t\t\t\tevt.stop();\n\t * \t\t\t}\n\t * \t\t} );\n\t * \t},\n\t * \tonHide: dialog => {\n\t * \t\tdialog.fire( 'dialogDestroyed' );\n\t * \t}\n\t * } );\n\t * ```\n\t *\n\t * Internally, calling this method:\n\t * 1. Hides the currently visible dialog (if any) calling the {@link #hide} method\n\t * (fires the {@link ~DialogHideEvent hide event}).\n\t * 2. Fires the {@link ~DialogShowEvent show event} which allows for adding callbacks that customize the\n\t * behavior of the dialog.\n\t * 3. Shows the dialog.\n\t */\n\tpublic show( dialogDefinition: DialogDefinition ): void {\n\t\tthis.hide();\n\n\t\tthis.fire<DialogShowEvent>( `show:${ dialogDefinition.id }`, dialogDefinition );\n\t}\n\n\t/**\n\t * Handles creating the {@link module:ui/dialog/dialogview~DialogView} instance and making it visible.\n\t */\n\tprivate _show( {\n\t\tid,\n\t\ticon,\n\t\ttitle,\n\t\thasCloseButton = true,\n\t\tcontent,\n\t\tactionButtons,\n\t\tclassName,\n\t\tisModal,\n\t\tposition,\n\t\tonHide,\n\t\tkeystrokeHandlerOptions\n\t}: DialogDefinition ) {\n\t\tconst editor = this.editor;\n\n\t\tthis.view = new DialogView( editor.locale, {\n\t\t\tgetCurrentDomRoot: () => {\n\t\t\t\treturn editor.editing.view.getDomRoot( editor.model.document.selection.anchor!.root.rootName )!;\n\t\t\t},\n\t\t\tgetViewportOffset: () => {\n\t\t\t\treturn editor.ui.viewportOffset;\n\t\t\t},\n\t\t\tkeystrokeHandlerOptions\n\t\t} );\n\n\t\tconst view = this.view;\n\n\t\tview.on<DialogViewCloseEvent>( 'close', () => {\n\t\t\tthis.hide();\n\t\t} );\n\n\t\teditor.ui.view.body.add( view );\n\t\teditor.keystrokes.listenTo( view.element! );\n\n\t\t// Unless the user specified a position, modals should always be centered on the screen.\n\t\t// Otherwise, let's keep dialogs centered in the editing root by default.\n\t\tif ( !position ) {\n\t\t\tposition = isModal ? DialogViewPosition.SCREEN_CENTER : DialogViewPosition.EDITOR_CENTER;\n\t\t}\n\n\t\tif ( isModal ) {\n\t\t\tthis._lockBodyScroll();\n\t\t}\n\n\t\tview.set( {\n\t\t\tposition,\n\t\t\t_isVisible: true,\n\t\t\tclassName,\n\t\t\tisModal\n\t\t} );\n\n\t\tview.setupParts( {\n\t\t\ticon,\n\t\t\ttitle,\n\t\t\thasCloseButton,\n\t\t\tcontent,\n\t\t\tactionButtons\n\t\t} );\n\n\t\tthis.id = id;\n\n\t\tif ( onHide ) {\n\t\t\tthis._onHide = onHide;\n\t\t}\n\n\t\tthis.isOpen = true;\n\t\tDialog._visibleDialogPlugin = this;\n\t}\n\n\t/**\n\t * Hides the dialog. This method is decorated to enable interacting on the {@link ~DialogHideEvent hide event}.\n\t *\n\t * See {@link #show}.\n\t */\n\tpublic hide(): void {\n\t\tif ( Dialog._visibleDialogPlugin ) {\n\t\t\tDialog._visibleDialogPlugin.fire<DialogHideEvent>( `hide:${ Dialog._visibleDialogPlugin.id }` );\n\t\t}\n\t}\n\n\t/**\n\t * Destroys the {@link module:ui/dialog/dialogview~DialogView} and cleans up the stored dialog state.\n\t */\n\tprivate _hide(): void {\n\t\tif ( !this.view ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst editor = this.editor;\n\t\tconst view = this.view;\n\n\t\tif ( view.isModal ) {\n\t\t\tthis._unlockBodyScroll();\n\t\t}\n\n\t\t// Reset the content view to prevent its children from being destroyed in the standard\n\t\t// View#destroy() (and collections) chain. If the content children were left in there,\n\t\t// they would have to be re-created by the feature using the dialog every time the dialog\n\t\t// shows up.\n\t\tif ( view.contentView ) {\n\t\t\tview.contentView.reset();\n\t\t}\n\n\t\teditor.ui.view.body.remove( view );\n\t\teditor.ui.focusTracker.remove( view.element! );\n\t\teditor.keystrokes.stopListening( view.element! );\n\n\t\tview.destroy();\n\t\teditor.editing.view.focus();\n\n\t\tthis.id = null;\n\t\tthis.isOpen = false;\n\t\tDialog._visibleDialogPlugin = null;\n\t}\n\n\t/**\n\t * Makes the <body> unscrollable (e.g. when the modal shows up).\n\t */\n\tprivate _lockBodyScroll(): void {\n\t\tdocument.documentElement.classList.add( 'ck-dialog-scroll-locked' );\n\t}\n\n\t/**\n\t * Makes the <body> scrollable again (e.g. once the modal hides).\n\t */\n\tprivate _unlockBodyScroll(): void {\n\t\tdocument.documentElement.classList.remove( 'ck-dialog-scroll-locked' );\n\t}\n}\n\n/**\n * The definition that describes a dialog window and its content. Passed to the {@link module:ui/dialog/dialog~Dialog#show} method.\n */\nexport interface DialogDefinition {\n\n\t/**\n\t * A unique identifier of the dialog. It allows for distinguishing between different dialogs and their visibility.\n\t * For instance, when open, the ID of the currently visible dialog is stored in {@link module:ui/dialog/dialog~Dialog#id}.\n\t *\n\t * The `id` is also passed along the {@link module:ui/dialog/dialog~DialogShowEvent} and {@link module:ui/dialog/dialog~DialogHideEvent}\n\t * events.\n\t */\n\tid: string;\n\n\t/**\n\t * The SVG string of an icon displayed in dialogs's header. Used only when {@link #title} is also set\n\t * and the header is displayed.\n\t *\n\t * See more in {@link module:ui/icon/iconview~IconView#content}.\n\t */\n\ticon?: string;\n\n\t/**\n\t * A title displayed in the dialogs's header. It also works as an accessible name of the dialog used by assistive technologies.\n\t *\n\t * When not set, the header is not displayed. Affects {@link #icon} and {@link #hasCloseButton}.\n\t */\n\ttitle?: string;\n\n\t/**\n\t * A flag indicating whether the dialog should have a close button in the header.\n\t * `true` by default. Works when {@link #title} is also set and the header is displayed.\n\t *\n\t * **Note**: If you hide the close button, make sure that the dialog can be closed in another way.\n\t */\n\thasCloseButton?: boolean;\n\n\t/**\n\t * The content of the dialog. It can be a single {@link module:ui/view~View} or an array of views.\n\t */\n\tcontent?: View | Array<View>;\n\n\t/**\n\t * The action buttons displayed in the dialog's footer.\n\t */\n\tactionButtons?: Array<DialogActionButtonDefinition>;\n\n\t/**\n\t * An additional CSS class set on the outermost (`.ck.ck-dialog`) container element allowing for visual customization.\n\t */\n\tclassName?: string;\n\n\t/**\n\t * When set to `true`, the dialog will become a modal, that is, it will block the UI until it is closed.\n\t */\n\tisModal?: boolean;\n\n\t/**\n\t * Available dialog positions. By default `DialogViewPosition.EDITOR_CENTER` is used for {@link #isModal non-modals}\n\t * and `DialogViewPosition.SCREEN_CENTER` for modals.\n\t *\n\t * {@link module:ui/dialog/dialogview#DialogViewPosition Learn more} about available positions.\n\t */\n\tposition?: typeof DialogViewPosition[ keyof typeof DialogViewPosition ];\n\n\t/**\n\t * A callback called when the dialog shows up with a `low` priority. It allows for setting up the dialog's {@link #content}.\n\t */\n\tonShow?: ( dialog: Dialog ) => void;\n\n\t/**\n\t * A callback called when the dialog hides with a `low` priority.\n\t * It allows for cleaning up (for example, resetting) the dialog's {@link #content}.\n\t */\n\tonHide?: ( dialog: Dialog ) => void;\n\n\t/**\n\t * Options that will be passed to the {@link module:utils/keystrokehandler~KeystrokeHandler keystroke handler} of the dialog view.\n\t *\n\t * See {@link module:utils/keystrokehandler~KeystrokeHandlerOptions KeystrokeHandlerOptions} to learn more about the available options.\n\t */\n\tkeystrokeHandlerOptions?: KeystrokeHandlerOptions;\n}\n\n/**\n * An event fired after {@link module:ui/dialog/dialog~Dialog#show} is called. You can use it to customize the behavior\n * of any dialog.\n *\n * ```js\n * import { DialogViewPosition } from 'ckeditor5/src/ui.js';\n *\n * // ...\n *\n * // Changes the position of the \"Find and Replace\" dialog.\n * editor.plugins.get( 'Dialog' ).on( 'show:findAndReplace', ( evt, data ) => {\n * \tObject.assign( data, { position: DialogViewPosition.EDITOR_BOTTOM_CENTER } );\n * }, { priority: 'high' } );\n * ```\n *\n * @eventName ~Dialog#show\n */\nexport type DialogShowEvent = {\n\tname: 'show' | `show:${ string }`;\n\targs: [ dialogDefinition: DialogDefinition ];\n};\n\n/**\n * An event fired after {@link module:ui/dialog/dialog~Dialog#hide} is called. You can use it to customize the behavior\n * of any dialog.\n *\n * ```js\n * // Logs after the \"Find and Replace\" dialog gets hidden\n * editor.plugins.get( 'Dialog' ).on( 'hide:findAndReplace', () => {\n * \tconsole.log( 'The \"Find and Replace\" dialog was hidden.' );\n * } );\n * ```\n *\n * @eventName ~Dialog#hide\n */\nexport type DialogHideEvent = {\n\tname: 'hide' | `hide:${ string }`;\n\targs: [];\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/button/listitembuttonview\n */\n\nimport type { ObservableChangeEvent, Locale } from '@ckeditor/ckeditor5-utils';\nimport { type ButtonLabel } from './buttonlabel.js';\nimport { type ViewCollection } from '../viewcollection.js';\n\nimport { IconCheck } from '@ckeditor/ckeditor5-icons';\nimport { ButtonView } from './buttonview.js';\nimport { ButtonLabelView } from './buttonlabelview.js';\nimport { IconView } from '../icon/iconview.js';\nimport { View } from '../view.js';\n\nimport '../../theme/components/button/listitembutton.css';\n\n/**\n * Button that is used as dropdown list item entry.\n */\nexport class ListItemButtonView extends ButtonView {\n\t/**\n\t * Indicates whether the button view has reserved space for a check holder.\n\t *\n\t * @observable\n\t */\n\tdeclare public hasCheckSpace: boolean;\n\n\t/**\n\t * The flag that indicates if the button should render a check holder.\n\t *\n\t * @internal\n\t * @readonly\n\t * @observable\n\t */\n\tdeclare public _hasCheck: boolean;\n\n\t/**\n\t * Holds the view for the check icon of a button list item.\n\t */\n\tprivate readonly _checkIconHolderView = new CheckIconHolderView();\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale?: Locale, labelView: ButtonLabel = new ButtonLabelView() ) {\n\t\tsuper( locale, labelView );\n\n\t\tthis.set( {\n\t\t\thasCheckSpace: false,\n\t\t\t_hasCheck: this.isToggleable\n\t\t} );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-list-item-button',\n\t\t\t\t\tbind.if( 'isToggleable', 'ck-list-item-button_toggleable' )\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\n\t\tthis.bind( '_hasCheck' ).to(\n\t\t\tthis, 'hasCheckSpace',\n\t\t\tthis, 'isToggleable',\n\t\t\t( hasCheckSpace, isToggleable ) => hasCheckSpace || isToggleable\n\t\t);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tif ( this._hasCheck ) {\n\t\t\tthis.children.add( this._checkIconHolderView, 0 );\n\t\t}\n\n\t\tthis._watchCheckIconHolderMount();\n\t}\n\n\t/**\n\t * Renders the check icon if the button is toggleable.\n\t */\n\tprivate _watchCheckIconHolderMount() {\n\t\tthis._checkIconHolderView\n\t\t\t.bind( 'isOn' )\n\t\t\t.to( this, 'isOn', value => this.isToggleable && value );\n\n\t\tthis.on<ObservableChangeEvent<boolean>>(\n\t\t\t'change:_hasCheck',\n\t\t\t( evt, propertyName, hasCheck ) => {\n\t\t\t\tconst { children, _checkIconHolderView } = this;\n\n\t\t\t\tif ( hasCheck ) {\n\t\t\t\t\tchildren.add( _checkIconHolderView, 0 );\n\t\t\t\t} else {\n\t\t\t\t\tchildren.remove( _checkIconHolderView );\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n}\n\n/**\n * @internal\n */\nexport class CheckIconHolderView extends View {\n\t/**\n\t * Collection of child views.\n\t */\n\tpublic readonly children: ViewCollection<View>;\n\n\t/**\n\t * Indicates whether the button is in the \"on\" state.\n\t */\n\tdeclare public isOn: boolean;\n\n\t/**\n\t * The view for the check icon of the button list item.\n\t */\n\tprivate readonly _checkIconView: IconView = this._createCheckIconView();\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.children = this.createCollection();\n\n\t\tthis.set( 'isOn', false );\n\t\tthis.setTemplate( {\n\t\t\ttag: 'span',\n\t\t\tchildren: this.children,\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-list-item-button__check-holder',\n\t\t\t\t\tbind.to( 'isOn', isOn => isOn ? 'ck-on' : 'ck-off' )\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tif ( this.isOn ) {\n\t\t\tthis.children.add( this._checkIconView, 0 );\n\t\t}\n\n\t\tthis._watchCheckIconMount();\n\t}\n\n\t/**\n\t * Renders the check icon if the button is toggleable.\n\t */\n\tprivate _watchCheckIconMount() {\n\t\tthis.on<ObservableChangeEvent<boolean>>( 'change:isOn', ( evt, propertyName, isOn ) => {\n\t\t\tconst { children, _checkIconView } = this;\n\n\t\t\tif ( isOn && !children.has( _checkIconView ) ) {\n\t\t\t\tchildren.add( _checkIconView );\n\t\t\t} else if ( !isOn && children.has( _checkIconView ) ) {\n\t\t\t\tchildren.remove( _checkIconView );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Creates a check icon view.\n\t */\n\tprivate _createCheckIconView() {\n\t\tconst iconView = new IconView();\n\n\t\ticonView.content = IconCheck;\n\t\ticonView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-list-item-button__check-icon'\n\t\t\t}\n\t\t} );\n\n\t\treturn iconView;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/menubar/menubarmenulistitembuttonview\n */\n\nimport type { Locale } from '@ckeditor/ckeditor5-utils';\nimport { ListItemButtonView } from '../button/listitembuttonview.js';\n\nimport '../../theme/components/menubar/menubarmenulistitembutton.css';\n\n/**\n * A menu bar list button view. Buttons like this one execute user actions.\n */\nexport class MenuBarMenuListItemButtonView extends ListItemButtonView {\n\t/**\n\t * Creates an instance of the menu bar list button view.\n\t *\n\t * @param locale The localization services instance.\n\t */\n\tconstructor( locale: Locale ) {\n\t\tsuper( locale );\n\n\t\tthis.set( {\n\t\t\twithText: true,\n\t\t\twithKeystroke: true,\n\t\t\ttooltip: false,\n\t\t\trole: 'menuitem'\n\t\t} );\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [ 'ck-menu-bar__menu__item__button' ]\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/editorui/accessibilityhelp/accessibilityhelp\n */\n\nimport { Plugin } from '@ckeditor/ckeditor5-core';\nimport { IconAccessibility } from '@ckeditor/ckeditor5-icons';\nimport { ButtonView } from '../../button/buttonview.js';\nimport { Dialog } from '../../dialog/dialog.js';\nimport { MenuBarMenuListItemButtonView } from '../../menubar/menubarmenulistitembuttonview.js';\nimport { AccessibilityHelpContentView } from './accessibilityhelpcontentview.js';\nimport { getEnvKeystrokeText } from '@ckeditor/ckeditor5-utils';\nimport type { EditorUIReadyEvent } from '../../editorui/editorui.js';\nimport type { AddRootEvent } from '@ckeditor/ckeditor5-editor-multi-root';\nimport type { ViewDowncastWriter, ViewRootEditableElement } from '@ckeditor/ckeditor5-engine';\n\nimport '../../../theme/components/editorui/accessibilityhelp.css';\n\n/**\n * A plugin that brings the accessibility help dialog to the editor available under the <kbd>Alt</kbd>+<kbd>0</kbd>\n * keystroke and via the \"Accessibility help\" toolbar button. The dialog displays a list of keystrokes that can be used\n * by the user to perform various actions in the editor.\n *\n * Keystroke information is loaded from {@link module:core/accessibility~Accessibility#keystrokeInfos}. New entries can be\n * added using the API provided by the {@link module:core/accessibility~Accessibility} class.\n */\nexport class AccessibilityHelp extends Plugin {\n\t/**\n\t * The view that displays the dialog content (list of keystrokes).\n\t * Created when the dialog is opened for the first time.\n\t */\n\tpublic contentView: AccessibilityHelpContentView | null = null;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ Dialog ] as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'AccessibilityHelp' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.locale.t;\n\n\t\teditor.ui.componentFactory.add( 'accessibilityHelp', () => {\n\t\t\tconst button = this._createButton( ButtonView );\n\n\t\t\tbutton.set( {\n\t\t\t\ttooltip: true,\n\t\t\t\twithText: false,\n\t\t\t\tlabel: t( 'Accessibility help' )\n\t\t\t} );\n\n\t\t\treturn button;\n\t\t} );\n\n\t\teditor.ui.componentFactory.add( 'menuBar:accessibilityHelp', () => {\n\t\t\tconst button = this._createButton( MenuBarMenuListItemButtonView );\n\n\t\t\tbutton.label = t( 'Accessibility' );\n\n\t\t\treturn button;\n\t\t} );\n\n\t\teditor.keystrokes.set( 'Alt+0', ( evt, cancel ) => {\n\t\t\tthis._toggleDialog();\n\t\t\tcancel();\n\t\t} );\n\n\t\tthis._setupRootLabels();\n\t}\n\n\t/**\n\t * Creates a button to show accessibility help dialog, for use either in toolbar or in menu bar.\n\t */\n\tprivate _createButton<T extends typeof ButtonView>( ButtonClass: T ): InstanceType<T> {\n\t\tconst editor = this.editor;\n\t\tconst dialog = editor.plugins.get( 'Dialog' );\n\t\tconst locale = editor.locale;\n\t\tconst view = new ButtonClass( locale ) as InstanceType<T>;\n\n\t\tview.set( {\n\t\t\tkeystroke: 'Alt+0',\n\t\t\ticon: IconAccessibility,\n\t\t\tisToggleable: true\n\t\t} );\n\n\t\tview.on( 'execute', () => this._toggleDialog() );\n\t\tview.bind( 'isOn' ).to( dialog, 'id', id => id === 'accessibilityHelp' );\n\n\t\treturn view;\n\t}\n\n\t/**\n\t * Injects a help text into each editing root's `aria-label` attribute allowing assistive technology users\n\t * to discover the availability of the Accessibility help dialog.\n\t */\n\tprivate _setupRootLabels(): void {\n\t\tconst editor = this.editor;\n\t\tconst editingView = editor.editing.view;\n\t\tconst t = editor.t;\n\n\t\teditor.ui.on<EditorUIReadyEvent>( 'ready', () => {\n\t\t\teditingView.change( writer => {\n\t\t\t\tfor ( const root of editingView.document.roots ) {\n\t\t\t\t\taddAriaLabelTextToRoot( writer, root );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\teditor.on<AddRootEvent>( 'addRoot', ( evt, modelRoot ) => {\n\t\t\t\tconst viewRoot = editor.editing.view.document.getRoot( modelRoot.rootName )!;\n\n\t\t\t\teditingView.change( writer => addAriaLabelTextToRoot( writer, viewRoot ) );\n\t\t\t}, { priority: 'low' } );\n\t\t} );\n\n\t\tfunction addAriaLabelTextToRoot( writer: ViewDowncastWriter, viewRoot: ViewRootEditableElement ) {\n\t\t\tconst currentAriaLabel = viewRoot.getAttribute( 'aria-label' );\n\t\t\tconst newAriaLabel = [ currentAriaLabel, t( 'Press %0 for help.', [ getEnvKeystrokeText( 'Alt+0' ) ] ) ]\n\t\t\t\t.filter( segment => segment )\n\t\t\t\t.join( '. ' );\n\n\t\t\twriter.setAttribute( 'aria-label', newAriaLabel, viewRoot );\n\t\t}\n\t}\n\n\t/**\n\t * Shows the accessibility help dialog. Also, creates {@link #contentView} on demand.\n\t */\n\tprivate _toggleDialog(): void {\n\t\tconst editor = this.editor;\n\t\tconst dialog = editor.plugins.get( 'Dialog' );\n\t\tconst t = editor.locale.t;\n\n\t\tif ( !this.contentView ) {\n\t\t\tthis.contentView = new AccessibilityHelpContentView( editor.locale, editor.accessibility.keystrokeInfos );\n\t\t}\n\n\t\tif ( dialog.id === 'accessibilityHelp' ) {\n\t\t\tdialog.hide();\n\t\t} else {\n\t\t\tdialog.show( {\n\t\t\t\tid: 'accessibilityHelp',\n\t\t\t\tclassName: 'ck-accessibility-help-dialog',\n\t\t\t\ttitle: t( 'Accessibility help' ),\n\t\t\t\ticon: IconAccessibility,\n\t\t\t\thasCloseButton: true,\n\t\t\t\tcontent: this.contentView\n\t\t\t} );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/editorui/bodycollection\n */\n\nimport { Template } from '../template.js';\nimport { ViewCollection } from '../viewcollection.js';\nimport { type View } from '../view.js';\n\nimport { createElement, type Locale } from '@ckeditor/ckeditor5-utils';\n\n/**\n * This is a special {@link module:ui/viewcollection~ViewCollection} dedicated to elements that are detached from the DOM structure of\n * the editor, like floating panels, floating toolbars, dialogs, etc.\n *\n * The body collection is available under the {@link module:ui/editorui/editoruiview~EditorUIView#body `editor.ui.view.body`} property.\n * Any plugin can add a {@link module:ui/view~View view} to this collection.\n *\n * All views added to a body collection render in a dedicated DOM container (`<div class=\"ck ck-body ...\">...</div>`). All body collection\n * containers render in a common shared (`<div class=\"ck-body-wrapper\">...</div>`) in the DOM to limit the pollution of\n * the `<body>` element. The resulting DOM structure is as follows:\n *\n * ```html\n * <body>\n * \t<!-- Content of the webpage... -->\n *\n * \t<!-- The shared wrapper for all body collection containers. -->\n * \t<div class=\"ck-body-wrapper\">\n * \t\t<!-- The container of the first body collection instance. -->\n * \t\t<div class=\"ck ck-body ...\">\n * \t\t\t<!-- View elements belonging to the first body collection -->\n * \t\t</div>\n *\n * \t\t<!-- The container of the second body collection instance. -->\n * \t\t<div class=\"ck ck-body ...\">...</div>\n *\n * \t\t<!-- More body collection containers for the rest of instances... -->\n * \t</div>\n * </body>\n * ```\n *\n * By default, the {@link module:ui/editorui/editoruiview~EditorUIView `editor.ui.view`} manages the life cycle of the\n * {@link module:ui/editorui/editoruiview~EditorUIView#body `editor.ui.view.body`} collection, attaching and detaching it\n * when the editor gets created or {@link module:core/editor/editor~Editor#destroy destroyed}.\n *\n * # Custom body collection instances\n *\n * Even though most editor instances come with a built-in body collection\n * ({@link module:ui/editorui/editoruiview~EditorUIView#body `editor.ui.view.body`}), you can create your own instance of this\n * class if you need to control their life cycle.\n *\n * The life cycle of a custom body collection must be handled manually by the developer using the dedicated API:\n * * A body collection will render itself automatically in the DOM as soon as you call {@link ~BodyCollection#attachToDom}.\n * * Calling {@link ~BodyCollection#detachFromDom} will remove the collection from the DOM.\n *\n * **Note**: The shared collection wrapper (`<div class=\"ck-body-wrapper\">...</div>`) gets automatically removed from DOM when the\n * last body collection is {@link ~BodyCollection#detachFromDom detached} and does not require any special handling.\n */\nexport class BodyCollection extends ViewCollection {\n\t/**\n\t * The {@link module:core/editor/editor~Editor#locale editor's locale} instance.\n\t * See the view {@link module:ui/view~View#locale locale} property.\n\t */\n\tpublic readonly locale: Locale;\n\n\t/**\n\t * The element holding elements of the body collection.\n\t */\n\tprivate _bodyCollectionContainer?: HTMLElement;\n\n\t/**\n\t * The wrapper element that holds all of the {@link #_bodyCollectionContainer} elements.\n\t */\n\tprivate static _bodyWrapper?: HTMLElement;\n\n\t/**\n\t * Creates a new instance of the {@link module:ui/editorui/bodycollection~BodyCollection}.\n\t *\n\t * @param locale The {@link module:core/editor/editor~Editor editor's locale} instance.\n\t * @param initialItems The initial items of the collection.\n\t */\n\tconstructor( locale: Locale, initialItems: Iterable<View> = [] ) {\n\t\tsuper( initialItems );\n\n\t\tthis.locale = locale;\n\t}\n\n\t/**\n\t * The element holding elements of the body collection.\n\t */\n\tpublic get bodyCollectionContainer(): HTMLElement | undefined {\n\t\treturn this._bodyCollectionContainer;\n\t}\n\n\t/**\n\t * Attaches the body collection to the DOM body element. You need to execute this method to render the content of\n\t * the body collection.\n\t */\n\tpublic attachToDom(): void {\n\t\tthis._bodyCollectionContainer = new Template( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-reset_all',\n\t\t\t\t\t'ck-body',\n\t\t\t\t\t'ck-rounded-corners'\n\t\t\t\t],\n\t\t\t\tdir: this.locale.uiLanguageDirection,\n\t\t\t\trole: 'application'\n\t\t\t},\n\t\t\tchildren: this\n\t\t} ).render() as HTMLElement;\n\n\t\t// Create a shared wrapper if there were none or the previous one got disconnected from DOM.\n\t\tif ( !BodyCollection._bodyWrapper || !BodyCollection._bodyWrapper.isConnected ) {\n\t\t\tBodyCollection._bodyWrapper = createElement( document, 'div', { class: 'ck-body-wrapper' } );\n\t\t\tdocument.body.appendChild( BodyCollection._bodyWrapper );\n\t\t}\n\n\t\tBodyCollection._bodyWrapper.appendChild( this._bodyCollectionContainer );\n\t}\n\n\t/**\n\t * Detaches the collection from the DOM structure. Use this method when you do not need to use the body collection\n\t * anymore to clean-up the DOM structure.\n\t */\n\tpublic detachFromDom(): void {\n\t\tsuper.destroy();\n\n\t\tif ( this._bodyCollectionContainer ) {\n\t\t\tthis._bodyCollectionContainer.remove();\n\t\t}\n\n\t\tif ( BodyCollection._bodyWrapper && !BodyCollection._bodyWrapper.childElementCount ) {\n\t\t\tBodyCollection._bodyWrapper.remove();\n\t\t\tdelete BodyCollection._bodyWrapper;\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/panel/balloon/balloonpanelview\n */\n\nimport { View } from '../../view.js';\nimport { type ViewCollection } from '../../viewcollection.js';\n\nimport {\n\tgetOptimalPosition,\n\tglobal,\n\tisRange,\n\ttoUnit,\n\tisVisible,\n\tisText,\n\tResizeObserver,\n\ttype Locale,\n\ttype ObservableChangeEvent,\n\ttype DomPoint,\n\ttype DomOptimalPositionOptions,\n\tRect,\n\ttype PositioningFunction\n} from '@ckeditor/ckeditor5-utils';\n\nimport { isElement } from 'es-toolkit/compat';\nimport '../../../theme/components/panel/balloonpanel.css';\n\nconst toPx = /* #__PURE__ */ toUnit( 'px' );\n\n// A static balloon panel positioning function that moves the balloon far off the viewport.\n// It is used as a fallback when there is no way to position the balloon using provided\n// positioning functions (see: `getOptimalPosition()`), for instance, when the target the\n// balloon should be attached to gets obscured by scrollable containers or the viewport.\n//\n// It prevents the balloon from being attached to the void and possible degradation of the UX.\n// At the same time, it keeps the balloon physically visible in the DOM so the focus remains\n// uninterrupted.\nconst POSITION_OFF_SCREEN: DomPoint = {\n\ttop: -99999,\n\tleft: -99999,\n\tname: 'arrowless',\n\tconfig: {\n\t\twithArrow: false\n\t}\n};\n\n/**\n * The balloon panel view class.\n *\n * A floating container which can\n * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#pin pin} to any\n * {@link module:utils/dom/position~DomOptimalPositionOptions#target target} in the DOM and remain in that position\n * e.g. when the web page is scrolled.\n *\n * The balloon panel can be used to display contextual, non-blocking UI like forms, toolbars and\n * the like in its {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#content} view\n * collection.\n *\n * There is a number of {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}\n * that the balloon can use, automatically switching from one to another when the viewport space becomes\n * scarce to keep the balloon visible to the user as long as it is possible. The balloon will also\n * accept any custom position set provided by the user compatible with the\n * {@link module:utils/dom/position~DomOptimalPositionOptions options}.\n *\n * ```ts\n * const panel = new BalloonPanelView( locale );\n * const childView = new ChildView();\n * const positions = BalloonPanelView.defaultPositions;\n *\n * panel.render();\n *\n * // Add a child view to the panel's content collection.\n * panel.content.add( childView );\n *\n * // Start pinning the panel to an element with the \"target\" id DOM.\n * // The balloon will remain pinned until unpin() is called.\n * panel.pin( {\n * \ttarget: document.querySelector( '#target' ),\n * \tpositions: [\n * \t\tpositions.northArrowSouth,\n * \t\tpositions.southArrowNorth\n * \t]\n * } );\n * ```\n */\nexport class BalloonPanelView extends View {\n\t/**\n\t * A collection of the child views that creates the balloon panel contents.\n\t */\n\tpublic readonly content: ViewCollection;\n\n\t/**\n\t * The absolute top position of the balloon panel in pixels.\n\t *\n\t * @observable\n\t * @default 0\n\t */\n\tdeclare public top: number;\n\n\t/**\n\t * The absolute left position of the balloon panel in pixels.\n\t *\n\t * @observable\n\t * @default 0\n\t */\n\tdeclare public left: number;\n\n\t/**\n\t * The balloon panel's current position. The position name is reflected in the CSS class set\n\t * to the balloon, i.e. `.ck-balloon-panel_arrow_nw` for the \"arrow_nw\" position. The class\n\t * controls the minor aspects of the balloon's visual appearance like the placement\n\t * of an {@link #withArrow arrow}. To support a new position, an additional CSS must be created.\n\t *\n\t * Default position names correspond with\n\t * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n\t *\n\t * See the {@link #attachTo} and {@link #pin} methods to learn about custom balloon positions.\n\t *\n\t * @observable\n\t * @default 'arrow_nw'\n\t */\n\tdeclare public position: 'arrow_nw' | 'arrow_ne' | 'arrow_sw' | 'arrow_se';\n\n\t/**\n\t * Controls whether the balloon panel is visible or not.\n\t *\n\t * @observable\n\t * @default false\n\t */\n\tdeclare public isVisible: boolean;\n\n\t/**\n\t * Controls whether the balloon panel has an arrow. The presence of the arrow\n\t * is reflected in the `ck-balloon-panel_with-arrow` CSS class.\n\t *\n\t * @observable\n\t * @default true\n\t */\n\tdeclare public withArrow: boolean;\n\n\t/**\n\t * An additional CSS class added to the {@link #element}.\n\t *\n\t * @observable\n\t */\n\tdeclare public class: string | undefined;\n\n\t/**\n\t * A callback that starts pinning the panel when {@link #isVisible} gets\n\t * `true`. Used by {@link #pin}.\n\t *\n\t * @private\n\t */\n\tprivate _pinWhenIsVisibleCallback: ( () => void ) | null;\n\n\t/**\n\t * An instance of resize observer used to detect if target element is still visible.\n\t */\n\tprivate _resizeObserver: ResizeObserver | null;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale?: Locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.set( 'top', 0 );\n\t\tthis.set( 'left', 0 );\n\t\tthis.set( 'position', 'arrow_nw' );\n\t\tthis.set( 'isVisible', false );\n\t\tthis.set( 'withArrow', true );\n\t\tthis.set( 'class', undefined );\n\n\t\tthis._pinWhenIsVisibleCallback = null;\n\t\tthis._resizeObserver = null;\n\n\t\tthis.content = this.createCollection();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-balloon-panel',\n\t\t\t\t\tbind.to( 'position', value => `ck-balloon-panel_${ value }` ),\n\t\t\t\t\tbind.if( 'isVisible', 'ck-balloon-panel_visible' ),\n\t\t\t\t\tbind.if( 'withArrow', 'ck-balloon-panel_with-arrow' ),\n\t\t\t\t\tbind.to( 'class' )\n\t\t\t\t],\n\n\t\t\t\tstyle: {\n\t\t\t\t\ttop: bind.to( 'top', toPx ),\n\t\t\t\t\tleft: bind.to( 'left', toPx )\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tchildren: this.content\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tthis.hide();\n\t\tsuper.destroy();\n\t}\n\n\t/**\n\t * Shows the panel.\n\t *\n\t * See {@link #isVisible}.\n\t */\n\tpublic show(): void {\n\t\tthis.isVisible = true;\n\t}\n\n\t/**\n\t * Hides the panel.\n\t *\n\t * See {@link #isVisible}.\n\t */\n\tpublic hide(): void {\n\t\tthis.isVisible = false;\n\t}\n\n\t/**\n\t * Attaches the panel to a specified {@link module:utils/dom/position~DomOptimalPositionOptions#target} with a\n\t * smart positioning heuristics that chooses from available positions to make sure the panel\n\t * is visible to the user i.e. within the limits of the viewport.\n\t *\n\t * This method accepts configuration {@link module:utils/dom/position~DomOptimalPositionOptions options}\n\t * to set the `target`, optional `limiter` and `positions` the balloon should choose from.\n\t *\n\t * ```ts\n\t * const panel = new BalloonPanelView( locale );\n\t * const positions = BalloonPanelView.defaultPositions;\n\t *\n\t * panel.render();\n\t *\n\t * // Attach the panel to an element with the \"target\" id DOM.\n\t * panel.attachTo( {\n\t * \ttarget: document.querySelector( '#target' ),\n\t * \tpositions: [\n\t * \t\tpositions.northArrowSouth,\n\t * \t\tpositions.southArrowNorth\n\t * \t]\n\t * } );\n\t * ```\n\t *\n\t * **Note**: Attaching the panel will also automatically {@link #show} it.\n\t *\n\t * **Note**: An attached panel will not follow its target when the window is scrolled or resized.\n\t * See the {@link #pin} method for a more permanent positioning strategy.\n\t *\n\t * @param options Positioning options compatible with {@link module:utils/dom/position~getOptimalPosition}.\n\t * Default `positions` array is {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n\t * @returns Whether the balloon was shown and successfully attached or not. Attaching can fail if the target\n\t * provided in the options is invisible (e.g. element detached from DOM).\n\t */\n\tpublic attachTo( options: Partial<DomOptimalPositionOptions> ): boolean {\n\t\tconst target = getDomElement( options.target );\n\n\t\tif ( target && !isVisible( target ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.show();\n\n\t\tconst defaultPositions = BalloonPanelView.defaultPositions;\n\t\tconst positionOptions = Object.assign( {}, {\n\t\t\telement: this.element,\n\t\t\tpositions: [\n\t\t\t\tdefaultPositions.southArrowNorth,\n\t\t\t\tdefaultPositions.southArrowNorthMiddleWest,\n\t\t\t\tdefaultPositions.southArrowNorthMiddleEast,\n\t\t\t\tdefaultPositions.southArrowNorthWest,\n\t\t\t\tdefaultPositions.southArrowNorthEast,\n\t\t\t\tdefaultPositions.northArrowSouth,\n\t\t\t\tdefaultPositions.northArrowSouthMiddleWest,\n\t\t\t\tdefaultPositions.northArrowSouthMiddleEast,\n\t\t\t\tdefaultPositions.northArrowSouthWest,\n\t\t\t\tdefaultPositions.northArrowSouthEast,\n\t\t\t\tdefaultPositions.viewportStickyNorth\n\t\t\t],\n\t\t\tlimiter: global.document.body,\n\t\t\tfitInViewport: true\n\t\t}, options ) as DomOptimalPositionOptions;\n\n\t\tconst optimalPosition = BalloonPanelView._getOptimalPosition( positionOptions ) || POSITION_OFF_SCREEN;\n\n\t\t// Usually browsers make some problems with super accurate values like 104.345px\n\t\t// so it is better to use int values.\n\t\tconst left = parseInt( optimalPosition.left as any );\n\t\tconst top = parseInt( optimalPosition.top as any );\n\n\t\tconst position = optimalPosition.name as this[ 'position' ];\n\t\tconst config: { withArrow?: boolean } = optimalPosition.config || {};\n\t\tconst { withArrow = true } = config;\n\n\t\tthis.top = top;\n\t\tthis.left = left;\n\t\tthis.position = position;\n\t\tthis.withArrow = withArrow;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Works the same way as the {@link #attachTo} method except that the position of the panel is\n\t * continuously updated when:\n\t *\n\t * * any ancestor of the {@link module:utils/dom/position~DomOptimalPositionOptions#target}\n\t * or {@link module:utils/dom/position~DomOptimalPositionOptions#limiter} is scrolled,\n\t * * the browser window gets resized or scrolled.\n\t *\n\t * Thanks to that, the panel always sticks to the {@link module:utils/dom/position~DomOptimalPositionOptions#target}\n\t * and is immune to the changing environment.\n\t *\n\t * ```ts\n\t * const panel = new BalloonPanelView( locale );\n\t * const positions = BalloonPanelView.defaultPositions;\n\t *\n\t * panel.render();\n\t *\n\t * // Pin the panel to an element with the \"target\" id DOM.\n\t * panel.pin( {\n\t * \ttarget: document.querySelector( '#target' ),\n\t * \tpositions: [\n\t * \t\tpositions.northArrowSouth,\n\t * \t\tpositions.southArrowNorth\n\t * \t]\n\t * } );\n\t * ```\n\t *\n\t * To leave the pinned state, use the {@link #unpin} method.\n\t *\n\t * **Note**: Pinning the panel will also automatically {@link #show} it.\n\t *\n\t * @param options Positioning options compatible with {@link module:utils/dom/position~getOptimalPosition}.\n\t * Default `positions` array is {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n\t */\n\tpublic pin( options: Partial<DomOptimalPositionOptions> ): void {\n\t\tthis.unpin();\n\n\t\tif ( !this._startPinning( options ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._pinWhenIsVisibleCallback = () => {\n\t\t\tif ( this.isVisible ) {\n\t\t\t\tthis._startPinning( options );\n\t\t\t} else {\n\t\t\t\tthis._stopPinning();\n\t\t\t}\n\t\t};\n\n\t\t// Control the state of the listeners depending on whether the panel is visible\n\t\t// or not.\n\t\t// TODO: Use on() (https://github.com/ckeditor/ckeditor5-utils/issues/144).\n\t\tthis.listenTo<ObservableChangeEvent>( this, 'change:isVisible', this._pinWhenIsVisibleCallback );\n\t}\n\n\t/**\n\t * Stops pinning the panel, as set up by {@link #pin}.\n\t */\n\tpublic unpin(): void {\n\t\tif ( this._pinWhenIsVisibleCallback ) {\n\t\t\t// Deactivate listeners attached by pin().\n\t\t\tthis._stopPinning();\n\n\t\t\t// Deactivate the panel pin() control logic.\n\t\t\t// TODO: Use off() (https://github.com/ckeditor/ckeditor5-utils/issues/144).\n\t\t\tthis.stopListening( this, 'change:isVisible', this._pinWhenIsVisibleCallback );\n\n\t\t\tthis._pinWhenIsVisibleCallback = null;\n\n\t\t\tthis.hide();\n\t\t}\n\t}\n\n\t/**\n\t * Starts managing the pinned state of the panel. See {@link #pin}.\n\t *\n\t * @param options Positioning options compatible with {@link module:utils/dom/position~getOptimalPosition}.\n\t * @returns Whether the balloon was shown and successfully attached or not. Attaching can fail if the target\n\t * provided in the options is invisible (e.g. element detached from DOM).\n\t */\n\tprivate _startPinning( options: Partial<DomOptimalPositionOptions> ): boolean {\n\t\tif ( !this.attachTo( options ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet targetElement = getDomElement( options.target );\n\t\tconst limiterElement = options.limiter ? getDomElement( options.limiter ) : global.document.body;\n\n\t\t// Then we need to listen on scroll event of eny element in the document.\n\t\tthis.listenTo( global.document, 'scroll', ( evt, domEvt ) => {\n\t\t\tconst scrollTarget = domEvt.target as Element;\n\n\t\t\t// The position needs to be updated if the positioning target is within the scrolled element.\n\t\t\tconst isWithinScrollTarget = targetElement && scrollTarget.contains( targetElement );\n\n\t\t\t// The position needs to be updated if the positioning limiter is within the scrolled element.\n\t\t\tconst isLimiterWithinScrollTarget = limiterElement && scrollTarget.contains( limiterElement );\n\n\t\t\t// The positioning target and/or limiter can be a Rect, object etc..\n\t\t\t// There's no way to optimize the listener then.\n\t\t\tif ( isWithinScrollTarget || isLimiterWithinScrollTarget || !targetElement || !limiterElement ) {\n\t\t\t\tthis.attachTo( options );\n\t\t\t}\n\t\t}, { useCapture: true } );\n\n\t\t// We need to listen on window resize event and update position.\n\t\tthis.listenTo( global.window, 'resize', () => {\n\t\t\tthis.attachTo( options );\n\t\t} );\n\n\t\t// Hide the panel if the target element is no longer visible.\n\t\tif ( !this._resizeObserver ) {\n\t\t\t// If the target element is a text node, we need to check the parent element.\n\t\t\t// It's because `ResizeObserver` accept only elements, not text nodes.\n\t\t\tif ( targetElement && isText( targetElement ) ) {\n\t\t\t\ttargetElement = targetElement.parentElement;\n\t\t\t}\n\n\t\t\tif ( targetElement ) {\n\t\t\t\tconst checkVisibility = () => {\n\t\t\t\t\t// If the target element is no longer visible, hide the panel.\n\t\t\t\t\tif ( !isVisible( targetElement ) ) {\n\t\t\t\t\t\tthis.unpin();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Element is being resized to 0x0 after it's parent became hidden,\n\t\t\t\t// so we need to check size in order to determine if it's visible or not.\n\t\t\t\tthis._resizeObserver = new ResizeObserver( targetElement, checkVisibility );\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Stops managing the pinned state of the panel. See {@link #pin}.\n\t */\n\tprivate _stopPinning(): void {\n\t\tthis.stopListening( global.document, 'scroll' );\n\t\tthis.stopListening( global.window, 'resize' );\n\n\t\tif ( this._resizeObserver ) {\n\t\t\tthis._resizeObserver.destroy();\n\t\t\tthis._resizeObserver = null;\n\t\t}\n\t}\n\n\t/**\n\t * Returns available {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView}\n\t * {@link module:utils/dom/position~PositioningFunction positioning functions} adjusted by the specific offsets.\n\t *\n\t * @internal\n\t * @param options Options to generate positions. If not specified, this helper will simply return\n\t * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.defaultPositions}.\n\t * @param options.sideOffset A custom side offset (in pixels) of each position. If\n\t * not specified, {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.arrowSideOffset the default value}\n\t * will be used.\n\t * @param options.heightOffset A custom height offset (in pixels) of each position. If\n\t * not specified, {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.arrowHeightOffset the default value}\n\t * will be used.\n\t * @param options.stickyVerticalOffset A custom offset (in pixels) of the `viewportStickyNorth` positioning function.\n\t * If not specified, {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.stickyVerticalOffset the default value}\n\t * will be used.\n\t * @param options.config Additional configuration of the balloon balloon panel view.\n\t * Currently only {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#withArrow} is supported. Learn more\n\t * about {@link module:utils/dom/position~PositioningFunction positioning functions}.\n\t */\n\tpublic static generatePositions( options: {\n\t\tsideOffset?: number;\n\t\theightOffset?: number;\n\t\tstickyVerticalOffset?: number;\n\t\tconfig?: object;\n\t} = {} ): Record<string, PositioningFunction> {\n\t\tconst {\n\t\t\tsideOffset = BalloonPanelView.arrowSideOffset,\n\t\t\theightOffset = BalloonPanelView.arrowHeightOffset,\n\t\t\tstickyVerticalOffset = BalloonPanelView.stickyVerticalOffset,\n\t\t\tconfig\n\t\t} = options;\n\n\t\treturn {\n\t\t\t// ------- North west\n\n\t\t\tnorthWestArrowSouthWest: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\t\tleft: targetRect.left - sideOffset,\n\t\t\t\tname: 'arrow_sw',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\tnorthWestArrowSouthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\t\tleft: targetRect.left - ( balloonRect.width * .25 ) - sideOffset,\n\t\t\t\tname: 'arrow_smw',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\tnorthWestArrowSouth: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\t\tleft: targetRect.left - balloonRect.width / 2,\n\t\t\t\tname: 'arrow_s',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\tnorthWestArrowSouthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\t\tleft: targetRect.left - ( balloonRect.width * .75 ) + sideOffset,\n\t\t\t\tname: 'arrow_sme',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\tnorthWestArrowSouthEast: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\t\tleft: targetRect.left - balloonRect.width + sideOffset,\n\t\t\t\tname: 'arrow_se',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\t// ------- North\n\n\t\t\tnorthArrowSouthWest: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\t\tleft: targetRect.left + targetRect.width / 2 - sideOffset,\n\t\t\t\tname: 'arrow_sw',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\tnorthArrowSouthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\t\tleft: targetRect.left + targetRect.width / 2 - ( balloonRect.width * .25 ) - sideOffset,\n\t\t\t\tname: 'arrow_smw',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\tnorthArrowSouth: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\n\t\t\t\tname: 'arrow_s',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\tnorthArrowSouthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\t\tleft: targetRect.left + targetRect.width / 2 - ( balloonRect.width * .75 ) + sideOffset,\n\t\t\t\tname: 'arrow_sme',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\tnorthArrowSouthEast: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width + sideOffset,\n\t\t\t\tname: 'arrow_se',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\t// ------- North east\n\n\t\t\tnorthEastArrowSouthWest: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\t\tleft: targetRect.right - sideOffset,\n\t\t\t\tname: 'arrow_sw',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\tnorthEastArrowSouthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\t\tleft: targetRect.right - ( balloonRect.width * .25 ) - sideOffset,\n\t\t\t\tname: 'arrow_smw',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\tnorthEastArrowSouth: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\t\tleft: targetRect.right - balloonRect.width / 2,\n\t\t\t\tname: 'arrow_s',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\tnorthEastArrowSouthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\t\tleft: targetRect.right - ( balloonRect.width * .75 ) + sideOffset,\n\t\t\t\tname: 'arrow_sme',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\tnorthEastArrowSouthEast: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: getNorthTop( targetRect, balloonRect ),\n\t\t\t\tleft: targetRect.right - balloonRect.width + sideOffset,\n\t\t\t\tname: 'arrow_se',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\t// ------- South west\n\n\t\t\tsouthWestArrowNorthWest: targetRect => ( {\n\t\t\t\ttop: getSouthTop( targetRect ),\n\t\t\t\tleft: targetRect.left - sideOffset,\n\t\t\t\tname: 'arrow_nw',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\tsouthWestArrowNorthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: getSouthTop( targetRect ),\n\t\t\t\tleft: targetRect.left - ( balloonRect.width * .25 ) - sideOffset,\n\t\t\t\tname: 'arrow_nmw',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\tsouthWestArrowNorth: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: getSouthTop( targetRect ),\n\t\t\t\tleft: targetRect.left - balloonRect.width / 2,\n\t\t\t\tname: 'arrow_n',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\tsouthWestArrowNorthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: getSouthTop( targetRect ),\n\t\t\t\tleft: targetRect.left - ( balloonRect.width * .75 ) + sideOffset,\n\t\t\t\tname: 'arrow_nme',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\tsouthWestArrowNorthEast: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: getSouthTop( targetRect ),\n\t\t\t\tleft: targetRect.left - balloonRect.width + sideOffset,\n\t\t\t\tname: 'arrow_ne',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\t// ------- South\n\n\t\t\tsouthArrowNorthWest: targetRect => ( {\n\t\t\t\ttop: getSouthTop( targetRect ),\n\t\t\t\tleft: targetRect.left + targetRect.width / 2 - sideOffset,\n\t\t\t\tname: 'arrow_nw',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\tsouthArrowNorthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: getSouthTop( targetRect ),\n\t\t\t\tleft: targetRect.left + targetRect.width / 2 - ( balloonRect.width * 0.25 ) - sideOffset,\n\t\t\t\tname: 'arrow_nmw',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\tsouthArrowNorth: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: getSouthTop( targetRect ),\n\t\t\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\n\t\t\t\tname: 'arrow_n',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\tsouthArrowNorthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: getSouthTop( targetRect ),\n\t\t\t\tleft: targetRect.left + targetRect.width / 2 - ( balloonRect.width * 0.75 ) + sideOffset,\n\t\t\t\tname: 'arrow_nme',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\tsouthArrowNorthEast: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: getSouthTop( targetRect ),\n\t\t\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width + sideOffset,\n\t\t\t\tname: 'arrow_ne',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\t// ------- South east\n\n\t\t\tsouthEastArrowNorthWest: targetRect => ( {\n\t\t\t\ttop: getSouthTop( targetRect ),\n\t\t\t\tleft: targetRect.right - sideOffset,\n\t\t\t\tname: 'arrow_nw',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\tsouthEastArrowNorthMiddleWest: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: getSouthTop( targetRect ),\n\t\t\t\tleft: targetRect.right - ( balloonRect.width * .25 ) - sideOffset,\n\t\t\t\tname: 'arrow_nmw',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\tsouthEastArrowNorth: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: getSouthTop( targetRect ),\n\t\t\t\tleft: targetRect.right - balloonRect.width / 2,\n\t\t\t\tname: 'arrow_n',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\tsouthEastArrowNorthMiddleEast: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: getSouthTop( targetRect ),\n\t\t\t\tleft: targetRect.right - ( balloonRect.width * .75 ) + sideOffset,\n\t\t\t\tname: 'arrow_nme',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\tsouthEastArrowNorthEast: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: getSouthTop( targetRect ),\n\t\t\t\tleft: targetRect.right - balloonRect.width + sideOffset,\n\t\t\t\tname: 'arrow_ne',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\t// ------- West\n\n\t\t\twestArrowEast: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: targetRect.top + targetRect.height / 2 - balloonRect.height / 2,\n\t\t\t\tleft: targetRect.left - balloonRect.width - heightOffset,\n\t\t\t\tname: 'arrow_e',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\t// ------- East\n\n\t\t\teastArrowWest: ( targetRect, balloonRect ) => ( {\n\t\t\t\ttop: targetRect.top + targetRect.height / 2 - balloonRect.height / 2,\n\t\t\t\tleft: targetRect.right + heightOffset,\n\t\t\t\tname: 'arrow_w',\n\t\t\t\t...( config && { config } )\n\t\t\t} ),\n\n\t\t\t// ------- Sticky\n\n\t\t\tviewportStickyNorth: ( targetRect, balloonRect, viewportRect ) => {\n\t\t\t\t// Get the intersection of the viewport and the document body.\n\t\t\t\tconst boundaryRect = new Rect( global.document.body ).getIntersection( viewportRect.getVisible()! );\n\n\t\t\t\tif ( !boundaryRect ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t// Get the visible intersection of the boundary and the document body.\n\t\t\t\tconst visibleBoundaryRect = boundaryRect.getVisible()!;\n\n\t\t\t\t// Check if the target is in the boundary.\n\t\t\t\tif ( !targetRect.getIntersection( visibleBoundaryRect ) ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\t// Checks if there is enough space to put the balloon on the top or bottom of the target.\n\t\t\t\t// If not, makes the balloon sticky.\n\t\t\t\tif ( !(\n\t\t\t\t\tvisibleBoundaryRect.top - targetRect.top - stickyVerticalOffset < balloonRect.height &&\n\t\t\t\t\tvisibleBoundaryRect.bottom - targetRect.bottom < balloonRect.height\n\t\t\t\t) ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\ttop: visibleBoundaryRect.top + stickyVerticalOffset,\n\t\t\t\t\tleft: targetRect.left + targetRect.width / 2 - balloonRect.width / 2,\n\t\t\t\t\tname: 'arrowless',\n\t\t\t\t\tconfig: {\n\t\t\t\t\t\twithArrow: false,\n\t\t\t\t\t\t...config\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Returns the top coordinate for positions starting with `north*`.\n\t\t *\n\t\t * @param targetRect A rect of the target.\n\t\t * @param balloonRect A rect of the balloon.\n\t\t */\n\t\tfunction getNorthTop( targetRect: Rect, balloonRect: Rect ) {\n\t\t\treturn targetRect.top - balloonRect.height - heightOffset;\n\t\t}\n\n\t\t/**\n\t\t * Returns the top coordinate for positions starting with `south*`.\n\t\t *\n\t\t * @param targetRect A rect of the target.\n\t\t */\n\t\tfunction getSouthTop( targetRect: Rect ) {\n\t\t\treturn targetRect.bottom + heightOffset;\n\t\t}\n\t}\n\n\t/**\n\t * A side offset of the arrow tip from the edge of the balloon. Controlled by CSS.\n\t *\n\t * ```\n\t *\t\t ┌───────────────────────┐\n\t *\t\t │                       │\n\t *\t\t │         Balloon       │\n\t *\t\t │         Content       │\n\t *\t\t │                       │\n\t *\t\t └──+    +───────────────┘\n\t *\t\t |   \\  /\n\t *\t\t |    \\/\n\t *\t\t>┼─────┼< ─────────────────────── side offset\n\t *\n\t * ```\n\t *\n\t * @default 25\n\t */\n\tpublic static arrowSideOffset = 25;\n\n\t/**\n\t * A height offset of the arrow from the edge of the balloon. Controlled by CSS.\n\t *\n\t * ```\n\t *\t\t ┌───────────────────────┐\n\t *\t\t │                       │\n\t *\t\t │         Balloon       │\n\t *\t\t │         Content       │      ╱-- arrow height offset\n\t *\t\t │                       │      V\n\t *\t\t └──+    +───────────────┘ --- ─┼───────\n\t *\t\t     \\  /                       │\n\t *\t\t      \\/                        │\n\t *\t\t────────────────────────────────┼───────\n\t *\t\t                                ^\n\t *\n\t *\n\t *\t\t>┼────┼<  arrow height offset\n\t *\t\t │    │\n\t *\t\t │    ┌────────────────────────┐\n\t *\t\t │    │                        │\n\t *\t\t │   ╱                         │\n\t *\t\t │ ╱            Balloon        │\n\t *\t\t │ ╲            Content        │\n\t *\t\t │   ╲                         │\n\t *\t\t │    │                        │\n\t *\t\t │    └────────────────────────┘\n\t * ```\n\t *\n\t * @default 10\n\t*/\n\tpublic static arrowHeightOffset = 10;\n\n\t/**\n\t * A vertical offset of the balloon panel from the edge of the viewport if sticky.\n\t * It helps in accessing toolbar buttons underneath the balloon panel.\n\t *\n\t * ```\n\t *\t\t  ┌───────────────────────────────────────────────────┐\n\t *\t\t  │                      Target                       │\n\t *\t\t  │                                                   │\n\t *\t\t  │                            /── vertical offset    │\n\t *\t\t┌─────────────────────────────V─────────────────────────┐\n\t *\t\t│ Toolbar            ┌─────────────┐                    │\n\t *\t\t├────────────────────│   Balloon   │────────────────────┤\n\t *\t\t│ │                  └─────────────┘                  │ │\n\t *\t\t│ │                                                   │ │\n\t *\t\t│ │                                                   │ │\n\t *\t\t│ │                                                   │ │\n\t *\t\t│ └───────────────────────────────────────────────────┘ │\n\t *\t\t│                        Viewport                       │\n\t *\t\t└───────────────────────────────────────────────────────┘\n\t * ```\n\t *\n\t * @default 20\n\t */\n\tpublic static stickyVerticalOffset = 20;\n\n\t/**\n\t * Function used to calculate the optimal position for the balloon.\n\t */\n\tprivate static _getOptimalPosition = getOptimalPosition;\n\n\t/**\n\t * A default set of positioning functions used by the balloon panel view\n\t * when attaching using the {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#attachTo} method.\n\t *\n\t * The available positioning functions are as follows:\n\t *\n\t * **North west**\n\t *\n\t * * `northWestArrowSouthWest`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t *\t\t V\n\t *\t\t [ Target ]\n\t * ```\n\t *\n\t * * `northWestArrowSouthMiddleWest`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t *\t\t    V\n\t *\t\t    [ Target ]\n\t * ```\n\t *\n\t * * `northWestArrowSouth`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t *\t\t         V\n\t *\t\t         [ Target ]\n\t * ```\n\t *\n\t * * `northWestArrowSouthMiddleEast`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t *\t\t             V\n\t *\t\t             [ Target ]\n\t * ```\n\t *\n\t * * `northWestArrowSouthEast`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t *\t\t                 V\n\t *\t\t                 [ Target ]\n\t * ```\n\t *\n\t * **North**\n\t *\n\t * * `northArrowSouthWest`\n\t *\n\t * ```\n\t *\t\t    +-----------------+\n\t *\t\t    |     Balloon     |\n\t *\t\t    +-----------------+\n\t *\t\t     V\n\t *\t\t[ Target ]\n\t * ```\n\t *\n\t * * `northArrowSouthMiddleWest`\n\t *\n\t * ```\n\t *\t\t +-----------------+\n\t *\t\t |     Balloon     |\n\t *\t\t +-----------------+\n\t *\t\t     V\n\t *\t\t[ Target ]\n\t * ```\n\t * * `northArrowSouth`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t *\t\t         V\n\t *\t\t    [ Target ]\n\t * ```\n\t *\n\t * * `northArrowSouthMiddleEast`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t *\t\t             V\n\t *\t\t        [ Target ]\n\t * ```\n\t *\n\t * * `northArrowSouthEast`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t *\t\t                V\n\t *\t\t           [ Target ]\n\t * ```\n\t *\n\t * **North east**\n\t *\n\t * * `northEastArrowSouthWest`\n\t *\n\t * ```\n\t *\t\t        +-----------------+\n\t *\t\t        |     Balloon     |\n\t *\t\t        +-----------------+\n\t *\t\t         V\n\t *\t\t[ Target ]\n\t * ```\n\t *\n\t * * `northEastArrowSouthMiddleWest`\n\t *\n\t * ```\n\t *\t\t     +-----------------+\n\t *\t\t     |     Balloon     |\n\t *\t\t     +-----------------+\n\t *\t\t         V\n\t *\t\t[ Target ]\n\t * ```\n\t *\n\t * * `northEastArrowSouth`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t *\t\t         V\n\t *\t\t[ Target ]\n\t * ```\n\t *\n\t * * `northEastArrowSouthMiddleEast`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t *\t\t             V\n\t *\t\t    [ Target ]\n\t * ```\n\t *\n\t * * `northEastArrowSouthEast`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t *\t\t                 V\n\t *\t\t        [ Target ]\n\t * ```\n\t *\n\t * **South**\n\t *\n\t * * `southArrowNorthWest`\n\t *\n\t * ```\n\t *\t\t[ Target ]\n\t *\t\t     ^\n\t *\t\t    +-----------------+\n\t *\t\t    |     Balloon     |\n\t *\t\t    +-----------------+\n\t * ```\n\t *\n\t * * `southArrowNorthMiddleWest`\n\t *\n\t * ```\n\t *\t\t   [ Target ]\n\t *\t\t        ^\n\t *\t\t    +-----------------+\n\t *\t\t    |     Balloon     |\n\t *\t\t    +-----------------+\n\t * ```\n\t *\n\t * * `southArrowNorth`\n\t *\n\t * ```\n\t *\t\t    [ Target ]\n\t *\t\t         ^\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * * `southArrowNorthMiddleEast`\n\t *\n\t * ```\n\t *\t\t            [ Target ]\n\t *\t\t                 ^\n\t *\t\t   +-----------------+\n\t *\t\t   |     Balloon     |\n\t *\t\t   +-----------------+\n\t * ```\n\t *\n\t * * `southArrowNorthEast`\n\t *\n\t * ```\n\t *\t\t            [ Target ]\n\t *\t\t                 ^\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * **South west**\n\t *\n\t * * `southWestArrowNorthWest`\n\t *\n\t *\n\t * ```\n\t *\t\t [ Target ]\n\t *\t\t ^\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * * `southWestArrowNorthMiddleWest`\n\t *\n\t * ```\n\t *\t\t     [ Target ]\n\t *\t\t     ^\n\t *\t\t +-----------------+\n\t *\t\t |     Balloon     |\n\t *\t\t +-----------------+\n\t * ```\n\t *\n\t * * `southWestArrowNorth`\n\t *\n\t * ```\n\t *\t\t         [ Target ]\n\t *\t\t         ^\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * * `southWestArrowNorthMiddleEast`\n\t *\n\t * ```\n\t *\t\t              [ Target ]\n\t *\t\t              ^\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * * `southWestArrowNorthEast`\n\t *\n\t * ```\n\t *\t\t                 [ Target ]\n\t *\t\t                 ^\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * **South east**\n\t *\n\t * * `southEastArrowNorthWest`\n\t *\n\t * ```\n\t *\t\t[ Target ]\n\t *\t\t         ^\n\t *\t\t        +-----------------+\n\t *\t\t        |     Balloon     |\n\t *\t\t        +-----------------+\n\t * ```\n\t *\n\t * * `southEastArrowNorthMiddleWest`\n\t *\n\t * ```\n\t *\t\t   [ Target ]\n\t *\t\t            ^\n\t *\t\t        +-----------------+\n\t *\t\t        |     Balloon     |\n\t *\t\t        +-----------------+\n\t * ```\n\t *\n\t * * `southEastArrowNorth`\n\t *\n\t * ```\n\t *\t\t[ Target ]\n\t *\t\t         ^\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * * `southEastArrowNorthMiddleEast`\n\t *\n\t * ```\n\t *\t\t     [ Target ]\n\t *\t\t              ^\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * * `southEastArrowNorthEast`\n\t *\n\t * ```\n\t *\t\t        [ Target ]\n\t *\t\t                 ^\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * **West**\n\t *\n\t * * `westArrowEast`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|     Balloon     |>[ Target ]\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * **East**\n\t *\n\t * * `eastArrowWest`\n\t *\n\t * ```\n\t *\t\t           +-----------------+\n\t *\t\t[ Target ]<|     Balloon     |\n\t *\t\t           +-----------------+\n\t * ```\n\t *\n\t * **Sticky**\n\t *\n\t * * `viewportStickyNorth`\n\t *\n\t * ```\n\t *\t\t    +---------------------------+\n\t *\t\t    |        [ Target ]         |\n\t *\t\t    |                           |\n\t *\t\t+-----------------------------------+\n\t *\t\t|   |    +-----------------+    |   |\n\t *\t\t|   |    |     Balloon     |    |   |\n\t *\t\t|   |    +-----------------+    |   |\n\t *\t\t|   |                           |   |\n\t *\t\t|   |                           |   |\n\t *\t\t|   |                           |   |\n\t *\t\t|   |                           |   |\n\t *\t\t|   +---------------------------+   |\n\t *\t\t|             Viewport              |\n\t *\t\t+-----------------------------------+\n\t * ```\n\t *\n\t * See {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView#attachTo}.\n\t *\n\t * Positioning functions must be compatible with {@link module:utils/dom/position~DomPoint}.\n\t *\n\t * Default positioning functions with customized offsets can be generated using\n\t * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView.generatePositions}.\n\t *\n\t * The name that the position function returns will be reflected in the balloon panel's class that\n\t * controls the placement of the \"arrow\". See {@link #position} to learn more.\n\t */\n\tpublic static defaultPositions = /* #__PURE__ */ BalloonPanelView.generatePositions();\n}\n\n/**\n * Returns the DOM element for given object or null, if there is none,\n * e.g. when the passed object is a Rect instance or so.\n */\nfunction getDomElement( object: any ): HTMLElement | null {\n\tif ( isElement( object ) ) {\n\t\treturn object;\n\t}\n\n\tif ( isRange( object ) ) {\n\t\treturn object.commonAncestorContainer as any;\n\t}\n\n\tif ( typeof object == 'function' ) {\n\t\treturn getDomElement( object() );\n\t}\n\n\treturn null;\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/badge/badge\n */\n\nimport type { Editor } from '@ckeditor/ckeditor5-core';\n\nimport {\n\tRect,\n\tDomEmitterMixin,\n\ttype DomOptimalPositionOptions\n} from '@ckeditor/ckeditor5-utils';\n\nimport { type View } from '../view.js';\nimport { BalloonPanelView } from '../panel/balloon/balloonpanelview.js';\n\nimport { throttle } from 'es-toolkit/compat';\n\n// ⚠ Note, whenever changing the threshold, make sure to update the docs/support/managing-ckeditor-logo.md docs\n// as this information is also mentioned there ⚠.\nconst NARROW_ROOT_HEIGHT_THRESHOLD = 50;\nconst NARROW_ROOT_WIDTH_THRESHOLD = 350;\n\n/**\n * A helper that enables the badge feature in the editor and renders a custom view next to the bottom of the editable element\n * (editor root, source editing area, etc.) when the editor is focused.\n *\n * @private\n */\nexport abstract class Badge extends /* #__PURE__ */ DomEmitterMixin() {\n\t/**\n\t * Editor instance the helper was created for.\n\t */\n\tprotected readonly editor: Editor;\n\n\t/**\n\t * A reference to the balloon panel hosting and positioning the badge content.\n\t */\n\tprivate _balloonView: BalloonPanelView | null = null;\n\n\t/**\n\t * A throttled version of the {@link #_showBalloon} method meant for frequent use to avoid performance loss.\n\t */\n\tprivate _showBalloonThrottled = throttle( () => this._showBalloon(), 50, { leading: true } );\n\n\t/**\n\t * A reference to the last editable element (root, source editing area, etc.) focused by the user.\n\t * Since the focus can move to other focusable elements in the UI, this reference allows positioning the balloon over the\n\t * right element whether the user is typing or using the UI.\n\t */\n\tprivate _lastFocusedEditableElement: HTMLElement | null = null;\n\n\t/**\n\t * An additional CSS class added to the `BalloonView`.\n\t */\n\tprivate readonly _balloonClass: string | undefined;\n\n\t/**\n\t * Creates a badge for a given editor. The feature is initialized on Editor#ready\n\t * event.\n\t */\n\tprotected constructor( editor: Editor, options: { balloonClass?: string } = {} ) {\n\t\tsuper();\n\n\t\tthis.editor = editor;\n\t\tthis._balloonClass = options.balloonClass;\n\n\t\teditor.on( 'ready', () => this._handleEditorReady() );\n\t}\n\n\t/**\n\t * Destroys the badge along with its view.\n\t */\n\tpublic destroy(): void {\n\t\tconst balloon = this._balloonView;\n\n\t\tif ( balloon ) {\n\t\t\t// Balloon gets destroyed by the body collection.\n\t\t\t// The badge view gets destroyed by the balloon.\n\t\t\tballoon.unpin();\n\t\t\tthis._balloonView = null;\n\t\t}\n\n\t\tthis._showBalloonThrottled.cancel();\n\t\tthis.stopListening();\n\t}\n\n\t/**\n\t * Enables badge label once the editor (ui) is ready.\n\t */\n\tprotected _handleEditorReady(): void {\n\t\tconst editor = this.editor;\n\n\t\tif ( !this._isEnabled() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// No view means no body collection to append the badge balloon to.\n\t\tif ( !editor.ui.view ) {\n\t\t\treturn;\n\t\t}\n\n\t\teditor.ui.focusTracker.on( 'change:isFocused', ( evt, data, isFocused ) => {\n\t\t\tthis._updateLastFocusedEditableElement();\n\n\t\t\tif ( isFocused ) {\n\t\t\t\tthis._showBalloon();\n\t\t\t} else {\n\t\t\t\tthis._hideBalloon();\n\t\t\t}\n\t\t} );\n\n\t\teditor.ui.focusTracker.on( 'change:focusedElement', ( evt, data, focusedElement ) => {\n\t\t\tthis._updateLastFocusedEditableElement();\n\n\t\t\tif ( focusedElement ) {\n\t\t\t\tthis._showBalloon();\n\t\t\t}\n\t\t} );\n\n\t\teditor.ui.on( 'update', () => {\n\t\t\tthis._showBalloonThrottled();\n\t\t} );\n\t}\n\n\t/**\n\t * Returns normalized configuration for the badge.\n\t */\n\tprotected _getNormalizedConfig(): BadgeConfig {\n\t\treturn {\n\t\t\tside: this.editor.locale.contentLanguageDirection === 'ltr' ? 'right' : 'left',\n\t\t\tposition: 'border',\n\t\t\tverticalOffset: 0,\n\t\t\thorizontalOffset: 5\n\t\t};\n\t}\n\n\t/**\n\t * Creates the badge content.\n\t */\n\tprotected abstract _createBadgeContent(): View<HTMLElement>;\n\n\t/**\n\t * Enables the badge feature.\n\t */\n\tprotected abstract _isEnabled(): boolean;\n\n\t/**\n\t * Attempts to display the balloon with the badge view.\n\t */\n\tprivate _showBalloon(): void {\n\t\tconst attachOptions = this._getBalloonAttachOptions();\n\n\t\tif ( !attachOptions ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !this._balloonView ) {\n\t\t\tthis._balloonView = this._createBalloonView();\n\t\t}\n\n\t\tthis._balloonView.pin( attachOptions );\n\t}\n\n\t/**\n\t * Hides the badge balloon if already visible.\n\t */\n\tprivate _hideBalloon(): void {\n\t\tif ( this._balloonView ) {\n\t\t\tthis._balloonView.unpin();\n\t\t}\n\t}\n\n\t/**\n\t * Creates an instance of the {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView balloon panel}\n\t * with the badge view inside ready for positioning.\n\t */\n\tprivate _createBalloonView(): BalloonPanelView {\n\t\tconst editor = this.editor;\n\t\tconst balloon = new BalloonPanelView();\n\t\tconst view = this._createBadgeContent();\n\n\t\tballoon.content.add( view );\n\n\t\tif ( this._balloonClass ) {\n\t\t\tballoon.class = this._balloonClass;\n\t\t}\n\n\t\teditor.ui.view.body.add( balloon );\n\n\t\treturn balloon;\n\t}\n\n\t/**\n\t * Returns the options for attaching the balloon to the focused editable element.\n\t */\n\tprivate _getBalloonAttachOptions(): Partial<DomOptimalPositionOptions> | null {\n\t\tif ( !this._lastFocusedEditableElement ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst badgeConfig = this._getNormalizedConfig();\n\n\t\tconst positioningFunction = badgeConfig.side === 'right' ?\n\t\t\tgetLowerRightCornerPosition( this._lastFocusedEditableElement, badgeConfig ) :\n\t\t\tgetLowerLeftCornerPosition( this._lastFocusedEditableElement, badgeConfig );\n\n\t\treturn {\n\t\t\ttarget: this._lastFocusedEditableElement,\n\t\t\tpositions: [ positioningFunction ]\n\t\t};\n\t}\n\n\t/**\n\t * Updates the {@link #_lastFocusedEditableElement} based on the state of the global focus tracker.\n\t */\n\tprivate _updateLastFocusedEditableElement(): void {\n\t\tconst editor = this.editor;\n\t\tconst isFocused = editor.ui.focusTracker.isFocused;\n\t\tconst focusedElement = editor.ui.focusTracker.focusedElement! as HTMLElement;\n\n\t\tif ( !isFocused || !focusedElement ) {\n\t\t\tthis._lastFocusedEditableElement = null;\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst editableEditorElements = Array.from( editor.ui.getEditableElementsNames() ).map( name => {\n\t\t\treturn editor.ui.getEditableElement( name );\n\t\t} );\n\n\t\tif ( editableEditorElements.includes( focusedElement ) ) {\n\t\t\tthis._lastFocusedEditableElement = focusedElement;\n\t\t} else {\n\t\t\t// If it's none of the editable element, then the focus is somewhere in the UI. Let's display the badge\n\t\t\t// over the first element then.\n\t\t\tthis._lastFocusedEditableElement = editableEditorElements[ 0 ]!;\n\t\t}\n\t}\n}\n\nfunction getLowerRightCornerPosition( focusedEditableElement: HTMLElement, config: BadgeConfig ) {\n\treturn getLowerCornerPosition( focusedEditableElement, config, ( rootRect, balloonRect ) => {\n\t\treturn rootRect.left + rootRect.width - balloonRect.width - config.horizontalOffset;\n\t} );\n}\n\nfunction getLowerLeftCornerPosition( focusedEditableElement: HTMLElement, config: BadgeConfig ) {\n\treturn getLowerCornerPosition( focusedEditableElement, config, rootRect => rootRect.left + config.horizontalOffset );\n}\n\nfunction getLowerCornerPosition(\n\tfocusedEditableElement: HTMLElement,\n\tconfig: BadgeConfig,\n\tgetBalloonLeft: ( visibleEditableElementRect: Rect, balloonRect: Rect ) => number\n) {\n\treturn ( visibleEditableElementRect: Rect, balloonRect: Rect ) => {\n\t\tconst editableElementRect = new Rect( focusedEditableElement );\n\n\t\tif ( editableElementRect.width < NARROW_ROOT_WIDTH_THRESHOLD || editableElementRect.height < NARROW_ROOT_HEIGHT_THRESHOLD ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet balloonTop;\n\n\t\tif ( config.position === 'inside' ) {\n\t\t\tballoonTop = editableElementRect.bottom - balloonRect.height;\n\t\t}\n\t\telse {\n\t\t\tballoonTop = editableElementRect.bottom - balloonRect.height / 2;\n\t\t}\n\n\t\tballoonTop -= config.verticalOffset;\n\n\t\tconst balloonLeft = getBalloonLeft( editableElementRect, balloonRect );\n\n\t\t// Clone the editable element rect and place it where the balloon would be placed.\n\t\t// This will allow getVisible() to work from editable element's perspective (rect source).\n\t\t// and yield a result as if the balloon was on the same (scrollable) layer as the editable element.\n\t\tconst newBalloonPositionRect = visibleEditableElementRect\n\t\t\t.clone()\n\t\t\t.moveTo( balloonLeft, balloonTop )\n\t\t\t.getIntersection( balloonRect.clone().moveTo( balloonLeft, balloonTop ) )!;\n\n\t\tconst newBalloonPositionVisibleRect = newBalloonPositionRect.getVisible();\n\n\t\tif ( !newBalloonPositionVisibleRect || newBalloonPositionVisibleRect.getArea() < balloonRect.getArea() ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: balloonTop,\n\t\t\tleft: balloonLeft,\n\t\t\tname: `position_${ config.position }-side_${ config.side }`,\n\t\t\tconfig: {\n\t\t\t\twithArrow: false\n\t\t\t}\n\t\t};\n\t};\n}\n\n/**\n * The badge configuration options.\n **/\nexport interface BadgeConfig {\n\n\t/**\n\t * The position of the badge.\n\t *\n\t * * When `'inside'`, the badge will be displayed within the boundaries of the editing area.\n\t * * When `'border'`, the basge will be displayed over the bottom border of the editing area.\n\t *\n\t * @default 'border'\n\t */\n\tposition: 'inside' | 'border';\n\n\t/**\n\t * Allows choosing the side of the editing area where the badge will be displayed.\n\t *\n\t * **Note:** If {@link module:core/editor/editorconfig~EditorConfig#language `config.language`} is set to an RTL (right-to-left)\n\t * language, the side switches to `'left'` by default.\n\t *\n\t * @default 'right'\n\t */\n\tside: 'left' | 'right';\n\n\t/**\n\t * The vertical distance the badge can be moved away from its default position.\n\t *\n\t * **Note:** If `position` is `'border'`, the offset is measured from the (vertical) center of the badge.\n\t *\n\t * @default 5\n\t */\n\tverticalOffset: number;\n\n\t/**\n\t * The horizontal distance between the side of the editing root and the nearest side of the badge.\n\t *\n\t * @default 5\n\t */\n\thorizontalOffset: number;\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/editorui/poweredby\n */\n\nimport { IconProjectLogo } from '@ckeditor/ckeditor5-icons';\nimport { parseBase64EncodedObject, type Locale } from '@ckeditor/ckeditor5-utils';\n\nimport { View } from '../view.js';\nimport { Badge } from '../badge/badge.js';\nimport { IconView } from '../icon/iconview.js';\nimport type { Editor, PoweredByConfig } from '@ckeditor/ckeditor5-core';\n\nconst DEFAULT_LABEL = 'Powered by';\n\n/**\n * A helper that enables the \"powered by\" feature in the editor and renders a link to the project's\n * webpage next to the bottom of the editable element (editor root, source editing area, etc.) when the editor is focused.\n *\n * @private\n */\nexport class PoweredBy extends Badge {\n\tconstructor( editor: Editor ) {\n\t\tsuper( editor, { balloonClass: 'ck-powered-by-balloon' } );\n\t}\n\n\t/**\n\t * Enables \"powered by\" label.\n\t */\n\tprotected override _isEnabled(): boolean {\n\t\tconst editor = this.editor;\n\t\tconst forceVisible = editor.config.get( 'ui.poweredBy.forceVisible' );\n\n\t\tif ( forceVisible ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst licenseKey = editor.config.get( 'licenseKey' )!;\n\n\t\tif ( licenseKey == 'GPL' ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst licenseContent = parseBase64EncodedObject( licenseKey.split( '.' )[ 1 ] );\n\n\t\tif ( !licenseContent ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn !licenseContent.whiteLabel;\n\t}\n\n\t/**\n\t * Creates a \"powered by\" badge content.\n\t */\n\tprotected override _createBadgeContent(): View<HTMLElement> {\n\t\treturn new PoweredByView( this.editor.locale, this._getNormalizedConfig().label );\n\t}\n\n\t/**\n\t * Returns the normalized configuration for the \"powered by\" badge.\n\t * It takes the user configuration into account and falls back to the default one.\n\t */\n\tprotected override _getNormalizedConfig(): Required<PoweredByConfig> {\n\t\tconst badgeConfig = super._getNormalizedConfig();\n\t\tconst userConfig = this.editor.config.get( 'ui.poweredBy' ) || {};\n\t\tconst position = userConfig.position || badgeConfig.position;\n\t\tconst verticalOffset = position === 'inside' ? 5 : badgeConfig.verticalOffset;\n\n\t\treturn {\n\t\t\tposition,\n\t\t\tside: userConfig.side || badgeConfig.side,\n\t\t\tlabel: userConfig.label === undefined ? DEFAULT_LABEL : userConfig.label,\n\t\t\tverticalOffset: userConfig.verticalOffset !== undefined ? userConfig.verticalOffset : verticalOffset,\n\t\t\thorizontalOffset: userConfig.horizontalOffset !== undefined ? userConfig.horizontalOffset : badgeConfig.horizontalOffset,\n\t\t\tforceVisible: !!userConfig.forceVisible\n\t\t};\n\t}\n}\n\n/**\n * A view displaying a \"powered by\" label and project logo wrapped in a link.\n */\nclass PoweredByView extends View<HTMLDivElement> {\n\t/**\n\t * Creates an instance of the \"powered by\" view.\n\t *\n\t * @param locale The localization services instance.\n\t * @param label The label text.\n\t */\n\tconstructor( locale: Locale, label: string | null ) {\n\t\tsuper( locale );\n\n\t\tconst iconView = new IconView();\n\t\tconst bind = this.bindTemplate;\n\n\t\ticonView.set( {\n\t\t\tcontent: IconProjectLogo,\n\t\t\tisColorInherited: false\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [ 'ck', 'ck-powered-by' ],\n\t\t\t\t'aria-hidden': true\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'a',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\thref: 'https://ckeditor.com/powered-by-ckeditor/?utm_source=ckeditor&' +\n\t\t\t\t\t\t\t'utm_medium=referral&utm_campaign=701Dn000000hVgmIAE_powered_by_ckeditor_logo',\n\t\t\t\t\t\ttarget: '_blank',\n\t\t\t\t\t\ttabindex: '-1'\n\t\t\t\t\t},\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t...label ? [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttag: 'span',\n\t\t\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\t\t\tclass: [ 'ck', 'ck-powered-by__label' ]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tchildren: [ label ]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t] : [],\n\t\t\t\t\t\ticonView\n\t\t\t\t\t],\n\t\t\t\t\ton: {\n\t\t\t\t\t\tdragstart: bind.to( evt => evt.preventDefault() )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/button/switchbuttonview\n */\n\nimport { View } from '../view.js';\nimport { ButtonView } from './buttonview.js';\n\nimport type { Locale } from '@ckeditor/ckeditor5-utils';\n\nimport '../../theme/components/button/switchbutton.css';\n\n/**\n * The switch button view class.\n *\n * ```ts\n * const view = new SwitchButtonView();\n *\n * view.set( {\n * \twithText: true,\n * \tlabel: 'Switch me!'\n * } );\n *\n * view.render();\n *\n * document.body.append( view.element );\n * ```\n */\nexport class SwitchButtonView extends ButtonView {\n\t/**\n\t * The toggle switch of the button.\n\t */\n\tpublic readonly toggleSwitchView: View;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale?: Locale ) {\n\t\tsuper( locale );\n\n\t\tthis.isToggleable = true;\n\t\tthis.toggleSwitchView = this._createToggleView();\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-switchbutton'\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tthis.children.add( this.toggleSwitchView );\n\t}\n\n\t/**\n\t * Creates a toggle child view.\n\t */\n\tprivate _createToggleView() {\n\t\tconst toggleSwitchView = new View();\n\n\t\ttoggleSwitchView.setTemplate( {\n\t\t\ttag: 'span',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-button__toggle'\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'span',\n\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t\t'ck-button__toggle__inner'\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\treturn toggleSwitchView;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/button/filedialogbuttonview\n */\n\nimport { View } from '../view.js';\nimport { ButtonView } from './buttonview.js';\nimport type { ButtonExecuteEvent } from './button.js';\n\nimport type { Constructor, Locale, Mixed } from '@ckeditor/ckeditor5-utils';\nimport { ListItemButtonView } from './listitembuttonview.js';\n\n/**\n * The file dialog button view.\n *\n * This component provides a button that opens the native file selection dialog.\n * It can be used to implement the UI of a file upload feature.\n *\n * ```ts\n * const view = new FileDialogButtonView( locale );\n *\n * view.set( {\n * \tacceptedType: 'image/*',\n * \tallowMultipleFiles: true\n * \tlabel: t( 'Insert image' ),\n * \ticon: imageIcon,\n * \ttooltip: true\n * } );\n *\n * view.on( 'done', ( evt, files ) => {\n * \tfor ( const file of Array.from( files ) ) {\n * \t\tconsole.log( 'Selected file', file );\n * \t}\n * } );\n * ```\n */\nexport class FileDialogButtonView extends /* #__PURE__ */ FileDialogViewMixin( ButtonView ) {}\n\n/**\n * The file dialog button view used in a lists.\n *\n * This component provides a button that opens the native file selection dialog.\n * It can be used to implement the UI of a file upload feature.\n *\n* ```ts\n * const view = new FileDialogListItemButtonView( locale );\n *\n * view.set( {\n * \tacceptedType: 'image/*',\n * \tallowMultipleFiles: true\n * \tlabel: t( 'Insert image' ),\n * \ticon: imageIcon,\n * \ttooltip: true\n * } );\n *\n * view.on( 'done', ( evt, files ) => {\n * \tfor ( const file of Array.from( files ) ) {\n * \t\tconsole.log( 'Selected file', file );\n * \t}\n * } );\n * ```\n */\nexport class FileDialogListItemButtonView extends /* #__PURE__ */ FileDialogViewMixin( ListItemButtonView ) {}\n\n/**\n * Mixin function that enhances a base button view class with file dialog functionality. It is used\n * to create a button view class that opens the native select file dialog when clicked.\n *\n * The enhanced view includes a button and a hidden file input. When the button is clicked, the file dialog is opened.\n * The mixin adds properties and methods to the base class to handle the file selection.\n *\n * @param view The base class to be enhanced with file dialog functionality.\n * @returns A new class that extends the base class and includes the file dialog functionality.\n */\nexport function FileDialogViewMixin<Base extends Constructor<ButtonView>>( view: Base ): Mixed<Base, FileDialogButtonViewBase> {\n\tabstract class FileDialogView extends view implements FileDialogButtonViewBase {\n\t\t/**\n\t\t * A hidden `<input>` view used to execute file dialog.\n\t\t */\n\t\tprivate _fileInputView: FileInputView;\n\n\t\t/**\n\t\t * Accepted file types. Can be provided in form of file extensions, media type or one of:\n\t\t * * `audio/*`,\n\t\t * * `video/*`,\n\t\t * * `image/*`.\n\t\t *\n\t\t * @observable\n\t\t */\n\t\tdeclare public acceptedType: string;\n\n\t\t/**\n\t\t * Indicates if multiple files can be selected. Defaults to `true`.\n\t\t *\n\t\t * @observable\n\t\t */\n\t\tdeclare public allowMultipleFiles: boolean;\n\n\t\t/**\n\t\t * @inheritDoc\n\t\t */\n\t\tconstructor( ...args: Array<any> ) {\n\t\t\tsuper( ...args );\n\n\t\t\tthis._fileInputView = new FileInputView( this.locale );\n\t\t\tthis._fileInputView.bind( 'acceptedType' ).to( this );\n\t\t\tthis._fileInputView.bind( 'allowMultipleFiles' ).to( this );\n\n\t\t\tthis._fileInputView.delegate( 'done' ).to( this );\n\n\t\t\tthis.on<ButtonExecuteEvent>( 'execute', () => {\n\t\t\t\tthis._fileInputView.open();\n\t\t\t} );\n\n\t\t\tthis.extendTemplate( {\n\t\t\t\tattributes: {\n\t\t\t\t\tclass: 'ck-file-dialog-button'\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t/**\n\t\t * @inheritDoc\n\t\t */\n\t\tpublic override render(): void {\n\t\t\tsuper.render();\n\n\t\t\tthis.children.add( this._fileInputView );\n\t\t}\n\t}\n\n\treturn FileDialogView as any;\n}\n\n/**\n * Represents the base view for a file dialog button component.\n */\nexport type FileDialogButtonViewBase = View & {\n\n\t/**\n\t * Accepted file types. Can be provided in form of file extensions, media type or one of:\n\t * * `audio/*`,\n\t * * `video/*`,\n\t * * `image/*`.\n\t *\n\t * @observable\n\t */\n\tacceptedType: string;\n\n\t/**\n\t * Indicates if multiple files can be selected. Defaults to `true`.\n\t *\n\t * @observable\n\t */\n\tallowMultipleFiles: boolean;\n};\n\n/**\n * The hidden file input view class.\n */\nclass FileInputView extends View<HTMLInputElement> {\n\t/**\n\t * Accepted file types. Can be provided in form of file extensions, media type or one of:\n\t * * `audio/*`,\n\t * * `video/*`,\n\t * * `image/*`.\n\t *\n\t * @observable\n\t */\n\tdeclare public acceptedType?: string;\n\n\t/**\n\t * Indicates if multiple files can be selected. Defaults to `false`.\n\t *\n\t * @observable\n\t */\n\tdeclare public allowMultipleFiles: boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale?: Locale ) {\n\t\tsuper( locale );\n\n\t\tthis.set( 'acceptedType', undefined );\n\t\tthis.set( 'allowMultipleFiles', false );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'input',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-hidden'\n\t\t\t\t],\n\t\t\t\ttype: 'file',\n\t\t\t\ttabindex: '-1',\n\t\t\t\taccept: bind.to( 'acceptedType' ),\n\t\t\t\tmultiple: bind.to( 'allowMultipleFiles' )\n\t\t\t},\n\n\t\t\ton: {\n\t\t\t\t// Removing from code coverage since we cannot programmatically set input element files.\n\t\t\t\tchange: bind.to( /* istanbul ignore next -- @preserve */ () => {\n\t\t\t\t\tif ( this.element?.files?.length ) {\n\t\t\t\t\t\tthis.fire<FileInputViewDoneEvent>( 'done', this.element.files );\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.element!.value = '';\n\t\t\t\t} )\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Opens file dialog.\n\t */\n\tpublic open(): void {\n\t\tthis.element!.click();\n\t}\n}\n\n/**\n * Fired when file dialog is closed with file selected.\n *\n * ```ts\n * view.on( 'done', ( evt, files ) => {\n * \tfor ( const file of files ) {\n * \t\tconsole.log( 'Selected file', file );\n * \t}\n * }\n * ```\n */\nexport type FileInputViewDoneEvent = {\n\tname: 'done';\n\targs: [ files: FileList ];\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/collapsible/collapsibleview\n */\n\nimport { IconDropdownArrow } from '@ckeditor/ckeditor5-icons';\nimport { View } from '../view.js';\nimport { ButtonView } from '../button/buttonview.js';\nimport { type ViewCollection } from '../viewcollection.js';\nimport type { FocusableView } from '../focuscycler.js';\nimport type { Locale } from '@ckeditor/ckeditor5-utils';\n\nimport '../../theme/components/collapsible/collapsible.css';\n\n/**\n * A collapsible UI component. Consists of a labeled button and a container which can be collapsed\n * by clicking the button. The collapsible container can be a host to other UI views.\n *\n * @internal\n */\nexport class CollapsibleView extends View {\n\t/**\n\t * `true` when the container with {@link #children} is collapsed. `false` otherwise.\n\t *\n\t * @observable\n\t */\n\tdeclare public isCollapsed: boolean;\n\n\t/**\n\t * The text label of the {@link #buttonView}.\n\t *\n\t * @observable\n\t * @default 'Show more'\n\t */\n\tdeclare public label: string;\n\n\t/**\n\t * The ID of the label inside the {@link #buttonView} that describes the collapsible\n\t * container for assistive technologies. Set after the button was {@link #render rendered}.\n\t *\n\t * @internal\n\t * @readonly\n\t * @observable\n\t */\n\tdeclare public _collapsibleAriaLabelUid: string | undefined;\n\n\t/**\n\t * The main button that, when clicked, collapses or expands the container with {@link #children}.\n\t */\n\tpublic readonly buttonView: ButtonView;\n\n\t/**\n\t * A collection of the child views that can be collapsed by clicking the {@link #buttonView}.\n\t */\n\tpublic readonly children: ViewCollection<FocusableView>;\n\n\t/**\n\t * Creates an instance of the collapsible view.\n\t *\n\t * @param locale The {@link module:core/editor/editor~Editor#locale} instance.\n\t * @param childViews An optional array of initial child views to be inserted into the collapsible.\n\t */\n\tconstructor( locale: Locale, childViews?: Array<FocusableView> ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.set( 'isCollapsed', false );\n\t\tthis.set( 'label', '' );\n\n\t\tthis.buttonView = this._createButtonView();\n\t\tthis.children = this.createCollection();\n\n\t\tthis.set( '_collapsibleAriaLabelUid', undefined );\n\n\t\tif ( childViews ) {\n\t\t\tthis.children.addMany( childViews );\n\t\t}\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-collapsible',\n\t\t\t\t\tbind.if( 'isCollapsed', 'ck-collapsible_collapsed' )\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\tthis.buttonView,\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t\t'ck-collapsible__children'\n\t\t\t\t\t\t],\n\t\t\t\t\t\trole: 'region',\n\t\t\t\t\t\thidden: bind.if( 'isCollapsed', 'hidden' ),\n\t\t\t\t\t\t'aria-labelledby': bind.to( '_collapsibleAriaLabelUid' )\n\t\t\t\t\t},\n\t\t\t\t\tchildren: this.children\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tthis._collapsibleAriaLabelUid = this.buttonView.labelView.element!.id;\n\t}\n\n\t/**\n\t * Focuses the first focusable.\n\t */\n\tpublic focus(): void {\n\t\tthis.buttonView.focus();\n\t}\n\n\t/**\n\t * Creates the main {@link #buttonView} of the collapsible.\n\t */\n\tprivate _createButtonView() {\n\t\tconst buttonView = new ButtonView( this.locale );\n\t\tconst bind = buttonView.bindTemplate;\n\n\t\tbuttonView.set( {\n\t\t\twithText: true,\n\t\t\ticon: IconDropdownArrow\n\t\t} );\n\n\t\tbuttonView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\t'aria-expanded': bind.to( 'isOn', value => String( value ) )\n\t\t\t}\n\t\t} );\n\n\t\tbuttonView.bind( 'label' ).to( this );\n\t\tbuttonView.bind( 'isOn' ).to( this, 'isCollapsed', isCollapsed => !isCollapsed );\n\n\t\tbuttonView.on( 'execute', () => {\n\t\t\tthis.isCollapsed = !this.isCollapsed;\n\t\t} );\n\n\t\treturn buttonView;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/colorgrid/utils\n */\n\nimport type { Locale } from '@ckeditor/ckeditor5-utils';\n\nexport type ColorOption = string | {\n\tcolor: string;\n\tlabel?: string;\n\thasBorder?: boolean;\n};\n\nexport interface NormalizedColorOption {\n\tmodel: string;\n\tlabel: string;\n\thasBorder: boolean;\n\tview: {\n\t\tname: string;\n\t\tstyles: {\n\t\t\tcolor: string;\n\t\t};\n\t};\n}\n\n/**\n * Returns color configuration options as defined in `editor.config.(fontColor|fontBackgroundColor).colors` or\n * `editor.config.table.(tableProperties|tableCellProperties).(background|border).colors\n * but processed to account for editor localization in the correct language.\n *\n * Note: The reason behind this method is that there is no way to use {@link module:utils/locale~Locale#t}\n * when the user configuration is defined because the editor does not exist yet.\n *\n * @param locale The {@link module:core/editor/editor~Editor#locale} instance.\n */\nexport function getLocalizedColorOptions(\n\tlocale: Locale,\n\toptions: Array<NormalizedColorOption>\n): Array<NormalizedColorOption> {\n\tconst t = locale.t;\n\tconst localizedColorNames: Record<string, string | undefined> = {\n\t\tBlack: t( 'Black' ),\n\t\t'Dim grey': t( 'Dim grey' ),\n\t\tGrey: t( 'Grey' ),\n\t\t'Light grey': t( 'Light grey' ),\n\t\tWhite: t( 'White' ),\n\t\tRed: t( 'Red' ),\n\t\tOrange: t( 'Orange' ),\n\t\tYellow: t( 'Yellow' ),\n\t\t'Light green': t( 'Light green' ),\n\t\tGreen: t( 'Green' ),\n\t\tAquamarine: t( 'Aquamarine' ),\n\t\tTurquoise: t( 'Turquoise' ),\n\t\t'Light blue': t( 'Light blue' ),\n\t\tBlue: t( 'Blue' ),\n\t\tPurple: t( 'Purple' )\n\t};\n\n\treturn options.map( colorOption => {\n\t\tconst label = localizedColorNames[ colorOption.label ];\n\n\t\tif ( label && label != colorOption.label ) {\n\t\t\tcolorOption.label = label;\n\t\t}\n\n\t\treturn colorOption;\n\t} );\n}\n\n/**\n * Creates a unified color definition object from color configuration options.\n * The object contains the information necessary to both render the UI and initialize the conversion.\n */\nexport function normalizeColorOptions( options: Array<ColorOption> ): Array<NormalizedColorOption> {\n\treturn options\n\t\t.map( normalizeSingleColorDefinition )\n\t\t.filter( option => !!option );\n}\n\n/**\n * Creates a normalized color definition from the user-defined configuration.\n * The \"normalization\" means it will create full\n * {@link module:ui/colorgrid/colorgridview~ColorDefinition `ColorDefinition-like`}\n * object for string values, and add a `view` property, for each definition.\n */\nexport function normalizeSingleColorDefinition( color: ColorOption ): NormalizedColorOption {\n\tif ( typeof color === 'string' ) {\n\t\treturn {\n\t\t\tmodel: color,\n\t\t\tlabel: color,\n\t\t\thasBorder: false,\n\t\t\tview: {\n\t\t\t\tname: 'span',\n\t\t\t\tstyles: {\n\t\t\t\t\tcolor\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} else {\n\t\treturn {\n\t\t\tmodel: color.color,\n\t\t\tlabel: color.label || color.color,\n\t\t\thasBorder: color.hasBorder === undefined ? false : color.hasBorder,\n\t\t\tview: {\n\t\t\t\tname: 'span',\n\t\t\t\tstyles: {\n\t\t\t\t\tcolor: `${ color.color }`\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/colorgrid/colortileview\n */\n\nimport { IconColorTileCheck } from '@ckeditor/ckeditor5-icons';\nimport { env, type Locale } from '@ckeditor/ckeditor5-utils';\nimport { ButtonView } from '../button/buttonview.js';\n\n/**\n * This class represents a single color tile in the {@link module:ui/colorgrid/colorgridview~ColorGridView}.\n */\nexport class ColorTileView extends ButtonView {\n\t/**\n\t * String representing a color shown as tile's background.\n\t */\n\tdeclare public color: string | undefined;\n\n\t/**\n\t * A flag that toggles a special CSS class responsible for displaying\n\t * a border around the button.\n\t */\n\tdeclare public hasBorder: boolean;\n\n\tconstructor( locale?: Locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.set( 'color', undefined );\n\t\tthis.set( 'hasBorder', false );\n\n\t\tthis.icon = IconColorTileCheck;\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tstyle: {\n\t\t\t\t\t// https://github.com/ckeditor/ckeditor5/issues/14907\n\t\t\t\t\tbackgroundColor: bind.to( 'color', color => env.isMediaForcedColors ? null : color )\n\t\t\t\t},\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-color-grid__tile',\n\t\t\t\t\tbind.if( 'hasBorder', 'ck-color-selector__color-tile_bordered' )\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tthis.iconView.fillColor = 'hsl(0, 0%, 100%)';\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/colorgrid/colorgridview\n */\n\nimport { View } from '../view.js';\nimport { ColorTileView } from './colortileview.js';\nimport { addKeyboardHandlingForGrid } from '../bindings/addkeyboardhandlingforgrid.js';\n\nimport type { ButtonExecuteEvent } from '../button/button.js';\nimport { type DropdownPanelFocusable } from '../dropdown/dropdownpanelfocusable.js';\nimport { type ViewCollection } from '../viewcollection.js';\n\nimport {\n\tFocusTracker,\n\tKeystrokeHandler,\n\ttype CollectionAddEvent,\n\ttype CollectionRemoveEvent,\n\ttype Locale,\n\ttype ObservableChangeEvent\n} from '@ckeditor/ckeditor5-utils';\n\nimport '../../theme/components/colorgrid/colorgrid.css';\n\n/**\n * A grid of {@link module:ui/colorgrid/colortileview~ColorTileView color tiles}.\n */\nexport class ColorGridView extends View implements DropdownPanelFocusable {\n\t/**\n\t * A number of columns for the tiles grid.\n\t */\n\tpublic readonly columns: number;\n\n\t/**\n\t * Collection of the child tile views.\n\t */\n\tpublic readonly items: ViewCollection<ColorTileView>;\n\n\t/**\n\t * Tracks information about DOM focus in the grid.\n\t */\n\tpublic readonly focusTracker: FocusTracker;\n\n\t/**\n\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t */\n\tpublic readonly keystrokes: KeystrokeHandler;\n\n\t/**\n\t * The color of the currently selected color tile in {@link #items}.\n\t *\n\t * @observable\n\t */\n\tdeclare public selectedColor: string | undefined | null;\n\n\t/**\n\t * Creates an instance of a color grid containing {@link module:ui/colorgrid/colortileview~ColorTileView tiles}.\n\t *\n\t * @fires execute\n\t * @param locale The localization services instance.\n\t * @param options Component configuration\n\t * @param options.colorDefinitions Array with definitions\n\t * required to create the {@link module:ui/colorgrid/colortileview~ColorTileView tiles}.\n\t * @param options.columns A number of columns to display the tiles.\n\t */\n\tconstructor(\n\t\tlocale?: Locale,\n\t\toptions?: {\n\t\t\tcolorDefinitions?: Array<ColorDefinition>;\n\t\t\tcolumns?: number;\n\t\t}\n\t) {\n\t\tsuper( locale );\n\n\t\tconst colorDefinitions = options && options.colorDefinitions ? options.colorDefinitions : [];\n\n\t\tthis.columns = options?.columns || 5;\n\n\t\tconst viewStyleAttribute = {\n\t\t\tgridTemplateColumns: `repeat( ${ this.columns }, 1fr)`\n\t\t};\n\n\t\tthis.set( 'selectedColor', undefined );\n\n\t\tthis.items = this.createCollection();\n\t\tthis.focusTracker = new FocusTracker();\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\tthis.items.on<CollectionAddEvent<ColorTileView>>( 'add', ( evt, colorTile ) => {\n\t\t\tcolorTile.isOn = colorTile.color === this.selectedColor;\n\t\t} );\n\n\t\tcolorDefinitions.forEach( color => {\n\t\t\tconst colorTile = new ColorTileView();\n\n\t\t\tcolorTile.set( {\n\t\t\t\tcolor: color.color,\n\t\t\t\tlabel: color.label,\n\t\t\t\ttooltip: true,\n\t\t\t\thasBorder: color.options.hasBorder\n\t\t\t} );\n\n\t\t\tcolorTile.on<ButtonExecuteEvent>( 'execute', () => {\n\t\t\t\tthis.fire<ColorGridViewExecuteEvent>( 'execute', {\n\t\t\t\t\tvalue: color.color,\n\t\t\t\t\thasBorder: color.options.hasBorder,\n\t\t\t\t\tlabel: color.label\n\t\t\t\t} );\n\t\t\t} );\n\n\t\t\tthis.items.add( colorTile );\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tchildren: this.items,\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-color-grid'\n\t\t\t\t],\n\t\t\t\tstyle: viewStyleAttribute\n\t\t\t}\n\t\t} );\n\n\t\tthis.on<ObservableChangeEvent<string | undefined>>( 'change:selectedColor', ( evt, name, selectedColor ) => {\n\t\t\tfor ( const item of this.items ) {\n\t\t\t\titem.isOn = item.color === selectedColor;\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Focuses the first focusable in {@link #items}.\n\t */\n\tpublic focus(): void {\n\t\tif ( this.items.length ) {\n\t\t\tthis.items.first!.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Focuses the last focusable in {@link #items}.\n\t */\n\tpublic focusLast(): void {\n\t\tif ( this.items.length ) {\n\t\t\tthis.items.last!.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\t// Items added before rendering should be known to the #focusTracker.\n\t\tfor ( const item of this.items ) {\n\t\t\tthis.focusTracker.add( item.element! );\n\t\t}\n\n\t\tthis.items.on<CollectionAddEvent<ColorTileView>>( 'add', ( evt, item ) => {\n\t\t\tthis.focusTracker.add( item.element! );\n\t\t} );\n\n\t\tthis.items.on<CollectionRemoveEvent<ColorTileView>>( 'remove', ( evt, item ) => {\n\t\t\tthis.focusTracker.remove( item.element! );\n\t\t} );\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element! );\n\n\t\taddKeyboardHandlingForGrid( {\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tgridItems: this.items,\n\t\t\tnumberOfColumns: this.columns,\n\t\t\tuiLanguageDirection: this.locale?.uiLanguageDirection\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\n\t\tthis.focusTracker.destroy();\n\t\tthis.keystrokes.destroy();\n\t}\n}\n\n/**\n * A color definition used to create a {@link module:ui/colorgrid/colortileview~ColorTileView}.\n *\n * ```json\n * {\n * \tcolor: 'hsl(0, 0%, 75%)',\n * \tlabel: 'Light Grey',\n * \toptions: {\n * \t\thasBorder: true\n * \t}\n * }\n * ```\n */\nexport interface ColorDefinition {\n\n\t/**\n\t * String representing a color.\n\t * It is used as value of background-color style in {@link module:ui/colorgrid/colortileview~ColorTileView}.\n\t */\n\tcolor: string;\n\n\t/**\n\t * String used as label for {@link module:ui/colorgrid/colortileview~ColorTileView}.\n\t */\n\tlabel: string;\n\n\t/**\n\t * Additional options passed to create a {@link module:ui/colorgrid/colortileview~ColorTileView}.\n\t */\n\toptions: {\n\n\t\t/**\n\t\t * A flag that indicates if special a CSS class should be added\n\t\t * to {@link module:ui/colorgrid/colortileview~ColorTileView}, which renders a border around it.\n\t\t */\n\t\thasBorder: boolean;\n\t};\n}\n\n/**\n * Fired when the `ColorTileView` for the picked item is executed.\n *\n * @eventName ~ColorGridView#execute\n * @param data Additional information about the event.\n*/\nexport type ColorGridViewExecuteEvent = {\n\tname: 'execute';\n\targs: [ data: ColorGridViewExecuteEventData ];\n};\n\n/**\n * The data of {@link ~ColorGridViewExecuteEvent execute event}.\n */\nexport interface ColorGridViewExecuteEventData {\n\n\t/**\n\t * The value of the selected color ({@link module:ui/colorgrid/colorgridview~ColorDefinition#color `color.color`}).\n\t */\n\tvalue: string;\n\n\t/**\n\t * The `hasBorder` property of the selected color\n\t * ({@link module:ui/colorgrid/colorgridview~ColorDefinition#options `color.options.hasBorder`}).\n\t */\n\thasBorder: boolean;\n\n\t/**\n\t * The label of the selected color ({@link module:ui/colorgrid/colorgridview~ColorDefinition#label `color.label`})\n\t */\n\tlabel: string;\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/colorpicker/utils\n */\n\nimport { default as parse } from 'color-parse';\nimport convert from 'color-convert';\nimport type {\n\tRGB, HSL, HSV, HWB, CMYK, XYZ, LAB, LCH, HEX, KEYWORD, ANSI16, ANSI256, HCG, APPLE, GRAY\n} from 'color-convert/conversions.js';\n\n/**\n * Color formats handled by color converter.\n */\nexport type ColorPickerOutputFormat = 'hex' | 'rgb' | 'hsl' | 'hwb' | 'lab' | 'lch';\n\n/**\n * Configuration of the color picker feature.\n *\n * It can be forced to apply colors in the editor in a particular format.\n *\n * @default `{\n * \tformat: 'hsl'\n * }`\n */\nexport type ColorPickerConfig = {\n\tformat?: ColorPickerOutputFormat;\n};\n\n/**\n * Configuration of the color picker view.\n *\n * It can be used to enforce a particular color format or hide the color input.\n */\nexport type ColorPickerViewConfig = ColorPickerConfig & {\n\thideInput?: boolean;\n};\n\n/**\n * Parses and converts the color string to requested format. Handles variety of color spaces\n * like `hsl`, `hex` or `rgb`.\n *\n * @param color\n * @returns A color string.\n * @internal\n */\nexport function convertColor( color: string, outputFormat: ColorPickerOutputFormat ): string {\n\tif ( !color ) {\n\t\treturn '';\n\t}\n\n\tconst colorObject = parseColorString( color );\n\n\tif ( !colorObject ) {\n\t\treturn '';\n\t}\n\n\tif ( colorObject.space === outputFormat ) {\n\t\treturn color;\n\t}\n\n\tif ( !canConvertParsedColor( colorObject ) ) {\n\t\treturn '';\n\t}\n\n\tconst fromColorSpace = ( convert as Conversion )[ colorObject.space ];\n\tconst toColorSpace = fromColorSpace[ outputFormat ];\n\n\tif ( !toColorSpace ) {\n\t\treturn '';\n\t}\n\n\tconst convertedColorChannels = toColorSpace( colorObject.space === 'hex' ? colorObject.hexValue : colorObject.values );\n\n\treturn formatColorOutput( convertedColorChannels, outputFormat );\n}\n\n/**\n * Converts a color string to hex format.\n *\n * @param color\n * @returns A color string.\n * @internal\n */\nexport function convertToHex( color: string ): string {\n\tif ( !color ) {\n\t\treturn '';\n\t}\n\n\tconst colorObject = parseColorString( color );\n\n\tif ( !colorObject ) {\n\t\treturn '#000';\n\t}\n\n\tif ( colorObject.space === 'hex' ) {\n\t\treturn colorObject.hexValue;\n\t}\n\n\treturn convertColor( color, 'hex' );\n}\n\n/**\n * Registers the custom element in the\n * [CustomElementsRegistry](https://developer.mozilla.org/en-US/docs/Web/API/CustomElementRegistry).\n * @internal\n */\nexport function registerCustomElement( elementName: string, constructor: CustomElementConstructor ): void {\n\tif ( customElements.get( elementName ) === undefined ) {\n\t\tcustomElements.define( elementName, constructor );\n\t}\n}\n\n/**\n * Formats the passed color channels according to the requested format.\n *\n * @param values\n * @param format\n * @returns A color string.\n */\nfunction formatColorOutput( values: FormatTableColor, format: ColorPickerOutputFormat ): string {\n\tswitch ( format ) {\n\t\tcase 'hex': return `#${ values }`;\n\t\tcase 'rgb': return `rgb(${ values[ 0 ] }, ${ values[ 1 ] }, ${ values[ 2 ] })`;\n\t\tcase 'hsl': return `hsl(${ values[ 0 ] }, ${ values[ 1 ] }%, ${ values[ 2 ] }%)`;\n\t\tcase 'hwb': return `hwb(${ values[ 0 ] }, ${ values[ 1 ] }, ${ values[ 2 ] })`;\n\t\tcase 'lab': return `lab(${ values[ 0 ] }% ${ values[ 1 ] } ${ values[ 2 ] })`;\n\t\tcase 'lch': return `lch(${ values[ 0 ] }% ${ values[ 1 ] } ${ values[ 2 ] })`;\n\n\t\tdefault: return '';\n\t}\n}\n\ntype FormatTableColor = HEX | RGB | HSL | HWB | LAB | LCH;\ntype ConversionFunctionInput = RGB | HSL | HSV | HWB | CMYK | XYZ | LAB | LCH | HEX | KEYWORD | ANSI16 | ANSI256 | HCG | APPLE | GRAY;\ntype ConversionInputSpaces = typeof convert;\ntype ConversionFunction = ( value: ConversionFunctionInput ) => FormatTableColor;\ntype Conversion = Record<keyof ConversionInputSpaces, Partial<Record<ColorPickerOutputFormat, ConversionFunction>>>;\n\ntype ParserColorSpaces =\n\t'rgb' | 'hsl' | 'hsv' | 'hsb' | 'hwb' | 'cmy' | 'cmyk' | 'xyz' | 'xyy' | 'gray' | 'lab' | 'lch' | 'lchu' | 'lchv' | 'lchuv' |\n\t'luv' | 'yuv' | 'lms' | 'hex';\n\ntype ParsedColor<T extends ParserColorSpaces> = {\n\treadonly space: T;\n\treadonly alpha: number;\n\treadonly values: T extends 'cmyk' ? [ number, number, number, number ] : [ number, number, number ];\n\treadonly hexValue: T extends 'hex' ? string : never;\n};\n\ntype ConvertableParsedColor = ParsedColor<ParserColorSpaces> & {\n\treadonly space: keyof ConversionInputSpaces;\n};\n\nfunction parseColorString( colorString: string ): ParsedColor<ParserColorSpaces> | null {\n\t// Parser library treats `hex` format as belonging to `rgb` space | which messes up further conversion.\n\t// Let's parse such strings on our own.\n\tif ( colorString.startsWith( '#' ) ) {\n\t\tconst parsedHex = parse( colorString );\n\n\t\treturn {\n\t\t\tspace: 'hex',\n\t\t\tvalues: parsedHex.values as [ number, number, number ],\n\t\t\thexValue: colorString,\n\t\t\talpha: parsedHex.alpha\n\t\t};\n\t}\n\n\tconst parsed = parse( colorString );\n\n\tif ( !parsed.space ) {\n\t\treturn null;\n\t}\n\n\treturn parsed as ParsedColor<Exclude<ParserColorSpaces, 'hex'>>;\n}\n\nfunction canConvertParsedColor( parsedColor: ParsedColor<ParserColorSpaces> ): parsedColor is ConvertableParsedColor {\n\treturn Object.keys( convert ).includes( parsedColor.space );\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/labeledfield/labeledfieldview\n */\n\nimport { View } from '../view.js';\nimport { LabelView } from '../label/labelview.js';\n\nimport type { FocusableView } from '../focuscycler.js';\nimport { type ViewCollection } from '../viewcollection.js';\n\nimport { uid, type Locale } from '@ckeditor/ckeditor5-utils';\n\nimport '../../theme/components/labeledfield/labeledfieldview.css';\n\n/**\n * The labeled field view class. It can be used to enhance any view with the following features:\n *\n * * a label,\n * * (optional) an error message,\n * * (optional) an info (status) text,\n *\n * all bound logically by proper DOM attributes for UX and accessibility.  It also provides an interface\n * (e.g. observable properties) that allows controlling those additional features.\n *\n * The constructor of this class requires a callback that returns a view to be labeled. The callback\n * is called with unique ids that allow binding of DOM properties:\n *\n * ```ts\n * const labeledInputView = new LabeledFieldView( locale, ( labeledFieldView, viewUid, statusUid ) => {\n * \tconst inputView = new InputTextView( labeledFieldView.locale );\n *\n * \tinputView.set( {\n * \t\tid: viewUid,\n * \t\tariaDescribedById: statusUid\n * \t} );\n *\n * \tinputView.bind( 'isReadOnly' ).to( labeledFieldView, 'isEnabled', value => !value );\n * \tinputView.bind( 'hasError' ).to( labeledFieldView, 'errorText', value => !!value );\n *\n * \treturn inputView;\n * } );\n *\n * labeledInputView.label = 'User name';\n * labeledInputView.infoText = 'Full name like for instance, John Doe.';\n * labeledInputView.render();\n *\n * document.body.append( labeledInputView.element );\n * ```\n *\n * See {@link module:ui/labeledfield/utils} to discover ready–to–use labeled input helpers for common\n * UI components.\n */\nexport class LabeledFieldView<TFieldView extends FocusableView = FocusableView> extends View {\n\t/**\n\t * The field view that gets labeled.\n\t */\n\tpublic readonly fieldView: TFieldView;\n\n\t/**\n\t * The label view instance that describes the entire view.\n\t */\n\tpublic readonly labelView: LabelView;\n\n\t/**\n\t * The status view for the {@link #fieldView}. It displays {@link #errorText} and\n\t * {@link #infoText}.\n\t */\n\tpublic readonly statusView: View;\n\n\t/**\n\t * A collection of children of the internal wrapper element. Allows inserting additional DOM elements (views) next to\n\t * the {@link #fieldView} for easy styling (e.g. positioning).\n\t *\n\t * By default, the collection contains {@link #fieldView} and {@link #labelView}.\n\t */\n\tpublic readonly fieldWrapperChildren: ViewCollection;\n\n\t/**\n\t * The text of the label.\n\t *\n\t * @observable\n\t */\n\tdeclare public label: string | undefined;\n\n\t/**\n\t * Controls whether the component is in read-only mode.\n\t *\n\t * @observable\n\t */\n\tdeclare public isEnabled: boolean;\n\n\t/**\n\t * An observable flag set to `true` when {@link #fieldView} is empty (`false` otherwise).\n\t *\n\t * @readonly\n\t * @observable\n\t * @default true\n\t */\n\tdeclare public isEmpty: boolean;\n\n\t/**\n\t * An observable flag set to `true` when {@link #fieldView} is currently focused by\n\t * the user (`false` otherwise).\n\t *\n\t * @readonly\n\t * @observable\n\t * @default false\n\t */\n\tdeclare public isFocused: boolean;\n\n\t/**\n\t * The validation error text. When set, it will be displayed\n\t * next to the {@link #fieldView} as a typical validation error message.\n\t * Set it to `null` to hide the message.\n\t *\n\t * **Note:** Setting this property to anything but `null` will automatically\n\t * make the `hasError` of the {@link #fieldView} `true`.\n\t *\n\t * @observable\n\t */\n\tdeclare public errorText: string | null;\n\n\t/**\n\t * The additional information text displayed next to the {@link #fieldView} which can\n\t * be used to inform the user about its purpose, provide help or hints.\n\t *\n\t * Set it to `null` to hide the message.\n\t *\n\t * **Note:** This text will be displayed in the same place as {@link #errorText} but the\n\t * latter always takes precedence: if the {@link #errorText} is set, it replaces\n\t * {@link #infoText}.\n\t *\n\t * @observable\n\t * @default null\n\t */\n\tdeclare public infoText: string | null;\n\n\t/**\n\t * (Optional) The additional CSS class set on the dropdown {@link #element}.\n\t *\n\t * @observable\n\t */\n\tdeclare public class: string | undefined;\n\n\t/**\n\t * The content of the `placeholder` attribute of the {@link #fieldView}.\n\t *\n\t * @observable\n\t */\n\tdeclare public placeholder: string | undefined;\n\n\t/**\n\t * The combined status text made of {@link #errorText} and {@link #infoText}.\n\t * Note that when present, {@link #errorText} always takes precedence in the\n\t * status.\n\t *\n\t * @see #errorText\n\t * @see #infoText\n\t * @see #statusView\n\t * @private\n\t * @observable\n\t */\n\tdeclare public _statusText: string | null;\n\n\t/**\n\t * Creates an instance of the labeled field view class using a provided creator function\n\t * that provides the view to be labeled.\n\t *\n\t * @param locale The locale instance.\n\t * @param viewCreator A function that returns a {@link module:ui/view~View}\n\t * that will be labeled. The following arguments are passed to the creator function:\n\t *\n\t * * an instance of the `LabeledFieldView` to allow binding observable properties,\n\t * * an UID string that connects the {@link #labelView label} and the labeled field view in DOM,\n\t * * an UID string that connects the {@link #statusView status} and the labeled field view in DOM.\n\t */\n\tconstructor(\n\t\tlocale: Locale | undefined,\n\t\tviewCreator: LabeledFieldViewCreator<TFieldView>\n\t) {\n\t\tsuper( locale );\n\n\t\tconst viewUid = `ck-labeled-field-view-${ uid() }`;\n\t\tconst statusUid = `ck-labeled-field-view-status-${ uid() }`;\n\n\t\tthis.fieldView = viewCreator( this, viewUid, statusUid );\n\n\t\tthis.set( 'label', undefined );\n\t\tthis.set( 'isEnabled', true );\n\t\tthis.set( 'isEmpty', true );\n\t\tthis.set( 'isFocused', false );\n\t\tthis.set( 'errorText', null );\n\t\tthis.set( 'infoText', null );\n\t\tthis.set( 'class', undefined );\n\t\tthis.set( 'placeholder', undefined );\n\n\t\tthis.labelView = this._createLabelView( viewUid );\n\t\tthis.statusView = this._createStatusView( statusUid );\n\t\tthis.fieldWrapperChildren = this.createCollection( [ this.fieldView, this.labelView ] );\n\n\t\tthis.bind( '_statusText' ).to(\n\t\t\tthis, 'errorText',\n\t\t\tthis, 'infoText',\n\t\t\t( errorText, infoText ) => errorText || infoText\n\t\t);\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-labeled-field-view',\n\t\t\t\t\tbind.to( 'class' ),\n\t\t\t\t\tbind.if( 'isEnabled', 'ck-disabled', value => !value ),\n\t\t\t\t\tbind.if( 'isEmpty', 'ck-labeled-field-view_empty' ),\n\t\t\t\t\tbind.if( 'isFocused', 'ck-labeled-field-view_focused' ),\n\t\t\t\t\tbind.if( 'placeholder', 'ck-labeled-field-view_placeholder' ),\n\t\t\t\t\tbind.if( 'errorText', 'ck-error' )\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t\t'ck-labeled-field-view__input-wrapper'\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tchildren: this.fieldWrapperChildren\n\t\t\t\t},\n\t\t\t\tthis.statusView\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * Creates label view class instance and bind with view.\n\t *\n\t * @param id Unique id to set as labelView#for attribute.\n\t */\n\tprivate _createLabelView( id: string ): LabelView {\n\t\tconst labelView = new LabelView( this.locale );\n\n\t\tlabelView.for = id;\n\t\tlabelView.bind( 'text' ).to( this, 'label' );\n\n\t\treturn labelView;\n\t}\n\n\t/**\n\t * Creates the status view instance. It displays {@link #errorText} and {@link #infoText}\n\t * next to the {@link #fieldView}. See {@link #_statusText}.\n\t *\n\t * @param statusUid Unique id of the status, shared with the {@link #fieldView view's}\n\t * `aria-describedby` attribute.\n\t */\n\tprivate _createStatusView( statusUid: string ): View {\n\t\tconst statusView = new View( this.locale );\n\t\tconst bind = this.bindTemplate;\n\n\t\tstatusView.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-labeled-field-view__status',\n\t\t\t\t\tbind.if( 'errorText', 'ck-labeled-field-view__status_error' ),\n\t\t\t\t\tbind.if( '_statusText', 'ck-hidden', value => !value )\n\t\t\t\t],\n\t\t\t\tid: statusUid,\n\t\t\t\trole: bind.if( 'errorText', 'alert' )\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttext: bind.to( '_statusText' )\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\treturn statusView;\n\t}\n\n\t/**\n\t * Focuses the {@link #fieldView}.\n\t */\n\tpublic focus( direction?: 1 | -1 ): void {\n\t\tthis.fieldView.focus( direction );\n\t}\n}\n\n/**\n * A creator function that returns a focusable view to be labeled by a {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView}\n * instance.\n */\nexport type LabeledFieldViewCreator<TFieldView extends FocusableView> =\n\t( labeledFieldView: LabeledFieldView, viewUid: string, statusUid: string ) => TFieldView;\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/input/inputbase\n */\n\nimport { View } from '../view.js';\n\nimport {\n\tFocusTracker,\n\ttype Locale,\n\ttype ObservableChangeEvent\n} from '@ckeditor/ckeditor5-utils';\n\n/**\n * The base input view class.\n */\nexport abstract class InputBase<TElement extends HTMLInputElement | HTMLTextAreaElement = HTMLInputElement> extends View<TElement> {\n\t/**\n\t * Stores information about the editor UI focus and propagates it so various plugins and components\n\t * are unified as a focus group.\n\t */\n\tpublic readonly focusTracker: FocusTracker;\n\n\t/**\n\t * The value of the input.\n\t *\n\t * @observable\n\t */\n\tdeclare public value: string | undefined;\n\n\t/**\n\t * The `id` attribute of the input (i.e. to pair with a `<label>` element).\n\t *\n\t * @observable\n\t */\n\tdeclare public id: string | undefined;\n\n\t/**\n\t * The `placeholder` attribute of the input.\n\t *\n\t * @observable\n\t */\n\tdeclare public placeholder: string | undefined;\n\n\t/**\n\t * The `tabindex` attribute of the input.\n\t *\n\t * @observable\n\t */\n\tdeclare public tabIndex: number | undefined;\n\n\t/**\n\t * The `aria-label` attribute of the input.\n\t *\n\t * @observable\n\t */\n\tdeclare public ariaLabel: string | undefined;\n\n\t/**\n\t * Controls whether the input view is in read-only mode.\n\t *\n\t * @observable\n\t */\n\tdeclare public isReadOnly: boolean;\n\n\t/**\n\t * Set to `true` when the field has some error. Usually controlled via\n\t * {@link module:ui/labeledinput/labeledinputview~LabeledInputView#errorText}.\n\t *\n\t * @observable\n\t */\n\tdeclare public hasError: boolean;\n\n\t/**\n\t * The `id` of the element describing this field, e.g. when it has\n\t * some error; it helps screen readers read the error text.\n\t *\n\t * @observable\n\t */\n\tdeclare public ariaDescribedById: string | undefined;\n\n\t/**\n\t * An observable flag set to `true` when the input is currently focused by the user.\n\t * Set to `false` otherwise.\n\t *\n\t * @readonly\n\t * @observable\n\t * @default false\n\t */\n\tdeclare public isFocused: boolean;\n\n\t/**\n\t * An observable flag set to `true` when the input contains no text, i.e.\n\t * when {@link #value} is `''`, `null`, or `false`.\n\t *\n\t * @readonly\n\t * @observable\n\t * @default true\n\t */\n\tdeclare public isEmpty: boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale?: Locale ) {\n\t\tsuper( locale );\n\n\t\tthis.set( 'value', undefined );\n\t\tthis.set( 'id', undefined );\n\t\tthis.set( 'placeholder', undefined );\n\t\tthis.set( 'tabIndex', undefined );\n\t\tthis.set( 'isReadOnly', false );\n\t\tthis.set( 'hasError', false );\n\t\tthis.set( 'ariaDescribedById', undefined );\n\t\tthis.set( 'ariaLabel', undefined );\n\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\tthis.bind( 'isFocused' ).to( this.focusTracker );\n\t\tthis.set( 'isEmpty', true );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'input',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-input',\n\t\t\t\t\tbind.if( 'isFocused', 'ck-input_focused' ),\n\t\t\t\t\tbind.if( 'isEmpty', 'ck-input-text_empty' ),\n\t\t\t\t\tbind.if( 'hasError', 'ck-error' )\n\t\t\t\t],\n\t\t\t\tid: bind.to( 'id' ),\n\t\t\t\tplaceholder: bind.to( 'placeholder' ),\n\t\t\t\ttabindex: bind.to( 'tabIndex' ),\n\t\t\t\treadonly: bind.to( 'isReadOnly' ),\n\t\t\t\t'aria-invalid': bind.if( 'hasError', true ),\n\t\t\t\t'aria-describedby': bind.to( 'ariaDescribedById' ),\n\t\t\t\t'aria-label': bind.to( 'ariaLabel' )\n\t\t\t},\n\t\t\ton: {\n\t\t\t\tinput: bind.to( ( ...args ) => {\n\t\t\t\t\tthis.fire( 'input', ...args );\n\t\t\t\t\tthis._updateIsEmpty();\n\t\t\t\t} ),\n\t\t\t\tchange: bind.to( this._updateIsEmpty.bind( this ) )\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tthis.focusTracker.add( this.element! );\n\n\t\tthis._setDomElementValue( this.value );\n\t\tthis._updateIsEmpty();\n\n\t\t// Bind `this.value` to the DOM element's value.\n\t\t// We cannot use `value` DOM attribute because removing it on Edge does not clear the DOM element's value property.\n\t\tthis.on<ObservableChangeEvent>( 'change:value', ( evt, name, value ) => {\n\t\t\tthis._setDomElementValue( value );\n\t\t\tthis._updateIsEmpty();\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\n\t\tthis.focusTracker.destroy();\n\t}\n\n\t/**\n\t * Moves the focus to the input and selects the value.\n\t */\n\tpublic select(): void {\n\t\tthis.element!.select();\n\t}\n\n\t/**\n\t * Focuses the input.\n\t */\n\tpublic focus(): void {\n\t\tthis.element!.focus();\n\t}\n\n\t/**\n\t * Resets the value of the input\n\t */\n\tpublic reset(): void {\n\t\tthis.value = this.element!.value = '';\n\t\tthis._updateIsEmpty();\n\t}\n\n\t/**\n\t * Updates the {@link #isEmpty} property value on demand.\n\t */\n\tprotected _updateIsEmpty(): void {\n\t\tthis.isEmpty = isInputElementEmpty( this.element! );\n\t}\n\n\t/**\n\t * Sets the `value` property of the {@link #element DOM element} on demand.\n\t */\n\tprivate _setDomElementValue( value: any ) {\n\t\tthis.element!.value = ( !value && value !== 0 ) ? '' : value;\n\t}\n}\n\nfunction isInputElementEmpty( domElement: HTMLInputElement | HTMLTextAreaElement ) {\n\treturn !domElement.value;\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/input/inputview\n */\n\nimport { type Locale } from '@ckeditor/ckeditor5-utils';\nimport { InputBase } from './inputbase.js';\n\nimport '../../theme/components/input/input.css';\n\n/**\n * The input view class.\n */\nexport class InputView extends InputBase {\n\t/**\n\t * Corresponds to the `inputmode` DOM attribute. Can be `text`, `numeric`, `decimal`, etc.\n\t *\n\t * @observable\n\t * @default 'text'\n\t */\n\tdeclare public inputMode: string;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale?: Locale ) {\n\t\tsuper( locale );\n\n\t\tthis.set( 'inputMode', 'text' );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tinputmode: bind.to( 'inputMode' )\n\t\t\t}\n\t\t} );\n\t}\n}\n\n/**\n * Fired when the user types in the input. Corresponds to the native\n * DOM `input` event.\n *\n * @eventName ~InputView#input\n */\nexport type InputViewInputEvent = {\n\tname: 'input';\n\targs: [ InputEvent ];\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/inputtext/inputtextview\n */\n\nimport { InputView } from '../input/inputview.js';\n\nimport type { Locale } from '@ckeditor/ckeditor5-utils';\n\n/**\n * The text input view class.\n */\nexport class InputTextView extends InputView {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale?: Locale ) {\n\t\tsuper( locale );\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\ttype: 'text',\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-input-text'\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/inputnumber/inputnumberview\n */\n\nimport { InputView } from '../input/inputview.js';\n\nimport type { Locale } from '@ckeditor/ckeditor5-utils';\n\n/**\n * The number input view class.\n */\nexport class InputNumberView extends InputView {\n\t/**\n\t * The value of the `min` DOM attribute (the lowest accepted value) set on the {@link #element}.\n\t *\n\t * @observable\n\t * @default undefined\n\t */\n\tdeclare public min: number | undefined;\n\n\t/**\n\t * The value of the `max` DOM attribute (the highest accepted value) set on the {@link #element}.\n\t *\n\t * @observable\n\t * @default undefined\n\t */\n\tdeclare public max: number | undefined;\n\n\t/**\n\t * The value of the `step` DOM attribute set on the {@link #element}.\n\t *\n\t * @observable\n\t * @default undefined\n\t */\n\tdeclare public step: number | undefined;\n\n\t/**\n\t * Creates an instance of the input number view.\n\t *\n\t * @param locale The {@link module:core/editor/editor~Editor#locale} instance.\n\t * @param options The options of the input.\n\t * @param options.min The value of the `min` DOM attribute (the lowest accepted value).\n\t * @param options.max The value of the `max` DOM attribute (the highest accepted value).\n\t * @param options.step The value of the `step` DOM attribute.\n\t */\n\tconstructor(\n\t\tlocale?: Locale,\n\t\t{ min, max, step }: {\n\t\t\tmin?: number;\n\t\t\tmax?: number;\n\t\t\tstep?: number;\n\t\t} = {}\n\t) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.set( 'min', min );\n\t\tthis.set( 'max', max );\n\t\tthis.set( 'step', step );\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\ttype: 'number',\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-input-number'\n\t\t\t\t],\n\t\t\t\tmin: bind.to( 'min' ),\n\t\t\t\tmax: bind.to( 'max' ),\n\t\t\t\tstep: bind.to( 'step' )\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/textarea/textareaview\n */\n\nimport { Rect, type Locale, toUnit, getBorderWidths, global, CKEditorError, isVisible, ResizeObserver } from '@ckeditor/ckeditor5-utils';\nimport { InputBase } from '../input/inputbase.js';\n\nimport '../../theme/components/input/input.css';\nimport '../../theme/components/textarea/textarea.css';\n\n/**\n * The textarea view class.\n *\n * ```ts\n * const textareaView = new TextareaView();\n *\n * textareaView.minRows = 2;\n * textareaView.maxRows = 10;\n *\n * textareaView.render();\n *\n * document.body.append( textareaView.element );\n * ```\n */\nexport class TextareaView extends InputBase<HTMLTextAreaElement> {\n\t/**\n\t * Specifies the visible height of a text area, in lines.\n\t *\n\t * @observable\n\t * @default 2\n\t */\n\tdeclare public minRows: number;\n\n\t/**\n\t * Specifies the maximum number of rows.\n\t *\n\t * @observable\n\t * @default 5\n\t */\n\tdeclare public maxRows: number;\n\n\t/**\n\t * Specifies the value of HTML attribute that indicates whether the user can resize the element.\n\t *\n\t * @observable\n\t * @default 'none'\n\t*/\n\tdeclare public resize: 'both' | 'horizontal' | 'vertical' | 'none';\n\n\t/**\n\t * An internal property that stores the current height of the textarea. Used for the DOM binding.\n\t *\n\t * @observable\n\t * @default null\n\t * @internal\n\t */\n\tdeclare public _height: number | null;\n\n\t/**\n\t * An instance of the resize observer used to detect when the view is visible or not and update\n\t * its height if any changes that affect it were made while it was invisible.\n\t *\n\t * **Note:** Created in {@link #render}.\n\t */\n\tprivate _resizeObserver: ResizeObserver | null;\n\n\t/**\n\t * A flag that indicates whether the {@link #_updateAutoGrowHeight} method should be called when the view becomes\n\t * visible again. See {@link #_resizeObserver}.\n\t */\n\tprivate _isUpdateAutoGrowHeightPending: boolean = false;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale?: Locale ) {\n\t\tsuper( locale );\n\n\t\tconst toPx = toUnit( 'px' );\n\n\t\tthis.set( 'minRows', 2 );\n\t\tthis.set( 'maxRows', 5 );\n\t\tthis.set( '_height', null );\n\t\tthis.set( 'resize', 'none' );\n\t\tthis._resizeObserver = null;\n\n\t\tthis.on( 'change:minRows', this._validateMinMaxRows.bind( this ) );\n\t\tthis.on( 'change:maxRows', this._validateMinMaxRows.bind( this ) );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.template!.tag = 'textarea';\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [ 'ck-textarea' ],\n\t\t\t\tstyle: {\n\t\t\t\t\theight: bind.to( '_height', height => height ? toPx( height ) : null ),\n\t\t\t\t\tresize: bind.to( 'resize' )\n\t\t\t\t},\n\t\t\t\trows: bind.to( 'minRows' )\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tlet wasVisible: boolean = false;\n\n\t\tthis.on( 'input', () => {\n\t\t\tthis._updateAutoGrowHeight( true );\n\t\t\tthis.fire<TextareaViewUpdateEvent>( 'update' );\n\t\t} );\n\n\t\tthis.on( 'change:value', () => {\n\t\t\t// The content needs to be updated by the browser after the value is changed. It takes a few ms.\n\t\t\tglobal.window.requestAnimationFrame( () => {\n\t\t\t\tif ( !isVisible( this.element ) ) {\n\t\t\t\t\tthis._isUpdateAutoGrowHeightPending = true;\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis._updateAutoGrowHeight();\n\t\t\t\tthis.fire<TextareaViewUpdateEvent>( 'update' );\n\t\t\t} );\n\t\t} );\n\n\t\t// It may occur that the Textarea size needs to be updated (e.g. because it's content was changed)\n\t\t// when it is not visible or detached from DOM.\n\t\t// In such case, we need to detect the moment when it becomes visible again and update its height then.\n\t\t// We're using ResizeObserver for that as it is the most reliable way to detect when the element becomes visible.\n\t\t// IntersectionObserver didn't work well with the absolute positioned containers.\n\t\tthis._resizeObserver = new ResizeObserver( this.element!, evt => {\n\t\t\tconst isVisible = !!evt.contentRect.width && !!evt.contentRect.height;\n\n\t\t\tif ( !wasVisible && isVisible && this._isUpdateAutoGrowHeightPending ) {\n\t\t\t\t// We're wrapping the auto-grow logic in RAF because otherwise there is an error thrown\n\t\t\t\t// by the browser about recursive calls to the ResizeObserver. It used to happen in unit\n\t\t\t\t// tests only, though. Since there is no risk of infinite loop here, it can stay here.\n\t\t\t\tglobal.window.requestAnimationFrame( () => {\n\t\t\t\t\tthis._updateAutoGrowHeight();\n\t\t\t\t\tthis.fire<TextareaViewUpdateEvent>( 'update' );\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\twasVisible = isVisible;\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tif ( this._resizeObserver ) {\n\t\t\tthis._resizeObserver.destroy();\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override reset(): void {\n\t\tsuper.reset();\n\n\t\tthis._updateAutoGrowHeight();\n\t\tthis.fire<TextareaViewUpdateEvent>( 'update' );\n\t}\n\n\t/**\n\t * Updates the {@link #_height} of the view depending on {@link #minRows}, {@link #maxRows}, and the current content size.\n\t *\n\t * **Note**: This method overrides manual resize done by the user using a handle. It's a known bug.\n\t */\n\tprivate _updateAutoGrowHeight( shouldScroll?: boolean ): void {\n\t\tconst viewElement = this.element!;\n\n\t\tif ( !viewElement.offsetParent ) {\n\t\t\tthis._isUpdateAutoGrowHeightPending = true;\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isUpdateAutoGrowHeightPending = false;\n\n\t\tconst singleLineContentClone = getTextareaElementClone( viewElement, '1' );\n\t\tconst fullTextValueClone = getTextareaElementClone( viewElement, viewElement.value );\n\t\tconst singleLineContentStyles = singleLineContentClone.ownerDocument.defaultView!.getComputedStyle( singleLineContentClone );\n\n\t\tconst verticalPaddings = parseFloat( singleLineContentStyles.paddingTop ) + parseFloat( singleLineContentStyles.paddingBottom );\n\t\tconst borders = getBorderWidths( singleLineContentClone );\n\t\tconst lineHeight = parseFloat( singleLineContentStyles.lineHeight );\n\t\tconst verticalBorder = borders.top + borders.bottom;\n\n\t\tconst singleLineAreaDefaultHeight = new Rect( singleLineContentClone ).height;\n\t\tconst numberOfLines = Math.round( ( fullTextValueClone.scrollHeight - verticalPaddings ) / lineHeight );\n\n\t\tconst maxHeight = this.maxRows * lineHeight + verticalPaddings + verticalBorder;\n\n\t\t// There's a --ck-ui-component-min-height CSS custom property that enforces min height of the component.\n\t\t// This min-height is relevant only when there's one line of text. Other than that, we can rely on line-height.\n\t\tconst minHeight = numberOfLines === 1 ? singleLineAreaDefaultHeight : this.minRows * lineHeight + verticalPaddings + verticalBorder;\n\n\t\t// The size of textarea is controlled by height style instead of rows attribute because event though it is\n\t\t// a more complex solution, it is immune to the layout textarea has been rendered in (gird, flex).\n\t\tthis._height = Math.min(\n\t\t\tMath.max(\n\t\t\t\tMath.max( numberOfLines, this.minRows ) * lineHeight + verticalPaddings + verticalBorder,\n\t\t\t\tminHeight\n\t\t\t),\n\t\t\tmaxHeight\n\t\t);\n\n\t\tif ( shouldScroll ) {\n\t\t\tviewElement.scrollTop = viewElement.scrollHeight;\n\t\t}\n\n\t\tsingleLineContentClone.remove();\n\t\tfullTextValueClone.remove();\n\t}\n\n\t/**\n\t * Validates the {@link #minRows} and {@link #maxRows} properties and warns in the console if the configuration is incorrect.\n\t */\n\tprivate _validateMinMaxRows() {\n\t\tif ( this.minRows > this.maxRows ) {\n\t\t\t/**\n\t\t\t * The minimum number of rows is greater than the maximum number of rows.\n\t\t\t *\n\t\t\t * @error ui-textarea-view-min-rows-greater-than-max-rows\n\t\t\t * @param {module:ui/textarea/textareaview~TextareaView} textareaView The misconfigured textarea view instance.\n\t\t\t * @param {number} minRows The value of `minRows` property.\n\t\t\t * @param {number} maxRows The value of `maxRows` property.\n\t\t\t */\n\t\t\tthrow new CKEditorError( 'ui-textarea-view-min-rows-greater-than-max-rows', {\n\t\t\t\ttextareaView: this,\n\t\t\t\tminRows: this.minRows,\n\t\t\t\tmaxRows: this.maxRows\n\t\t\t} );\n\t\t}\n\t}\n}\n\nfunction getTextareaElementClone( element: HTMLTextAreaElement, value: string ): HTMLTextAreaElement {\n\tconst clone = element.cloneNode() as HTMLTextAreaElement;\n\n\tclone.style.position = 'absolute';\n\tclone.style.top = '-99999px';\n\tclone.style.left = '-99999px';\n\tclone.style.height = 'auto';\n\tclone.style.overflow = 'hidden';\n\tclone.style.width = element.ownerDocument.defaultView!.getComputedStyle( element ).width;\n\tclone.tabIndex = -1;\n\tclone.rows = 1;\n\tclone.value = value;\n\n\telement.parentNode!.insertBefore( clone, element );\n\n\treturn clone;\n}\n\n/**\n * Fired every time the layout of the {@link module:ui/textarea/textareaview~TextareaView} possibly changed as a result\n * of the user input or the value change via {@link module:ui/textarea/textareaview~TextareaView#value}.\n *\n * @eventName ~TextareaView#update\n */\nexport type TextareaViewUpdateEvent = {\n\tname: 'update';\n\targs: [];\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/dropdown/dropdownpanelview\n */\n\nimport { View } from '../view.js';\nimport { type ViewCollection } from '../viewcollection.js';\nimport { type DropdownPanelFocusable } from './dropdownpanelfocusable.js';\n\nimport { logWarning, type Locale } from '@ckeditor/ckeditor5-utils';\n\n/**\n * The dropdown panel view class.\n *\n * See {@link module:ui/dropdown/dropdownview~DropdownView} to learn about the common usage.\n */\nexport class DropdownPanelView extends View implements DropdownPanelFocusable {\n\t/**\n\t * Collection of the child views in this panel.\n\t *\n\t * A common child type is the {@link module:ui/list/listview~ListView} and {@link module:ui/toolbar/toolbarview~ToolbarView}.\n\t * See {@link module:ui/dropdown/utils~addListToDropdown} and\n\t * {@link module:ui/dropdown/utils~addToolbarToDropdown} to learn more about child views of dropdowns.\n\t */\n\tpublic readonly children: ViewCollection;\n\n\t/**\n\t * Controls whether the panel is visible.\n\t *\n\t * @observable\n\t */\n\tdeclare public isVisible: boolean;\n\n\t/**\n\t * The position of the panel, relative to the parent.\n\t *\n\t * This property is reflected in the CSS class set to {@link #element} that controls\n\t * the position of the panel.\n\t *\n\t * @observable\n\t * @default 'se'\n\t */\n\tdeclare public position: PanelPosition;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale?: Locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.set( 'isVisible', false );\n\t\tthis.set( 'position', 'se' );\n\n\t\tthis.children = this.createCollection();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-reset',\n\t\t\t\t\t'ck-dropdown__panel',\n\t\t\t\t\tbind.to( 'position', value => `ck-dropdown__panel_${ value }` ),\n\t\t\t\t\tbind.if( 'isVisible', 'ck-dropdown__panel-visible' )\n\t\t\t\t],\n\t\t\t\ttabindex: '-1'\n\t\t\t},\n\n\t\t\tchildren: this.children,\n\n\t\t\ton: {\n\t\t\t\t// Drag and drop in the panel should not break the selection in the editor.\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/228\n\t\t\t\tselectstart: bind.to( evt => {\n\t\t\t\t\tif ( ( evt.target as HTMLElement ).tagName.toLocaleLowerCase() === 'input' ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t} )\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Focuses the first view in the {@link #children} collection.\n\t *\n\t * See also {@link module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable}.\n\t */\n\tpublic focus(): void {\n\t\tif ( this.children.length ) {\n\t\t\tconst firstChild: any = this.children.first;\n\n\t\t\tif ( typeof firstChild.focus === 'function' ) {\n\t\t\t\tfirstChild.focus();\n\t\t\t} else {\n\t\t\t\t/**\n\t\t\t\t * The child view of a dropdown could not be focused because it is missing the `focus()` method.\n\t\t\t\t *\n\t\t\t\t * This warning appears when a dropdown {@link module:ui/dropdown/dropdownview~DropdownView#isOpen gets open} and it\n\t\t\t\t * attempts to focus the {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView#children first child} of its panel\n\t\t\t\t * but the child does not implement the\n\t\t\t\t * {@link module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable focusable interface}.\n\t\t\t\t *\n\t\t\t\t * Focusing the content of a dropdown on open greatly improves the accessibility. Please make sure the view instance\n\t\t\t\t * provides the `focus()` method for the best user experience.\n\t\t\t\t *\n\t\t\t\t * @error ui-dropdown-panel-focus-child-missing-focus\n\t\t\t\t * @param {module:ui/view~View} childView Child view.\n\t\t\t\t * @param {module:ui/dropdown/dropdownpanelview~DropdownPanelView} dropdownPanel A parent of a child.\n\t\t\t\t */\n\t\t\t\tlogWarning( 'ui-dropdown-panel-focus-child-missing-focus', { childView: this.children.first, dropdownPanel: this } );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Focuses the view element or last item in view collection on opening dropdown's panel.\n\t *\n\t * See also {@link module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable}.\n\t */\n\tpublic focusLast(): void {\n\t\tif ( this.children.length ) {\n\t\t\tconst lastChild: any = this.children.last;\n\n\t\t\tif ( typeof lastChild.focusLast === 'function' ) {\n\t\t\t\tlastChild.focusLast();\n\t\t\t} else {\n\t\t\t\tlastChild.focus();\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * The position of the panel, relative to the parent.\n */\nexport type PanelPosition = 's' | 'se' | 'sw' | 'sme' | 'smw' | 'n' | 'ne' | 'nw' | 'nme' | 'nmw';\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/dropdown/dropdownview\n */\n\nimport { View } from '../view.js';\n\nimport type { DropdownButton, DropdownButtonOpenEvent } from './button/dropdownbutton.js';\nimport type { DropdownPanelView, PanelPosition } from './dropdownpanelview.js';\nimport type { FocusableView } from '../focuscycler.js';\nimport { type ListView } from '../list/listview.js';\nimport { type ToolbarView } from '../toolbar/toolbarview.js';\nimport { type DropdownMenuRootListView } from './menu/dropdownmenurootlistview.js';\n\nimport {\n\tKeystrokeHandler,\n\tFocusTracker,\n\tgetOptimalPosition,\n\ttype Locale,\n\ttype ObservableChangeEvent,\n\ttype PositioningFunction\n} from '@ckeditor/ckeditor5-utils';\n\nimport '../../theme/components/dropdown/dropdown.css';\n\n/**\n * The dropdown view class. It manages the dropdown button and dropdown panel.\n *\n * In most cases, the easiest way to create a dropdown is by using the {@link module:ui/dropdown/utils~createDropdown}\n * util:\n *\n * ```ts\n * const dropdown = createDropdown( locale );\n *\n * // Configure dropdown's button properties:\n * dropdown.buttonView.set( {\n * \tlabel: 'A dropdown',\n * \twithText: true\n * } );\n *\n * dropdown.render();\n *\n * dropdown.panelView.element.textContent = 'Content of the panel';\n *\n * // Will render a dropdown with a panel containing a \"Content of the panel\" text.\n * document.body.appendChild( dropdown.element );\n * ```\n *\n * If you want to add a richer content to the dropdown panel, you can use the {@link module:ui/dropdown/utils~addListToDropdown}\n * and {@link module:ui/dropdown/utils~addToolbarToDropdown} helpers. See more examples in\n * {@link module:ui/dropdown/utils~createDropdown} documentation.\n *\n * If you want to create a completely custom dropdown, then you can compose it manually:\n *\n * ```ts\n * const button = new DropdownButtonView( locale );\n * const panel = new DropdownPanelView( locale );\n * const dropdown = new DropdownView( locale, button, panel );\n *\n * button.set( {\n * \tlabel: 'A dropdown',\n * \twithText: true\n * } );\n *\n * dropdown.render();\n *\n * panel.element.textContent = 'Content of the panel';\n *\n * // Will render a dropdown with a panel containing a \"Content of the panel\" text.\n * document.body.appendChild( dropdown.element );\n * ```\n *\n * However, dropdown created this way will contain little behavior. You will need to implement handlers for actions\n * such as {@link module:ui/bindings/clickoutsidehandler~clickOutsideHandler clicking outside an open dropdown}\n * (which should close it) and support for arrow keys inside the panel. Therefore, unless you really know what\n * you do and you really need to do it, it is recommended to use the {@link module:ui/dropdown/utils~createDropdown} helper.\n */\nexport class DropdownView extends View<HTMLDivElement> {\n\t/**\n\t * Button of the dropdown view. Clicking the button opens the {@link #panelView}.\n\t */\n\tpublic readonly buttonView: DropdownButton & FocusableView;\n\n\t/**\n\t * Panel of the dropdown. It opens when the {@link #buttonView} is\n\t * {@link module:ui/button/button~Button#event:execute executed} (i.e. clicked).\n\t *\n\t * Child views can be added to the panel's `children` collection:\n\t *\n\t * ```ts\n\t * dropdown.panelView.children.add( childView );\n\t * ```\n\t *\n\t * See {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView#children} and\n\t * {@link module:ui/viewcollection~ViewCollection#add}.\n\t */\n\tpublic readonly panelView: DropdownPanelView;\n\n\t/**\n\t * Tracks information about the DOM focus in the dropdown.\n\t */\n\tpublic readonly focusTracker: FocusTracker;\n\n\t/**\n\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}. It manages\n\t * keystrokes of the dropdown:\n\t *\n\t * * <kbd>▼</kbd> opens the dropdown,\n\t * * <kbd>◀</kbd> and <kbd>Esc</kbd> closes the dropdown.\n\t */\n\tpublic readonly keystrokes: KeystrokeHandler;\n\n\t/**\n\t * A child {@link module:ui/list/listview~ListView list view} of the dropdown located\n\t * in its {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel}.\n\t *\n\t * **Note**: Only supported when dropdown has list view added using {@link module:ui/dropdown/utils~addListToDropdown}.\n\t */\n\tpublic listView?: ListView;\n\n\t/**\n\t * A child toolbar of the dropdown located in the\n\t * {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel}.\n\t *\n\t * **Note**: Only supported when dropdown has a toolbar added using {@link module:ui/dropdown/utils~addToolbarToDropdown}.\n\t */\n\tpublic toolbarView?: ToolbarView;\n\n\t/**\n\t * A child menu component of the dropdown located\n\t * in its {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel}.\n\t *\n\t * **Note**: Only supported when dropdown has a menu added using {@link module:ui/dropdown/utils~addMenuToDropdown}.\n\t */\n\tpublic menuView?: DropdownMenuRootListView;\n\n\t/**\n\t * Controls whether the dropdown view is open, i.e. shows or hides the {@link #panelView panel}.\n\t *\n\t * **Note**: When the dropdown gets open, it will attempt to call `focus()` on the first child of its {@link #panelView}.\n\t * See {@link module:ui/dropdown/utils~addToolbarToDropdown}, {@link module:ui/dropdown/utils~addListToDropdown}, and\n\t * {@link module:ui/dropdown/utils~focusChildOnDropdownOpen} to learn more about focus management in dropdowns.\n\t *\n\t * @observable\n\t */\n\tdeclare public isOpen: boolean;\n\n\t/**\n\t * Controls whether the dropdown is enabled, i.e. it can be clicked and execute an action.\n\t *\n\t * See {@link module:ui/button/buttonview~ButtonView#isEnabled}.\n\t *\n\t * @observable\n\t */\n\tdeclare public isEnabled: boolean;\n\n\t/**\n\t * (Optional) The additional CSS class set on the dropdown {@link #element}.\n\t *\n\t * @observable\n\t */\n\tdeclare public class: string | undefined;\n\n\t/**\n\t * (Optional) The `id` attribute of the dropdown (i.e. to pair with a `<label>` element).\n\t *\n\t * @observable\n\t */\n\tdeclare public id: string | undefined;\n\n\t/**\n\t * The position of the panel, relative to the dropdown.\n\t *\n\t * **Note**: When `'auto'`, the panel will use one of the remaining positions to stay\n\t * in the viewport, visible to the user. The positions correspond directly to\n\t * {@link module:ui/dropdown/dropdownview~DropdownView.defaultPanelPositions default panel positions}.\n\t *\n\t * **Note**: This value has an impact on the\n\t * {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView#position} property\n\t * each time the panel becomes {@link #isOpen open}.\n\t *\n\t * @observable\n\t * @default 'auto'\n\t */\n\tdeclare public panelPosition: PanelPosition | 'auto';\n\n\t/**\n\t * @observable\n\t */\n\tdeclare public ariaDescribedById: string | undefined;\n\n\t/**\n\t * Creates an instance of the dropdown.\n\t *\n\t * Also see {@link #render}.\n\t *\n\t * @param locale The localization services instance.\n\t */\n\tconstructor(\n\t\tlocale: Locale | undefined,\n\t\tbuttonView: DropdownButton & FocusableView,\n\t\tpanelView: DropdownPanelView\n\t) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.buttonView = buttonView;\n\t\tthis.panelView = panelView;\n\n\t\tthis.set( 'isOpen', false );\n\t\tthis.set( 'isEnabled', true );\n\t\tthis.set( 'class', undefined );\n\t\tthis.set( 'id', undefined );\n\t\tthis.set( 'panelPosition', 'auto' );\n\n\t\t// Toggle the visibility of the panel when the dropdown becomes open.\n\t\tthis.panelView.bind( 'isVisible' ).to( this, 'isOpen' );\n\n\t\tthis.keystrokes = new KeystrokeHandler();\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-dropdown',\n\t\t\t\t\tbind.to( 'class' ),\n\t\t\t\t\tbind.if( 'isEnabled', 'ck-disabled', value => !value )\n\t\t\t\t],\n\t\t\t\tid: bind.to( 'id' ),\n\t\t\t\t'aria-describedby': bind.to( 'ariaDescribedById' )\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\tbuttonView,\n\t\t\t\tpanelView\n\t\t\t]\n\t\t} );\n\n\t\tbuttonView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-dropdown__button'\n\t\t\t\t],\n\t\t\t\t'data-cke-tooltip-disabled': bind.to( 'isOpen' )\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tthis.focusTracker.add( this.buttonView.element! );\n\t\tthis.focusTracker.add( this.panelView.element! );\n\n\t\t// Toggle the dropdown when its button has been clicked.\n\t\tthis.listenTo<DropdownButtonOpenEvent>( this.buttonView, 'open', () => {\n\t\t\tthis.isOpen = !this.isOpen;\n\t\t} );\n\n\t\t// Let the dropdown control the position of the panel. The position must\n\t\t// be updated every time the dropdown is open.\n\t\tthis.on<ObservableChangeEvent<boolean>>( 'change:isOpen', ( evt, name, isOpen ) => {\n\t\t\tif ( !isOpen ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If \"auto\", find the best position of the panel to fit into the viewport.\n\t\t\t// Otherwise, simply assign the static position.\n\t\t\tif ( this.panelPosition === 'auto' ) {\n\t\t\t\tconst optimalPanelPosition = DropdownView._getOptimalPosition( {\n\t\t\t\t\telement: this.panelView.element!,\n\t\t\t\t\ttarget: this.buttonView.element!,\n\t\t\t\t\tfitInViewport: true,\n\t\t\t\t\tpositions: this._panelPositions\n\t\t\t\t} );\n\n\t\t\t\tthis.panelView.position = (\n\t\t\t\t\toptimalPanelPosition ? optimalPanelPosition.name : this._defaultPanelPositionName\n\t\t\t\t) as PanelPosition;\n\t\t\t} else {\n\t\t\t\tthis.panelView.position = this.panelPosition;\n\t\t\t}\n\t\t} );\n\n\t\t// Listen for keystrokes coming from within #element.\n\t\tthis.keystrokes.listenTo( this.element! );\n\n\t\tconst closeDropdown = ( data: unknown, cancel: () => void ) => {\n\t\t\tif ( this.isOpen ) {\n\t\t\t\tthis.isOpen = false;\n\t\t\t\tcancel();\n\t\t\t}\n\t\t};\n\n\t\t// Open the dropdown panel using the arrow down key, just like with return or space.\n\t\tthis.keystrokes.set( 'arrowdown', ( data, cancel ) => {\n\t\t\t// Don't open if the dropdown is disabled or already open.\n\t\t\tif ( this.buttonView.isEnabled && !this.isOpen ) {\n\t\t\t\tthis.isOpen = true;\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\n\t\t// Block the right arrow key (until nested dropdowns are implemented).\n\t\tthis.keystrokes.set( 'arrowright', ( data, cancel ) => {\n\t\t\tif ( this.isOpen ) {\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\n\t\t// Close the dropdown using the arrow left/escape key.\n\t\tthis.keystrokes.set( 'arrowleft', closeDropdown );\n\t\tthis.keystrokes.set( 'esc', closeDropdown );\n\t}\n\n\t/**\n\t * Focuses the {@link #buttonView}.\n\t */\n\tpublic focus(): void {\n\t\tthis.buttonView.focus();\n\t}\n\n\t/**\n\t * Returns {@link #panelView panel} positions to be used by the\n\t * {@link module:utils/dom/position~getOptimalPosition `getOptimalPosition()`}\n\t * utility considering the direction of the language the UI of the editor is displayed in.\n\t */\n\tprivate get _panelPositions(): Array<PositioningFunction> {\n\t\tconst {\n\t\t\tsouth, north,\n\t\t\tsouthEast, southWest,\n\t\t\tnorthEast, northWest,\n\t\t\tsouthMiddleEast, southMiddleWest,\n\t\t\tnorthMiddleEast, northMiddleWest\n\t\t} = DropdownView.defaultPanelPositions;\n\n\t\tif ( this.locale!.uiLanguageDirection !== 'rtl' ) {\n\t\t\treturn [\n\t\t\t\tsouthEast, southWest, southMiddleEast, southMiddleWest, south,\n\t\t\t\tnorthEast, northWest, northMiddleEast, northMiddleWest, north\n\t\t\t];\n\t\t} else {\n\t\t\treturn [\n\t\t\t\tsouthWest, southEast, southMiddleWest, southMiddleEast, south,\n\t\t\t\tnorthWest, northEast, northMiddleWest, northMiddleEast, north\n\t\t\t];\n\t\t}\n\t}\n\n\t/**\n\t * Returns the default position of the dropdown panel based on the direction of the UI language.\n\t * It is used when the {@link #panelPosition} is set to `'auto'` and the panel has not found a\n\t * suitable position to fit into the viewport.\n\t */\n\tprivate get _defaultPanelPositionName(): PanelPosition {\n\t\treturn this.locale!.uiLanguageDirection === 'rtl' ? 'sw' : 'se';\n\t}\n\n\t/**\n\t * A set of positioning functions used by the dropdown view to determine\n\t * the optimal position (i.e. fitting into the browser viewport) of its\n\t * {@link module:ui/dropdown/dropdownview~DropdownView#panelView panel} when\n\t * {@link module:ui/dropdown/dropdownview~DropdownView#panelPosition} is set to 'auto'`.\n\t *\n\t * The available positioning functions are as follow:\n\t *\n\t * **South**\n\t *\n\t * * `south`\n\t *\n\t * ```\n\t *\t\t\t[ Button ]\n\t *\t\t+-----------------+\n\t *\t\t|      Panel      |\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * * `southEast`\n\t *\n\t * ```\n\t *\t\t[ Button ]\n\t *\t\t+-----------------+\n\t *\t\t|      Panel      |\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * * `southWest`\n\t *\n\t * ```\n\t *\t\t         [ Button ]\n\t *\t\t+-----------------+\n\t *\t\t|      Panel      |\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * * `southMiddleEast`\n\t *\n\t * ```\n\t *\t\t  [ Button ]\n\t *\t\t+-----------------+\n\t *\t\t|      Panel      |\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * * `southMiddleWest`\n\t *\n\t * ```\n\t *\t\t       [ Button ]\n\t *\t\t+-----------------+\n\t *\t\t|      Panel      |\n\t *\t\t+-----------------+\n\t * ```\n\t *\n\t * **North**\n\t *\n\t * * `north`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|      Panel      |\n\t *\t\t+-----------------+\n\t *\t\t    [ Button ]\n\t * ```\n\t *\n\t * * `northEast`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|      Panel      |\n\t *\t\t+-----------------+\n\t *\t\t[ Button ]\n\t * ```\n\t *\n\t * * `northWest`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|      Panel      |\n\t *\t\t+-----------------+\n\t *\t\t         [ Button ]\n\t * ```\n\t *\n\t * * `northMiddleEast`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|      Panel      |\n\t *\t\t+-----------------+\n\t *\t\t  [ Button ]\n\t * ```\n\t *\n\t * * `northMiddleWest`\n\t *\n\t * ```\n\t *\t\t+-----------------+\n\t *\t\t|      Panel      |\n\t *\t\t+-----------------+\n\t *\t\t       [ Button ]\n\t * ```\n\t *\n\t * Positioning functions are compatible with {@link module:utils/dom/position~DomPoint}.\n\t *\n\t * The name that position function returns will be reflected in dropdown panel's class that\n\t * controls its placement. See {@link module:ui/dropdown/dropdownview~DropdownView#panelPosition}\n\t * to learn more.\n\t */\n\tpublic static defaultPanelPositions: Record<string, PositioningFunction> = {\n\t\tsouth: ( buttonRect, panelRect ) => {\n\t\t\treturn {\n\t\t\t\ttop: buttonRect.bottom,\n\t\t\t\tleft: buttonRect.left - ( panelRect.width - buttonRect.width ) / 2,\n\t\t\t\tname: 's'\n\t\t\t};\n\t\t},\n\t\tsouthEast: buttonRect => {\n\t\t\treturn {\n\t\t\t\ttop: buttonRect.bottom,\n\t\t\t\tleft: buttonRect.left,\n\t\t\t\tname: 'se'\n\t\t\t};\n\t\t},\n\t\tsouthWest: ( buttonRect, panelRect ) => {\n\t\t\treturn {\n\t\t\t\ttop: buttonRect.bottom,\n\t\t\t\tleft: buttonRect.left - panelRect.width + buttonRect.width,\n\t\t\t\tname: 'sw'\n\t\t\t};\n\t\t},\n\t\tsouthMiddleEast: ( buttonRect, panelRect ) => {\n\t\t\treturn {\n\t\t\t\ttop: buttonRect.bottom,\n\t\t\t\tleft: buttonRect.left - ( panelRect.width - buttonRect.width ) / 4,\n\t\t\t\tname: 'sme'\n\t\t\t};\n\t\t},\n\t\tsouthMiddleWest: ( buttonRect, panelRect ) => {\n\t\t\treturn {\n\t\t\t\ttop: buttonRect.bottom,\n\t\t\t\tleft: buttonRect.left - ( panelRect.width - buttonRect.width ) * 3 / 4,\n\t\t\t\tname: 'smw'\n\t\t\t};\n\t\t},\n\t\tnorth: ( buttonRect, panelRect ) => {\n\t\t\treturn {\n\t\t\t\ttop: buttonRect.top - panelRect.height,\n\t\t\t\tleft: buttonRect.left - ( panelRect.width - buttonRect.width ) / 2,\n\t\t\t\tname: 'n'\n\t\t\t};\n\t\t},\n\t\tnorthEast: ( buttonRect, panelRect ) => {\n\t\t\treturn {\n\t\t\t\ttop: buttonRect.top - panelRect.height,\n\t\t\t\tleft: buttonRect.left,\n\t\t\t\tname: 'ne'\n\t\t\t};\n\t\t},\n\t\tnorthWest: ( buttonRect, panelRect ) => {\n\t\t\treturn {\n\t\t\t\ttop: buttonRect.top - panelRect.height,\n\t\t\t\tleft: buttonRect.left - panelRect.width + buttonRect.width,\n\t\t\t\tname: 'nw'\n\t\t\t};\n\t\t},\n\t\tnorthMiddleEast: ( buttonRect, panelRect ) => {\n\t\t\treturn {\n\t\t\t\ttop: buttonRect.top - panelRect.height,\n\t\t\t\tleft: buttonRect.left - ( panelRect.width - buttonRect.width ) / 4,\n\t\t\t\tname: 'nme'\n\t\t\t};\n\t\t},\n\t\tnorthMiddleWest: ( buttonRect, panelRect ) => {\n\t\t\treturn {\n\t\t\t\ttop: buttonRect.top - panelRect.height,\n\t\t\t\tleft: buttonRect.left - ( panelRect.width - buttonRect.width ) * 3 / 4,\n\t\t\t\tname: 'nmw'\n\t\t\t};\n\t\t}\n\t};\n\n\t/**\n\t * A function used to calculate the optimal position for the dropdown panel.\n\t */\n\tprivate static _getOptimalPosition = getOptimalPosition;\n}\n\n/**\n * Fired when an item inside the dropdown is executed.\n *\n * **Note**: Only supported when dropdown was integrated with its child view using one of the helper functions:\n * {@link module:ui/dropdown/utils~addListToDropdown}, {@link module:ui/dropdown/utils~addToolbarToDropdown}, or\n * {@link module:ui/dropdown/utils~addMenuToDropdown}.\n *\n * When integrated with a list, it fires when a child of one of {@link module:ui/list/listitemview~ListItemView}s\n * fired `execute` event.\n *\n * When integrated with a toolbar, it fires when one of the buttons has been {@link module:ui/button/button~Button#event:execute executed}.\n *\n * When integrated with a nested menu, it fires when one of the menu buttons has been executed.\n *\n * In each case, the event is delegated from the component which fired it. It does not have additional parameters and `event.source` is the\n * original component.\n *\n * @eventName ~DropdownView#execute\n */\nexport type DropdownViewEvent = {\n\tname: 'execute';\n\targs: [];\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/dropdown/button/dropdownbuttonview\n */\n\nimport { IconDropdownArrow } from '@ckeditor/ckeditor5-icons';\nimport { ButtonView } from '../../button/buttonview.js';\nimport { type DropdownButton } from './dropdownbutton.js';\nimport { IconView } from '../../icon/iconview.js';\n\nimport type { Locale } from '@ckeditor/ckeditor5-utils';\n\n/**\n * The default dropdown button view class.\n *\n * ```ts\n * const view = new DropdownButtonView();\n *\n * view.set( {\n * \tlabel: 'A button',\n * \tkeystroke: 'Ctrl+B',\n * \ttooltip: true\n * } );\n *\n * view.render();\n *\n * document.body.append( view.element );\n * ```\n *\n * Also see the {@link module:ui/dropdown/utils~createDropdown `createDropdown()` util}.\n */\nexport class DropdownButtonView extends ButtonView implements DropdownButton {\n\t/**\n\t * An icon that displays arrow to indicate a dropdown button.\n\t */\n\tpublic readonly arrowView: IconView;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale?: Locale ) {\n\t\tsuper( locale );\n\n\t\tthis.arrowView = this._createArrowView();\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\t'aria-haspopup': true,\n\t\t\t\t'aria-expanded': this.bindTemplate.to( 'isOn', value => String( value ) )\n\t\t\t}\n\t\t} );\n\n\t\t// The DropdownButton interface expects the open event upon which will open the dropdown.\n\t\tthis.delegate( 'execute' ).to( this, 'open' );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tthis.children.add( this.arrowView );\n\t}\n\n\t/**\n\t * Creates a {@link module:ui/icon/iconview~IconView} instance as {@link #arrowView}.\n\t */\n\tprivate _createArrowView() {\n\t\tconst arrowView = new IconView();\n\n\t\tarrowView.content = IconDropdownArrow;\n\n\t\tarrowView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-dropdown__arrow'\n\t\t\t}\n\t\t} );\n\n\t\treturn arrowView;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/dropdown/menu/dropdownmenulistitembuttonview\n */\n\nimport type { Locale } from '@ckeditor/ckeditor5-utils';\n\nimport { ButtonView } from '../../button/buttonview.js';\n\nimport '../../../theme/components/dropdown/menu/dropdownmenulistitembutton.css';\n\n/**\n * Represents a view for a button in a dropdown menu list item.\n */\nexport class DropdownMenuListItemButtonView extends ButtonView {\n\tpublic readonly id: string;\n\n\tconstructor( locale: Locale, id: string, label: string ) {\n\t\tsuper( locale );\n\n\t\tthis.id = id;\n\n\t\tthis.set( {\n\t\t\twithText: true,\n\t\t\twithKeystroke: true,\n\t\t\ttooltip: false,\n\t\t\trole: 'menuitem',\n\t\t\tlabel\n\t\t} );\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-dropdown-menu-list__nested-menu__item__button'\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/dropdown/menu/dropdownmenubuttonview\n */\n\nimport { IconDropdownArrow } from '@ckeditor/ckeditor5-icons';\nimport { IconView } from '../../icon/iconview.js';\nimport { ListItemButtonView } from '../../button/listitembuttonview.js';\nimport type { Locale } from '@ckeditor/ckeditor5-utils';\n\nimport '../../../theme/components/dropdown/menu/dropdownmenubutton.css';\n\n/**\n * Represents a view for a dropdown menu button.\n */\nexport class DropdownMenuButtonView extends ListItemButtonView {\n\t/**\n\t * An icon that displays an arrow to indicate a direction of the menu.\n\t */\n\tpublic readonly arrowView: IconView;\n\n\t/**\n\t * Creates an instance of the dropdown menu button view.\n\t *\n\t * @param locale The localization services instance.\n\t */\n\tconstructor( locale: Locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.set( {\n\t\t\twithText: true,\n\t\t\trole: 'menuitem'\n\t\t} );\n\n\t\tthis.arrowView = this._createArrowView();\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-dropdown-menu-list__nested-menu__button'\n\t\t\t\t],\n\t\t\t\t'aria-haspopup': true,\n\t\t\t\t'aria-expanded': this.bindTemplate.to( 'isOn', value => String( value ) ),\n\t\t\t\t'data-cke-tooltip-disabled': bind.to( 'isOn' )\n\t\t\t},\n\t\t\ton: {\n\t\t\t\t'mouseenter': bind.to( 'mouseenter' )\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tthis.children.add( this.arrowView );\n\t}\n\n\t/**\n\t * Creates the arrow view instance.\n\t *\n\t * @private\n\t */\n\tprivate _createArrowView() {\n\t\tconst arrowView = new IconView();\n\n\t\tarrowView.content = IconDropdownArrow;\n\t\tarrowView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-dropdown-menu-list__nested-menu__button__arrow'\n\t\t\t}\n\t\t} );\n\n\t\treturn arrowView;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/list/listitemview\n */\n\nimport { View } from '../view.js';\n\nimport type { FocusableView } from '../focuscycler.js';\nimport { type ViewCollection } from '../viewcollection.js';\n\nimport type { Locale } from '@ckeditor/ckeditor5-utils';\n\n/**\n * The list item view class.\n */\nexport class ListItemView extends View {\n\t/**\n\t * Collection of the child views inside of the list item {@link #element}.\n\t */\n\tpublic readonly children: ViewCollection<FocusableView>;\n\n\t/**\n\t * Controls whether the item view is visible. Visible by default, list items are hidden\n\t * using a CSS class.\n\t *\n\t * @observable\n\t * @default true\n\t */\n\tdeclare public isVisible: boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale?: Locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.set( 'isVisible', true );\n\n\t\tthis.children = this.createCollection();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'li',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-list__item',\n\t\t\t\t\tbind.if( 'isVisible', 'ck-hidden', value => !value )\n\t\t\t\t],\n\t\t\t\trole: 'presentation'\n\t\t\t},\n\n\t\t\tchildren: this.children\n\t\t} );\n\t}\n\n\t/**\n\t * Focuses the list item.\n\t */\n\tpublic focus(): void {\n\t\tif ( this.children.first ) {\n\t\t\tthis.children.first.focus();\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/list/listseparatorview\n */\n\nimport { View } from '../view.js';\n\nimport type { Locale } from '@ckeditor/ckeditor5-utils';\n\n/**\n * The list separator view class.\n */\nexport class ListSeparatorView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale?: Locale ) {\n\t\tsuper( locale );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'li',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-list__separator'\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/list/listitemgroupview\n */\n\nimport { View } from '../view.js';\nimport { type ViewCollection } from '../viewcollection.js';\nimport { ListView } from './listview.js';\nimport { type ListItemView } from './listitemview.js';\nimport { LabelView } from '../label/labelview.js';\nimport { ListSeparatorView } from './listseparatorview.js';\n\nimport { type Locale } from '@ckeditor/ckeditor5-utils';\n\n/**\n * The list item group view class.\n */\nexport class ListItemGroupView extends View {\n\t/**\n\t * The visible label of the group.\n\t *\n\t * @observable\n\t * @default ''\n\t */\n\tdeclare public label: string;\n\n\t/**\n\t * Label of the group view. Its text is configurable using the {@link #label label attribute}.\n\t *\n\t * If a custom label view is not passed in `ListItemGroupView` constructor, the label is an instance\n\t * of {@link module:ui/label/labelview~LabelView}.\n\t */\n\tpublic readonly labelView: LabelView;\n\n\t/**\n\t * Collection of the child list items inside this group.\n\t */\n\tpublic readonly items: ListView[ 'items' ];\n\n\t/**\n\t * Collection of the child elements of the group.\n\t */\n\tpublic readonly children: ViewCollection;\n\n\t/**\n\t * Controls whether the item view is visible. Visible by default, list items are hidden\n\t * using a CSS class.\n\t *\n\t * @observable\n\t * @default true\n\t */\n\tdeclare public isVisible: boolean;\n\n\t/**\n\t * Creates an instance of the list item group view class.\n\t *\n\t * @param locale The {@link module:core/editor/editor~Editor#locale} instance.\n\t * @param labelView The instance of the group's label. If not provided, an instance of\n\t * {@link module:ui/label/labelview~LabelView} is used.\n\t */\n\tconstructor( locale?: Locale, labelView: LabelView = new LabelView() ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\t\tconst nestedList = new ListView( locale );\n\n\t\tthis.set( {\n\t\t\tlabel: '',\n\t\t\tisVisible: true\n\t\t} );\n\n\t\tthis.labelView = labelView;\n\t\tthis.labelView.bind( 'text' ).to( this, 'label' );\n\n\t\tthis.children = this.createCollection();\n\t\tthis.children.addMany( [ this.labelView, nestedList ] );\n\n\t\tnestedList.set( {\n\t\t\trole: 'group',\n\t\t\tariaLabelledBy: labelView.id\n\t\t} );\n\n\t\t// Disable focus tracking and accessible navigation in the child list.\n\t\tnestedList.focusTracker.destroy();\n\t\tnestedList.keystrokes.destroy();\n\n\t\tthis.items = nestedList.items;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'li',\n\n\t\t\tattributes: {\n\t\t\t\trole: 'presentation',\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-list__group',\n\t\t\t\t\tbind.if( 'isVisible', 'ck-hidden', value => !value )\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: this.children\n\t\t} );\n\t}\n\n\t/**\n\t * Focuses the list item (which is not a separator).\n\t */\n\tpublic focus(): void {\n\t\tif ( this.items ) {\n\t\t\tconst firstListItem = this.items.find( item => !( item instanceof ListSeparatorView ) ) as ListItemView | ListItemGroupView;\n\t\t\tif ( firstListItem ) {\n\t\t\t\tfirstListItem.focus();\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/list/listview\n */\n\nimport { View } from '../view.js';\nimport { FocusCycler, type FocusableView } from '../focuscycler.js';\n\nimport { ListItemView } from './listitemview.js';\nimport { ListItemGroupView } from './listitemgroupview.js';\nimport { type ListSeparatorView } from './listseparatorview.js';\nimport { type DropdownPanelFocusable } from '../dropdown/dropdownpanelfocusable.js';\nimport { ViewCollection } from '../viewcollection.js';\n\nimport {\n\tFocusTracker,\n\tKeystrokeHandler,\n\ttype Locale,\n\ttype GetCallback,\n\ttype CollectionChangeEvent\n} from '@ckeditor/ckeditor5-utils';\n\nimport '../../theme/components/list/list.css';\n\n/**\n * The list view class.\n */\nexport class ListView extends View<HTMLUListElement> implements DropdownPanelFocusable {\n\t/**\n\t * The collection of focusable views in the list. It is used to determine accessible navigation\n\t * between the {@link module:ui/list/listitemview~ListItemView list items} and\n\t * {@link module:ui/list/listitemgroupview~ListItemGroupView list groups}.\n\t */\n\tpublic readonly focusables: ViewCollection<FocusableView>;\n\n\t/**\n\t * Collection of the child list views.\n\t */\n\tpublic readonly items: ViewCollection<ListItemView | ListItemGroupView | ListSeparatorView>;\n\n\t/**\n\t * Tracks information about DOM focus in the list.\n\t */\n\tpublic readonly focusTracker: FocusTracker;\n\n\t/**\n\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t */\n\tpublic readonly keystrokes: KeystrokeHandler;\n\n\t/**\n\t * Label used by assistive technologies to describe this list element.\n\t *\n\t * @observable\n\t */\n\tdeclare public ariaLabel: string | undefined;\n\n\t/**\n\t * (Optional) The ARIA property reflected by the `aria-ariaLabelledBy` DOM attribute used by assistive technologies.\n\t *\n\t * @observable\n\t */\n\tdeclare public ariaLabelledBy?: string | undefined;\n\n\t/**\n\t * The property reflected by the `role` DOM attribute to be used by assistive technologies.\n\t *\n\t * @observable\n\t */\n\tdeclare public role: string | undefined;\n\n\t/**\n\t * Helps cycling over focusable {@link #items} in the list.\n\t */\n\tprivate readonly _focusCycler: FocusCycler;\n\n\t/**\n\t * A cached map of {@link module:ui/list/listitemgroupview~ListItemGroupView} to `change` event listeners for their `items`.\n\t * Used for accessibility and keyboard navigation purposes.\n\t */\n\tprivate readonly _listItemGroupToChangeListeners: WeakMap<ListItemGroupView, GetCallback<ListItemsChangeEvent>> = new WeakMap();\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale?: Locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.focusables = new ViewCollection();\n\t\tthis.items = this.createCollection();\n\t\tthis.focusTracker = new FocusTracker();\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this.focusables,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate list items backwards using the arrowup key.\n\t\t\t\tfocusPrevious: 'arrowup',\n\n\t\t\t\t// Navigate toolbar items forwards using the arrowdown key.\n\t\t\t\tfocusNext: 'arrowdown'\n\t\t\t}\n\t\t} );\n\n\t\tthis.set( 'ariaLabel', undefined );\n\t\tthis.set( 'ariaLabelledBy', undefined );\n\t\tthis.set( 'role', undefined );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'ul',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-reset',\n\t\t\t\t\t'ck-list'\n\t\t\t\t],\n\t\t\t\trole: bind.to( 'role' ),\n\t\t\t\t'aria-label': bind.to( 'ariaLabel' ),\n\t\t\t\t'aria-labelledby': bind.to( 'ariaLabelledBy' )\n\t\t\t},\n\n\t\t\tchildren: this.items\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\t// Items added before rendering should be known to the #focusTracker.\n\t\tfor ( const item of this.items ) {\n\t\t\tif ( item instanceof ListItemGroupView ) {\n\t\t\t\tthis._registerFocusableItemsGroup( item );\n\t\t\t} else if ( item instanceof ListItemView ) {\n\t\t\t\tthis._registerFocusableListItem( item );\n\t\t\t}\n\t\t}\n\n\t\tthis.items.on<ListItemsChangeEvent>( 'change', ( evt, data ) => {\n\t\t\tfor ( const removed of data.removed ) {\n\t\t\t\tif ( removed instanceof ListItemGroupView ) {\n\t\t\t\t\tthis._deregisterFocusableItemsGroup( removed );\n\t\t\t\t} else if ( removed instanceof ListItemView ) {\n\t\t\t\t\tthis._deregisterFocusableListItem( removed );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( const added of Array.from( data.added ).reverse() ) {\n\t\t\t\tif ( added instanceof ListItemGroupView ) {\n\t\t\t\t\tthis._registerFocusableItemsGroup( added, data.index );\n\t\t\t\t} else {\n\t\t\t\t\tthis._registerFocusableListItem( added, data.index );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element! );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\n\t\tthis.focusTracker.destroy();\n\t\tthis.keystrokes.destroy();\n\t}\n\n\t/**\n\t * Focuses the first focusable in {@link #items}.\n\t */\n\tpublic focus(): void {\n\t\tthis._focusCycler.focusFirst();\n\t}\n\n\t/**\n\t * Focuses the first focusable in {@link #items}.\n\t */\n\tpublic focusFirst(): void {\n\t\tthis._focusCycler.focusFirst();\n\t}\n\n\t/**\n\t * Focuses the last focusable in {@link #items}.\n\t */\n\tpublic focusLast(): void {\n\t\tthis._focusCycler.focusLast();\n\t}\n\n\t/**\n\t * Registers a list item view in the focus tracker.\n\t *\n\t * @param item The list item view to be registered.\n\t * @param index Index of the list item view in the {@link #items} collection. If not specified, the item will be added at the end.\n\t */\n\tprivate _registerFocusableListItem( item: ListItemView, index?: number ) {\n\t\tthis.focusTracker.add( item.element! );\n\t\tthis.focusables.add( item, index );\n\t}\n\n\t/**\n\t * Removes a list item view from the focus tracker.\n\t *\n\t * @param item The list item view to be removed.\n\t */\n\tprivate _deregisterFocusableListItem( item: ListItemView ) {\n\t\tthis.focusTracker.remove( item.element! );\n\t\tthis.focusables.remove( item );\n\t}\n\n\t/**\n\t * Gets a callback that will be called when the `items` collection of a {@link module:ui/list/listitemgroupview~ListItemGroupView}\n\t * change.\n\t *\n\t * @param groupView The group view for which the callback will be created.\n\t * @returns The callback function to be used for the items `change` event listener in a group.\n\t */\n\tprivate _getOnGroupItemsChangeCallback( groupView: ListItemGroupView ): GetCallback<ListItemsChangeEvent> {\n\t\treturn ( evt, data ) => {\n\t\t\tfor ( const removed of data.removed ) {\n\t\t\t\tthis._deregisterFocusableListItem( removed );\n\t\t\t}\n\n\t\t\tfor ( const added of Array.from( data.added ).reverse() ) {\n\t\t\t\tthis._registerFocusableListItem( added, this.items.getIndex( groupView ) + data.index );\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Registers a list item group view (and its children) in the focus tracker.\n\t *\n\t * @param groupView A group view to be registered.\n\t * @param groupIndex Index of the group view in the {@link #items} collection. If not specified, the group will be added at the end.\n\t */\n\tprivate _registerFocusableItemsGroup( groupView: ListItemGroupView, groupIndex?: number ) {\n\t\tArray.from( groupView.items ).forEach( ( child, childIndex ) => {\n\t\t\tconst registeredChildIndex = typeof groupIndex !== 'undefined' ? groupIndex + childIndex : undefined;\n\n\t\t\tthis._registerFocusableListItem( child as ListItemView, registeredChildIndex );\n\t\t} );\n\n\t\tconst groupItemsChangeCallback = this._getOnGroupItemsChangeCallback( groupView );\n\n\t\t// Cache the reference to the callback in case the group is removed (see _deregisterFocusableItemsGroup()).\n\t\tthis._listItemGroupToChangeListeners.set( groupView, groupItemsChangeCallback );\n\n\t\tgroupView.items.on<ListItemsChangeEvent>( 'change', groupItemsChangeCallback );\n\t}\n\n\t/**\n\t * Removes a list item group view (and its children) from the focus tracker.\n\t *\n\t * @param groupView The group view to be removed.\n\t */\n\tprivate _deregisterFocusableItemsGroup( groupView: ListItemGroupView ) {\n\t\tfor ( const child of groupView.items ) {\n\t\t\tthis._deregisterFocusableListItem( child as ListItemView );\n\t\t}\n\n\t\tgroupView.items.off( 'change', this._listItemGroupToChangeListeners.get( groupView )! );\n\t\tthis._listItemGroupToChangeListeners.delete( groupView );\n\t}\n}\n\n// There's no support for nested groups yet.\ntype ListItemsChangeEvent = CollectionChangeEvent<ListItemView>;\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/dropdown/menu/dropdownmenulistview\n */\n\nimport type { Locale } from '@ckeditor/ckeditor5-utils';\nimport { ListView } from '../../list/listview.js';\n\n/**\n * Represents a dropdown menu list view.\n */\nexport class DropdownMenuListView extends ListView {\n\t/**\n\t * Represents whether the dropdown menu list view is visible or not.\n\t */\n\tdeclare public isVisible: boolean;\n\n\t/**\n\t * Creates an instance of the dropdown menu list view.\n\t *\n\t * @param locale The localization services instance.\n\t */\n\tconstructor( locale: Locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.role = 'menu';\n\t\tthis.set( 'isVisible', true );\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-dropdown-menu-list',\n\t\t\t\t\tbind.if( 'isVisible', 'ck-hidden', value => !value )\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/dropdown/menu/utils\n */\n\nimport type { PositioningFunction } from '@ckeditor/ckeditor5-utils';\n\nconst NESTED_PANEL_HORIZONTAL_OFFSET = 5;\n\n/**\n * Contains every positioning function used by {@link module:ui/dropdown/menu/dropdownmenunestedmenuview~DropdownMenuNestedMenuView} that\n * decides where the {@link module:ui/dropdown/menu/dropdownmenunestedmenuview~DropdownMenuNestedMenuView#panelView} should be placed.\n *\n * Positioning functions:\n *\n *\t┌──────┬───────────────┐\n *\t│      │               │\n *\t└──────┤               │\n *\t       │               │\n *\t       │            ES │\n *\t       └───────────────┘\n *\n *\t┌───────────────┬──────┐\n *\t│               │      │\n *\t│               ├──────┘\n *\t│               │\n *\t│ WS            │\n *\t└───────────────┘\n *\n *\t       ┌───────────────┐\n *\t       │            EN │\n *\t       │               │\n *\t┌──────┤               │\n *\t│      │               │\n *\t└──────┴───────────────┘\n *\n *\t┌───────────────┐\n *\t│ WN            │\n *\t│               │\n *\t│               ├──────┐\n *\t│               │      │\n *\t└───────────────┴──────┘\n */\nexport const DropdownMenuPanelPositioningFunctions: Record<string, PositioningFunction> = {\n\teastSouth: buttonRect => ( {\n\t\ttop: buttonRect.top,\n\t\tleft: buttonRect.right - NESTED_PANEL_HORIZONTAL_OFFSET,\n\t\tname: 'es'\n\t} ),\n\n\teastNorth: ( buttonRect, panelRect ) => ( {\n\t\ttop: buttonRect.top - panelRect.height + buttonRect.height,\n\t\tleft: buttonRect.right - NESTED_PANEL_HORIZONTAL_OFFSET,\n\t\tname: 'en'\n\t} ),\n\n\twestSouth: ( buttonRect, panelRect ) => ( {\n\t\ttop: buttonRect.top,\n\t\tleft: buttonRect.left - panelRect.width + NESTED_PANEL_HORIZONTAL_OFFSET,\n\t\tname: 'ws'\n\t} ),\n\n\twestNorth: ( buttonRect, panelRect ) => ( {\n\t\ttop: buttonRect.top - panelRect.height + buttonRect.height,\n\t\tleft: buttonRect.left - panelRect.width + NESTED_PANEL_HORIZONTAL_OFFSET,\n\t\tname: 'wn'\n\t} )\n} as const;\n\n/**\n * Represents the definition of a dropdown menu.\n */\nexport type DropdownNestedMenuDefinition = {\n\n\t/**\n\t * Unique ID for the menu.\n\t */\n\tid: string;\n\n\t/**\n\t * The menu name. It is used as a label for the button which opens the menu list.\n\t */\n\tmenu: string;\n\n\t/**\n\t * The children of the dropdown menu.\n\t */\n\tchildren: DropdownMenuDefinition;\n};\n\n/**\n * Represents the definition of a dropdown menu item.\n */\nexport type DropdownMenuButtonDefinition = {\n\n\t/**\n\t * Unique ID for the button.\n\t */\n\tid: string;\n\n\t/**\n\t * The label for the button.\n\t */\n\tlabel: string;\n};\n\n/**\n * A definition for a nestable menu component.\n *\n * The menu can be flat and include only top-level items, or it can include multiple levels of nested sub-menus.\n *\n * Example:\n *\n * ```ts\n * [\n * \t{\n * \t\tid: 'menu_1',\n * \t\tmenu: 'Menu 1',\n * \t\tchildren: [\n * \t\t\t{\n * \t\t\t\tid: 'menu_1_1',\n * \t\t\t\tmenu: 'Nested menu 1',\n * \t\t\t\tchildren: [\n * \t\t\t\t\t{\n * \t\t\t\t\t\tid: 'item_x',\n * \t\t\t\t\t\tlabel: 'Item X'\n * \t\t\t\t\t}\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tid: 'menu_1_2',\n * \t\t\t\tmenu: 'Nested menu 2',\n * \t\t\t\tchildren: [\n * \t\t\t\t\t{\n * \t\t\t\t\t\tid: 'item_y',\n * \t\t\t\t\t\tlabel: 'Item Y'\n * \t\t\t\t\t},\n * \t\t\t\t\t{\n * \t\t\t\t\t\tid: 'item_z',\n * \t\t\t\t\t\tlabel: 'Item Z'\n * \t\t\t\t\t}\n * \t\t\t\t]\n * \t\t\t}\n * \t\t]\n * \t},\n * \t{\n * \t\tid: 'top_a',\n * \t\tlabel: 'Top Item A'\n * \t},\n * \t{\n * \t\tid: 'top_b',\n * \t\tlabel: 'Top Item B'\n * \t}\n * ];\n * ```\n */\nexport type DropdownMenuDefinition = Array<DropdownNestedMenuDefinition | DropdownMenuButtonDefinition>;\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/dropdown/menu/dropdownmenulistitemview\n */\n\nimport type { Locale } from '@ckeditor/ckeditor5-utils';\nimport { type DropdownMenuNestedMenuView } from './dropdownmenunestedmenuview.js';\n\nimport { ListItemView } from '../../list/listitemview.js';\nimport { DropdownMenuListItemButtonView } from './dropdownmenulistitembuttonview.js';\n\nimport '../../../theme/components/dropdown/menu/dropdownmenulistitem.css';\n\n/**\n * Represents a view for a single item in a dropdown menu list.\n */\nexport class DropdownMenuListItemView extends ListItemView {\n\t/**\n\t * The view representing either a flat item or a nested menu in a dropdown menu list item.\n\t */\n\tpublic readonly childView: DropdownMenuNestedMenuView | DropdownMenuListItemButtonView;\n\n\tconstructor(\n\t\tlocale: Locale,\n\t\tparentMenuView: DropdownMenuNestedMenuView | null,\n\t\tchildView: DropdownMenuNestedMenuView | DropdownMenuListItemButtonView\n\t) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.childView = childView;\n\t\tthis.children.add( childView );\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-dropdown-menu-list__nested-menu__item'\n\t\t\t\t]\n\t\t\t},\n\t\t\ton: {\n\t\t\t\t'mouseenter': bind.to( 'mouseenter' )\n\t\t\t}\n\t\t} );\n\n\t\tif ( parentMenuView ) {\n\t\t\tthis.delegate( 'mouseenter' ).to( parentMenuView );\n\n\t\t\tif ( childView instanceof DropdownMenuListItemButtonView ) {\n\t\t\t\tchildView.delegate( 'execute' ).to( parentMenuView );\n\t\t\t}\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/dropdown/menu/dropdownmenubehaviors\n */\n\nimport type { BaseEvent, ObservableChangeEvent } from '@ckeditor/ckeditor5-utils';\nimport { type DropdownMenuNestedMenuView } from './dropdownmenunestedmenuview.js';\nimport type { FocusableView } from '../../focuscycler.js';\n\nimport type { ButtonExecuteEvent } from '../../button/button.js';\nimport { type DropdownMenuRootListView } from './dropdownmenurootlistview.js';\n\nimport { DropdownMenuListItemView } from './dropdownmenulistitemview.js';\n\n/**\n * @internal\n */\nexport const DropdownRootMenuBehaviors = {\n\t/**\n\t * Move focus to a menu item on mouse hover. If it is a button to open a nested menu, open that menu.\n\t */\n\ttoggleMenusAndFocusItemsOnHover( rootList: DropdownMenuRootListView ): void {\n\t\trootList.on<DropdownMenuMouseEnterEvent>( 'menu:mouseenter', evt => {\n\t\t\tconst [ pathLeaf ] = evt.path;\n\n\t\t\t( evt.source as FocusableView ).focus();\n\n\t\t\tfor ( const menuView of rootList.menus ) {\n\t\t\t\tconst isListItemContainingMenu = pathLeaf instanceof DropdownMenuListItemView && pathLeaf.childView === menuView;\n\n\t\t\t\tmenuView.isOpen = ( evt.path.includes( menuView ) || isListItemContainingMenu ) && menuView.isEnabled;\n\t\t\t}\n\t\t} );\n\t},\n\n\t/**\n\t * Handles the following case:\n\t *\n\t * 1. Hover to open a sub-menu (A). The button has focus.\n\t * 2. Press arrow up/down to move focus to another sub-menu (B) button.\n\t * 3. Press arrow right to open the sub-menu (B).\n\t * 4. The sub-menu (A) should close (if not, there are two open menus).\n\t */\n\tcloseMenuWhenAnotherOnTheSameLevelOpens( rootList: DropdownMenuRootListView ): void {\n\t\trootList.on<DropdownMenuChangeIsOpenEvent>( 'menu:change:isOpen', ( evt, name, isOpen ) => {\n\t\t\tif ( !isOpen ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst evtMenu = evt.source as DropdownMenuNestedMenuView;\n\n\t\t\tfor ( const menuView of rootList.menus ) {\n\t\t\t\tif ( evtMenu.parentMenuView === menuView.parentMenuView && evtMenu !== menuView ) {\n\t\t\t\t\tmenuView.isOpen = false;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n};\n\n/**\n * @internal\n */\nexport const DropdownMenuBehaviors = {\n\t/**\n\t * Open the menu on the right arrow key press (left, in RTL mode). This allows for navigating to sub-menus using the keyboard.\n\t */\n\topenOnArrowRightKey( menuView: DropdownMenuNestedMenuView ): void {\n\t\tconst keystroke = menuView.locale!.uiLanguageDirection === 'rtl' ? 'arrowleft' : 'arrowright';\n\n\t\tmenuView.keystrokes.set( keystroke, ( data, cancel ) => {\n\t\t\tif ( menuView.focusTracker.focusedElement !== menuView.buttonView.element || !menuView.isEnabled ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( !menuView.isOpen ) {\n\t\t\t\tmenuView.isOpen = true;\n\t\t\t}\n\n\t\t\tmenuView.panelView.focus();\n\t\t\tcancel();\n\t\t} );\n\t},\n\n\t/**\n\t * Opens the menu on its button click as well as enter and space keys press (if the button is focused).\n\t */\n\topenOnButtonClick( menuView: DropdownMenuNestedMenuView ): void {\n\t\tmenuView.buttonView.on<ButtonExecuteEvent>( 'execute', () => {\n\t\t\tif ( menuView.isEnabled ) {\n\t\t\t\tmenuView.isOpen = true;\n\t\t\t}\n\t\t} );\n\t},\n\n\t/**\n\t * Opens the menu and focuses the panel content upon pressing the Enter key.\n\t */\n\topenAndFocusOnEnterKeyPress( menuView: DropdownMenuNestedMenuView ): void {\n\t\tmenuView.keystrokes.set( 'enter', ( data, cancel ) => {\n\t\t\t// Engage only for Enter key press when the button is focused. The panel can contain\n\t\t\t// other UI components and features that rely on the Enter key press.\n\t\t\tif ( menuView.focusTracker.focusedElement !== menuView.buttonView.element ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmenuView.isOpen = true;\n\t\t\tmenuView.panelView.focus();\n\t\t\tcancel();\n\t\t} );\n\t},\n\n\t/**\n\t * Closes the menu on the left key press (right, in RTL mode). This allows for navigating to sub-menus using the keyboard.\n\t */\n\tcloseOnArrowLeftKey( menuView: DropdownMenuNestedMenuView ): void {\n\t\tconst keystroke = menuView.locale!.uiLanguageDirection === 'rtl' ? 'arrowright' : 'arrowleft';\n\n\t\tmenuView.keystrokes.set( keystroke, ( data, cancel ) => {\n\t\t\tif ( menuView.isOpen ) {\n\t\t\t\t// Focus first, then close the panel. Otherwise, Safari won't send blur events for detached DOM elements, leading to errors.\n\t\t\t\tmenuView.focus();\n\t\t\t\tmenuView.isOpen = false;\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\t},\n\n\tcloseOnEscKey( menuView: DropdownMenuNestedMenuView ): void {\n\t\tmenuView.keystrokes.set( 'esc', ( data, cancel ) => {\n\t\t\tif ( menuView.isOpen ) {\n\t\t\t\t// Focus first, then close the panel. Otherwise, Safari won't send blur events for detached DOM elements, leading to errors.\n\t\t\t\tmenuView.focus();\n\t\t\t\tmenuView.isOpen = false;\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\t},\n\n\t/**\n\t * Closes the menu when its parent menu closes. This prevents from leaving orphaned open menus.\n\t */\n\tcloseOnParentClose( menuView: DropdownMenuNestedMenuView, parentMenuView: DropdownMenuNestedMenuView ): void {\n\t\tparentMenuView.on<ObservableChangeEvent<boolean>>( 'change:isOpen', ( evt, name, isOpen ) => {\n\t\t\t// TODO: Remove checking `evt.source` if `change:isOpen` is no longer delegated.\n\t\t\tif ( !isOpen && evt.source === parentMenuView ) {\n\t\t\t\tmenuView.isOpen = false;\n\t\t\t}\n\t\t} );\n\t}\n};\n\n/**\n * Represents a dropdown menu mouse enter event.\n */\ninterface DropdownMenuMouseEnterEvent extends BaseEvent {\n\n\t/**\n\t * The name of the event.\n\t */\n\tname: 'menu:mouseenter';\n}\n\n/**\n * Represents a dropdown menu change is open event.\n */\ninterface DropdownMenuChangeIsOpenEvent extends BaseEvent {\n\n\t/**\n\t * The name of the event.\n\t */\n\tname: 'menu:change:isOpen';\n\n\t/**\n\t * The arguments of the event.\n\t */\n\targs: [ name: string, value: boolean, oldValue: boolean ];\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/dropdown/menu/dropdownmenunestedmenupanelview\n */\n\nimport type { Locale } from '@ckeditor/ckeditor5-utils';\nimport type { FocusableView } from '../../focuscycler.js';\n\nimport { BalloonPanelView } from '../../panel/balloon/balloonpanelview.js';\n\nimport '../../../theme/components/dropdown/menu/dropdownmenupanel.css';\n\n/**\n * Represents the view for the dropdown menu panel.\n */\nexport class DropdownMenuNestedMenuPanelView extends BalloonPanelView implements FocusableView {\n\t/**\n\t * Creates an instance of the menu panel view.\n\t *\n\t * @param locale The localization services instance.\n\t */\n\tconstructor( locale?: Locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.set( {\n\t\t\tisVisible: false,\n\t\t\tposition: 'se',\n\t\t\tclass: null,\n\t\t\ttop: 0,\n\t\t\tleft: 0\n\t\t} );\n\n\t\tthis.extendTemplate( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-reset',\n\t\t\t\t\t'ck-dropdown-menu__nested-menu__panel'\n\t\t\t\t],\n\t\t\t\ttabindex: '-1'\n\t\t\t},\n\n\t\t\ton: {\n\t\t\t\t// Drag and drop in the panel should not break the selection in the editor.\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/228\n\t\t\t\tselectstart: bind.to( evt => {\n\t\t\t\t\tif ( ( evt.target as HTMLElement ).tagName.toLocaleLowerCase() === 'input' ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t} )\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Focuses the first child of the panel (default) or the last one if the `direction` is `-1`.\n\t *\n\t * @param direction The direction to focus. Default is `1`.\n\t */\n\tpublic focus( direction: -1 | 1 = 1 ): void {\n\t\tconst { content } = this;\n\n\t\tif ( content.length ) {\n\t\t\tif ( direction === 1 ) {\n\t\t\t\t( content.first as FocusableView ).focus();\n\t\t\t} else {\n\t\t\t\t( content.last as FocusableView ).focus();\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * The names of the positions of the {@link module:ui/dropdown/menu/dropdownmenunestedmenupanelview~DropdownMenuNestedMenuPanelView}.\n *\n * They are reflected as CSS class suffixes on the panel view element.\n */\nexport type DropdownMenuNestedMenuPanelPosition = 'es' | 'ws' | 'en' | 'wn' | 'w' | 'e';\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/dropdown/menu/dropdownmenunestedmenuview\n */\n\nimport {\n\tFocusTracker,\n\tKeystrokeHandler,\n\tglobal,\n\ttype PositioningFunction,\n\ttype ObservableChangeEvent,\n\ttype Locale\n} from '@ckeditor/ckeditor5-utils';\n\nimport type { FocusableView } from '../../focuscycler.js';\nimport { type BodyCollection } from '../../editorui/bodycollection.js';\n\nimport { DropdownMenuButtonView } from './dropdownmenubuttonview.js';\nimport { DropdownMenuListView } from './dropdownmenulistview.js';\nimport { DropdownMenuPanelPositioningFunctions } from './utils.js';\nimport { DropdownMenuBehaviors } from './dropdownmenubehaviors.js';\n\nimport { View } from '../../view.js';\nimport { DropdownMenuNestedMenuPanelView, type DropdownMenuNestedMenuPanelPosition } from './dropdownmenunestedmenupanelview.js';\n\nimport '../../../theme/components/dropdown/menu/dropdownmenu.css';\n\n/**\n * Represents a nested menu view.\n */\nexport class DropdownMenuNestedMenuView extends View implements FocusableView {\n\t/**\n\t * An array of delegated events for the dropdown menu definition controller.\n\t * These events are delegated to the dropdown menu element.\n\t */\n\t// Due to some spaghetti code we need to delegate `change:isOpen`.\n\tpublic static readonly DELEGATED_EVENTS = [\n\t\t'mouseenter', 'execute', 'change:isOpen'\n\t] as const;\n\n\tpublic readonly id: string;\n\n\t/**\n\t * Button of the menu view.\n\t */\n\tpublic readonly buttonView: DropdownMenuButtonView;\n\n\t/**\n\t * Panel of the menu. It hosts children of the menu.\n\t */\n\tpublic readonly panelView: DropdownMenuNestedMenuPanelView;\n\n\t/**\n\t * List of nested menu entries.\n\t */\n\tpublic readonly listView: DropdownMenuListView;\n\n\t/**\n\t * Tracks information about the DOM focus in the menu.\n\t */\n\tpublic readonly focusTracker: FocusTracker;\n\n\t/**\n\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}. It manages\n\t * keystrokes of the menu.\n\t */\n\tpublic readonly keystrokes: KeystrokeHandler;\n\n\t/**\n\t * Controls whether the menu is open, i.e. shows or hides the {@link #panelView panel}.\n\t *\n\t * @observable\n\t */\n\tdeclare public isOpen: boolean;\n\n\t/**\n\t * Controls whether the menu is enabled, i.e. its {@link #buttonView} can be clicked.\n\t *\n\t * @observable\n\t */\n\tdeclare public isEnabled: boolean;\n\n\t/**\n\t * (Optional) The additional CSS class set on the menu {@link #element}.\n\t *\n\t * @observable\n\t */\n\tdeclare public class: string | undefined;\n\n\t/**\n\t * The name of the position of the {@link #panelView}, relative to the menu.\n\t *\n\t * **Note**: The value is updated each time the panel gets {@link #isOpen open}.\n\t *\n\t * @observable\n\t * @default 'w'\n\t */\n\tdeclare public panelPosition: DropdownMenuNestedMenuPanelPosition;\n\n\t/**\n\t * The parent menu view of the menu. It is `null` for top-level menus.\n\t *\n\t * @observable\n\t * @default null\n\t */\n\tdeclare public readonly parentMenuView: DropdownMenuNestedMenuView | null;\n\n\tprivate _bodyCollection: BodyCollection;\n\n\t/**\n\t * Creates a new instance of the DropdownMenuView class.\n\t *\n\t * @param locale\n\t * @param bodyCollection\n\t * @param id\n\t * @param label The label for the dropdown menu button.\n\t * @param parentMenuView The parent dropdown menu view, if any.\n\t */\n\tconstructor(\n\t\tlocale: Locale, bodyCollection: BodyCollection, id: string, label: string, parentMenuView: DropdownMenuNestedMenuView | null\n\t) {\n\t\tsuper( locale );\n\n\t\tthis._bodyCollection = bodyCollection;\n\t\tthis.id = id;\n\n\t\tthis.set( {\n\t\t\tisOpen: false,\n\t\t\tisEnabled: true,\n\t\t\tpanelPosition: 'w',\n\t\t\tclass: undefined,\n\t\t\tparentMenuView: null\n\t\t} );\n\n\t\tthis.keystrokes = new KeystrokeHandler();\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\tthis.buttonView = new DropdownMenuButtonView( locale );\n\t\tthis.buttonView.delegate( 'mouseenter' ).to( this );\n\t\tthis.buttonView.bind( 'isOn', 'isEnabled' ).to( this, 'isOpen', 'isEnabled' );\n\t\tthis.buttonView.label = label;\n\n\t\tthis.panelView = new DropdownMenuNestedMenuPanelView( locale );\n\t\tthis.panelView.isVisible = true;\n\n\t\tthis.listView = new DropdownMenuListView( locale );\n\t\tthis.listView.bind( 'ariaLabel' ).to( this.buttonView, 'label' );\n\n\t\tthis.panelView.content.add( this.listView );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-dropdown-menu-list__nested-menu',\n\t\t\t\t\tbind.to( 'class' ),\n\t\t\t\t\tbind.if( 'isEnabled', 'ck-disabled', value => !value )\n\t\t\t\t],\n\t\t\t\trole: 'presentation'\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\tthis.buttonView\n\t\t\t]\n\t\t} );\n\n\t\tthis.parentMenuView = parentMenuView;\n\n\t\tif ( this.parentMenuView ) {\n\t\t\tthis._handleParentMenuView();\n\t\t}\n\n\t\tthis._attachBehaviors();\n\t}\n\n\t/**\n\t * An array of positioning functions used to determine the position of the dropdown menu panel.\n\t * The order of the functions in the array determines the priority of the positions to be tried.\n\t * The first function that returns a valid position will be used.\n\t *\n\t * @returns {Array<PositioningFunction>} An array of positioning functions.\n\t * @internal\n\t */\n\tpublic get _panelPositions(): Array<PositioningFunction> {\n\t\tconst { westSouth, eastSouth, westNorth, eastNorth } = DropdownMenuPanelPositioningFunctions;\n\n\t\tif ( this.locale!.uiLanguageDirection === 'ltr' ) {\n\t\t\treturn [ eastSouth, eastNorth, westSouth, westNorth ];\n\t\t} else {\n\t\t\treturn [ westSouth, westNorth, eastSouth, eastNorth ];\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tthis.panelView.render();\n\n\t\tthis.focusTracker.add( this.buttonView.element! );\n\t\tthis.focusTracker.add( this.panelView.element! );\n\t\tthis.focusTracker.add( this.listView );\n\n\t\t// Listen for keystrokes coming from within #element.\n\t\tthis.keystrokes.listenTo( this.element! );\n\n\t\tthis._mountPanelOnOpen();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tthis._removePanelFromBody();\n\t\tthis.panelView.destroy();\n\t\tsuper.destroy();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic focus(): void {\n\t\tthis.buttonView.focus();\n\t}\n\n\tprivate _handleParentMenuView(): void {\n\t\t// Propagate events from this component to parent-menu.\n\t\tthis.delegate( ...DropdownMenuNestedMenuView.DELEGATED_EVENTS ).to( this.parentMenuView! );\n\n\t\t// Close this menu if its parent closes.\n\t\tDropdownMenuBehaviors.closeOnParentClose( this, this.parentMenuView! );\n\t}\n\n\t/**\n\t * Attach all keyboard behaviors for the menu view.\n\t */\n\tprivate _attachBehaviors(): void {\n\t\tDropdownMenuBehaviors.openOnButtonClick( this );\n\t\tDropdownMenuBehaviors.openAndFocusOnEnterKeyPress( this );\n\t\tDropdownMenuBehaviors.openOnArrowRightKey( this );\n\t\tDropdownMenuBehaviors.closeOnEscKey( this );\n\t\tDropdownMenuBehaviors.closeOnArrowLeftKey( this );\n\t}\n\n\t/**\n\t * Mounts the portal view in the body when the menu is open and removes it when the menu is closed.\n\t * Binds keystrokes to the portal view when the menu is open.\n\t */\n\tprivate _mountPanelOnOpen(): void {\n\t\tconst { panelView } = this;\n\n\t\tthis.on<ObservableChangeEvent<boolean>>( 'change:isOpen', ( evt, name, isOpen ) => {\n\t\t\t// Ensure that the event was triggered by this instance.\n\t\t\t// TODO: Remove checking `evt.source` if `change:isOpen` is no longer delegated.\n\t\t\tif ( evt.source !== this ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Removes the panel view from the body when the menu is closed.\n\t\t\tif ( !isOpen && this._bodyCollection.has( panelView ) ) {\n\t\t\t\tthis._removePanelFromBody();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Adds the panel view to the body when the menu is open.\n\t\t\tif ( isOpen && !this._bodyCollection.has( panelView ) ) {\n\t\t\t\tthis._addPanelToBody();\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Removes the panel view from the editor's body and removes it from the focus tracker.\n\t */\n\tprivate _removePanelFromBody(): void {\n\t\tconst { panelView, keystrokes } = this;\n\n\t\tif ( this._bodyCollection.has( panelView ) ) {\n\t\t\tthis._bodyCollection.remove( panelView );\n\n\t\t\tkeystrokes.stopListening( panelView.element! );\n\t\t}\n\t}\n\n\t/**\n\t * Adds the panel view to the editor's body and sets up event listeners.\n\t */\n\tprivate _addPanelToBody() {\n\t\tconst { panelView, buttonView, keystrokes } = this;\n\n\t\tif ( !this._bodyCollection.has( panelView ) ) {\n\t\t\tthis._bodyCollection.add( panelView );\n\n\t\t\tkeystrokes.listenTo( panelView.element! );\n\t\t\tpanelView.pin( {\n\t\t\t\tpositions: this._panelPositions,\n\t\t\t\tlimiter: global.document.body,\n\t\t\t\telement: panelView.element!,\n\t\t\t\ttarget: buttonView.element!,\n\t\t\t\tfitInViewport: true\n\t\t\t} );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/dropdown/menu/dropdownmenurootlistview\n */\n\nimport { DropdownMenuListItemButtonView } from './dropdownmenulistitembuttonview.js';\nimport { DropdownMenuNestedMenuView } from './dropdownmenunestedmenuview.js';\nimport { DropdownMenuListView } from './dropdownmenulistview.js';\nimport { DropdownMenuListItemView } from './dropdownmenulistitemview.js';\nimport { DropdownRootMenuBehaviors } from './dropdownmenubehaviors.js';\n\nimport { type BodyCollection } from '../../editorui/bodycollection.js';\nimport type { DropdownMenuDefinition } from './utils.js';\n\nimport type { Locale, BaseEvent } from '@ckeditor/ckeditor5-utils';\n\n/**\n * Creates and manages a multi-level menu UI structure, suitable to be used inside dropdown components.\n *\n * This class creates a menu structure based on {@link module:ui/dropdown/menu/utils~DropdownMenuDefinition declarative definition}\n * passed in the constructor.\n *\n * Below is an example of a simple definition, that describes a menu with two sub-menus (Menu 1, Menu 2) and four buttons in total (Item A,\n * Item B, Item C, Item D):\n *\n * ```js\n * [\n * \t{\n * \t\tid: 'menu_1',\n * \t\tmenu: 'Menu 1',\n * \t\tchildren: [\n * \t\t\t{ id: 'menu_1_a', label: 'Item A' },\n * \t\t\t{ id: 'menu_1_b', label: 'Item B' }\n * \t\t]\n * \t},\n * \t{\n * \t\tid: 'menu_2',\n * \t\tmenu: 'Menu 2',\n * \t\tchildren: [\n * \t\t\t{ id: 'menu_2_c', label: 'Item C' },\n * \t\t]\n * \t},\n * \t{ id: 'item_d', label: 'Item D' }\n * ]\n * ```\n *\n * The menu is build using multiple view classes. The most important are:\n *\n * * {@link module:ui/dropdown/menu/dropdownmenunestedmenuview~DropdownMenuNestedMenuView `DropdownMenuNestedMenuView`} - \"menu\" - provides\n * a panel with a nested menu, and a button which opens the panel,\n * * {@link module:ui/dropdown/menu/dropdownmenulistitembuttonview~DropdownMenuListItemButtonView `DropdownMenuListItemButtonView`} -\n * \"button\" or \"leaf button\" (as opposed to buttons provided by `DropdownMenuNestedMenuView`) - should trigger some action when pressed.\n *\n * Instances of these two classes are created based on the data provided in definitions. They are assigned proper IDs and labels.\n * Other view classes build a proper DOM structure around menus and buttons.\n *\n * The `DropdownMenuNestedMenuView` instances provides panels, which may include further menus or buttons. These panels are added to\n * a `BodyCollection` view, which means they are appended outside the DOM editor and UI structure.\n *\n * When \"leaf button\" is pressed, it fires `execute` event which is delegated to `DropdownMenuRootListView` as `menu:execute` event. You\n * can listen to this event to perform an action:\n *\n * ```js\n * rootListView.on( 'menu:execute', evt => {\n * \tconsole.log( evt.source.id ); // E.g. will print 'menu_1_a' when 'Item A' is pressed.\n * } );\n * ```\n *\n * All menus and \"leaf\" buttons created from the definition can be easily accessed through {@link ~DropdownMenuRootListView#menus `menus`}\n * and {@link ~DropdownMenuRootListView#buttons `buttons`} properties.\n *\n * For performance reasons, the whole menu structure is created only when `DropdownMenuRootListView` is rendered for the first time.\n *\n * It is recommended to use this class together with {@link module:ui/dropdown/utils~addMenuToDropdown `addMenuToDropdown()` helper}.\n */\nexport class DropdownMenuRootListView extends DropdownMenuListView {\n\t/**\n\t * The CSS class to be applied to nested menu panels in this dropdown menu.\n\t *\n\t * It is necessary, as the panels are created in body collection, outside editor and UI structure.\n\t */\n\tdeclare public menuPanelClass: string | undefined;\n\n\t/**\n\t * The definitions object used to create the whole menu structure.\n\t */\n\tprivate readonly _definition: DropdownMenuDefinition;\n\n\t/**\n\t * Cached array of all menus in the dropdown menu (including nested menus).\n\t */\n\tprivate _cachedMenus: Array<DropdownMenuNestedMenuView> = [];\n\n\t/**\n\t * Cached array of all buttons in the dropdown menu (including buttons in nested menus).\n\t */\n\tprivate _cachedButtons: Array<DropdownMenuListItemButtonView> = [];\n\n\t/**\n\t * Editor body collection into which nested menus panels will be appended.\n\t */\n\tprivate _bodyCollection: BodyCollection;\n\n\t/**\n\t * Creates an instance of the DropdownMenuRootListView class.\n\t *\n\t * @param locale\n\t * @param bodyCollection\n\t * @param definition The definition object used to create the menu structure.\n\t */\n\tconstructor(\n\t\tlocale: Locale,\n\t\tbodyCollection: BodyCollection,\n\t\tdefinition: DropdownMenuDefinition\n\t) {\n\t\tsuper( locale );\n\n\t\tthis._bodyCollection = bodyCollection;\n\t\tthis._definition = definition;\n\n\t\tthis.set( 'menuPanelClass', undefined );\n\t}\n\n\t/**\n\t * Returns the array of all menus in the dropdown menu (including nested menus).\n\t */\n\tpublic get menus(): Array<DropdownMenuNestedMenuView> {\n\t\treturn Array.from( this._cachedMenus.values() );\n\t}\n\n\t/**\n\t * Returns the array of all buttons in the dropdown menu (including buttons in nested menus).\n\t *\n\t * Note, that this includes only \"leaf\" buttons, as specified in the definition passed in constructor. Buttons created as a part of\n\t * the nested menus, that open nested menus when hovered or pressed, are not included.\n\t */\n\tpublic get buttons(): Array<DropdownMenuListItemButtonView> {\n\t\treturn Array.from( this._cachedButtons.values() );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tthis._createStructure( this._definition, null );\n\n\t\tsuper.render();\n\n\t\tDropdownRootMenuBehaviors.toggleMenusAndFocusItemsOnHover( this );\n\t\tDropdownRootMenuBehaviors.closeMenuWhenAnotherOnTheSameLevelOpens( this );\n\t}\n\n\t/**\n\t * Closes all nested menus.\n\t */\n\tpublic closeMenus(): void {\n\t\tthis.menus.forEach( menu => {\n\t\t\tmenu.isOpen = false;\n\t\t} );\n\t}\n\n\t/**\n\t * Recursively creates the whole view tree structure for the dropdown menu, according to the passed `definitions`.\n\t *\n\t * @private\n\t */\n\tprivate _createStructure( definitions: DropdownMenuDefinition, parentMenuView: DropdownMenuNestedMenuView | null ): void {\n\t\tconst items: Array<DropdownMenuListItemView> = [];\n\n\t\tfor ( const def of definitions ) {\n\t\t\tlet createdView: DropdownMenuNestedMenuView | DropdownMenuListItemButtonView;\n\n\t\t\tif ( 'menu' in def ) {\n\t\t\t\tcreatedView = new DropdownMenuNestedMenuView( this.locale!, this._bodyCollection, def.id, def.menu, parentMenuView );\n\t\t\t\tcreatedView.panelView.bind( 'class' ).to( this, 'menuPanelClass' );\n\n\t\t\t\tif ( !parentMenuView ) {\n\t\t\t\t\tcreatedView.delegate( ...DropdownMenuNestedMenuView.DELEGATED_EVENTS ).to( this, ( name: string ) => `menu:${ name }` );\n\t\t\t\t}\n\n\t\t\t\tthis._cachedMenus.push( createdView );\n\t\t\t\tthis._createStructure( def.children, createdView );\n\t\t\t} else {\n\t\t\t\tcreatedView = new DropdownMenuListItemButtonView( this.locale!, def.id, def.label );\n\n\t\t\t\tif ( !parentMenuView ) {\n\t\t\t\t\tcreatedView.delegate( 'execute' ).to( this, 'menu:execute' );\n\t\t\t\t}\n\n\t\t\t\tthis._cachedButtons.push( createdView );\n\t\t\t}\n\n\t\t\tconst listItemView = new DropdownMenuListItemView( this.locale!, parentMenuView, createdView );\n\n\t\t\tif ( !parentMenuView ) {\n\t\t\t\tlistItemView.delegate( 'mouseenter' ).to( this, 'menu:mouseenter' );\n\t\t\t}\n\n\t\t\titems.push( listItemView );\n\t\t}\n\n\t\tconst targetListView = parentMenuView ? parentMenuView.listView : this;\n\n\t\ttargetListView.items.addMany( items );\n\t}\n}\n\n/**\n * Fired when one of the menu buttons is executed (through mouse click or keyboard).\n *\n * This event is a delegated `execute` event fired by the pressed button. The `event.source` is the button which was executed.\n *\n * @eventName ~DropdownMenuRootListView#menu:execute\n */\nexport interface DropdownMenuRootListViewExecuteEvent extends BaseEvent {\n\tname: 'menu:execute';\n\targs: [];\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/toolbar/toolbarseparatorview\n */\n\nimport { View } from '../view.js';\n\nimport type { Locale } from '@ckeditor/ckeditor5-utils';\n\n/**\n * The toolbar separator view class.\n */\nexport class ToolbarSeparatorView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale?: Locale ) {\n\t\tsuper( locale );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-toolbar__separator'\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/toolbar/toolbarlinebreakview\n */\n\nimport { View } from '../view.js';\n\nimport type { Locale } from '@ckeditor/ckeditor5-utils';\n\n/**\n * The toolbar line break view class.\n */\nexport class ToolbarLineBreakView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale?: Locale ) {\n\t\tsuper( locale );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-toolbar__line-break'\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/bindings/preventdefault\n */\n\nimport type { ListenerBinding } from '../template.js';\nimport { type View } from '../view.js';\n\n/**\n * A helper which executes a native `Event.preventDefault()` if the target of an event equals the\n * {@link module:ui/view~View#element element of the view}. It shortens the definition of a\n * {@link module:ui/view~View#template template}.\n *\n * ```ts\n * // In a class extending View.\n * import { preventDefault } from '@ckeditor/ckeditor5-ui/src/bindings/preventdefault';\n *\n * // ...\n *\n * this.setTemplate( {\n * \ttag: 'div',\n *\n * \ton: {\n * \t\t// Prevent the default mousedown action on this view.\n * \t\tmousedown: preventDefault( this )\n * \t}\n * } );\n * ```\n *\n * @param view View instance that defines the template.\n * @internal\n */\nexport function preventDefault( view: View ): ListenerBinding {\n\treturn view.bindTemplate.to( evt => {\n\t\tif ( evt.target === view.element ) {\n\t\t\tevt.preventDefault();\n\t\t}\n\t} );\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport type { ToolbarConfig, ToolbarConfigItem } from '@ckeditor/ckeditor5-core';\n\n/**\n * @module ui/toolbar/normalizetoolbarconfig\n */\n\n/**\n * Normalizes the toolbar configuration (`config.toolbar`), which:\n *\n * * may be defined as an `Array`:\n *\n * ```\n * toolbar: [ 'heading', 'bold', 'italic', 'link', ... ]\n * ```\n *\n * * or an `Object`:\n *\n * ```\n * toolbar: {\n * \titems: [ 'heading', 'bold', 'italic', 'link', ... ],\n * \tremoveItems: [ 'bold' ],\n * \t...\n * }\n * ```\n *\n * * or may not be defined at all (`undefined`)\n *\n * and returns it in the object form.\n *\n * @param config The value of `config.toolbar`.\n * @returns A normalized toolbar config object.\n */\nexport function normalizeToolbarConfig(\n\tconfig: ToolbarConfig | undefined\n): {\n\t\titems: Array<ToolbarConfigItem>;\n\t\tremoveItems: Array<string>;\n\t\tshouldNotGroupWhenFull?: boolean;\n\t\ticon?: string;\n\t} {\n\tif ( Array.isArray( config ) ) {\n\t\treturn {\n\t\t\titems: config,\n\t\t\tremoveItems: []\n\t\t};\n\t}\n\n\tconst predefinedConfigOptions = {\n\t\titems: [],\n\t\tremoveItems: []\n\t};\n\n\tif ( !config ) {\n\t\treturn predefinedConfigOptions;\n\t}\n\n\treturn {\n\t\t...predefinedConfigOptions,\n\t\t...config\n\t};\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/toolbar/toolbarview\n */\n\nimport { View } from '../view.js';\nimport { FocusCycler, isFocusable, type FocusableView } from '../focuscycler.js';\nimport { ToolbarSeparatorView } from './toolbarseparatorview.js';\nimport { ToolbarLineBreakView } from './toolbarlinebreakview.js';\nimport { preventDefault } from '../bindings/preventdefault.js';\nimport { createDropdown, addToolbarToDropdown } from '../dropdown/utils.js';\nimport { normalizeToolbarConfig } from './normalizetoolbarconfig.js';\n\nimport { type ComponentFactory } from '../componentfactory.js';\nimport { type ViewCollection } from '../viewcollection.js';\nimport { type DropdownView } from '../dropdown/dropdownview.js';\nimport { type DropdownPanelFocusable } from '../dropdown/dropdownpanelfocusable.js';\n\nimport {\n\tFocusTracker,\n\tKeystrokeHandler,\n\tRect,\n\tResizeObserver,\n\tglobal,\n\tisVisible,\n\tlogWarning,\n\ttype CollectionAddEvent,\n\ttype CollectionChangeEvent,\n\ttype CollectionRemoveEvent,\n\ttype Locale,\n\ttype ObservableChangeEvent\n} from '@ckeditor/ckeditor5-utils';\nimport {\n\tIconAlignLeft,\n\tIconBold,\n\tIconImportExport,\n\tIconParagraph,\n\tIconPlus,\n\tIconText,\n\tIconThreeVerticalDots,\n\tIconPilcrow,\n\tIconDragIndicator\n} from '@ckeditor/ckeditor5-icons';\nimport type { ToolbarConfig, ToolbarConfigItem } from '@ckeditor/ckeditor5-core';\n\nimport { isObject } from 'es-toolkit/compat';\n\nimport '../../theme/components/toolbar/toolbar.css';\n\n/**\n * @internal\n */\nexport const NESTED_TOOLBAR_ICONS: Record<string, string | undefined> = /* #__PURE__ */ ( () => ( {\n\talignLeft: IconAlignLeft,\n\tbold: IconBold,\n\timportExport: IconImportExport,\n\tparagraph: IconParagraph,\n\tplus: IconPlus,\n\ttext: IconText,\n\tthreeVerticalDots: IconThreeVerticalDots,\n\tpilcrow: IconPilcrow,\n\tdragIndicator: IconDragIndicator\n} ) )();\n\n/**\n * The toolbar view class.\n */\nexport class ToolbarView extends View implements DropdownPanelFocusable {\n\t/**\n\t * A reference to the options object passed to the constructor.\n\t */\n\tpublic readonly options: ToolbarOptions;\n\n\t/**\n\t * A collection of toolbar items (buttons, dropdowns, etc.).\n\t */\n\tpublic readonly items: ViewCollection;\n\n\t/**\n\t * Tracks information about the DOM focus in the toolbar.\n\t */\n\tpublic readonly focusTracker: FocusTracker;\n\n\t/**\n\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}\n\t * to handle keyboard navigation in the toolbar.\n\t */\n\tpublic readonly keystrokes: KeystrokeHandler;\n\n\t/**\n\t * A (child) view containing {@link #items toolbar items}.\n\t */\n\tpublic readonly itemsView: ItemsView;\n\n\t/**\n\t * A top–level collection aggregating building blocks of the toolbar.\n\t *\n\t *\t┌───────────────── ToolbarView ─────────────────┐\n\t *\t| ┌──────────────── #children ────────────────┐ |\n\t *\t| |   ┌──────────── #itemsView ───────────┐   | |\n\t *\t| |   | [ item1 ] [ item2 ] ... [ itemN ] |   | |\n\t *\t| |   └──────────────────────────────────-┘   | |\n\t *\t| └───────────────────────────────────────────┘ |\n\t *\t└───────────────────────────────────────────────┘\n\t *\n\t * By default, it contains the {@link #itemsView} but it can be extended with additional\n\t * UI elements when necessary.\n\t */\n\tpublic readonly children: ViewCollection;\n\n\t/**\n\t * A collection of {@link #items} that take part in the focus cycling\n\t * (i.e. navigation using the keyboard). Usually, it contains a subset of {@link #items} with\n\t * some optional UI elements that also belong to the toolbar and should be focusable\n\t * by the user.\n\t */\n\tpublic readonly focusables: ViewCollection<FocusableView>;\n\n\tdeclare public locale: Locale;\n\n\t/**\n\t * The property reflected by the `role` DOM attribute to be used by assistive technologies.\n\t *\n\t * @observable\n\t * @default 'toolbar'\n\t */\n\tdeclare public role: string | undefined;\n\n\t/**\n\t * Label used by assistive technologies to describe this toolbar element.\n\t *\n\t * @observable\n\t * @default 'Editor toolbar'\n\t */\n\tdeclare public ariaLabel: string;\n\n\t/**\n\t * The maximum width of the toolbar element.\n\t *\n\t * **Note**: When set to a specific value (e.g. `'200px'`), the value will affect the behavior of the\n\t * {@link module:ui/toolbar/toolbarview~ToolbarOptions#shouldGroupWhenFull}\n\t * option by changing the number of {@link #items} that will be displayed in the toolbar at a time.\n\t *\n\t * @observable\n\t * @default 'auto'\n\t */\n\tdeclare public maxWidth: string;\n\n\t/**\n\t * An additional CSS class added to the {@link #element}.\n\t *\n\t * @observable\n\t * @type {String}\n\t */\n\tdeclare public class: string | undefined;\n\n\t/**\n\t * When set true, makes the toolbar look compact with {@link #element}.\n\t *\n\t * @observable\n\t * @default false\n\t */\n\tdeclare public isCompact: boolean;\n\n\t/**\n\t * Controls the orientation of toolbar items. Only available when\n\t * {@link module:ui/toolbar/toolbarview~ToolbarOptions#shouldGroupWhenFull dynamic items grouping}\n\t * is **disabled**.\n\t *\n\t * @observable\n\t */\n\tdeclare public isVertical: boolean;\n\n\t/**\n\t * Indicates whether the toolbar responds to changes in the geometry (e.g. window resize) by grouping excessive items or not.\n\t */\n\tdeclare public isGrouping: boolean;\n\n\t/**\n\t * Helps cycling over {@link #focusables focusable items} in the toolbar.\n\t */\n\tprivate readonly _focusCycler: FocusCycler;\n\n\t/**\n\t * An instance of the active toolbar behavior that shapes its look and functionality.\n\t *\n\t * See {@link module:ui/toolbar/toolbarview~ToolbarBehavior} to learn more.\n\t */\n\tprivate _behavior: ToolbarBehavior;\n\n\t/**\n\t * Creates an instance of the {@link module:ui/toolbar/toolbarview~ToolbarView} class.\n\t *\n\t * Also see {@link #render}.\n\t *\n\t * @param locale The localization services instance.\n\t * @param options Configuration options of the toolbar.\n\t */\n\tconstructor( locale: Locale, options?: ToolbarOptions ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\t\tconst t = this.t!;\n\n\t\tthis.options = options || {};\n\n\t\tthis.set( 'ariaLabel', t( 'Editor toolbar' ) );\n\t\tthis.set( 'maxWidth', 'auto' );\n\t\tthis.set( 'role', 'toolbar' );\n\t\tthis.set( 'isGrouping', !!this.options.shouldGroupWhenFull );\n\n\t\tthis.items = this.createCollection();\n\t\tthis.focusTracker = new FocusTracker();\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\tthis.set( 'class', undefined );\n\t\tthis.set( 'isCompact', false );\n\t\t// Static toolbar can be vertical when needed.\n\t\tthis.set( 'isVertical', false );\n\n\t\tthis.itemsView = new ItemsView( locale );\n\t\tthis.children = this.createCollection();\n\t\tthis.children.add( this.itemsView );\n\t\tthis.focusables = this.createCollection();\n\n\t\tconst isRtl = locale.uiLanguageDirection === 'rtl';\n\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this.focusables,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate toolbar items backwards using the arrow[left,up] keys.\n\t\t\t\tfocusPrevious: [ isRtl ? 'arrowright' : 'arrowleft', 'arrowup' ],\n\n\t\t\t\t// Navigate toolbar items forwards using the arrow[right,down] keys.\n\t\t\t\tfocusNext: [ isRtl ? 'arrowleft' : 'arrowright', 'arrowdown' ]\n\t\t\t}\n\t\t} );\n\n\t\tconst classes = [\n\t\t\t'ck',\n\t\t\t'ck-toolbar',\n\t\t\tbind.to( 'class' ),\n\t\t\tbind.if( 'isCompact', 'ck-toolbar_compact' ),\n\n\t\t\t// To group items dynamically, the toolbar needs a dedicated CSS class. Only used for dynamic grouping.\n\t\t\tbind.if( 'isGrouping', 'ck-toolbar_grouping' ),\n\n\t\t\t// When vertical, the toolbar has an additional CSS class. Only used for static layout.\n\t\t\tbind.if( 'isVertical', 'ck-toolbar_vertical' )\n\t\t];\n\n\t\tif ( this.options.shouldGroupWhenFull && this.options.isFloating ) {\n\t\t\tclasses.push( 'ck-toolbar_floating' );\n\t\t}\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: classes,\n\t\t\t\trole: bind.to( 'role' ),\n\t\t\t\t'aria-label': bind.to( 'ariaLabel' ),\n\t\t\t\tstyle: {\n\t\t\t\t\tmaxWidth: bind.to( 'maxWidth' )\n\t\t\t\t},\n\t\t\t\ttabindex: -1\n\t\t\t},\n\n\t\t\tchildren: this.children,\n\n\t\t\ton: {\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/206\n\t\t\t\tmousedown: preventDefault( this )\n\t\t\t}\n\t\t} );\n\n\t\tthis._behavior = this.options.shouldGroupWhenFull ? new DynamicGrouping( this ) : new StaticLayout( this );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tthis.focusTracker.add( this.element! );\n\n\t\t// Children added before rendering should be known to the #focusTracker.\n\t\tfor ( const item of this.items ) {\n\t\t\tthis.focusTracker.add( item );\n\t\t}\n\n\t\tthis.items.on<CollectionAddEvent<View>>( 'add', ( evt, item ) => {\n\t\t\tthis.focusTracker.add( item );\n\t\t} );\n\n\t\tthis.items.on<CollectionRemoveEvent<View>>( 'remove', ( evt, item ) => {\n\t\t\tthis.focusTracker.remove( item );\n\t\t} );\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element! );\n\n\t\tthis._behavior.render( this );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tthis._behavior.destroy();\n\t\tthis.focusTracker.destroy();\n\t\tthis.keystrokes.destroy();\n\n\t\treturn super.destroy();\n\t}\n\n\t/**\n\t * Focuses the first focusable in {@link #focusables}.\n\t */\n\tpublic focus(): void {\n\t\tthis._focusCycler.focusFirst();\n\t}\n\n\t/**\n\t * Focuses the last focusable in {@link #focusables}.\n\t */\n\tpublic focusLast(): void {\n\t\tthis._focusCycler.focusLast();\n\t}\n\n\t/**\n\t * A utility that expands the plain toolbar configuration into\n\t * {@link module:ui/toolbar/toolbarview~ToolbarView#items} using a given component factory.\n\t *\n\t * @param itemsOrConfig The toolbar items or the entire toolbar configuration object.\n\t * @param factory A factory producing toolbar items.\n\t * @param removeItems An array of items names to be removed from the configuration. When present, applies\n\t * to this toolbar and all nested ones as well.\n\t */\n\tpublic fillFromConfig(\n\t\titemsOrConfig: ToolbarConfig | undefined,\n\t\tfactory: ComponentFactory,\n\t\tremoveItems?: Array<string>\n\t): void {\n\t\tthis.items.addMany( this._buildItemsFromConfig( itemsOrConfig, factory, removeItems ) );\n\t}\n\n\t/**\n\t * Changes the behavior of toolbar if it does not fit into the available space.\n\t */\n\tpublic switchBehavior( newBehaviorType: 'dynamic' | 'static' ): void {\n\t\tif ( this._behavior.type !== newBehaviorType ) {\n\t\t\tthis._behavior.destroy();\n\t\t\tthis.itemsView.children.clear();\n\t\t\tthis.focusables.clear();\n\n\t\t\tif ( newBehaviorType === 'dynamic' ) {\n\t\t\t\tthis._behavior = new DynamicGrouping( this );\n\t\t\t\tthis._behavior.render( this );\n\n\t\t\t\t( this._behavior as DynamicGrouping ).refreshItems();\n\t\t\t} else {\n\t\t\t\tthis._behavior = new StaticLayout( this );\n\t\t\t\tthis._behavior.render( this );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A utility that expands the plain toolbar configuration into a list of view items using a given component factory.\n\t *\n\t * @param itemsOrConfig The toolbar items or the entire toolbar configuration object.\n\t * @param factory A factory producing toolbar items.\n\t * @param removeItems An array of items names to be removed from the configuration. When present, applies\n\t * to this toolbar and all nested ones as well.\n\t */\n\tprivate _buildItemsFromConfig(\n\t\titemsOrConfig: ToolbarConfig | undefined,\n\t\tfactory: ComponentFactory,\n\t\tremoveItems?: Array<string>\n\t): Array<View> {\n\t\tconst config = normalizeToolbarConfig( itemsOrConfig );\n\t\tconst normalizedRemoveItems = removeItems || config.removeItems;\n\t\tconst itemsToAdd = this._cleanItemsConfiguration( config.items, factory, normalizedRemoveItems )\n\t\t\t.map( item => {\n\t\t\t\tif ( isObject( item ) ) {\n\t\t\t\t\treturn this._createNestedToolbarDropdown( item, factory, normalizedRemoveItems );\n\t\t\t\t} else if ( item === '|' ) {\n\t\t\t\t\treturn new ToolbarSeparatorView();\n\t\t\t\t} else if ( item === '-' ) {\n\t\t\t\t\treturn new ToolbarLineBreakView();\n\t\t\t\t}\n\n\t\t\t\treturn factory.create( item );\n\t\t\t} )\n\t\t\t.filter( ( item ): item is View => !!item );\n\n\t\treturn itemsToAdd;\n\t}\n\n\t/**\n\t * Cleans up the {@link module:ui/toolbar/toolbarview~ToolbarView#items} of the toolbar by removing unwanted items and\n\t * duplicated (obsolete) separators or line breaks.\n\t *\n\t * @param items The toolbar items configuration.\n\t * @param factory A factory producing toolbar items.\n\t * @param removeItems An array of items names to be removed from the configuration.\n\t * @returns Items after the clean-up.\n\t */\n\tprivate _cleanItemsConfiguration(\n\t\titems: Array<ToolbarConfigItem>,\n\t\tfactory: ComponentFactory,\n\t\tremoveItems: Array<string>\n\t) {\n\t\tconst filteredItems = items\n\t\t\t.filter( ( item, idx, items ) => {\n\t\t\t\tif ( item === '|' ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\t// Items listed in `config.removeItems` should not be added to the toolbar.\n\t\t\t\tif ( removeItems.indexOf( item as any ) !== -1 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif ( item === '-' ) {\n\t\t\t\t\t// The toolbar line breaks must not be rendered when toolbar grouping is enabled.\n\t\t\t\t\t// (https://github.com/ckeditor/ckeditor5/issues/8582)\n\t\t\t\t\tif ( this.options.shouldGroupWhenFull ) {\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * The toolbar multiline breaks (`-` items) only work when the automatic button grouping\n\t\t\t\t\t\t * is disabled in the toolbar configuration.\n\t\t\t\t\t\t * To do this, set the `shouldNotGroupWhenFull` option to `true` in the editor configuration:\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * ```ts\n\t\t\t\t\t\t * const config = {\n\t\t\t\t\t\t * \ttoolbar: {\n\t\t\t\t\t\t * \t\titems: [ ... ],\n\t\t\t\t\t\t * \t\tshouldNotGroupWhenFull: true\n\t\t\t\t\t\t * \t}\n\t\t\t\t\t\t * }\n\t\t\t\t\t\t * ```\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * Learn more about {@link module:core/editor/editorconfig~EditorConfig#toolbar toolbar configuration}.\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * @error toolbarview-line-break-ignored-when-grouping-items\n\t\t\t\t\t\t */\n\t\t\t\t\t\tlogWarning( 'toolbarview-line-break-ignored-when-grouping-items', items );\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\t// For the items that cannot be instantiated we are sending warning message. We also filter them out.\n\t\t\t\tif ( !isObject( item ) && !factory.has( item ) ) {\n\t\t\t\t\t/**\n\t\t\t\t\t * There was a problem processing the configuration of the toolbar. The item with the given\n\t\t\t\t\t * name does not exist so it was omitted when rendering the toolbar.\n\t\t\t\t\t *\n\t\t\t\t\t * This warning usually shows up when the {@link module:core/plugin~Plugin} which is supposed\n\t\t\t\t\t * to provide a toolbar item has not been loaded or there is a typo in the\n\t\t\t\t\t * {@link module:core/editor/editorconfig~EditorConfig#toolbar toolbar configuration}.\n\t\t\t\t\t *\n\t\t\t\t\t * Make sure the plugin responsible for this toolbar item is loaded and the toolbar configuration\n\t\t\t\t\t * is correct, e.g. {@link module:basic-styles/bold~Bold} is loaded for the `'bold'` toolbar item.\n\t\t\t\t\t *\n\t\t\t\t\t * You can use the following snippet to retrieve all available toolbar items:\n\t\t\t\t\t *\n\t\t\t\t\t * ```ts\n\t\t\t\t\t * Array.from( editor.ui.componentFactory.names() );\n\t\t\t\t\t * ```\n\t\t\t\t\t *\n\t\t\t\t\t * @error toolbarview-item-unavailable\n\t\t\t\t\t * @param {string} item The name of the component or nested toolbar definition.\n\t\t\t\t\t */\n\t\t\t\t\tlogWarning( 'toolbarview-item-unavailable', { item } );\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t} );\n\n\t\treturn this._cleanSeparatorsAndLineBreaks( filteredItems );\n\t}\n\n\t/**\n\t * Remove leading, trailing, and duplicated separators (`-` and `|`).\n\t *\n\t * @returns Toolbar items after the separator and line break clean-up.\n\t */\n\tprivate _cleanSeparatorsAndLineBreaks( items: Array<ToolbarConfigItem> ) {\n\t\tconst nonSeparatorPredicate = ( item: ToolbarConfigItem ) => ( item !== '-' && item !== '|' );\n\t\tconst count = items.length;\n\n\t\t// Find an index of the first item that is not a separator.\n\t\tconst firstCommandItemIndex = items.findIndex( nonSeparatorPredicate );\n\n\t\t// Items include separators only. There is no point in displaying them.\n\t\tif ( firstCommandItemIndex === -1 ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Search from the end of the list, then convert found index back to the original direction.\n\t\tconst lastCommandItemIndex = count - items\n\t\t\t.slice()\n\t\t\t.reverse()\n\t\t\t.findIndex( nonSeparatorPredicate );\n\n\t\treturn items\n\t\t\t// Return items without the leading and trailing separators.\n\t\t\t.slice( firstCommandItemIndex, lastCommandItemIndex )\n\t\t\t// Remove duplicated separators.\n\t\t\t.filter( ( name, idx, items ) => {\n\t\t\t\t// Filter only separators.\n\t\t\t\tif ( nonSeparatorPredicate( name ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tconst isDuplicated = idx > 0 && items[ idx - 1 ] === name;\n\n\t\t\t\treturn !isDuplicated;\n\t\t\t} );\n\t}\n\n\t/**\n\t * Creates a user-defined dropdown containing a toolbar with items.\n\t *\n\t * @param definition A definition of the nested toolbar dropdown.\n\t * @param definition.label A label of the dropdown.\n\t * @param definition.icon An icon of the drop-down. One of 'bold', 'plus', 'text', 'importExport', 'alignLeft',\n\t * 'paragraph' or an SVG string. When `false` is passed, no icon will be used.\n\t * @param definition.withText When set `true`, the label of the dropdown will be visible. See\n\t * {@link module:ui/button/buttonview~ButtonView#withText} to learn more.\n\t * @param definition.tooltip A tooltip of the dropdown button. See\n\t * {@link module:ui/button/buttonview~ButtonView#tooltip} to learn more. Defaults to `true`.\n\t * @param componentFactory Component factory used to create items\n\t * of the nested toolbar.\n\t */\n\tprivate _createNestedToolbarDropdown(\n\t\tdefinition: Exclude<ToolbarConfigItem, string>,\n\t\tcomponentFactory: ComponentFactory,\n\t\tremoveItems: Array<string>\n\t) {\n\t\tlet { label, icon, items, tooltip = true, withText = false } = definition;\n\n\t\titems = this._cleanItemsConfiguration( items, componentFactory, removeItems );\n\n\t\t// There is no point in rendering a dropdown without items.\n\t\tif ( !items.length ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst locale = this.locale;\n\t\tconst dropdownView = createDropdown( locale );\n\n\t\tif ( !label ) {\n\t\t\t/**\n\t\t\t * A dropdown definition in the toolbar configuration is missing a text label.\n\t\t\t *\n\t\t\t * Without a label, the dropdown becomes inaccessible to users relying on assistive technologies.\n\t\t\t * Make sure the `label` property is set in your drop-down configuration:\n\t\t\t *\n\t\t\t * ```json\n \t\t\t * {\n \t\t\t * \tlabel: 'A human-readable label',\n\t\t\t * \ticon: '...',\n\t\t\t * \titems: [ ... ]\n \t\t\t * },\n\t\t\t * ```\n\t\t\t *\n\t\t\t * Learn more about {@link module:core/editor/editorconfig~EditorConfig#toolbar toolbar configuration}.\n\t\t\t *\n\t\t\t * @error toolbarview-nested-toolbar-dropdown-missing-label\n\t\t\t */\n\t\t\tlogWarning( 'toolbarview-nested-toolbar-dropdown-missing-label', definition );\n\t\t}\n\n\t\tdropdownView.class = 'ck-toolbar__nested-toolbar-dropdown';\n\t\tdropdownView.buttonView.set( {\n\t\t\tlabel,\n\t\t\ttooltip,\n\t\t\twithText: !!withText\n\t\t} );\n\n\t\t// Allow disabling icon by passing false.\n\t\tif ( icon !== false ) {\n\t\t\t// A pre-defined icon picked by name, SVG string, a fallback (default) icon.\n\t\t\tdropdownView.buttonView.icon = NESTED_TOOLBAR_ICONS[ icon! ] || icon || IconThreeVerticalDots;\n\t\t}\n\t\t// If the icon is disabled, display the label automatically.\n\t\telse {\n\t\t\tdropdownView.buttonView.withText = true;\n\t\t}\n\n\t\taddToolbarToDropdown( dropdownView, () => (\n\t\t\tdropdownView.toolbarView!._buildItemsFromConfig( items, componentFactory, removeItems )\n\t\t) );\n\n\t\treturn dropdownView;\n\t}\n}\n\n/**\n * Fired when some toolbar {@link ~ToolbarView#items} were grouped or ungrouped as a result of some change\n * in the toolbar geometry.\n *\n * **Note**: This event is always fired **once** regardless of the number of items that were be\n * grouped or ungrouped at a time.\n *\n * **Note**: This event is fired only if the items grouping functionality was enabled in\n * the first place (see {@link module:ui/toolbar/toolbarview~ToolbarOptions#shouldGroupWhenFull}).\n *\n * @eventName ~ToolbarView#groupedItemsUpdate\n */\nexport type ToolbarViewGroupedItemsUpdateEvent = {\n\tname: 'groupedItemsUpdate';\n\targs: [];\n};\n\n/**\n * An inner block of the {@link module:ui/toolbar/toolbarview~ToolbarView} hosting its\n * {@link module:ui/toolbar/toolbarview~ToolbarView#items}.\n */\nexport class ItemsView extends View {\n\t/**\n\t * A collection of items (buttons, dropdowns, etc.).\n\t */\n\tpublic readonly children: ViewCollection;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale?: Locale ) {\n\t\tsuper( locale );\n\n\t\tthis.children = this.createCollection();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-toolbar__items'\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: this.children\n\t\t} );\n\t}\n}\n\n/**\n * A toolbar behavior that makes it static and unresponsive to the changes of the environment.\n * At the same time, it also makes it possible to display a toolbar with a vertical layout\n * using the {@link module:ui/toolbar/toolbarview~ToolbarView#isVertical} property.\n */\nclass StaticLayout implements ToolbarBehavior {\n\t/**\n\t * Toolbar behavior type.\n\t */\n\tpublic readonly type = 'static';\n\n\t/**\n\t * Creates an instance of the {@link module:ui/toolbar/toolbarview~StaticLayout} toolbar\n\t * behavior.\n\t *\n\t * @param view An instance of the toolbar that this behavior is added to.\n\t */\n\tconstructor( view: ToolbarView ) {\n\t\tview.isGrouping = false;\n\n\t\t// 1:1 pass–through binding, all ToolbarView#items are visible.\n\t\tview.itemsView.children.bindTo( view.items ).using( item => item );\n\n\t\t// 1:1 pass–through binding, all ToolbarView#items are focusable.\n\t\tview.focusables.bindTo( view.items ).using( item => isFocusable( item ) ? item : null );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic render(): void {}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic destroy(): void {}\n}\n\n/**\n * A toolbar behavior that makes the items respond to changes in the geometry.\n *\n * In a nutshell, it groups {@link module:ui/toolbar/toolbarview~ToolbarView#items}\n * that do not fit visually into a single row of the toolbar (due to limited space).\n * Items that do not fit are aggregated in a dropdown displayed at the end of the toolbar.\n *\n * ```\n *\t┌──────────────────────────────────────── ToolbarView ──────────────────────────────────────────┐\n *\t| ┌─────────────────────────────────────── #children ─────────────────────────────────────────┐ |\n *\t| |   ┌─────── #itemsView ────────┐ ┌──────────────────────┐ ┌── #groupedItemsDropdown ───┐   | |\n *\t| |   |       #ungroupedItems     | | ToolbarSeparatorView | |        #groupedItems       |   | |\n *\t| |   └──────────────────────────-┘ └──────────────────────┘ └────────────────────────────┘   | |\n *\t| |                                  \\---------- only when toolbar items overflow -------/    | |\n *\t| └───────────────────────────────────────────────────────────────────────────────────────────┘ |\n *\t└───────────────────────────────────────────────────────────────────────────────────────────────┘\n * ```\n */\nclass DynamicGrouping implements ToolbarBehavior {\n\t/**\n\t * Toolbar behavior type.\n\t */\n\tpublic readonly type = 'dynamic';\n\n\t/**\n\t * A toolbar view this behavior belongs to.\n\t */\n\tpublic readonly view: ToolbarView;\n\n\t/**\n\t * A collection of toolbar children.\n\t */\n\tpublic readonly viewChildren: ViewCollection;\n\n\t/**\n\t * A collection of focusable toolbar elements.\n\t */\n\tpublic readonly viewFocusables: ViewCollection<FocusableView>;\n\n\t/**\n\t * A view containing toolbar items.\n\t */\n\tpublic readonly viewItemsView: ItemsView;\n\n\t/**\n\t * Toolbar focus tracker.\n\t */\n\tpublic readonly viewFocusTracker: FocusTracker;\n\n\t/**\n\t * Toolbar locale.\n\t */\n\tpublic readonly viewLocale: Locale;\n\n\t/**\n\t * A subset of toolbar {@link module:ui/toolbar/toolbarview~ToolbarView#items}.\n\t * Aggregates items that fit into a single row of the toolbar and were not {@link #groupedItems grouped}\n\t * into a {@link #groupedItemsDropdown dropdown}. Items of this collection are displayed in the\n\t * {@link module:ui/toolbar/toolbarview~ToolbarView#itemsView}.\n\t *\n\t * When none of the {@link module:ui/toolbar/toolbarview~ToolbarView#items} were grouped, it\n\t * matches the {@link module:ui/toolbar/toolbarview~ToolbarView#items} collection in size and order.\n\t */\n\tpublic readonly ungroupedItems: ViewCollection;\n\n\t/**\n\t * A subset of toolbar {@link module:ui/toolbar/toolbarview~ToolbarView#items}.\n\t * A collection of the toolbar items that do not fit into a single row of the toolbar.\n\t * Grouped items are displayed in a dedicated {@link #groupedItemsDropdown dropdown}.\n\t *\n\t * When none of the {@link module:ui/toolbar/toolbarview~ToolbarView#items} were grouped,\n\t * this collection is empty.\n\t */\n\tpublic readonly groupedItems: ViewCollection;\n\n\t/**\n\t * The dropdown that aggregates {@link #groupedItems grouped items} that do not fit into a single\n\t * row of the toolbar. It is displayed on demand as the last of\n\t * {@link module:ui/toolbar/toolbarview~ToolbarView#children toolbar children} and offers another\n\t * (nested) toolbar which displays items that would normally overflow.\n\t */\n\tpublic readonly groupedItemsDropdown: DropdownView;\n\n\t/**\n\t * An instance of the resize observer that helps dynamically determine the geometry of the toolbar\n\t * and manage items that do not fit into a single row.\n\t *\n\t * **Note:** Created in {@link #_enableGroupingOnResize}.\n\t *\n\t * @readonly\n\t */\n\tpublic resizeObserver: ResizeObserver | null = null;\n\n\t/**\n\t * A cached value of the horizontal padding style used by {@link #_updateGrouping}\n\t * to manage the {@link module:ui/toolbar/toolbarview~ToolbarView#items} that do not fit into\n\t * a single toolbar line. This value can be reused between updates because it is unlikely that\n\t * the padding will change and re–using `Window.getComputedStyle()` is expensive.\n\t *\n\t * @readonly\n\t */\n\tpublic cachedPadding: number | null = null;\n\n\t/**\n\t * A flag indicating that an items grouping update has been queued (e.g. due to the toolbar being visible)\n\t * and should be executed immediately the next time the toolbar shows up.\n\t *\n\t * @readonly\n\t */\n\tpublic shouldUpdateGroupingOnNextResize: boolean = false;\n\n\t/**\n\t * Toolbar element.\n\t *\n\t * @readonly\n\t */\n\tpublic viewElement: HTMLElement | null | undefined;\n\n\t/**\n\t * Creates an instance of the {@link module:ui/toolbar/toolbarview~DynamicGrouping} toolbar\n\t * behavior.\n\t *\n\t * @param view An instance of the toolbar that this behavior is added to.\n\t */\n\tconstructor( view: ToolbarView ) {\n\t\tthis.view = view;\n\n\t\tthis.viewChildren = view.children;\n\t\tthis.viewFocusables = view.focusables;\n\t\tthis.viewItemsView = view.itemsView;\n\t\tthis.viewFocusTracker = view.focusTracker;\n\t\tthis.viewLocale = view.locale;\n\t\tthis.view.isGrouping = true;\n\n\t\tthis.ungroupedItems = view.createCollection();\n\t\tthis.groupedItems = view.createCollection();\n\t\tthis.groupedItemsDropdown = this._createGroupedItemsDropdown();\n\n\t\t// Only those items that were not grouped are visible to the user.\n\t\tview.itemsView.children.bindTo( this.ungroupedItems ).using( item => item );\n\n\t\t// Make sure all #items visible in the main space of the toolbar are \"focuscyclable\".\n\t\tthis.ungroupedItems.on<CollectionChangeEvent>( 'change', this._updateFocusCyclableItems.bind( this ) );\n\n\t\t// Make sure the #groupedItemsDropdown is also included in cycling when it appears.\n\t\tview.children.on<CollectionChangeEvent>( 'change', this._updateFocusCyclableItems.bind( this ) );\n\n\t\t// ToolbarView#items is dynamic. When an item is added or removed, it should be automatically\n\t\t// represented in either grouped or ungrouped items at the right index.\n\t\t// In other words #items == concat( #ungroupedItems, #groupedItems )\n\t\t// (in length and order).\n\t\tview.items.on<CollectionChangeEvent<View>>( 'change', ( evt, changeData ) => {\n\t\t\tconst index = changeData.index;\n\t\t\tconst added = Array.from( changeData.added );\n\n\t\t\t// Removing.\n\t\t\tfor ( const removedItem of changeData.removed ) {\n\t\t\t\tif ( index >= this.ungroupedItems.length ) {\n\t\t\t\t\tthis.groupedItems.remove( removedItem );\n\t\t\t\t} else {\n\t\t\t\t\tthis.ungroupedItems.remove( removedItem );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Adding.\n\t\t\tfor ( let currentIndex = index; currentIndex < index + added.length; currentIndex++ ) {\n\t\t\t\tconst addedItem = added[ currentIndex - index ];\n\n\t\t\t\tif ( currentIndex > this.ungroupedItems.length ) {\n\t\t\t\t\tthis.groupedItems.add( addedItem, currentIndex - this.ungroupedItems.length );\n\t\t\t\t} else {\n\t\t\t\t\tthis.ungroupedItems.add( addedItem, currentIndex );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// When new ungrouped items join in and land in #ungroupedItems, there's a chance it causes\n\t\t\t// the toolbar to overflow.\n\t\t\t// Consequently if removed from grouped or ungrouped items, there is a chance\n\t\t\t// some new space is available and we could do some ungrouping.\n\t\t\tthis._updateGrouping();\n\t\t} );\n\t}\n\n\t/**\n\t * Enables dynamic items grouping based on the dimensions of the toolbar.\n\t *\n\t * @param view An instance of the toolbar that this behavior is added to.\n\t */\n\tpublic render( view: ToolbarView ): void {\n\t\tthis.viewElement = view.element;\n\n\t\tthis._enableGroupingOnResize();\n\t\tthis._enableGroupingOnMaxWidthChange( view );\n\t}\n\n\t/**\n\t * Cleans up the internals used by this behavior.\n\t */\n\tpublic destroy(): void {\n\t\t// The dropdown may not be in ToolbarView#children at the moment of toolbar destruction\n\t\t// so let's make sure it's actually destroyed along with the toolbar.\n\t\tthis.groupedItemsDropdown.destroy();\n\n\t\t// Do not try to remove the same elements if they are already removed.\n\t\tif ( this.viewChildren.length > 1 ) {\n\t\t\tthis.viewChildren.remove( this.groupedItemsDropdown );\n\t\t\tthis.viewChildren.remove( this.viewChildren.last! );\n\t\t}\n\n\t\tthis.resizeObserver!.destroy();\n\t}\n\n\t/**\n\t * Re-adds all items to the toolbar. Use when the toolbar is re-rendered and the items grouping is lost.\n\t */\n\tpublic refreshItems(): void {\n\t\tconst view = this.view;\n\n\t\tif ( view.items.length ) {\n\t\t\tfor ( let currentIndex = 0; currentIndex < view.items.length; currentIndex++ ) {\n\t\t\t\tconst item = [ ...view.items ][ currentIndex ];\n\n\t\t\t\tthis.ungroupedItems.add( item, currentIndex );\n\t\t\t}\n\n\t\t\tthis._updateGrouping();\n\t\t}\n\t}\n\n\t/**\n\t * When called, it will check if any of the {@link #ungroupedItems} do not fit into a single row of the toolbar,\n\t * and it will move them to the {@link #groupedItems} when it happens.\n\t *\n\t * At the same time, it will also check if there is enough space in the toolbar for the first of the\n\t * {@link #groupedItems} to be returned back to {@link #ungroupedItems} and still fit into a single row\n\t * without the toolbar wrapping.\n\t */\n\tprivate _updateGrouping() {\n\t\t// Do no grouping–related geometry analysis when the toolbar is detached from visible DOM,\n\t\t// for instance before #render(), or after render but without a parent or a parent detached\n\t\t// from DOM. DOMRects won't work anyway and there will be tons of warning in the console and\n\t\t// nothing else. This happens, for instance, when the toolbar is detached from DOM and\n\t\t// some logic adds or removes its #items.\n\t\tif ( !this.viewElement!.ownerDocument.body.contains( this.viewElement! ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not update grouping when the element is invisible. Such toolbar has DOMRect filled with zeros\n\t\t// and that would cause all items to be grouped. Instead, queue the grouping so it runs next time\n\t\t// the toolbar is visible (the next ResizeObserver callback execution). This is handy because\n\t\t// the grouping could be caused by increasing the #maxWidth when the toolbar was invisible and the next\n\t\t// time it shows up, some items could actually be ungrouped (https://github.com/ckeditor/ckeditor5/issues/6575).\n\t\tif ( !isVisible( this.viewElement ) ) {\n\t\t\tthis.shouldUpdateGroupingOnNextResize = true;\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember how many items were initially grouped so at the it is possible to figure out if the number\n\t\t// of grouped items has changed. If the number has changed, geometry of the toolbar has also changed.\n\t\tconst initialGroupedItemsCount = this.groupedItems.length;\n\t\tlet wereItemsGrouped;\n\n\t\t// Group #items as long as some wrap to the next row. This will happen, for instance,\n\t\t// when the toolbar is getting narrow and there is not enough space to display all items in\n\t\t// a single row.\n\t\twhile ( this._areItemsOverflowing ) {\n\t\t\tthis._groupLastItem();\n\n\t\t\twereItemsGrouped = true;\n\t\t}\n\n\t\t// If none were grouped now but there were some items already grouped before,\n\t\t// then, what the hell, maybe let's see if some of them can be ungrouped. This happens when,\n\t\t// for instance, the toolbar is stretching and there's more space in it than before.\n\t\tif ( !wereItemsGrouped && this.groupedItems.length ) {\n\t\t\t// Ungroup items as long as none are overflowing or there are none to ungroup left.\n\t\t\twhile ( this.groupedItems.length && !this._areItemsOverflowing ) {\n\t\t\t\tthis._ungroupFirstItem();\n\t\t\t}\n\n\t\t\t// If the ungrouping ended up with some item wrapping to the next row,\n\t\t\t// put it back to the group toolbar (\"undo the last ungroup\"). We don't know whether\n\t\t\t// an item will wrap or not until we ungroup it (that's a DOM/CSS thing) so this\n\t\t\t// clean–up is vital for the algorithm.\n\t\t\tif ( this._areItemsOverflowing ) {\n\t\t\t\tthis._groupLastItem();\n\t\t\t}\n\t\t}\n\n\t\tif ( this.groupedItems.length !== initialGroupedItemsCount ) {\n\t\t\tthis.view.fire<ToolbarViewGroupedItemsUpdateEvent>( 'groupedItemsUpdate' );\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` when {@link module:ui/toolbar/toolbarview~ToolbarView#element} children visually overflow,\n\t * for instance if the toolbar is narrower than its members. Returns `false` otherwise.\n\t */\n\tprivate get _areItemsOverflowing() {\n\t\t// An empty toolbar cannot overflow.\n\t\tif ( !this.ungroupedItems.length ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst element = this.viewElement;\n\t\tconst uiLanguageDirection = this.viewLocale.uiLanguageDirection;\n\t\tconst lastChildRect = new Rect( element!.lastChild as any );\n\t\tconst toolbarRect = new Rect( element! );\n\n\t\tif ( !this.cachedPadding ) {\n\t\t\tconst computedStyle = global.window.getComputedStyle( element! );\n\t\t\tconst paddingProperty = uiLanguageDirection === 'ltr' ? 'paddingRight' : 'paddingLeft';\n\n\t\t\t// parseInt() is essential because of quirky floating point numbers logic and DOM.\n\t\t\t// If the padding turned out too big because of that, the grouped items dropdown would\n\t\t\t// always look (from the Rect perspective) like it overflows (while it's not).\n\t\t\tthis.cachedPadding = Number.parseInt( computedStyle[ paddingProperty ] );\n\t\t}\n\n\t\tif ( uiLanguageDirection === 'ltr' ) {\n\t\t\treturn lastChildRect.right > toolbarRect.right - this.cachedPadding;\n\t\t} else {\n\t\t\treturn lastChildRect.left < toolbarRect.left + this.cachedPadding;\n\t\t}\n\t}\n\n\t/**\n\t * Enables the functionality that prevents {@link #ungroupedItems} from overflowing (wrapping to the next row)\n\t * upon resize when there is little space available. Instead, the toolbar items are moved to the\n\t * {@link #groupedItems} collection and displayed in a dropdown at the end of the row (which has its own nested toolbar).\n\t *\n\t * When called, the toolbar will automatically analyze the location of its {@link #ungroupedItems} and \"group\"\n\t * them in the dropdown if necessary. It will also observe the browser window for size changes in\n\t * the future and respond to them by grouping more items or reverting already grouped back, depending\n\t * on the visual space available.\n\t */\n\tprivate _enableGroupingOnResize() {\n\t\tlet previousWidth: number | undefined;\n\n\t\t// TODO: Consider debounce.\n\t\tthis.resizeObserver = new ResizeObserver( this.viewElement!, entry => {\n\t\t\tif ( !previousWidth || previousWidth !== entry.contentRect.width || this.shouldUpdateGroupingOnNextResize ) {\n\t\t\t\tthis.shouldUpdateGroupingOnNextResize = false;\n\n\t\t\t\tthis._updateGrouping();\n\n\t\t\t\tpreviousWidth = entry.contentRect.width;\n\t\t\t}\n\t\t} );\n\n\t\tthis._updateGrouping();\n\t}\n\n\t/**\n\t * Enables the grouping functionality, just like {@link #_enableGroupingOnResize} but the difference is that\n\t * it listens to the changes of {@link module:ui/toolbar/toolbarview~ToolbarView#maxWidth} instead.\n\t */\n\tprivate _enableGroupingOnMaxWidthChange( view: View ) {\n\t\tview.on<ObservableChangeEvent>( 'change:maxWidth', () => {\n\t\t\tthis._updateGrouping();\n\t\t} );\n\t}\n\n\t/**\n\t * When called, it will remove the last item from {@link #ungroupedItems} and move it back\n\t * to the {@link #groupedItems} collection.\n\t *\n\t * The opposite of {@link #_ungroupFirstItem}.\n\t */\n\tprivate _groupLastItem() {\n\t\tif ( !this.groupedItems.length ) {\n\t\t\tthis.viewChildren.add( new ToolbarSeparatorView() );\n\t\t\tthis.viewChildren.add( this.groupedItemsDropdown );\n\t\t\tthis.viewFocusTracker.add( this.groupedItemsDropdown.element! );\n\t\t}\n\n\t\tthis.groupedItems.add( this.ungroupedItems.remove( this.ungroupedItems.last! ), 0 );\n\t}\n\n\t/**\n\t * Moves the very first item belonging to {@link #groupedItems} back\n\t * to the {@link #ungroupedItems} collection.\n\t *\n\t * The opposite of {@link #_groupLastItem}.\n\t */\n\tprivate _ungroupFirstItem() {\n\t\tthis.ungroupedItems.add( this.groupedItems.remove( this.groupedItems.first! ) );\n\n\t\tif ( !this.groupedItems.length ) {\n\t\t\tthis.viewChildren.remove( this.groupedItemsDropdown );\n\t\t\tthis.viewChildren.remove( this.viewChildren.last! );\n\t\t\tthis.viewFocusTracker.remove( this.groupedItemsDropdown.element! );\n\t\t}\n\t}\n\n\t/**\n\t * Creates the {@link #groupedItemsDropdown} that hosts the members of the {@link #groupedItems}\n\t * collection when there is not enough space in the toolbar to display all items in a single row.\n\t */\n\tprivate _createGroupedItemsDropdown() {\n\t\tconst locale = this.viewLocale;\n\t\tconst t = locale.t;\n\t\tconst dropdown = createDropdown( locale );\n\n\t\tdropdown.class = 'ck-toolbar__grouped-dropdown';\n\n\t\t// Make sure the dropdown never sticks out to the left/right. It should be under the main toolbar.\n\t\t// (https://github.com/ckeditor/ckeditor5/issues/5608)\n\t\tdropdown.panelPosition = locale.uiLanguageDirection === 'ltr' ? 'sw' : 'se';\n\n\t\taddToolbarToDropdown( dropdown, this.groupedItems );\n\n\t\tdropdown.buttonView.set( {\n\t\t\tlabel: t( 'Show more items' ),\n\t\t\ttooltip: true,\n\t\t\ttooltipPosition: locale.uiLanguageDirection === 'rtl' ? 'se' : 'sw',\n\t\t\ticon: IconThreeVerticalDots\n\t\t} );\n\n\t\treturn dropdown;\n\t}\n\n\t/**\n\t * Updates the {@link module:ui/toolbar/toolbarview~ToolbarView#focusables focus–cyclable items}\n\t * collection so it represents the up–to–date state of the UI from the perspective of the user.\n\t *\n\t * For instance, the {@link #groupedItemsDropdown} can show up and hide but when it is visible,\n\t * it must be subject to focus cycling in the toolbar.\n\t *\n\t * See the {@link module:ui/toolbar/toolbarview~ToolbarView#focusables collection} documentation\n\t * to learn more about the purpose of this method.\n\t */\n\tprivate _updateFocusCyclableItems() {\n\t\tthis.viewFocusables.clear();\n\n\t\tthis.ungroupedItems.map( item => {\n\t\t\tif ( isFocusable( item ) ) {\n\t\t\t\tthis.viewFocusables.add( item );\n\t\t\t}\n\t\t} );\n\n\t\tif ( this.groupedItems.length ) {\n\t\t\tthis.viewFocusables.add( this.groupedItemsDropdown );\n\t\t}\n\t}\n}\n\n/**\n * Options passed to the {@link module:ui/toolbar/toolbarview~ToolbarView#constructor} of the toolbar.\n */\nexport interface ToolbarOptions {\n\n\t/**\n\t * When set to `true`, the toolbar will automatically group {@link module:ui/toolbar/toolbarview~ToolbarView#items} that\n\t * would normally wrap to the next line when there is not enough space to display them in a single row, for\n\t * instance, if the parent container of the toolbar is narrow. For toolbars in absolutely positioned containers\n\t * without width restrictions also the {@link module:ui/toolbar/toolbarview~ToolbarOptions#isFloating} option is required to be `true`.\n\t *\n\t * See also: {@link module:ui/toolbar/toolbarview~ToolbarView#maxWidth}.\n\t */\n\tshouldGroupWhenFull?: boolean;\n\n\t/**\n\t * This option should be enabled for toolbars in absolutely positioned containers without width restrictions\n\t * to enable automatic {@link module:ui/toolbar/toolbarview~ToolbarView#items} grouping.\n\t * When this option is set to `true`, the items will stop wrapping to the next line\n\t * and together with {@link module:ui/toolbar/toolbarview~ToolbarOptions#shouldGroupWhenFull},\n\t * this will allow grouping them when there is not enough space in a single row.\n\t */\n\tisFloating?: boolean;\n}\n\n/**\n * A class interface defining the behavior of the {@link module:ui/toolbar/toolbarview~ToolbarView}.\n *\n * Toolbar behaviors extend its look and functionality and have an impact on the\n * {@link module:ui/toolbar/toolbarview~ToolbarView#element} template or\n * {@link module:ui/toolbar/toolbarview~ToolbarView#render rendering}. They can be enabled\n * conditionally, e.g. depending on the configuration of the toolbar.\n * @internal\n */\nexport interface ToolbarBehavior {\n\n\t/**\n\t * A method called after the toolbar has been {@link module:ui/toolbar/toolbarview~ToolbarView#render rendered}.\n\t * It can be used to, for example, customize the behavior of the toolbar when its\n\t * {@link module:ui/toolbar/toolbarview~ToolbarView#element} is available.\n\t *\n\t * @param view An instance of the toolbar being rendered.\n\t */\n\trender( view: ToolbarView ): void;\n\n\t/**\n\t * A method called after the toolbar has been {@link module:ui/toolbar/toolbarview~ToolbarView#destroy destroyed}.\n\t * It allows cleaning up after the toolbar behavior, for instance, this is the right place to detach\n\t * event listeners, free up references, etc.\n\t */\n\tdestroy(): void;\n\n\t/**\n\t * Indicates the type of the toolbar behavior. Dynamic toolbar can hide items that do not fit into the available space.\n\t * Static toolbar does not hide items and does not respond to the changes of the viewport.\n\t */\n\ttype: 'dynamic' | 'static';\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/dropdown/button/splitbuttonview\n */\n\nimport { IconDropdownArrow } from '@ckeditor/ckeditor5-icons';\nimport {\n\tKeystrokeHandler,\n\tFocusTracker,\n\ttype Locale\n} from '@ckeditor/ckeditor5-utils';\nimport { View } from '../../view.js';\nimport { ButtonView } from '../../button/buttonview.js';\nimport { type ViewCollection } from '../../viewcollection.js';\nimport { type Button } from '../../button/button.js';\nimport { type DropdownButton } from './dropdownbutton.js';\nimport type { FocusableView } from '../../focuscycler.js';\n\nimport '../../../theme/components/dropdown/splitbutton.css';\n\n/**\n * The split button view class.\n *\n * ```ts\n * const view = new SplitButtonView();\n *\n * view.set( {\n * \tlabel: 'A button',\n * \tkeystroke: 'Ctrl+B',\n * \ttooltip: true\n * } );\n *\n * view.render();\n *\n * document.body.append( view.element );\n * ```\n *\n * Also see the {@link module:ui/dropdown/utils~createDropdown `createDropdown()` util}.\n */\nexport class SplitButtonView extends View<HTMLDivElement> implements DropdownButton {\n\t/**\n\t * Collection of the child views inside of the split button {@link #element}.\n\t */\n\tpublic readonly children: ViewCollection;\n\n\t/**\n\t * A main button of split button.\n\t */\n\tpublic readonly actionView: ButtonView;\n\n\t/**\n\t * A secondary button of split button that opens dropdown.\n\t */\n\tpublic readonly arrowView: ButtonView;\n\n\t/**\n\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}. It manages\n\t * keystrokes of the split button:\n\t *\n\t * * <kbd>▶</kbd> moves focus to arrow view when action view is focused,\n\t * * <kbd>◀</kbd> moves focus to action view when arrow view is focused.\n\t */\n\tpublic readonly keystrokes: KeystrokeHandler;\n\n\t/**\n\t * Tracks information about DOM focus in the dropdown.\n\t */\n\tpublic readonly focusTracker: FocusTracker;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public label: string | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public keystroke: string | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public tooltip: Button[ 'tooltip' ];\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public tooltipPosition: Button[ 'tooltipPosition' ];\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public type: Button[ 'type' ];\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public isOn: boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public isEnabled: boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public isVisible: boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public isToggleable: boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public withText: boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public withKeystroke: boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public icon: string | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public tabindex: number;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public class: string | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public labelStyle: string | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public role: string | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public ariaChecked: boolean | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public ariaLabel?: string | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public ariaLabelledBy: string | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale?: Locale, actionButton?: ButtonView & FocusableView ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t// Implement the Button interface.\n\t\tthis.set( 'class', undefined );\n\t\tthis.set( 'labelStyle', undefined );\n\t\tthis.set( 'icon', undefined );\n\t\tthis.set( 'isEnabled', true );\n\t\tthis.set( 'isOn', false );\n\t\tthis.set( 'isToggleable', false );\n\t\tthis.set( 'isVisible', true );\n\t\tthis.set( 'keystroke', undefined );\n\t\tthis.set( 'withKeystroke', false );\n\t\tthis.set( 'label', undefined );\n\t\tthis.set( 'tabindex', -1 );\n\t\tthis.set( 'tooltip', false );\n\t\tthis.set( 'tooltipPosition', 's' );\n\t\tthis.set( 'type', 'button' );\n\t\tthis.set( 'withText', false );\n\n\t\tthis.children = this.createCollection();\n\t\tthis.actionView = this._createActionView( actionButton );\n\t\tthis.arrowView = this._createArrowView();\n\t\tthis.keystrokes = new KeystrokeHandler();\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-splitbutton',\n\t\t\t\t\tbind.to( 'class' ),\n\t\t\t\t\tbind.if( 'isVisible', 'ck-hidden', value => !value ),\n\t\t\t\t\tthis.arrowView.bindTemplate.if( 'isOn', 'ck-splitbutton_open' )\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: this.children\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tthis.children.add( this.actionView );\n\t\tthis.children.add( this.arrowView );\n\n\t\tthis.focusTracker.add( this.actionView.element! );\n\t\tthis.focusTracker.add( this.arrowView.element! );\n\n\t\tthis.keystrokes.listenTo( this.element! );\n\n\t\t// Overrides toolbar focus cycling behavior.\n\t\tthis.keystrokes.set( 'arrowright', ( evt, cancel ) => {\n\t\t\tif ( this.focusTracker.focusedElement === this.actionView.element ) {\n\t\t\t\tthis.arrowView.focus();\n\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\n\t\t// Overrides toolbar focus cycling behavior.\n\t\tthis.keystrokes.set( 'arrowleft', ( evt, cancel ) => {\n\t\t\tif ( this.focusTracker.focusedElement === this.arrowView.element ) {\n\t\t\t\tthis.actionView.focus();\n\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\n\t\tthis.focusTracker.destroy();\n\t\tthis.keystrokes.destroy();\n\t}\n\n\t/**\n\t * Focuses the {@link module:ui/button/buttonview~ButtonView#element} of the action part of split button.\n\t */\n\tpublic focus(): void {\n\t\tthis.actionView.focus();\n\t}\n\n\t/**\n\t * Creates a {@link module:ui/button/buttonview~ButtonView} instance as {@link #actionView} and binds it with main split button\n\t * attributes.\n\t */\n\tprivate _createActionView( actionButton?: ButtonView & FocusableView ) {\n\t\tconst actionView = actionButton || new ButtonView();\n\n\t\tif ( !actionButton ) {\n\t\t\tactionView.bind(\n\t\t\t\t'icon',\n\t\t\t\t'isEnabled',\n\t\t\t\t'isOn',\n\t\t\t\t'isToggleable',\n\t\t\t\t'keystroke',\n\t\t\t\t'label',\n\t\t\t\t'tabindex',\n\t\t\t\t'tooltip',\n\t\t\t\t'tooltipPosition',\n\t\t\t\t'type',\n\t\t\t\t'withText'\n\t\t\t).to( this );\n\t\t}\n\n\t\tactionView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-splitbutton__action'\n\t\t\t}\n\t\t} );\n\n\t\tactionView.delegate( 'execute' ).to( this );\n\n\t\treturn actionView;\n\t}\n\n\t/**\n\t * Creates a {@link module:ui/button/buttonview~ButtonView} instance as {@link #arrowView} and binds it with main split button\n\t * attributes.\n\t */\n\tprivate _createArrowView() {\n\t\tconst arrowView = new ButtonView();\n\t\tconst bind = arrowView.bindTemplate;\n\n\t\tarrowView.icon = IconDropdownArrow;\n\n\t\tarrowView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-splitbutton__arrow'\n\t\t\t\t],\n\t\t\t\t'data-cke-tooltip-disabled': bind.to( 'isOn' ),\n\t\t\t\t'aria-haspopup': true,\n\t\t\t\t'aria-expanded': bind.to( 'isOn', value => String( value ) )\n\t\t\t}\n\t\t} );\n\n\t\tarrowView.bind( 'isEnabled' ).to( this );\n\t\tarrowView.bind( 'label' ).to( this );\n\t\tarrowView.bind( 'tooltip' ).to( this );\n\n\t\tarrowView.delegate( 'execute' ).to( this, 'open' );\n\n\t\treturn arrowView;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/dropdown/utils\n */\n\nimport { DropdownPanelView } from './dropdownpanelview.js';\nimport { DropdownView } from './dropdownview.js';\nimport { DropdownButtonView } from './button/dropdownbuttonview.js';\nimport { DropdownMenuRootListView } from './menu/dropdownmenurootlistview.js';\nimport { ToolbarView } from '../toolbar/toolbarview.js';\nimport { ListView } from '../list/listview.js';\nimport { ListItemView } from '../list/listitemview.js';\nimport { ListSeparatorView } from '../list/listseparatorview.js';\nimport { SplitButtonView } from './button/splitbuttonview.js';\nimport { SwitchButtonView } from '../button/switchbuttonview.js';\nimport { ViewCollection } from '../viewcollection.js';\n\nimport { clickOutsideHandler } from '../bindings/clickoutsidehandler.js';\n\nimport type { View } from '../view.js';\nimport type { ButtonExecuteEvent } from '../button/button.js';\nimport { type UIModel } from '../model.js';\nimport { type DropdownButton } from './button/dropdownbutton.js';\nimport { type ButtonView } from '../button/buttonview.js';\nimport type { FocusableView } from '../focuscycler.js';\nimport type { FalsyValue } from '../template.js';\nimport { type BodyCollection } from '../editorui/bodycollection.js';\n\nimport {\n\tglobal,\n\tpriorities,\n\tlogWarning,\n\ttype FocusTracker,\n\ttype Collection,\n\ttype Locale,\n\ttype ObservableChangeEvent,\n\ttype CollectionChangeEvent\n} from '@ckeditor/ckeditor5-utils';\n\nimport '../../theme/components/dropdown/toolbardropdown.css';\nimport '../../theme/components/dropdown/listdropdown.css';\n\nimport { ListItemGroupView } from '../list/listitemgroupview.js';\nimport { ListItemButtonView } from '../button/listitembuttonview.js';\nimport type { DropdownMenuDefinition } from './menu/utils.js';\n\n/**\n * A helper for creating dropdowns. It creates an instance of a {@link module:ui/dropdown/dropdownview~DropdownView dropdown},\n * with a {@link module:ui/dropdown/button/dropdownbutton~DropdownButton button},\n * {@link module:ui/dropdown/dropdownpanelview~DropdownPanelView panel} and all standard dropdown's behaviors.\n *\n * # Creating dropdowns\n *\n * By default, the default {@link module:ui/dropdown/button/dropdownbuttonview~DropdownButtonView} class is used as\n * definition of the button:\n *\n * ```ts\n * const dropdown = createDropdown( model );\n *\n * // Configure dropdown's button properties:\n * dropdown.buttonView.set( {\n * \tlabel: 'A dropdown',\n * \twithText: true\n * } );\n *\n * dropdown.render();\n *\n * // Will render a dropdown labeled \"A dropdown\" with an empty panel.\n * document.body.appendChild( dropdown.element );\n * ```\n *\n * You can also provide other button views (they need to implement the\n * {@link module:ui/dropdown/button/dropdownbutton~DropdownButton} interface). For instance, you can use\n * {@link module:ui/dropdown/button/splitbuttonview~SplitButtonView} to create a dropdown with a split button.\n *\n * ```ts\n * const dropdown = createDropdown( locale, SplitButtonView );\n *\n * // Configure dropdown's button properties:\n * dropdown.buttonView.set( {\n * \tlabel: 'A dropdown',\n * \twithText: true\n * } );\n *\n * dropdown.buttonView.on( 'execute', () => {\n * \t// Add the behavior of the \"action part\" of the split button.\n * \t// Split button consists of the \"action part\" and \"arrow part\".\n * \t// The arrow opens the dropdown while the action part can have some other behavior.\n * } );\n *\n * dropdown.render();\n *\n * // Will render a dropdown labeled \"A dropdown\" with an empty panel.\n * document.body.appendChild( dropdown.element );\n * ```\n *\n * # Adding content to the dropdown's panel\n *\n * The content of the panel can be inserted directly into the `dropdown.panelView.element`:\n *\n * ```ts\n * dropdown.panelView.element.textContent = 'Content of the panel';\n * ```\n *\n * However, most of the time you will want to add there either a {@link module:ui/list/listview~ListView list of options}\n * or a list of buttons (i.e. a {@link module:ui/toolbar/toolbarview~ToolbarView toolbar}).\n * To simplify the task, you can use, respectively, {@link module:ui/dropdown/utils~addListToDropdown} or\n * {@link module:ui/dropdown/utils~addToolbarToDropdown} utils.\n *\n * @param locale The locale instance.\n * @param ButtonClassOrInstance The dropdown button view class. Needs to implement the\n * {@link module:ui/dropdown/button/dropdownbutton~DropdownButton} interface.\n * @returns The dropdown view instance.\n */\nexport function createDropdown(\n\tlocale: Locale | undefined,\n\tButtonClassOrInstance:\n\t\t( new ( locale?: Locale ) => DropdownButton & FocusableView ) | DropdownButton & FocusableView = DropdownButtonView\n): DropdownView {\n\tconst buttonView = typeof ButtonClassOrInstance == 'function' ? new ButtonClassOrInstance( locale ) : ButtonClassOrInstance;\n\n\tconst panelView = new DropdownPanelView( locale );\n\tconst dropdownView = new DropdownView( locale, buttonView, panelView );\n\n\tbuttonView.bind( 'isEnabled' ).to( dropdownView );\n\n\tif ( buttonView instanceof SplitButtonView ) {\n\t\tbuttonView.arrowView.bind( 'isOn' ).to( dropdownView, 'isOpen' );\n\t} else {\n\t\tbuttonView.bind( 'isOn' ).to( dropdownView, 'isOpen' );\n\t}\n\n\taddDefaultBehaviors( dropdownView );\n\n\treturn dropdownView;\n}\n\n/**\n * Adds a menu UI component to a dropdown and sets all common behaviors and interactions between the dropdown and the menu.\n *\n * Use this helper to create multi-level dropdown menus that are displayed in a toolbar.\n *\n * Internally, it creates an instance of {@link module:ui/dropdown/menu/dropdownmenurootlistview~DropdownMenuRootListView}.\n *\n * Example:\n *\n * ```ts\n * const definitions = [\n * \t{\n * \t\tid: 'menu_1',\n * \t\tmenu: 'Menu 1',\n * \t\tchildren: [\n * \t\t\t{\n * \t\t\t\tid: 'menu_1_a',\n * \t\t\t\tlabel: 'Item A'\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tid: 'menu_1_b',\n * \t\t\t\tlabel: 'Item B'\n * \t\t\t}\n * \t\t]\n * \t},\n * \t{\n * \t\tid: 'top_a',\n * \t\tlabel: 'Top Item A'\n * \t},\n * \t{\n * \t\tid: 'top_b',\n * \t\tlabel: 'Top Item B'\n * \t}\n * ];\n *\n * const dropdownView = createDropdown( editor.locale );\n *\n * addMenuToDropdown( dropdownView, editor.ui.view.body, definitions );\n * ```\n *\n * After using this helper, the `dropdown` will fire {@link module:ui/dropdown/dropdownview~DropdownViewEvent `execute`} event when\n * a nested menu button is pressed.\n *\n * The helper will make sure that the `dropdownMenuRootListView` is lazy loaded, i.e., the menu component structure will be initialized\n * and rendered only after the `dropdown` is opened for the first time.\n *\n * @param dropdownView A dropdown instance to which the menu component will be added.\n * @param body Body collection to which floating menu panels will be added.\n * @param definition The menu component definition.\n * @param options.ariaLabel Label used by assistive technologies to describe the top-level menu.\n */\nexport function addMenuToDropdown(\n\tdropdownView: DropdownView,\n\tbody: BodyCollection,\n\tdefinition: DropdownMenuDefinition,\n\toptions: {\n\t\tariaLabel?: string;\n\t} = {} ): void {\n\tdropdownView.menuView = new DropdownMenuRootListView( dropdownView.locale!, body, definition );\n\tdropdownView.focusTracker.add( dropdownView.menuView );\n\n\tif ( dropdownView.isOpen ) {\n\t\taddMenuToOpenDropdown( dropdownView, options );\n\t} else {\n\t\t// Load the UI elements only after the dropdown is opened for the first time - lazy loading.\n\t\tdropdownView.once( 'change:isOpen', () => {\n\t\t\taddMenuToOpenDropdown( dropdownView, options );\n\t\t}, { priority: 'highest' } );\n\t}\n}\n\nfunction addMenuToOpenDropdown(\n\tdropdownView: DropdownView,\n\toptions: {\n\t\tariaLabel?: string;\n\t}\n): void {\n\tconst dropdownMenuRootListView = dropdownView.menuView!;\n\tconst t = dropdownView.locale!.t;\n\n\tdropdownMenuRootListView.delegate( 'menu:execute' ).to( dropdownView, 'execute' );\n\tdropdownMenuRootListView.listenTo( dropdownView, 'change:isOpen', ( evt, name, isOpen ) => {\n\t\tif ( !isOpen ) {\n\t\t\tdropdownMenuRootListView.closeMenus();\n\t\t}\n\t}, { priority: 'low' } ); // Make sure this is fired after `focusDropdownButtonOnClose` behavior.\n\n\t// When `dropdownMenuRootListView` is added as a `panelView` child, it becomes rendered (`panelView` is rendered at this point).\n\tdropdownView.panelView.children.add( dropdownMenuRootListView );\n\n\t// Nested menu panels are added to body collection, so they are not children of the `dropdownView` from DOM perspective.\n\t// Add these panels to `dropdownView` focus tracker, so they are treated like part of the `dropdownView` for focus-related purposes.\n\tfor ( const menu of dropdownMenuRootListView.menus ) {\n\t\tdropdownView.focusTracker.add( menu );\n\t}\n\n\tdropdownMenuRootListView.ariaLabel = options.ariaLabel || t( 'Dropdown menu' );\n}\n\n/**\n * Adds an instance of {@link module:ui/toolbar/toolbarview~ToolbarView} to a dropdown.\n *\n * ```ts\n * const buttonsCreator = () => {\n * \tconst buttons = [];\n *\n * \t// Either create a new ButtonView instance or create existing.\n * \tbuttons.push( new ButtonView() );\n * \tbuttons.push( editor.ui.componentFactory.create( 'someButton' ) );\n * };\n *\n * const dropdown = createDropdown( locale );\n *\n * addToolbarToDropdown( dropdown, buttonsCreator, { isVertical: true } );\n *\n * // Will render a vertical button dropdown labeled \"A button dropdown\"\n * // with a button group in the panel containing two buttons.\n * // Buttons inside the dropdown will be created on first dropdown panel open.\n * dropdown.render()\n * document.body.appendChild( dropdown.element );\n * ```\n *\n * **Note:** To improve the accessibility, you can tell the dropdown to focus the first active button of the toolbar when the dropdown\n * {@link module:ui/dropdown/dropdownview~DropdownView#isOpen gets open}. See the documentation of `options` to learn more.\n *\n * **Note:** Toolbar view will be created on first open of the dropdown.\n *\n * See {@link module:ui/dropdown/utils~createDropdown} and {@link module:ui/toolbar/toolbarview~ToolbarView}.\n *\n * @param dropdownView A dropdown instance to which `ToolbarView` will be added.\n * @param options.enableActiveItemFocusOnDropdownOpen When set `true`, the focus will automatically move to the first\n * active {@link module:ui/toolbar/toolbarview~ToolbarView#items item} of the toolbar upon\n * {@link module:ui/dropdown/dropdownview~DropdownView#isOpen opening} the dropdown. Active items are those with the `isOn` property set\n * `true` (for instance {@link module:ui/button/buttonview~ButtonView buttons}). If no active items is found, the toolbar will be focused\n * as a whole resulting in the focus moving to its first focusable item (default behavior of\n * {@link module:ui/dropdown/dropdownview~DropdownView}).\n * @param options.ariaLabel Label used by assistive technologies to describe toolbar element.\n * @param options.maxWidth The maximum width of the toolbar element.\n * Details: {@link module:ui/toolbar/toolbarview~ToolbarView#maxWidth}.\n * @param options.class An additional CSS class added to the toolbar element.\n * @param options.isCompact When set true, makes the toolbar look compact with toolbar element.\n * @param options.isVertical Controls the orientation of toolbar items.\n */\nexport function addToolbarToDropdown(\n\tdropdownView: DropdownView,\n\tbuttonsOrCallback: Array<View> | ViewCollection | ( () => Array<View> | ViewCollection ),\n\toptions: {\n\t\tenableActiveItemFocusOnDropdownOpen?: boolean;\n\t\tariaLabel?: string;\n\t\tmaxWidth?: string;\n\t\tclass?: string;\n\t\tisCompact?: boolean;\n\t\tisVertical?: boolean;\n\t} = {}\n): void {\n\tdropdownView.extendTemplate( {\n\t\tattributes: {\n\t\t\tclass: [ 'ck-toolbar-dropdown' ]\n\t\t}\n\t} );\n\n\tif ( dropdownView.isOpen ) {\n\t\taddToolbarToOpenDropdown( dropdownView, buttonsOrCallback, options );\n\t} else {\n\t\tdropdownView.once(\n\t\t\t'change:isOpen',\n\t\t\t() => addToolbarToOpenDropdown( dropdownView, buttonsOrCallback, options ),\n\t\t\t{ priority: 'highest' }\n\t\t);\n\t}\n\n\tif ( options.enableActiveItemFocusOnDropdownOpen ) {\n\t\t// Accessibility: Focus the first active button in the toolbar when the dropdown gets open.\n\t\tfocusChildOnDropdownOpen( dropdownView, () => dropdownView.toolbarView!.items.find( ( item: any ) => item.isOn ) );\n\t}\n}\n\n/**\n * Adds an instance of {@link module:ui/toolbar/toolbarview~ToolbarView} to a dropdown.\n */\nfunction addToolbarToOpenDropdown(\n\tdropdownView: DropdownView,\n\tbuttonsOrCallback: Array<View> | ViewCollection | ( () => Array<View> | ViewCollection ),\n\toptions: {\n\t\tariaLabel?: string;\n\t\tmaxWidth?: string;\n\t\tclass?: string;\n\t\tisCompact?: boolean;\n\t\tisVertical?: boolean;\n\t}\n): void {\n\tconst locale = dropdownView.locale!;\n\tconst t = locale.t;\n\n\tconst toolbarView = dropdownView.toolbarView = new ToolbarView( locale );\n\tconst buttons = typeof buttonsOrCallback == 'function' ? buttonsOrCallback() : buttonsOrCallback;\n\n\ttoolbarView.ariaLabel = options.ariaLabel || t( 'Dropdown toolbar' );\n\n\tif ( options.maxWidth ) {\n\t\ttoolbarView.maxWidth = options.maxWidth;\n\t}\n\n\tif ( options.class ) {\n\t\ttoolbarView.class = options.class;\n\t}\n\n\tif ( options.isCompact ) {\n\t\ttoolbarView.isCompact = options.isCompact;\n\t}\n\n\tif ( options.isVertical ) {\n\t\ttoolbarView.isVertical = true;\n\t}\n\n\tif ( buttons instanceof ViewCollection ) {\n\t\ttoolbarView.items.bindTo( buttons ).using( item => item );\n\t} else {\n\t\ttoolbarView.items.addMany( buttons );\n\t}\n\n\tdropdownView.panelView.children.add( toolbarView );\n\tdropdownView.focusTracker.add( toolbarView );\n\ttoolbarView.items.delegate( 'execute' ).to( dropdownView );\n}\n\n/**\n * Adds an instance of {@link module:ui/list/listview~ListView} to a dropdown.\n *\n * ```ts\n * const items = new Collection<ListDropdownItemDefinition>();\n *\n * items.add( {\n * \ttype: 'button',\n * \tmodel: new Model( {\n * \t\twithText: true,\n * \t\tlabel: 'First item',\n * \t\tlabelStyle: 'color: red'\n * \t} )\n * } );\n *\n * items.add( {\n * \t type: 'button',\n * \t model: new Model( {\n * \t\twithText: true,\n * \t\tlabel: 'Second item',\n * \t\tlabelStyle: 'color: green',\n * \t\tclass: 'foo'\n * \t} )\n * } );\n *\n * const dropdown = createDropdown( locale );\n *\n * addListToDropdown( dropdown, items );\n *\n * // Will render a dropdown with a list in the panel containing two items.\n * dropdown.render()\n * document.body.appendChild( dropdown.element );\n * ```\n *\n * The `items` collection passed to this methods controls the presence and attributes of respective\n * {@link module:ui/list/listitemview~ListItemView list items}.\n *\n * **Note:** To improve the accessibility, when a list is added to the dropdown using this helper the dropdown will automatically attempt\n * to focus the first active item (a host to a {@link module:ui/button/buttonview~ButtonView} with\n * {@link module:ui/button/buttonview~ButtonView#isOn} set `true`) or the very first item when none are active.\n *\n * **Note:** List view will be created on first open of the dropdown.\n *\n * See {@link module:ui/dropdown/utils~createDropdown} and {@link module:list/list~List}.\n *\n * @param dropdownView A dropdown instance to which `ListVIew` will be added.\n * @param itemsOrCallback A collection of the list item definitions or a callback returning a list item definitions to populate the list.\n * @param options.ariaLabel Label used by assistive technologies to describe list element.\n * @param options.role Will be reflected by the `role` DOM attribute in `ListVIew` and used by assistive technologies.\n */\nexport function addListToDropdown(\n\tdropdownView: DropdownView,\n\titemsOrCallback: Collection<ListDropdownItemDefinition> | ( () => Collection<ListDropdownItemDefinition> ),\n\toptions: {\n\t\tariaLabel?: string;\n\t\trole?: string;\n\t} = {}\n): void {\n\tif ( dropdownView.isOpen ) {\n\t\taddListToOpenDropdown( dropdownView, itemsOrCallback, options );\n\t} else {\n\t\tdropdownView.once(\n\t\t\t'change:isOpen',\n\t\t\t() => addListToOpenDropdown( dropdownView, itemsOrCallback, options ),\n\t\t\t{ priority: 'highest' }\n\t\t);\n\t}\n\n\t// Accessibility: Focus the first active button in the list when the dropdown gets open.\n\tfocusChildOnDropdownOpen( dropdownView, () => dropdownView.listView!.items.find( item => {\n\t\tif ( item instanceof ListItemView ) {\n\t\t\treturn ( item.children.first as any ).isOn;\n\t\t}\n\n\t\treturn false;\n\t} ) );\n}\n\n/**\n * Adds an instance of {@link module:ui/list/listview~ListView} to a dropdown.\n */\nfunction addListToOpenDropdown(\n\tdropdownView: DropdownView,\n\titemsOrCallback: Collection<ListDropdownItemDefinition> | ( () => Collection<ListDropdownItemDefinition> ),\n\toptions: {\n\t\tariaLabel?: string;\n\t\trole?: string;\n\t}\n): void {\n\tconst locale = dropdownView.locale!;\n\tconst listView = dropdownView.listView = new ListView( locale );\n\tconst items = typeof itemsOrCallback == 'function' ? itemsOrCallback() : itemsOrCallback;\n\n\tlistView.ariaLabel = options.ariaLabel;\n\tlistView.role = options.role;\n\n\tbindViewCollectionItemsToDefinitions( dropdownView, listView.items, items, locale );\n\n\tdropdownView.panelView.children.add( listView );\n\n\tlistView.items.delegate( 'execute' ).to( dropdownView );\n}\n\n/**\n * A helper to be used on an existing {@link module:ui/dropdown/dropdownview~DropdownView} that focuses\n * a specific child in DOM when the dropdown {@link module:ui/dropdown/dropdownview~DropdownView#isOpen gets open}.\n *\n * @param dropdownView A dropdown instance to which the focus behavior will be added.\n * @param childSelectorCallback A callback executed when the dropdown gets open. It should return a {@link module:ui/view~View}\n * instance (child of {@link module:ui/dropdown/dropdownview~DropdownView#panelView}) that will get focused or a falsy value.\n * If falsy value is returned, a default behavior of the dropdown will engage focusing the first focusable child in\n * the {@link module:ui/dropdown/dropdownview~DropdownView#panelView}.\n */\nexport function focusChildOnDropdownOpen(\n\tdropdownView: DropdownView,\n\tchildSelectorCallback: () => View | FalsyValue\n): void {\n\tdropdownView.on<ObservableChangeEvent>( 'change:isOpen', () => {\n\t\tif ( !dropdownView.isOpen ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst childToFocus: ( View & { focus?: () => void } ) | FalsyValue = childSelectorCallback();\n\n\t\tif ( !childToFocus ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( typeof childToFocus.focus === 'function' ) {\n\t\t\tchildToFocus.focus();\n\t\t} else {\n\t\t\t/**\n\t\t\t * The child view of a {@link module:ui/dropdown/dropdownview~DropdownView dropdown} is missing the `focus()` method\n\t\t\t * and could not be focused when the dropdown got {@link module:ui/dropdown/dropdownview~DropdownView#isOpen open}.\n\t\t\t *\n\t\t\t * Making the content of a dropdown focusable in this case greatly improves the accessibility. Please make the view instance\n\t\t\t * implements the {@link module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable focusable interface} for the best user\n\t\t\t * experience.\n\t\t\t *\n\t\t\t * @error ui-dropdown-focus-child-on-open-child-missing-focus\n\t\t\t * @param {module:ui/view~View} view Child to focus.\n\t\t\t */\n\t\t\tlogWarning( 'ui-dropdown-focus-child-on-open-child-missing-focus', { view: childToFocus } );\n\t\t}\n\n\t// * Let the panel show up first (do not focus an invisible element).\n\t// * Execute after focusDropdownPanelOnOpen(). See focusDropdownPanelOnOpen() to learn more.\n\t}, { priority: priorities.low - 10 } );\n}\n\n/**\n * Add a set of default behaviors to dropdown view.\n */\nfunction addDefaultBehaviors( dropdownView: DropdownView ) {\n\tcloseDropdownOnClickOutside( dropdownView );\n\tcloseDropdownOnExecute( dropdownView );\n\tcloseDropdownOnBlur( dropdownView );\n\tfocusDropdownContentsOnArrows( dropdownView );\n\tfocusDropdownButtonOnClose( dropdownView );\n\tfocusDropdownPanelOnOpen( dropdownView );\n}\n\n/**\n * Adds a behavior to a dropdownView that closes opened dropdown when user clicks outside the dropdown.\n */\nfunction closeDropdownOnClickOutside( dropdownView: DropdownView ) {\n\tclickOutsideHandler( {\n\t\temitter: dropdownView,\n\t\tactivator: () => dropdownView.isRendered && dropdownView.isOpen,\n\t\tcallback: () => {\n\t\t\tdropdownView.isOpen = false;\n\t\t},\n\t\tcontextElements: () => [\n\t\t\tdropdownView.element!,\n\t\t\t// Include all elements connected to the dropdown's focus tracker, but exclude those that are direct children\n\t\t\t// of DropdownView#element. They would be identified as descendants of #element anyway upon clicking and would\n\t\t\t// not contribute to the logic.\n\t\t\t...getFocusTrackerTreeElements( dropdownView.focusTracker ).filter( element => !dropdownView.element!.contains( element ) )\n\t\t]\n\t} );\n}\n\n/**\n * Returns all DOM elements connected to a DropdownView's focus tracker, either directly (same DOM sub-tree)\n * or indirectly (external views registered in the focus tracker).\n */\nfunction getFocusTrackerTreeElements( focusTracker: FocusTracker ): Array<Element> {\n\treturn [\n\t\t...focusTracker.elements,\n\t\t...focusTracker.externalViews.flatMap( view => getFocusTrackerTreeElements( view.focusTracker ) )\n\t];\n}\n\n/**\n * Adds a behavior to a dropdownView that closes the dropdown view on \"execute\" event.\n */\nfunction closeDropdownOnExecute( dropdownView: DropdownView ) {\n\t// Close the dropdown when one of the list items has been executed.\n\tdropdownView.on<ButtonExecuteEvent>( 'execute', evt => {\n\t\t// Toggling a switch button view should not close the dropdown.\n\t\tif ( evt.source instanceof SwitchButtonView ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdropdownView.isOpen = false;\n\t} );\n}\n\n/**\n * Adds a behavior to a dropdown view that closes opened dropdown when it loses focus.\n */\nfunction closeDropdownOnBlur( dropdownView: DropdownView ) {\n\tdropdownView.focusTracker.on<ObservableChangeEvent<boolean>>( 'change:isFocused', ( evt, name, isFocused ) => {\n\t\tif ( isFocused || !dropdownView.isOpen ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdropdownView.isOpen = false;\n\t} );\n}\n\n/**\n * Adds a behavior to a dropdownView that focuses the dropdown's panel view contents on keystrokes.\n */\nfunction focusDropdownContentsOnArrows( dropdownView: DropdownView ) {\n\t// If the dropdown panel is already open, the arrow down key should focus the first child of the #panelView.\n\tdropdownView.keystrokes.set( 'arrowdown', ( data, cancel ) => {\n\t\tif ( dropdownView.isOpen ) {\n\t\t\tdropdownView.panelView.focus();\n\t\t\tcancel();\n\t\t}\n\t} );\n\n\t// If the dropdown panel is already open, the arrow up key should focus the last child of the #panelView.\n\tdropdownView.keystrokes.set( 'arrowup', ( data, cancel ) => {\n\t\tif ( dropdownView.isOpen ) {\n\t\t\tdropdownView.panelView.focusLast();\n\t\t\tcancel();\n\t\t}\n\t} );\n}\n\n/**\n * Adds a behavior that focuses the #buttonView when the dropdown was closed but focus was within the #panelView element.\n * This makes sure the focus is never lost.\n */\nfunction focusDropdownButtonOnClose( dropdownView: DropdownView ) {\n\tdropdownView.on<ObservableChangeEvent<boolean>>( 'change:isOpen', ( evt, name, isOpen ) => {\n\t\tif ( isOpen ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst elements = dropdownView.focusTracker.elements;\n\n\t\t// If the dropdown was closed, move the focus back to the button (#12125).\n\t\t// Don't touch the focus, if it moved somewhere else (e.g. moved to the editing root on #execute) (#12178).\n\t\t// Note: Don't use the state of the DropdownView#focusTracker here. It fires #blur with the timeout.\n\t\tif ( elements.some( element => element.contains( global.document.activeElement ) ) ) {\n\t\t\tdropdownView.buttonView.focus();\n\t\t}\n\t} );\n}\n\n/**\n * Adds a behavior that focuses the #panelView when dropdown gets open (accessibility).\n */\nfunction focusDropdownPanelOnOpen( dropdownView: DropdownView ) {\n\tdropdownView.on<ObservableChangeEvent<boolean>>( 'change:isOpen', ( evt, name, isOpen ) => {\n\t\tif ( !isOpen ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Focus the first item in the dropdown when the dropdown opened.\n\t\tdropdownView.panelView.focus();\n\n\t// * Let the panel show up first (do not focus an invisible element).\n\t// * Also, execute before focusChildOnDropdownOpen() to make sure this helper does not break the\n\t//   focus of a specific child by kicking in too late and resetting the focus in the panel.\n\t}, { priority: 'low' } );\n}\n\n/**\n * This helper populates a dropdown list with items and groups according to the\n * collection of item definitions. A permanent binding is created in this process allowing\n * dynamic management of the dropdown list content.\n *\n * @param dropdownView\n * @param listItems\n * @param definitions\n * @param locale\n */\nfunction bindViewCollectionItemsToDefinitions(\n\tdropdownView: DropdownView,\n\tlistItems: ViewCollection,\n\tdefinitions: Collection<ListDropdownItemDefinition>,\n\tlocale: Locale\n) {\n\tbindDropdownToggleableButtonsAlignment( listItems );\n\n\tlistItems.bindTo( definitions ).using( def => {\n\t\tif ( def.type === 'separator' ) {\n\t\t\treturn new ListSeparatorView( locale );\n\t\t} else if ( def.type === 'group' ) {\n\t\t\tconst groupView = new ListItemGroupView( locale );\n\n\t\t\tgroupView.set( { label: def.label } );\n\n\t\t\tbindViewCollectionItemsToDefinitions( dropdownView, groupView.items, def.items, locale );\n\n\t\t\tgroupView.items.delegate( 'execute' ).to( dropdownView );\n\n\t\t\treturn groupView;\n\t\t} else if ( def.type === 'button' || def.type === 'switchbutton' ) {\n\t\t\tconst isToggleable = def.model.role === 'menuitemcheckbox' || def.model.role === 'menuitemradio';\n\t\t\tconst listItemView = new ListItemView( locale );\n\n\t\t\tlet buttonView: ButtonView;\n\n\t\t\tif ( def.type === 'button' ) {\n\t\t\t\tbuttonView = new ListItemButtonView( locale );\n\t\t\t\tbuttonView.set( {\n\t\t\t\t\tisToggleable\n\t\t\t\t} );\n\t\t\t} else {\n\t\t\t\tbuttonView = new SwitchButtonView( locale );\n\t\t\t}\n\n\t\t\t// Bind all model properties to the button view.\n\t\t\tbuttonView.bind( ...Object.keys( def.model ) as Array<keyof ButtonView> ).to( def.model );\n\t\t\tbuttonView.delegate( 'execute' ).to( listItemView );\n\n\t\t\tlistItemView.children.add( buttonView );\n\n\t\t\treturn listItemView;\n\t\t}\n\n\t\treturn null;\n\t} );\n}\n\n/**\n * Sets up alignment handling for toggleable buttons in a dropdown list.\n *\n * Buttons in dropdowns have reserved space for a check icon when they are toggleable.\n * When at least one button in the list is toggleable, all other buttons (even non-toggleable ones)\n * will have space on their left side to align with toggleable buttons.\n *\n * This function handles a special case where a new toggleable button is added (or removed) to a list\n * where previous buttons weren't toggleable. In that case, those previous buttons will\n * automatically allocate space to align with the new toggleable button.\n *\n * Example:\n * ```\n * Before adding toggleable button:\n * +----------------+\n * | Normal Button  |\n * +----------------+\n * | Another Button |\n * +----------------+\n *\n * After adding toggleable button:\n * +-------------------+\n * |    Normal Button  |\n * +-------------------+\n * |    Another Button |\n * +-------------------+\n * | ✓ Toggle Button   |\n * +-------------------+\n * ```\n *\n * @param listItems Collection of list items to observe for toggleable buttons.\n */\nfunction bindDropdownToggleableButtonsAlignment( listItems: ViewCollection ) {\n\t// Keep track of how many toggleable buttons are in the list.\n\tlet toggleableButtonsCount = 0;\n\n\t// Helper function that checks if a view item is a list item button.\n\tconst pickListItemButtonIfPresent = ( item: View<HTMLElement> ) => {\n\t\t// Check if the item is a ListItemView with a ListItemButtonView as its first child.\n\t\tif ( !( item instanceof ListItemView ) || !( item.children.first instanceof ListItemButtonView ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn item.children.first;\n\t};\n\n\t// Helper function that checks if a view item is a toggleable button.\n\t// Returns the button if it's toggleable - otherwise, returns null.\n\tconst pickListItemToggleableButtonIfPresent = ( item: View<HTMLElement> ) => {\n\t\tconst listItemButtonView = pickListItemButtonIfPresent( item );\n\n\t\t// Only return buttons that are configured as toggleable.\n\t\tif ( !listItemButtonView || !listItemButtonView.isToggleable ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn listItemButtonView;\n\t};\n\n\t// Updates all buttons in the list to either allocate space for check marks or not.\n\t// This ensures all buttons are properly aligned regardless of their toggleable state.\n\tconst updateAllButtonsCheckSpace = ( hasSpace: boolean ): void => {\n\t\tfor ( const listItem of listItems ) {\n\t\t\tconst listItemButton = pickListItemButtonIfPresent( listItem );\n\n\t\t\tif ( listItemButton ) {\n\t\t\t\tlistItemButton.hasCheckSpace = hasSpace;\n\t\t\t}\n\t\t}\n\t};\n\n\t// Listen for changes in the list items collection.\n\tlistItems.on<CollectionChangeEvent<FocusableView>>( 'change', ( evt, data ) => {\n\t\t// Remember the current state - whether we have any toggleable buttons.\n\t\tconst prevToggleable = toggleableButtonsCount > 0;\n\n\t\t// Process removed items - decrease count for each toggleable button removed.\n\t\tfor ( const item of data.removed ) {\n\t\t\tif ( pickListItemToggleableButtonIfPresent( item ) ) {\n\t\t\t\ttoggleableButtonsCount--;\n\t\t\t}\n\t\t}\n\n\t\t// Process added items - increase count for each toggleable button added.\n\t\tfor ( const item of data.added ) {\n\t\t\tconst button = pickListItemButtonIfPresent( item );\n\n\t\t\tif ( !button ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( button.isToggleable ) {\n\t\t\t\t// Check if the button is toggleable and increase the count.\n\t\t\t\ttoggleableButtonsCount++;\n\t\t\t}\n\n\t\t\t// Depending on the current state, set the check space for the button.\n\t\t\tbutton.hasCheckSpace = toggleableButtonsCount > 0;\n\t\t}\n\n\t\t// Check if the current state has changed.\n\t\tconst currentToggleable = toggleableButtonsCount > 0;\n\n\t\t// Only update button alignment if we've crossed the threshold between\n\t\t// having no toggleable buttons and having at least one.\n\t\tif ( prevToggleable !== currentToggleable ) {\n\t\t\tupdateAllButtonsCheckSpace( currentToggleable );\n\t\t}\n\t} );\n}\n\n/**\n * A definition of the list item used by the {@link module:ui/dropdown/utils~addListToDropdown}\n * utility.\n */\nexport type ListDropdownItemDefinition = ListDropdownSeparatorDefinition | ListDropdownButtonDefinition | ListDropdownGroupDefinition;\n\n/**\n * A definition of the 'separator' list item.\n */\nexport type ListDropdownSeparatorDefinition = {\n\ttype: 'separator';\n};\n\n/**\n * A definition of the 'button' or 'switchbutton' list item.\n */\nexport type ListDropdownButtonDefinition = {\n\ttype: 'button' | 'switchbutton';\n\n\t/**\n\t * Model of the item. Its properties fuel the newly created list item (or its children, depending on the `type`).\n\t */\n\tmodel: UIModel;\n};\n\n/**\n * A definition of the group inside the list. A group can contain one or more list items (buttons).\n */\nexport type ListDropdownGroupDefinition = {\n\ttype: 'group';\n\n\t/**\n\t * The visible label of the group.\n\t */\n\tlabel: string;\n\n\t/**\n\t * The collection of the child list items inside this group.\n\t */\n\titems: Collection<ListDropdownButtonDefinition>;\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/labeledfield/utils\n */\n\nimport { InputTextView } from '../inputtext/inputtextview.js';\nimport { InputNumberView } from '../inputnumber/inputnumberview.js';\nimport { TextareaView } from '../textarea/textareaview.js';\nimport { createDropdown } from '../dropdown/utils.js';\n\nimport { type DropdownView } from '../dropdown/dropdownview.js';\nimport type { InputViewInputEvent } from '../input/inputview.js';\nimport type { LabeledFieldViewCreator } from './labeledfieldview.js';\n\n/**\n * A helper for creating labeled inputs.\n *\n * It creates an instance of a {@link module:ui/inputtext/inputtextview~InputTextView input text} that is\n * logically related to a {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView labeled view} in DOM.\n *\n * The helper does the following:\n *\n * * It sets input's `id` and `ariaDescribedById` attributes.\n * * It binds input's `isReadOnly` to the labeled view.\n * * It binds input's `hasError` to the labeled view.\n * * It enables a logic that cleans up the error when user starts typing in the input.\n *\n * Usage:\n *\n * ```ts\n * const labeledInputView = new LabeledFieldView( locale, createLabeledInputText );\n * console.log( labeledInputView.fieldView ); // A text input instance.\n * ```\n *\n * @param labeledFieldView The instance of the labeled field view.\n * @param viewUid A UID string that allows DOM logical connection between the\n * {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView#labelView labeled view's label} and the input.\n * @param statusUid A UID string that allows DOM logical connection between the\n * {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView#statusView labeled view's status} and the input.\n * @returns The input text view instance.\n */\nconst createLabeledInputText: LabeledFieldViewCreator<InputTextView> = ( labeledFieldView, viewUid, statusUid ) => {\n\tconst inputView = new InputTextView( labeledFieldView.locale );\n\n\tinputView.set( {\n\t\tid: viewUid,\n\t\tariaDescribedById: statusUid\n\t} );\n\n\tinputView.bind( 'isReadOnly' ).to( labeledFieldView, 'isEnabled', value => !value );\n\tinputView.bind( 'hasError' ).to( labeledFieldView, 'errorText', value => !!value );\n\n\tinputView.on<InputViewInputEvent>( 'input', () => {\n\t\t// UX: Make the error text disappear and disable the error indicator as the user\n\t\t// starts fixing the errors.\n\t\tlabeledFieldView.errorText = null;\n\t} );\n\n\tlabeledFieldView.bind( 'isEmpty', 'isFocused', 'placeholder' ).to( inputView );\n\n\treturn inputView;\n};\n\n/**\n * A helper for creating labeled number inputs.\n *\n * It creates an instance of a {@link module:ui/inputnumber/inputnumberview~InputNumberView input number} that is\n * logically related to a {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView labeled view} in DOM.\n *\n * The helper does the following:\n *\n * * It sets input's `id` and `ariaDescribedById` attributes.\n * * It binds input's `isReadOnly` to the labeled view.\n * * It binds input's `hasError` to the labeled view.\n * * It enables a logic that cleans up the error when user starts typing in the input.\n *\n * Usage:\n *\n * ```ts\n * const labeledInputView = new LabeledFieldView( locale, createLabeledInputNumber );\n * console.log( labeledInputView.fieldView ); // A number input instance.\n * ```\n *\n * @param labeledFieldView The instance of the labeled field view.\n * @param viewUid A UID string that allows DOM logical connection between the\n * {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView#labelView labeled view's label} and the input.\n * @param statusUid A UID string that allows DOM logical connection between the\n * {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView#statusView labeled view's status} and the input.\n * @returns The input number view instance.\n */\nconst createLabeledInputNumber: LabeledFieldViewCreator<InputNumberView> = ( labeledFieldView, viewUid, statusUid ) => {\n\tconst inputView = new InputNumberView( labeledFieldView.locale );\n\n\tinputView.set( {\n\t\tid: viewUid,\n\t\tariaDescribedById: statusUid,\n\t\tinputMode: 'numeric'\n\t} );\n\n\tinputView.bind( 'isReadOnly' ).to( labeledFieldView, 'isEnabled', value => !value );\n\tinputView.bind( 'hasError' ).to( labeledFieldView, 'errorText', value => !!value );\n\n\tinputView.on<InputViewInputEvent>( 'input', () => {\n\t\t// UX: Make the error text disappear and disable the error indicator as the user\n\t\t// starts fixing the errors.\n\t\tlabeledFieldView.errorText = null;\n\t} );\n\n\tlabeledFieldView.bind( 'isEmpty', 'isFocused', 'placeholder' ).to( inputView );\n\n\treturn inputView;\n};\n\n/**\n * A helper for creating labeled textarea.\n *\n * It creates an instance of a {@link module:ui/textarea/textareaview~TextareaView textarea} that is\n * logically related to a {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView labeled view} in DOM.\n *\n * The helper does the following:\n *\n * * It sets textarea's `id` and `ariaDescribedById` attributes.\n * * It binds textarea's `isReadOnly` to the labeled view.\n * * It binds textarea's `hasError` to the labeled view.\n * * It enables a logic that cleans up the error when user starts typing in the textarea.\n *\n * Usage:\n *\n * ```ts\n * const labeledTextarea = new LabeledFieldView( locale, createLabeledTextarea );\n * console.log( labeledTextarea.fieldView ); // A textarea instance.\n * ```\n *\n * @param labeledFieldView The instance of the labeled field view.\n * @param viewUid A UID string that allows DOM logical connection between the\n * {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView#labelView labeled view's label} and the textarea.\n * @param statusUid A UID string that allows DOM logical connection between the\n * {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView#statusView labeled view's status} and the textarea.\n * @returns The textarea view instance.\n */\nconst createLabeledTextarea: LabeledFieldViewCreator<TextareaView> = ( labeledFieldView, viewUid, statusUid ) => {\n\tconst textareaView = new TextareaView( labeledFieldView.locale );\n\n\ttextareaView.set( {\n\t\tid: viewUid,\n\t\tariaDescribedById: statusUid\n\t} );\n\n\ttextareaView.bind( 'isReadOnly' ).to( labeledFieldView, 'isEnabled', value => !value );\n\ttextareaView.bind( 'hasError' ).to( labeledFieldView, 'errorText', value => !!value );\n\n\ttextareaView.on<InputViewInputEvent>( 'input', () => {\n\t\t// UX: Make the error text disappear and disable the error indicator as the user\n\t\t// starts fixing the errors.\n\t\tlabeledFieldView.errorText = null;\n\t} );\n\n\tlabeledFieldView.bind( 'isEmpty', 'isFocused', 'placeholder' ).to( textareaView );\n\n\treturn textareaView;\n};\n\n/**\n * A helper for creating labeled dropdowns.\n *\n * It creates an instance of a {@link module:ui/dropdown/dropdownview~DropdownView dropdown} that is\n * logically related to a {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView labeled field view}.\n *\n * The helper does the following:\n *\n * * It sets dropdown's `id` and `ariaDescribedById` attributes.\n * * It binds input's `isEnabled` to the labeled view.\n *\n * Usage:\n *\n * ```ts\n * const labeledInputView = new LabeledFieldView( locale, createLabeledDropdown );\n * console.log( labeledInputView.fieldView ); // A dropdown instance.\n * ```\n *\n * @param labeledFieldView The instance of the labeled field view.\n * @param viewUid A UID string that allows DOM logical connection between the\n * {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView#labelView labeled view label} and the dropdown.\n * @param statusUid A UID string that allows DOM logical connection between the\n * {@link module:ui/labeledfield/labeledfieldview~LabeledFieldView#statusView labeled view status} and the dropdown.\n * @returns The dropdown view instance.\n */\nconst createLabeledDropdown: LabeledFieldViewCreator<DropdownView> = ( labeledFieldView, viewUid, statusUid ) => {\n\tconst dropdownView = createDropdown( labeledFieldView.locale );\n\n\tdropdownView.set( {\n\t\tid: viewUid,\n\t\tariaDescribedById: statusUid\n\t} );\n\n\tdropdownView.bind( 'isEnabled' ).to( labeledFieldView );\n\n\treturn dropdownView;\n};\n\nexport {\n\tcreateLabeledInputNumber,\n\tcreateLabeledInputText,\n\tcreateLabeledTextarea,\n\tcreateLabeledDropdown\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/colorpicker/colorpickerview\n */\n\nimport { convertColor, convertToHex, registerCustomElement, type ColorPickerViewConfig } from './utils.js';\n\nimport type { HexColor } from '@ckeditor/ckeditor5-core';\nimport { type Locale, global, env } from '@ckeditor/ckeditor5-utils';\nimport { debounce, type DebouncedFunc } from 'es-toolkit/compat';\nimport { View } from '../view.js';\nimport { type InputTextView } from '../inputtext/inputtextview.js';\nimport { type ViewCollection } from '../viewcollection.js';\nimport { LabeledFieldView } from '../labeledfield/labeledfieldview.js';\nimport { createLabeledInputText } from '../labeledfield/utils.js';\n\n// Custom export due to https://github.com/ckeditor/ckeditor5/issues/15698.\nimport { HexBase } from 'vanilla-colorful/lib/entrypoints/hex';\nimport '../../theme/components/colorpicker/colorpicker.css';\n\ndeclare global {\n\tinterface HTMLElementTagNameMap {\n\t\t'hex-color-picker': HexBase;\n\t}\n}\n\nconst waitingTime = 150;\n\n/**\n * A class which represents a color picker with an input field for defining custom colors.\n */\nexport class ColorPickerView extends View {\n\t/**\n\t * Element with saturation and hue sliders.\n\t */\n\tdeclare public picker: HexBase;\n\n\t/**\n\t * Container for a `#` sign prefix and an input for displaying and defining custom colors\n\t * in HEX format.\n\t */\n\tpublic hexInputRow: ColorPickerInputRowView;\n\n\t/**\n\t * Current color selected in the color picker. It can be set by the component itself\n\t * (through the palette or input) or from the outside (e.g. to reflect the current selection color).\n\t */\n\tdeclare public color: string;\n\n\t/**\n\t * List of slider views of the color picker.\n\t */\n\tdeclare public slidersView: ViewCollection<SliderView>;\n\n\t/**\n\t * An internal representation of a color.\n\t *\n\t * Since the picker uses a hex format, that's how we store it.\n\t *\n\t * Since this is unified color format it won't fire a change event if color is changed\n\t * from `#f00` to `#ff0000` (same value, different format).\n\t *\n\t * @observable\n\t * @private\n\t */\n\tdeclare public _hexColor: string;\n\n\t/**\n\t * Debounced function updating the `color` property in the component\n\t * and firing the `ColorPickerColorSelectedEvent`. Executed whenever color in component\n\t * is changed by the user interaction (through the palette or input).\n\t *\n\t * @private\n\t */\n\tprivate _debounceColorPickerEvent: DebouncedFunc<( arg: string ) => void>;\n\n\t/**\n\t * A reference to the configuration of the color picker specified in the constructor.\n\t *\n\t * @private\n\t */\n\tprivate _config: ColorPickerViewConfig;\n\n\t/**\n\t * Creates a view of color picker.\n\t *\n\t * @param locale\n\t * @param config\n\t */\n\tconstructor( locale: Locale | undefined, config: ColorPickerViewConfig = {} ) {\n\t\tsuper( locale );\n\n\t\tthis.set( {\n\t\t\tcolor: '',\n\t\t\t_hexColor: ''\n\t\t} );\n\n\t\tthis.hexInputRow = this._createInputRow();\n\t\tconst children = this.createCollection();\n\n\t\tif ( !config.hideInput ) {\n\t\t\tchildren.add( this.hexInputRow );\n\t\t}\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [ 'ck', 'ck-color-picker' ],\n\t\t\t\ttabindex: -1\n\t\t\t},\n\t\t\tchildren\n\t\t} );\n\n\t\tthis._config = config;\n\n\t\tthis._debounceColorPickerEvent = debounce( ( color: string ) => {\n\t\t\t// At first, set the color internally in the component. It's converted to the configured output format.\n\t\t\tthis.set( 'color', color );\n\n\t\t\t// Then let the outside world know that the user changed the color.\n\t\t\tthis.fire<ColorPickerColorSelectedEvent>( 'colorSelected', { color: this.color } );\n\t\t}, waitingTime, {\n\t\t\tleading: true\n\t\t} );\n\n\t\t// The `color` property holds the color in the configured output format.\n\t\t// Ensure it before actually setting the value.\n\t\tthis.on( 'set:color', ( evt, propertyName, newValue ) => {\n\t\t\tevt.return = convertColor( newValue, this._config.format || 'hsl' );\n\t\t} );\n\n\t\t// The `_hexColor` property is bound to the `color` one, but requires conversion.\n\t\tthis.on( 'change:color', () => {\n\t\t\tthis._hexColor = convertColorToCommonHexFormat( this.color );\n\t\t} );\n\n\t\tthis.on( 'change:_hexColor', () => {\n\t\t\t// Update the selected color in the color picker palette when it's not focused.\n\t\t\t// It means the user typed the color in the input.\n\t\t\tif ( document.activeElement !== this.picker ) {\n\t\t\t\tthis.picker.setAttribute( 'color', this._hexColor );\n\t\t\t}\n\n\t\t\t// There has to be two way binding between properties.\n\t\t\t// Extra precaution has to be taken to trigger change back only when the color really changes.\n\t\t\tif ( convertColorToCommonHexFormat( this.color ) != convertColorToCommonHexFormat( this._hexColor ) ) {\n\t\t\t\tthis.color = this._hexColor;\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Renders color picker in the view.\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\t// Extracted to the helper to make it testable.\n\t\tregisterCustomElement( 'hex-color-picker', HexBase );\n\n\t\tthis.picker = global.document.createElement( 'hex-color-picker' );\n\t\tthis.picker.setAttribute( 'class', 'hex-color-picker' );\n\t\tthis.picker.setAttribute( 'tabindex', '-1' );\n\n\t\tthis._createSlidersView();\n\n\t\tif ( this.element ) {\n\t\t\tif ( this.hexInputRow.element ) {\n\t\t\t\tthis.element.insertBefore( this.picker, this.hexInputRow.element );\n\t\t\t} else {\n\t\t\t\tthis.element.appendChild( this.picker );\n\t\t\t}\n\n\t\t\t// Create custom stylesheet with a look of focused pointer in color picker and append it into the color picker shadowDom\n\t\t\tconst styleSheetForFocusedColorPicker = document.createElement( 'style' );\n\n\t\t\tstyleSheetForFocusedColorPicker.textContent = '[role=\"slider\"]:focus [part$=\"pointer\"] {' +\n\t\t\t\t'border: 1px solid #fff;' +\n\t\t\t\t'outline: 1px solid var(--ck-color-focus-border);' +\n\t\t\t\t'box-shadow: 0 0 0 2px #fff;' +\n\t\t\t\t'}';\n\t\t\tthis.picker.shadowRoot!.appendChild( styleSheetForFocusedColorPicker );\n\t\t}\n\n\t\tthis.picker.addEventListener( 'color-changed', event => {\n\t\t\tconst color = event.detail.value;\n\t\t\tthis._debounceColorPickerEvent( color );\n\t\t} );\n\t}\n\n\t/**\n\t * Focuses the first pointer in color picker.\n\t *\n\t */\n\tpublic focus(): void {\n\t\t// In some browsers we need to move the focus to the input first.\n\t\t// Otherwise, the color picker doesn't behave as expected.\n\t\t// In Chrome, after selecting the color via slider the first time,\n\t\t// the editor collapses the selection and doesn't apply the color change.\n\t\t// In FF, after selecting the color via slider, it instantly moves back to the previous color.\n\t\t// In all iOS browsers and desktop Safari, once the saturation slider is moved for the first time,\n\t\t// editor collapses the selection and doesn't apply the color change.\n\t\t// See: https://github.com/ckeditor/ckeditor5-internal/issues/3245, https://github.com/ckeditor/ckeditor5/issues/14119,\n\t\t// https://github.com/ckeditor/ckeditor5-internal/issues/3268.\n\t\t/* istanbul ignore next -- @preserve */\n\t\tif ( !this._config.hideInput && ( env.isGecko || env.isiOS || env.isSafari || env.isBlink ) ) {\n\t\t\tconst input: LabeledFieldView<InputTextView> = this.hexInputRow!.children.get( 1 )! as LabeledFieldView<InputTextView>;\n\n\t\t\tinput.focus();\n\t\t}\n\n\t\tconst firstSlider = this.slidersView.first!;\n\n\t\tfirstSlider.focus();\n\t}\n\n\t/**\n\t * Creates collection of sliders in color picker.\n\t *\n\t * @private\n\t */\n\tprivate _createSlidersView(): void {\n\t\tconst colorPickersChildren = [ ...this.picker.shadowRoot!.children ] as Array<HTMLElement>;\n\t\tconst sliders = colorPickersChildren.filter( item => item.getAttribute( 'role' ) === 'slider' );\n\n\t\tconst slidersView = sliders.map( slider => {\n\t\t\tconst view = new SliderView( slider );\n\n\t\t\treturn view;\n\t\t} );\n\n\t\tthis.slidersView = this.createCollection();\n\n\t\tslidersView.forEach( item => {\n\t\t\tthis.slidersView.add( item );\n\t\t} );\n\t}\n\n\t/**\n\t * Creates input row for defining custom colors in color picker.\n\t *\n\t * @private\n\t */\n\tprivate _createInputRow(): ColorPickerInputRowView {\n\t\tconst colorInput = this._createColorInput();\n\n\t\treturn new ColorPickerInputRowView( this.locale!, colorInput );\n\t}\n\n\t/**\n\t * Creates the input where user can type or paste the color in hex format.\n\t *\n\t * @private\n\t */\n\tprivate _createColorInput(): LabeledFieldView<InputTextView> {\n\t\tconst labeledInput = new LabeledFieldView( this.locale, createLabeledInputText );\n\t\tconst { t } = this.locale!;\n\n\t\tlabeledInput.set( {\n\t\t\tlabel: t( 'HEX' ),\n\t\t\tclass: 'color-picker-hex-input'\n\t\t} );\n\n\t\tlabeledInput.fieldView.bind( 'value' ).to( this, '_hexColor', pickerColor => {\n\t\t\tif ( labeledInput.isFocused ) {\n\t\t\t\t// Text field shouldn't be updated with color change if the text field is focused.\n\t\t\t\t// Imagine user typing hex code and getting the value of field changed.\n\t\t\t\treturn labeledInput.fieldView.value;\n\t\t\t} else {\n\t\t\t\treturn pickerColor.startsWith( '#' ) ? pickerColor.substring( 1 ) : pickerColor;\n\t\t\t}\n\t\t} );\n\n\t\t// Only accept valid hex colors as input.\n\t\tlabeledInput.fieldView.on( 'input', () => {\n\t\t\tconst inputValue = labeledInput.fieldView.element!.value;\n\n\t\t\tif ( inputValue ) {\n\t\t\t\tconst maybeHexColor = tryParseHexColor( inputValue );\n\n\t\t\t\tif ( maybeHexColor ) {\n\t\t\t\t\t// If so, set the color.\n\t\t\t\t\t// Otherwise, do nothing.\n\t\t\t\t\tthis._debounceColorPickerEvent( maybeHexColor );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\treturn labeledInput;\n\t}\n\n\t/**\n\t * Validates the view and returns `false` when some fields are invalid.\n\t */\n\tpublic isValid(): boolean {\n\t\tconst { t } = this.locale!;\n\n\t\t// If the input is hidden, it's always valid, because there is no way to select\n\t\t// invalid color value using diagram color picker.\n\t\tif ( this._config.hideInput ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tthis.resetValidationStatus();\n\n\t\t// One error per field is enough.\n\t\tif ( !this.hexInputRow.getParsedColor() ) {\n\t\t\t// Apply updated error.\n\t\t\tthis.hexInputRow.inputView.errorText = t( 'Please enter a valid color (e.g. \"ff0000\").' );\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Cleans up the supplementary error and information text of input inside the {@link #hexInputRow}\n\t * bringing them back to the state when the form has been displayed for the first time.\n\t *\n\t * See {@link #isValid}.\n\t */\n\tpublic resetValidationStatus(): void {\n\t\tthis.hexInputRow.inputView.errorText = null;\n\t}\n}\n\n// Converts any color format to a unified hex format.\n//\n// @param inputColor\n// @returns An unified hex string.\nfunction convertColorToCommonHexFormat( inputColor: string ): string {\n\tlet ret = convertToHex( inputColor );\n\n\tif ( !ret ) {\n\t\tret = '#000';\n\t}\n\n\tif ( ret.length === 4 ) {\n\t\t// Unfold shortcut format.\n\t\tret = '#' + [ ret[ 1 ], ret[ 1 ], ret[ 2 ], ret[ 2 ], ret[ 3 ], ret[ 3 ] ].join( '' );\n\t}\n\n\treturn ret.toLowerCase();\n}\n\n// View abstraction over pointer in color picker.\nexport class SliderView extends View {\n\t/**\n\t * @param element HTML element of slider in color picker.\n\t */\n\tconstructor( element: HTMLElement ) {\n\t\tsuper();\n\t\tthis.element = element;\n\t}\n\n\t/**\n\t * Focuses element.\n\t */\n\tpublic focus(): void {\n\t\tthis.element!.focus();\n\t}\n}\n\n// View abstraction over the `#` character before color input.\nclass HashView extends View {\n\tconstructor( locale?: Locale ) {\n\t\tsuper( locale );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-color-picker__hash-view'\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: '#'\n\t\t} );\n\t}\n}\n\n// The class representing a row containing hex color input field.\n// **Note**: For now this class is private. When more use cases appear (beyond `ckeditor5-table` and `ckeditor5-image`),\n// it will become a component in `ckeditor5-ui`.\n//\n// @private\nexport class ColorPickerInputRowView extends View {\n\t/**\n\t * A collection of row items (buttons, dropdowns, etc.).\n\t */\n\tpublic readonly children: ViewCollection;\n\n\t/**\n\t * Hex input view element.\n\t */\n\tpublic readonly inputView: LabeledFieldView<InputTextView>;\n\n\t/**\n\t * Creates an instance of the form row class.\n\t *\n\t * @param locale The locale instance.\n\t * @param inputView Hex color input element.\n\t */\n\tconstructor( locale: Locale, inputView: LabeledFieldView<InputTextView> ) {\n\t\tsuper( locale );\n\n\t\tthis.inputView = inputView;\n\t\tthis.children = this.createCollection( [\n\t\t\tnew HashView(),\n\t\t\tthis.inputView\n\t\t] );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-color-picker__row'\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: this.children\n\t\t} );\n\t}\n\n\t/**\n\t * Returns false if color input value is not in hex format.\n\t */\n\tpublic getParsedColor(): HexColor | null {\n\t\treturn tryParseHexColor( this.inputView.fieldView.element!.value );\n\t}\n}\n\n/**\n * An event fired whenever the color was selected through the color picker palette\n * or the color picker input.\n *\n * This even fires only when the user changes the color. It does not fire when the color\n * is changed programmatically, e.g. via\n * {@link module:ui/colorpicker/colorpickerview~ColorPickerView#color}.\n *\n * @eventName ~ColorPickerView#colorSelected\n */\nexport type ColorPickerColorSelectedEvent = {\n\tname: 'colorSelected';\n\targs: [ {\n\t\tcolor: string;\n\t} ];\n};\n\n/**\n * Trim spaces from provided color and check if hex is valid.\n *\n * @param color Unsafe color string.\n * @returns Null if provided color is not hex value.\n * @export\n * @internal\n */\nexport function tryParseHexColor<S extends string>( color: S | null | undefined ): HexColor<S> | null {\n\tif ( !color ) {\n\t\treturn null;\n\t}\n\n\tconst hashLessColor = color.trim().replace( /^#/, '' );\n\n\t// Incorrect length.\n\tif ( ![ 3, 4, 6, 8 ].includes( hashLessColor.length ) ) {\n\t\treturn null;\n\t}\n\n\t// Incorrect characters.\n\tif ( !/^(([0-9a-fA-F]{2}){3,4}|([0-9a-fA-F]){3,4})$/.test( hashLessColor ) ) {\n\t\treturn null;\n\t}\n\n\treturn `#${ hashLessColor }` as `#${ S }`;\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/colorselector/documentcolorcollection\n */\n\nimport type { ColorDefinition } from '../colorgrid/colorgridview.js';\nimport {\n\tCollection,\n\tObservableMixin,\n\ttype CollectionAddEvent,\n\ttype CollectionRemoveEvent,\n\ttype CollectionChangeEvent\n} from '@ckeditor/ckeditor5-utils';\n\n/**\n * A collection to store document colors. It enforces colors to be unique.\n */\nexport class DocumentColorCollection extends /* #__PURE__ */ ObservableMixin( Collection<ColorDefinition> ) {\n\t/**\n\t * Indicates whether the document color collection is empty.\n\t *\n\t * @observable\n\t */\n\tdeclare public readonly isEmpty: boolean;\n\n\tconstructor( options?: any ) {\n\t\tsuper( options );\n\n\t\tthis.set( 'isEmpty', true );\n\n\t\tthis.on( 'change', () => {\n\t\t\tthis.set( 'isEmpty', this.length === 0 );\n\t\t} );\n\t}\n\n\t/**\n\t * Adds a color to the document color collection.\n\t *\n\t * This method ensures that no color duplicates are inserted (compared using\n\t * the color value of the {@link module:ui/colorgrid/colorgridview~ColorDefinition}).\n\t *\n\t * If the item does not have an ID, it will be automatically generated and set on the item.\n\t *\n\t * @param index The position of the item in the collection. The item is pushed to the collection when `index` is not specified.\n\t * @fires add\n\t * @fires change\n\t */\n\tpublic override add( item: ColorDefinition, index?: number ): this {\n\t\tif ( this.find( element => element.color === item.color ) ) {\n\t\t\t// No duplicates are allowed.\n\t\t\treturn this;\n\t\t}\n\n\t\treturn super.add( item, index );\n\t}\n\n\t/**\n\t * Checks if an object with given colors is present in the document color collection.\n\t */\n\tpublic hasColor( color: string ): boolean {\n\t\treturn !!this.find( item => item.color === color );\n\t}\n}\n\n/**\n * Fired when the collection was changed due to adding or removing items.\n *\n * @eventName ~DocumentColorCollection#change\n * @param data Changed items.\n */\nexport type DocumentColorCollectionChangeEvent = CollectionChangeEvent;\n\n/**\n * Fired when an item is added to the collection.\n *\n * @eventName ~DocumentColorCollection#add\n * @param item The added item.\n * @param index An index where the addition occurred.\n */\nexport type DocumentColorCollectionAddEvent = CollectionAddEvent;\n\n/**\n * Fired when an item is removed from the collection.\n *\n * @eventName ~DocumentColorCollection#remove\n * @param item The removed item.\n * @param index Index from which item was removed.\n */\nexport type DocumentColorCollectionRemoveEvent = CollectionRemoveEvent;\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/colorselector/colorgridsfragmentview\n */\n\nimport { View } from '../view.js';\nimport { ButtonView } from '../button/buttonview.js';\nimport { ColorGridView, type ColorDefinition } from '../colorgrid/colorgridview.js';\nimport { ColorTileView } from '../colorgrid/colortileview.js';\nimport { Template } from '../template.js';\n\nimport { DocumentColorCollection } from './documentcolorcollection.js';\n\nimport type { Model } from '@ckeditor/ckeditor5-engine';\nimport type { FocusTracker, Locale } from '@ckeditor/ckeditor5-utils';\nimport { type ViewCollection } from '../viewcollection.js';\nimport type { FocusableView } from '../focuscycler.js';\nimport type { ColorSelectorExecuteEvent, ColorSelectorColorPickerShowEvent } from './colorselectorview.js';\n\nimport { IconEraser, IconColorPalette } from '@ckeditor/ckeditor5-icons';\n\n/**\n * One of the fragments of {@link module:ui/colorselector/colorselectorview~ColorSelectorView}.\n *\n * It provides a UI that allows users to select colors from the a predefined set and from existing document colors.\n *\n * It consists of the following sub–components:\n *\n * * A \"Remove color\" button,\n * * A static {@link module:ui/colorgrid/colorgridview~ColorGridView} of colors defined in the configuration,\n * * A dynamic {@link module:ui/colorgrid/colorgridview~ColorGridView} of colors used in the document.\n * * If color picker is configured, the \"Color Picker\" button is visible too.\n */\nexport class ColorGridsFragmentView extends View {\n\t/**\n\t * A collection of the children of the table.\n\t */\n\tpublic readonly items: ViewCollection;\n\n\t/**\n\t * An array with objects representing colors to be displayed in the grid.\n\t */\n\tpublic colorDefinitions: Array<ColorDefinition>;\n\n\t/**\n\t * Tracks information about the DOM focus in the list.\n\t */\n\tpublic readonly focusTracker: FocusTracker;\n\n\t/**\n\t * The number of columns in the color grid.\n\t */\n\tpublic columns: number;\n\n\t/**\n\t * Preserves the reference to {@link module:ui/colorselector/documentcolorcollection~DocumentColorCollection} used to collect\n\t * definitions that store the document colors.\n\t *\n\t * @readonly\n\t */\n\tpublic documentColors: DocumentColorCollection;\n\n\t/**\n\t * The maximum number of colors in the document colors section.\n\t * If it equals 0, the document colors section is not added.\n\t *\n\t * @readonly\n\t */\n\tpublic documentColorsCount?: number;\n\n\t/**\n\t * Keeps the value of the command associated with the table for the current selection.\n\t */\n\tdeclare public selectedColor: string;\n\n\t/**\n\t * Preserves the reference to {@link module:ui/colorgrid/colorgridview~ColorGridView} used to create\n\t * the default (static) color set.\n\t *\n\t * The property is loaded once the the parent dropdown is opened the first time.\n\t *\n\t * @readonly\n\t */\n\tpublic staticColorsGrid: ColorGridView | undefined;\n\n\t/**\n\t * Preserves the reference to {@link module:ui/colorgrid/colorgridview~ColorGridView} used to create\n\t * the document colors. It remains undefined if the document colors feature is disabled.\n\t *\n\t * The property is loaded once the the parent dropdown is opened the first time.\n\t *\n\t * @readonly\n\t */\n\tpublic documentColorsGrid: ColorGridView | undefined;\n\n\t/**\n\t * The \"Color picker\" button view.\n\t */\n\tpublic colorPickerButtonView?: ButtonView;\n\n\t/**\n\t * The \"Remove color\" button view.\n\t */\n\tpublic removeColorButtonView: ButtonView;\n\n\t/**\n\t * The property which is responsible for is component visible or not.\n\t */\n\tdeclare public isVisible: boolean;\n\n\t/**\n\t * A collection of views that can be focused in the view.\n\t *\n\t * @readonly\n\t */\n\tprotected _focusables: ViewCollection<FocusableView>;\n\n\t/**\n\t * Document color section's label.\n\t *\n\t * @readonly\n\t */\n\tprivate _documentColorsLabel?: string;\n\n\t/**\n\t * The label of the button responsible for removing color attributes.\n\t */\n\tprivate _removeButtonLabel: string;\n\n\t/**\n\t * The label of the button responsible for switching to the color picker component.\n\t */\n\tprivate _colorPickerLabel: string;\n\n\t/**\n\t * Creates an instance of the view.\n\t *\n\t * @param locale The localization services instance.\n\t * @param options Constructor options.\n\t * @param options.colors An array with definitions of colors to be displayed in the table.\n\t * @param options.columns The number of columns in the color grid.\n\t * @param options.removeButtonLabel The label of the button responsible for removing the color.\n\t * @param options.colorPickerLabel The label of the button responsible for color picker appearing.\n\t * @param options.documentColorsLabel The label for the section with the document colors.\n\t * @param options.documentColorsCount The number of colors in the document colors section inside the color dropdown.\n\t * @param options.focusTracker Tracks information about the DOM focus in the list.\n\t * @param options.focusables A collection of views that can be focused in the view.\n\t */\n\tconstructor(\n\t\tlocale: Locale,\n\t\t{\n\t\t\tcolors, columns, removeButtonLabel, documentColorsLabel, documentColorsCount,\n\t\t\tcolorPickerLabel, focusTracker, focusables\n\t\t}: {\n\t\t\tcolors: Array<ColorDefinition>;\n\t\t\tcolumns: number;\n\t\t\tremoveButtonLabel: string;\n\t\t\tcolorPickerLabel: string;\n\t\t\tdocumentColorsLabel?: string;\n\t\t\tdocumentColorsCount?: number;\n\t\t\tfocusTracker: FocusTracker;\n\t\t\tfocusables: ViewCollection<FocusableView>;\n\t\t}\n\t) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.set( 'isVisible', true );\n\n\t\tthis.focusTracker = focusTracker;\n\t\tthis.items = this.createCollection();\n\t\tthis.colorDefinitions = colors;\n\t\tthis.columns = columns;\n\t\tthis.documentColors = new DocumentColorCollection();\n\t\tthis.documentColorsCount = documentColorsCount;\n\n\t\tthis._focusables = focusables;\n\t\tthis._removeButtonLabel = removeButtonLabel;\n\t\tthis._colorPickerLabel = colorPickerLabel;\n\t\tthis._documentColorsLabel = documentColorsLabel;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-color-grids-fragment',\n\t\t\t\t\tbind.if( 'isVisible', 'ck-hidden', value => !value )\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: this.items\n\t\t} );\n\n\t\tthis.removeColorButtonView = this._createRemoveColorButton();\n\n\t\tthis.items.add( this.removeColorButtonView );\n\t}\n\n\t/**\n\t * Scans through the editor model and searches for text node attributes with the given attribute name.\n\t * Found entries are set as document colors.\n\t *\n\t * All the previously stored document colors will be lost in the process.\n\t *\n\t * @param model The model used as a source to obtain the document colors.\n\t * @param attributeName Determines the name of the related model's attribute for a given dropdown.\n\t */\n\tpublic updateDocumentColors( model: Model, attributeName: string ): void {\n\t\tconst document = model.document;\n\t\tconst maxCount = this.documentColorsCount;\n\n\t\tthis.documentColors.clear();\n\n\t\tfor ( const root of document.getRoots() ) {\n\t\t\tconst range = model.createRangeIn( root );\n\n\t\t\tfor ( const node of range.getItems() ) {\n\t\t\t\tif ( node.is( '$textProxy' ) && node.hasAttribute( attributeName ) ) {\n\t\t\t\t\tthis._addColorToDocumentColors( node.getAttribute( attributeName ) as string );\n\n\t\t\t\t\tif ( this.documentColors.length >= maxCount! ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Refreshes the state of the selected color in one or both {@link module:ui/colorgrid/colorgridview~ColorGridView}s\n\t * available in the {@link module:ui/colorselector/colorselectorview~ColorSelectorView}. It guarantees that the selection will\n\t * occur only in one of them.\n\t */\n\tpublic updateSelectedColors(): void {\n\t\tconst documentColorsGrid = this.documentColorsGrid;\n\t\tconst staticColorsGrid = this.staticColorsGrid!;\n\t\tconst selectedColor = this.selectedColor;\n\n\t\tstaticColorsGrid.selectedColor = selectedColor;\n\n\t\tif ( documentColorsGrid ) {\n\t\t\tdocumentColorsGrid.selectedColor = selectedColor;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tthis.staticColorsGrid = this._createStaticColorsGrid();\n\n\t\tthis.items.add( this.staticColorsGrid );\n\n\t\tif ( this.documentColorsCount ) {\n\t\t\t// Create a label for document colors.\n\t\t\tconst bind = Template.bind( this.documentColors, this.documentColors );\n\t\t\tconst label = new View( this.locale );\n\t\t\tlabel.setTemplate( {\n\t\t\t\ttag: 'span',\n\t\t\t\tattributes: {\n\t\t\t\t\tclass: [\n\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t'ck-color-grid__label',\n\t\t\t\t\t\tbind.if( 'isEmpty', 'ck-hidden' )\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\tchildren: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttext: this._documentColorsLabel\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t} );\n\t\t\tthis.items.add( label );\n\t\t\tthis.documentColorsGrid = this._createDocumentColorsGrid();\n\n\t\t\tthis.items.add( this.documentColorsGrid );\n\t\t}\n\t\tthis._createColorPickerButton();\n\n\t\tthis._addColorSelectorElementsToFocusTracker();\n\t}\n\n\t/**\n\t * Focuses the component.\n\t */\n\tpublic focus(): void {\n\t\tthis.removeColorButtonView.focus();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\t}\n\n\t/**\n\t * Handles displaying the color picker button (if it was previously created) and making it focusable.\n\t */\n\tpublic addColorPickerButton(): void {\n\t\tif ( this.colorPickerButtonView ) {\n\t\t\tthis.items.add( this.colorPickerButtonView );\n\t\t\tthis.focusTracker.add( this.colorPickerButtonView.element! );\n\t\t\tthis._focusables.add( this.colorPickerButtonView );\n\t\t}\n\t}\n\n\t/**\n\t * Adds color selector elements to focus tracker.\n\t */\n\tprivate _addColorSelectorElementsToFocusTracker(): void {\n\t\tthis.focusTracker.add( this.removeColorButtonView.element! );\n\t\tthis._focusables.add( this.removeColorButtonView );\n\n\t\tif ( this.staticColorsGrid ) {\n\t\t\tthis.focusTracker.add( this.staticColorsGrid.element! );\n\t\t\tthis._focusables.add( this.staticColorsGrid );\n\t\t}\n\n\t\tif ( this.documentColorsGrid ) {\n\t\t\tthis.focusTracker.add( this.documentColorsGrid.element! );\n\t\t\tthis._focusables.add( this.documentColorsGrid );\n\t\t}\n\t}\n\n\t/**\n\t * Creates the button responsible for displaying the color picker component.\n\t */\n\tprivate _createColorPickerButton(): void {\n\t\tthis.colorPickerButtonView = new ButtonView();\n\n\t\tthis.colorPickerButtonView.set( {\n\t\t\tlabel: this._colorPickerLabel,\n\t\t\twithText: true,\n\t\t\ticon: IconColorPalette,\n\t\t\tclass: 'ck-color-selector__color-picker'\n\t\t} );\n\n\t\tthis.colorPickerButtonView.on( 'execute', () => {\n\t\t\tthis.fire<ColorSelectorColorPickerShowEvent>( 'colorPicker:show' );\n\t\t} );\n\t}\n\n\t/**\n\t * Adds the remove color button as a child of the current view.\n\t */\n\tprivate _createRemoveColorButton(): ButtonView {\n\t\tconst buttonView = new ButtonView();\n\n\t\tbuttonView.set( {\n\t\t\twithText: true,\n\t\t\ticon: IconEraser,\n\t\t\tlabel: this._removeButtonLabel\n\t\t} );\n\n\t\tbuttonView.class = 'ck-color-selector__remove-color';\n\t\tbuttonView.on( 'execute', () => {\n\t\t\tthis.fire( 'execute', {\n\t\t\t\tvalue: null,\n\t\t\t\tsource: 'removeColorButton'\n\t\t\t} );\n\t\t} );\n\n\t\tbuttonView.render();\n\n\t\treturn buttonView;\n\t}\n\n\t/**\n\t * Creates a static color grid based on the editor configuration.\n\t */\n\tprivate _createStaticColorsGrid(): ColorGridView {\n\t\tconst colorGrid = new ColorGridView( this.locale, {\n\t\t\tcolorDefinitions: this.colorDefinitions,\n\t\t\tcolumns: this.columns\n\t\t} );\n\n\t\tcolorGrid.on( 'execute', ( evt, data ) => {\n\t\t\tthis.fire<ColorSelectorExecuteEvent>( 'execute', {\n\t\t\t\tvalue: data.value,\n\t\t\t\tsource: 'staticColorsGrid'\n\t\t\t} );\n\t\t} );\n\n\t\treturn colorGrid;\n\t}\n\n\t/**\n\t * Creates the document colors section view and binds it to {@link #documentColors}.\n\t */\n\tprivate _createDocumentColorsGrid(): ColorGridView {\n\t\tconst bind = Template.bind( this.documentColors, this.documentColors );\n\t\tconst documentColorsGrid = new ColorGridView( this.locale, {\n\t\t\tcolumns: this.columns\n\t\t} );\n\n\t\tdocumentColorsGrid.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: bind.if( 'isEmpty', 'ck-hidden' )\n\t\t\t}\n\t\t} );\n\n\t\tdocumentColorsGrid.items.bindTo( this.documentColors ).using(\n\t\t\tcolorObj => {\n\t\t\t\tconst colorTile = new ColorTileView();\n\n\t\t\t\tcolorTile.set( {\n\t\t\t\t\tcolor: colorObj.color,\n\t\t\t\t\thasBorder: colorObj.options?.hasBorder\n\t\t\t\t} );\n\n\t\t\t\tif ( colorObj.label ) {\n\t\t\t\t\tcolorTile.set( {\n\t\t\t\t\t\tlabel: colorObj.label,\n\t\t\t\t\t\ttooltip: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\tcolorTile.on( 'execute', () => {\n\t\t\t\t\tthis.fire<ColorSelectorExecuteEvent>( 'execute', {\n\t\t\t\t\t\tvalue: colorObj.color,\n\t\t\t\t\t\tsource: 'documentColorsGrid'\n\t\t\t\t\t} );\n\t\t\t\t} );\n\n\t\t\t\treturn colorTile;\n\t\t\t}\n\t\t);\n\n\t\t// Selected color should be cleared when document colors became empty.\n\t\tthis.documentColors.on( 'change:isEmpty', ( evt, name, val ) => {\n\t\t\tif ( val ) {\n\t\t\t\tdocumentColorsGrid.selectedColor = null;\n\t\t\t}\n\t\t} );\n\n\t\treturn documentColorsGrid;\n\t}\n\n\t/**\n\t * Adds a given color to the document colors list. If possible, the method will attempt to use\n\t * data from the {@link #colorDefinitions} (label, color options).\n\t *\n\t * @param color A string that stores the value of the recently applied color.\n\t */\n\tprivate _addColorToDocumentColors( color: string ): void {\n\t\tconst predefinedColor = this.colorDefinitions\n\t\t\t.find( definition => definition.color === color );\n\n\t\tif ( !predefinedColor ) {\n\t\t\tthis.documentColors.add( {\n\t\t\t\tcolor,\n\t\t\t\tlabel: color,\n\t\t\t\toptions: {\n\t\t\t\t\thasBorder: false\n\t\t\t\t}\n\t\t\t} );\n\t\t} else {\n\t\t\tthis.documentColors.add( Object.assign( {}, predefinedColor ) );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/colorselector/colorpickerfragmentview\n */\n\nimport { View } from '../view.js';\nimport { ButtonView } from '../button/buttonview.js';\nimport { type ViewCollection } from '../viewcollection.js';\nimport type { FocusableView } from '../focuscycler.js';\nimport { type LabeledFieldView } from '../labeledfield/labeledfieldview.js';\nimport { type InputTextView } from '../inputtext/inputtextview.js';\nimport {\n\tColorPickerView,\n\ttype ColorPickerColorSelectedEvent\n} from '../colorpicker/colorpickerview.js';\n\nimport type { FocusTracker, KeystrokeHandler, Locale } from '@ckeditor/ckeditor5-utils';\nimport type { ColorPickerViewConfig } from '../colorpicker/utils.js';\nimport type { ColorSelectorColorPickerCancelEvent, ColorSelectorExecuteEvent } from './colorselectorview.js';\nimport { IconCancel, IconCheck } from '@ckeditor/ckeditor5-icons';\n\n/**\n * One of the fragments of {@link module:ui/colorselector/colorselectorview~ColorSelectorView}.\n *\n * It allows users to select a color from a color picker.\n *\n * It consists of the following sub–components:\n *\n * * A color picker saturation and hue sliders,\n * * A text input accepting colors in HEX format,\n * * \"Save\" and \"Cancel\" action buttons.\n */\nexport class ColorPickerFragmentView extends View {\n\t/**\n\t * A collection of component's children.\n\t */\n\tpublic readonly items: ViewCollection;\n\n\t/**\n\t * A view with saturation and hue sliders and color input.\n\t */\n\tpublic colorPickerView?: ColorPickerView;\n\n\t/**\n\t * The \"Save\" button view.\n\t */\n\tpublic saveButtonView: ButtonView;\n\n\t/**\n\t * The \"Cancel\" button view.\n\t */\n\tpublic cancelButtonView: ButtonView;\n\n\t/**\n\t * The action bar where are \"Save\" button and \"Cancel\" button.\n\t */\n\tpublic actionBarView: View;\n\n\t/**\n\t * Tracks information about the DOM focus in the list.\n\t */\n\tpublic readonly focusTracker: FocusTracker;\n\n\t/**\n\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t */\n\tpublic readonly keystrokes: KeystrokeHandler;\n\n\t/**\n\t * Indicates whether the component is visible or not.\n\t */\n\tdeclare public isVisible: boolean;\n\n\t/**\n\t * Keeps the value of the command associated with the component for the current selection.\n\t */\n\tdeclare public selectedColor?: string;\n\n\t/**\n\t * A collection of views that can be focused in the view.\n\t *\n\t * @readonly\n\t */\n\tprotected _focusables: ViewCollection<FocusableView>;\n\n\t/**\n\t * A reference to the configuration of {@link #colorPickerView}. `false` when the view was\n\t * configured without a color picker.\n\t *\n\t * @readonly\n\t */\n\tprivate _colorPickerViewConfig: ColorPickerViewConfig | false;\n\n\t/**\n\t * Creates an instance of the view.\n\t *\n\t * @param locale The localization services instance.\n\t * @param options Constructor options.\n\t * @param options.focusTracker Tracks information about the DOM focus in the list.\n\t * @param options.focusables A collection of views that can be focused in the view.\n\t * @param options.keystrokes An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t * @param options.colorPickerViewConfig The configuration of color picker feature. If set to `false`, the color picker\n\t * will not be rendered.\n\t */\n\tconstructor(\n\t\tlocale: Locale,\n\t\t{\n\t\t\tfocusTracker,\n\t\t\tfocusables,\n\t\t\tkeystrokes,\n\t\t\tcolorPickerViewConfig\n\t\t}:\n\t\t{\n\t\t\tfocusTracker: FocusTracker;\n\t\t\tfocusables: ViewCollection<FocusableView>;\n\t\t\tkeystrokes: KeystrokeHandler;\n\t\t\tcolorPickerViewConfig: ColorPickerViewConfig | false;\n\t\t}\n\t) {\n\t\tsuper( locale );\n\n\t\tthis.items = this.createCollection();\n\t\tthis.focusTracker = focusTracker;\n\t\tthis.keystrokes = keystrokes;\n\n\t\tthis.set( 'isVisible', false );\n\t\tthis.set( 'selectedColor', undefined );\n\n\t\tthis._focusables = focusables;\n\t\tthis._colorPickerViewConfig = colorPickerViewConfig;\n\n\t\tconst bind = this.bindTemplate;\n\t\tconst { saveButtonView, cancelButtonView } = this._createActionButtons();\n\n\t\tthis.saveButtonView = saveButtonView;\n\t\tthis.cancelButtonView = cancelButtonView;\n\t\tthis.actionBarView = this._createActionBarView( { saveButtonView, cancelButtonView } );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-color-picker-fragment',\n\t\t\t\t\tbind.if( 'isVisible', 'ck-hidden', value => !value )\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: this.items\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tconst colorPickerView = new ColorPickerView( this.locale, {\n\t\t\t...this._colorPickerViewConfig\n\t\t} as ColorPickerViewConfig );\n\n\t\tthis.colorPickerView = colorPickerView;\n\t\tthis.colorPickerView.render();\n\n\t\tif ( this.selectedColor ) {\n\t\t\tcolorPickerView.color = this.selectedColor;\n\t\t}\n\n\t\tthis.listenTo( this, 'change:selectedColor', ( evt, name, value ) => {\n\t\t\tcolorPickerView.color = value;\n\t\t} );\n\n\t\tthis.items.add( this.colorPickerView );\n\t\tthis.items.add( this.actionBarView );\n\n\t\tthis._addColorPickersElementsToFocusTracker();\n\t\tthis._stopPropagationOnArrowsKeys();\n\t\tthis._executeOnEnterPress();\n\t\tthis._executeUponColorChange();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\t}\n\n\t/**\n\t * Focuses the color picker.\n\t */\n\tpublic focus(): void {\n\t\tthis.colorPickerView!.focus();\n\t}\n\n\t/**\n\t * Reset validation messages.\n\t */\n\tpublic resetValidationStatus(): void {\n\t\tthis.colorPickerView!.resetValidationStatus();\n\t}\n\n\t/**\n\t * When color picker is focused and \"enter\" is pressed it executes command.\n\t */\n\tprivate _executeOnEnterPress(): void {\n\t\tthis.keystrokes.set( 'enter', evt => {\n\t\t\tif ( this.isVisible && this.focusTracker.focusedElement !== this.cancelButtonView.element && this.colorPickerView!.isValid() ) {\n\t\t\t\tthis.fire( 'execute', {\n\t\t\t\t\tvalue: this.selectedColor!\n\t\t\t\t} );\n\n\t\t\t\tevt.stopPropagation();\n\t\t\t\tevt.preventDefault();\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Removes default behavior of arrow keys in dropdown.\n\t */\n\tprivate _stopPropagationOnArrowsKeys(): void {\n\t\tconst stopPropagation = ( data: KeyboardEvent ) => data.stopPropagation();\n\n\t\tthis.keystrokes.set( 'arrowright', stopPropagation );\n\t\tthis.keystrokes.set( 'arrowleft', stopPropagation );\n\t\tthis.keystrokes.set( 'arrowup', stopPropagation );\n\t\tthis.keystrokes.set( 'arrowdown', stopPropagation );\n\t}\n\n\t/**\n\t * Adds color picker elements to focus tracker.\n\t */\n\tprivate _addColorPickersElementsToFocusTracker(): void {\n\t\tfor ( const slider of this.colorPickerView!.slidersView ) {\n\t\t\tthis.focusTracker.add( slider.element! );\n\t\t\tthis._focusables.add( slider );\n\t\t}\n\n\t\tconst input = this.colorPickerView!.hexInputRow.children.get( 1 ) as LabeledFieldView<InputTextView>;\n\n\t\tif ( input.element! ) {\n\t\t\tthis.focusTracker.add( input.element );\n\t\t\tthis._focusables.add( input );\n\t\t}\n\n\t\tthis.focusTracker.add( this.saveButtonView.element! );\n\t\tthis._focusables.add( this.saveButtonView );\n\n\t\tthis.focusTracker.add( this.cancelButtonView.element! );\n\t\tthis._focusables.add( this.cancelButtonView );\n\t}\n\n\t/**\n\t * Creates bar containing \"Save\" and \"Cancel\" buttons.\n\t */\n\tprivate _createActionBarView( { saveButtonView, cancelButtonView }: {\n\t\tsaveButtonView: ButtonView;\n\t\tcancelButtonView: ButtonView;\n\t} ): View {\n\t\tconst actionBarRow = new View();\n\t\tconst children = this.createCollection();\n\n\t\tchildren.add( saveButtonView );\n\t\tchildren.add( cancelButtonView );\n\n\t\tactionBarRow.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-color-selector_action-bar'\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren\n\t\t} );\n\n\t\treturn actionBarRow;\n\t}\n\n\t/**\n\t * Creates \"Save\" and \"Cancel\" buttons.\n\t */\n\tprivate _createActionButtons() {\n\t\tconst locale = this.locale;\n\t\tconst t = locale!.t;\n\t\tconst saveButtonView = new ButtonView( locale );\n\t\tconst cancelButtonView = new ButtonView( locale );\n\n\t\tsaveButtonView.set( {\n\t\t\ticon: IconCheck,\n\t\t\tclass: 'ck-button-save',\n\t\t\ttype: 'button',\n\t\t\twithText: false,\n\t\t\tlabel: t( 'Accept' )\n\t\t} );\n\n\t\tcancelButtonView.set( {\n\t\t\ticon: IconCancel,\n\t\t\tclass: 'ck-button-cancel',\n\t\t\ttype: 'button',\n\t\t\twithText: false,\n\t\t\tlabel: t( 'Cancel' )\n\t\t} );\n\n\t\tsaveButtonView.on( 'execute', () => {\n\t\t\tif ( this.colorPickerView!.isValid() ) {\n\t\t\t\tthis.fire<ColorSelectorExecuteEvent>( 'execute', {\n\t\t\t\t\tsource: 'colorPickerSaveButton',\n\t\t\t\t\tvalue: this.selectedColor!\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\tcancelButtonView.on( 'execute', () => {\n\t\t\tthis.fire<ColorSelectorColorPickerCancelEvent>( 'colorPicker:cancel' );\n\t\t} );\n\n\t\treturn {\n\t\t\tsaveButtonView, cancelButtonView\n\t\t};\n\t}\n\n\t/**\n\t * Fires the `execute` event if color in color picker has been changed\n\t * by the user.\n\t */\n\tprivate _executeUponColorChange() {\n\t\tthis.colorPickerView!.on<ColorPickerColorSelectedEvent>( 'colorSelected', ( evt, data ) => {\n\t\t\tthis.fire<ColorSelectorExecuteEvent>( 'execute', {\n\t\t\t\tvalue: data.color,\n\t\t\t\tsource: 'colorPicker'\n\t\t\t} );\n\t\t\tthis.set( 'selectedColor', data.color );\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/colorselector/colorselectorview\n */\n\nimport { FocusCycler, type FocusableView } from '../focuscycler.js';\nimport { View } from '../view.js';\nimport { ViewCollection } from '../viewcollection.js';\nimport { FocusTracker, KeystrokeHandler, type Locale } from '@ckeditor/ckeditor5-utils';\n\nimport type { ColorPickerViewConfig } from '../colorpicker/utils.js';\nimport type { ColorDefinition } from '../colorgrid/colorgridview.js';\nimport type { Model } from '@ckeditor/ckeditor5-engine';\n\nimport { ColorGridsFragmentView } from './colorgridsfragmentview.js';\nimport { ColorPickerFragmentView } from './colorpickerfragmentview.js';\n\nimport '../../theme/components/colorselector/colorselector.css';\n\n/**\n * The configurable color selector view class. It allows users to select colors from a predefined set of colors as well as from\n * a color picker.\n *\n * This meta-view is is made of two components (fragments):\n *\n * * {@link module:ui/colorselector/colorselectorview~ColorSelectorView#colorGridsFragmentView},\n * * {@link module:ui/colorselector/colorselectorview~ColorSelectorView#colorPickerFragmentView}.\n *\n * ```ts\n * const colorDefinitions = [\n * \t{ color: '#000', label: 'Black', options: { hasBorder: false } },\n * \t{ color: 'rgb(255, 255, 255)', label: 'White', options: { hasBorder: true } },\n * \t{ color: 'red', label: 'Red', options: { hasBorder: false } }\n * ];\n *\n * const selectorView = new ColorSelectorView( locale, {\n * \tcolors: colorDefinitions,\n * \tcolumns: 5,\n * \tremoveButtonLabel: 'Remove color',\n * \tdocumentColorsLabel: 'Document colors',\n * \tdocumentColorsCount: 4,\n * \tcolorPickerViewConfig: {\n * \t\tformat: 'hsl'\n * \t}\n * } );\n *\n * selectorView.appendUI();\n * selectorView.selectedColor = 'red';\n * selectorView.updateSelectedColors();\n *\n * selectorView.on<ColorSelectorExecuteEvent>( 'execute', ( evt, data ) => {\n * \tconsole.log( 'Color changed', data.value, data.source );\n * } );\n *\n * selectorView.on<ColorSelectorColorPickerShowEvent>( 'colorPicker:show', ( evt ) => {\n * \tconsole.log( 'Color picker showed up', evt );\n * } );\n *\n * selectorView.on<ColorSelectorColorPickerCancelEvent>( 'colorPicker:cancel', ( evt ) => {\n * \tconsole.log( 'Color picker cancel', evt );\n * } );\n *\n * selectorView.render();\n *\n * document.body.appendChild( selectorView.element );\n * ```\n */\nexport class ColorSelectorView extends View {\n\t/**\n\t * Tracks information about the DOM focus in the list.\n\t */\n\tpublic readonly focusTracker: FocusTracker;\n\n\t/**\n\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t */\n\tpublic readonly keystrokes: KeystrokeHandler;\n\n\t/**\n\t * A collection of components.\n\t */\n\tpublic readonly items: ViewCollection;\n\n\t/**\n\t * A fragment that allows users to select colors from the a predefined set and from existing document colors.\n\t */\n\tpublic readonly colorGridsFragmentView: ColorGridsFragmentView;\n\n\t/**\n\t * A fragment that allows users to select a color from a color picker.\n\t */\n\tpublic readonly colorPickerFragmentView: ColorPickerFragmentView;\n\n\t/**\n\t * Keeps the value of the command associated with the component for the current selection.\n\t */\n\tdeclare public selectedColor?: string;\n\n\t/**\n\t * Reflects the visibility state of the color grids fragment.\n\t *\n\t * @internal\n\t */\n\tdeclare public _isColorGridsFragmentVisible: boolean;\n\n\t/**\n\t * Reflects the visibility state of the color picker fragment.\n\t *\n\t * @internal\n\t */\n\tdeclare public _isColorPickerFragmentVisible: boolean;\n\n\t/**\n\t * Helps cycling over focusable {@link #items} in the list.\n\t *\n\t * @readonly\n\t */\n\tprotected _focusCycler: FocusCycler;\n\n\t/**\n\t * A collection of views that can be focused in the view.\n\t *\n\t * @readonly\n\t */\n\tprotected _focusables: ViewCollection<FocusableView>;\n\n\t/**\n\t * The configuration of color picker sub-component.\n\t */\n\tprivate _colorPickerViewConfig: ColorPickerViewConfig | false;\n\n\t/**\n\t * Creates a view to be inserted as a child of {@link module:ui/dropdown/dropdownview~DropdownView}.\n\t *\n\t * @param locale The localization services instance.\n\t * @param options Constructor options.\n\t * @param options.colors An array with definitions of colors to be displayed in the table.\n\t * @param options.columns The number of columns in the color grid.\n\t * @param options.removeButtonLabel The label of the button responsible for removing the color.\n\t * @param options.colorPickerLabel The label of the button responsible for color picker appearing.\n\t * @param options.documentColorsLabel The label for the section with the document colors.\n\t * @param options.documentColorsCount The number of colors in the document colors section inside the color dropdown.\n\t * @param options.colorPickerViewConfig The configuration of color picker feature. If set to `false`, the color picker will be hidden.\n\t */\n\tconstructor(\n\t\tlocale: Locale,\n\t\t{\n\t\t\tcolors,\n\t\t\tcolumns,\n\t\t\tremoveButtonLabel,\n\t\t\tdocumentColorsLabel,\n\t\t\tdocumentColorsCount,\n\t\t\tcolorPickerLabel,\n\t\t\tcolorPickerViewConfig\n\t\t}: {\n\t\t\tcolors: Array<ColorDefinition>;\n\t\t\tcolumns: number;\n\t\t\tremoveButtonLabel: string;\n\t\t\tdocumentColorsLabel?: string;\n\t\t\tdocumentColorsCount?: number;\n\t\t\tcolorPickerLabel: string;\n\t\t\tcolorPickerViewConfig: ColorPickerViewConfig | false;\n\t\t}\n\t) {\n\t\tsuper( locale );\n\t\tthis.items = this.createCollection();\n\n\t\tthis.focusTracker = new FocusTracker();\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\tthis._focusables = new ViewCollection();\n\t\tthis._colorPickerViewConfig = colorPickerViewConfig;\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this._focusables,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate list items backwards using the <kbd>Shift</kbd> + <kbd>Tab</kbd> keystroke.\n\t\t\t\tfocusPrevious: 'shift + tab',\n\n\t\t\t\t// Navigate list items forwards using the <kbd>Tab</kbd> key.\n\t\t\t\tfocusNext: 'tab'\n\t\t\t}\n\t\t} );\n\n\t\tthis.colorGridsFragmentView = new ColorGridsFragmentView( locale, {\n\t\t\tcolors, columns, removeButtonLabel, documentColorsLabel, documentColorsCount, colorPickerLabel,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tfocusables: this._focusables\n\t\t} );\n\n\t\tthis.colorPickerFragmentView = new ColorPickerFragmentView( locale, {\n\t\t\tfocusables: this._focusables,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokes: this.keystrokes,\n\t\t\tcolorPickerViewConfig\n\t\t} );\n\n\t\tthis.set( '_isColorGridsFragmentVisible', true );\n\t\tthis.set( '_isColorPickerFragmentVisible', false );\n\n\t\tthis.set( 'selectedColor', undefined );\n\n\t\tthis.colorGridsFragmentView.bind( 'isVisible' ).to( this, '_isColorGridsFragmentVisible' );\n\t\tthis.colorPickerFragmentView.bind( 'isVisible' ).to( this, '_isColorPickerFragmentVisible' );\n\n\t\t/**\n\t\t * This is kind of bindings. Unfortunately we could not use this.bind() method because the same property\n\t\t * cannot be bound twice. So this is work around how to bind 'selectedColor' property between components.\n\t\t */\n\t\tthis.on( 'change:selectedColor', ( evt, evtName, data ) => {\n\t\t\tthis.colorGridsFragmentView.set( 'selectedColor', data );\n\t\t\tthis.colorPickerFragmentView.set( 'selectedColor', data );\n\t\t} );\n\n\t\tthis.colorGridsFragmentView.on( 'change:selectedColor', ( evt, evtName, data ) => {\n\t\t\tthis.set( 'selectedColor', data );\n\t\t} );\n\n\t\tthis.colorPickerFragmentView.on( 'change:selectedColor', ( evt, evtName, data ) => {\n\t\t\tthis.set( 'selectedColor', data );\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-color-selector'\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: this.items\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element! );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\n\t\tthis.focusTracker.destroy();\n\t\tthis.keystrokes.destroy();\n\t}\n\n\t/**\n\t * Renders the internals of the component on demand:\n\t * * {@link #colorPickerFragmentView},\n\t * * {@link #colorGridsFragmentView}.\n\t *\n\t * It allows for deferring component initialization to improve the performance.\n\t *\n\t * See {@link #showColorPickerFragment}, {@link #showColorGridsFragment}.\n\t */\n\tpublic appendUI(): void {\n\t\tthis._appendColorGridsFragment();\n\n\t\tif ( this._colorPickerViewConfig ) {\n\t\t\tthis._appendColorPickerFragment();\n\t\t}\n\t}\n\n\t/**\n\t * Shows the {@link #colorPickerFragmentView} and hides the {@link #colorGridsFragmentView}.\n\t *\n\t * **Note**: It requires {@link #appendUI} to be called first.\n\t *\n\t * See {@link #showColorGridsFragment}, {@link ~ColorSelectorView#event:colorPicker:show}.\n\t */\n\tpublic showColorPickerFragment(): void {\n\t\tif ( !this.colorPickerFragmentView.colorPickerView || this._isColorPickerFragmentVisible ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isColorPickerFragmentVisible = true;\n\t\tthis.colorPickerFragmentView.focus();\n\t\tthis.colorPickerFragmentView.resetValidationStatus();\n\t\tthis._isColorGridsFragmentVisible = false;\n\t}\n\n\t/**\n\t * Shows the {@link #colorGridsFragmentView} and hides the {@link #colorPickerFragmentView}.\n\t *\n\t * See {@link #showColorPickerFragment}.\n\t *\n\t * **Note**: It requires {@link #appendUI} to be called first.\n\t */\n\tpublic showColorGridsFragment(): void {\n\t\tif ( this._isColorGridsFragmentVisible ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isColorGridsFragmentVisible = true;\n\t\tthis.colorGridsFragmentView.focus();\n\t\tthis._isColorPickerFragmentVisible = false;\n\t}\n\n\t/**\n\t * Focuses the first focusable element in {@link #items}.\n\t */\n\tpublic focus(): void {\n\t\tthis._focusCycler.focusFirst();\n\t}\n\n\t/**\n\t * Focuses the last focusable element in {@link #items}.\n\t */\n\tpublic focusLast(): void {\n\t\tthis._focusCycler.focusLast();\n\t}\n\n\t/**\n\t * Scans through the editor model and searches for text node attributes with the given `attributeName`.\n\t * Found entries are set as document colors in {@link #colorGridsFragmentView}.\n\t *\n\t * All the previously stored document colors will be lost in the process.\n\t *\n\t * @param model The model used as a source to obtain the document colors.\n\t * @param attributeName Determines the name of the related model's attribute for a given dropdown.\n\t */\n\tpublic updateDocumentColors( model: Model, attributeName: string ): void {\n\t\tthis.colorGridsFragmentView.updateDocumentColors( model, attributeName );\n\t}\n\n\t/**\n\t * Refreshes the state of the selected color in one or both grids located in {@link #colorGridsFragmentView}.\n\t *\n\t * It guarantees that the selection will occur only in one of them.\n\t */\n\tpublic updateSelectedColors(): void {\n\t\tthis.colorGridsFragmentView.updateSelectedColors();\n\t}\n\n\t/**\n\t * Appends the view containing static and document color grid views.\n\t */\n\tprivate _appendColorGridsFragment(): void {\n\t\tif ( this.items.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.items.add( this.colorGridsFragmentView );\n\t\tthis.colorGridsFragmentView.delegate( 'execute' ).to( this );\n\t\tthis.colorGridsFragmentView.delegate( 'colorPicker:show' ).to( this );\n\t}\n\n\t/**\n\t * Appends the view with the color picker.\n\t */\n\tprivate _appendColorPickerFragment(): void {\n\t\tif ( this.items.length === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.items.add( this.colorPickerFragmentView );\n\n\t\tif ( this.colorGridsFragmentView.colorPickerButtonView ) {\n\t\t\tthis.colorGridsFragmentView.colorPickerButtonView.on( 'execute', () => {\n\t\t\t\tthis.showColorPickerFragment();\n\t\t\t} );\n\t\t}\n\n\t\tthis.colorGridsFragmentView.addColorPickerButton();\n\t\tthis.colorPickerFragmentView.delegate( 'execute' ).to( this );\n\t\tthis.colorPickerFragmentView.delegate( 'colorPicker:cancel' ).to( this );\n\t}\n}\n\n/**\n * Fired whenever the color was changed. There are multiple sources of this event and you can distinguish them\n * using the `source` property passed along this event.\n *\n * @eventName ~ColorSelectorView#execute\n */\nexport type ColorSelectorExecuteEvent = {\n\tname: 'execute';\n\targs: [ {\n\t\tvalue: string;\n\t\tsource: 'staticColorsGrid' | 'documentColorsGrid' | 'removeColorButton' | 'colorPicker' | 'colorPickerSaveButton';\n\t} ];\n};\n\n/**\n * Fired when the user pressed the \"Cancel\" button in the\n * {@link module:ui/colorselector/colorselectorview~ColorSelectorView#colorPickerFragmentView}.\n *\n * @eventName ~ColorSelectorView#colorPicker:cancel\n */\nexport type ColorSelectorColorPickerCancelEvent = {\n\tname: 'colorPicker:cancel';\n\targs: [];\n};\n\n/**\n * Fired whenever {@link module:ui/colorselector/colorselectorview~ColorSelectorView#colorPickerFragmentView} is shown.\n *\n * See {@link ~ColorSelectorView#showColorPickerFragment}.\n *\n * @eventName ~ColorSelectorView#colorPicker:show\n */\nexport type ColorSelectorColorPickerShowEvent = {\n\tname: 'colorPicker:show';\n\targs: [];\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/componentfactory\n */\n\nimport { CKEditorError, type Locale } from '@ckeditor/ckeditor5-utils';\nimport type { Editor } from '@ckeditor/ckeditor5-core';\n\nimport { type View } from './view.js';\n\n/**\n * A helper class implementing the UI component ({@link module:ui/view~View view}) factory.\n *\n * It allows functions producing specific UI components to be registered under their unique names\n * in the factory. A registered component can be then instantiated by providing its name.\n * Note that the names are case insensitive.\n *\n * ```ts\n * // The editor provides localization tools for the factory.\n * const factory = new ComponentFactory( editor );\n *\n * factory.add( 'foo', locale => new FooView( locale ) );\n * factory.add( 'bar', locale => new BarView( locale ) );\n *\n * // An instance of FooView.\n * const fooInstance = factory.create( 'foo' );\n *\n * // Names are case insensitive so this is also allowed:\n * const barInstance = factory.create( 'Bar' );\n * ```\n *\n * The {@link module:core/editor/editor~Editor#locale editor locale} is passed to the factory\n * function when {@link module:ui/componentfactory~ComponentFactory#create} is called.\n */\nexport class ComponentFactory {\n\t/**\n\t * The editor instance that the factory belongs to.\n\t */\n\tpublic readonly editor: Editor;\n\n\t/**\n\t * Registered component factories.\n\t */\n\tprivate readonly _components = new Map<string, { originalName: string; callback: ( locale: Locale ) => View }>();\n\n\t/**\n\t * Creates an instance of the factory.\n\t *\n\t * @param editor The editor instance.\n\t */\n\tconstructor( editor: Editor ) {\n\t\tthis.editor = editor;\n\t}\n\n\t/**\n\t * Returns an iterator of registered component names. Names are returned in lower case.\n\t */\n\tpublic* names(): IterableIterator<string> {\n\t\tfor ( const value of this._components.values() ) {\n\t\t\tyield value.originalName;\n\t\t}\n\t}\n\n\t/**\n\t * Registers a component factory function that will be used by the\n\t * {@link #create create} method and called with the\n\t * {@link module:core/editor/editor~Editor#locale editor locale} as an argument,\n\t * allowing localization of the {@link module:ui/view~View view}.\n\t *\n\t * @param name The name of the component.\n\t * @param callback The callback that returns the component.\n\t */\n\tpublic add( name: string, callback: ( locale: Locale ) => View ): void {\n\t\tthis._components.set( getNormalized( name ), { callback, originalName: name } );\n\t}\n\n\t/**\n\t * Creates an instance of a component registered in the factory under a specific name.\n\t *\n\t * When called, the {@link module:core/editor/editor~Editor#locale editor locale} is passed to\n\t * the previously {@link #add added} factory function, allowing localization of the\n\t * {@link module:ui/view~View view}.\n\t *\n\t * @param name The name of the component.\n\t * @returns The instantiated component view.\n\t */\n\tpublic create( name: string ): View {\n\t\tif ( !this.has( name ) ) {\n\t\t\t/**\n\t\t\t * The required component is not registered in the component factory. Please make sure\n\t\t\t * the provided name is correct and the component has been correctly\n\t\t\t * {@link module:ui/componentfactory~ComponentFactory#add added} to the factory.\n\t\t\t *\n\t\t\t * @error componentfactory-item-missing\n\t\t\t * @param {string} name The name of the missing component.\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'componentfactory-item-missing',\n\t\t\t\tthis,\n\t\t\t\t{ name }\n\t\t\t);\n\t\t}\n\n\t\treturn this._components.get( getNormalized( name ) )!.callback( this.editor.locale );\n\t}\n\n\t/**\n\t * Checks if a component of a given name is registered in the factory.\n\t *\n\t * @param name The name of the component.\n\t */\n\tpublic has( name: string ): boolean {\n\t\treturn this._components.has( getNormalized( name ) );\n\t}\n}\n\n/**\n * Ensures that the component name used as the key in the internal map is in lower case.\n */\nfunction getNormalized( name: unknown ) {\n\treturn String( name ).toLowerCase();\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/tooltipmanager\n */\n\nimport { View } from './view.js';\nimport { BalloonPanelView } from './panel/balloon/balloonpanelview.js';\nimport type { EditorUIUpdateEvent } from './editorui/editorui.js';\n\nimport {\n\tDomEmitterMixin,\n\tfirst,\n\tglobal,\n\tisVisible,\n\ttype EventInfo,\n\ttype PositioningFunction\n} from '@ckeditor/ckeditor5-utils';\n\nimport type { Editor } from '@ckeditor/ckeditor5-core';\n\nimport { isElement, debounce, type DebouncedFunc } from 'es-toolkit/compat';\n\nimport '../theme/components/tooltip/tooltip.css';\n\nconst BALLOON_CLASS = 'ck-tooltip';\n\n/**\n * A tooltip manager class for the UI of the editor.\n *\n * **Note**: Most likely you do not have to use the `TooltipManager` API listed below in order to display tooltips. Popular\n * {@glink framework/architecture/ui-library UI components} support tooltips out-of-the-box via observable properties\n * (see {@link module:ui/button/buttonview~ButtonView#tooltip} and {@link module:ui/button/buttonview~ButtonView#tooltipPosition}).\n *\n * # Displaying tooltips\n *\n * To display a tooltip, set `data-cke-tooltip-text` attribute on any DOM element:\n *\n * ```ts\n * domElement.dataset.ckeTooltipText = 'My tooltip';\n * ```\n *\n * The tooltip will show up whenever the user moves the mouse over the element or the element gets focus in DOM.\n *\n * # Positioning tooltips\n *\n * To change the position of the tooltip, use the `data-cke-tooltip-position` attribute (`s`, `se`, `sw`, `n`, `e`, or `w`):\n *\n * ```ts\n * domElement.dataset.ckeTooltipText = 'Tooltip to the north';\n * domElement.dataset.ckeTooltipPosition = 'n';\n * ```\n *\n * # Disabling tooltips\n *\n * In order to disable the tooltip temporarily, use the `data-cke-tooltip-disabled` attribute:\n *\n * ```ts\n * domElement.dataset.ckeTooltipText = 'Disabled. For now.';\n * domElement.dataset.ckeTooltipDisabled = 'true';\n * ```\n *\n * # Instant tooltips\n *\n * To remove the delay before showing or hiding the tooltip, use the `data-cke-tooltip-instant` attribute:\n *\n * ```ts\n * domElement.dataset.ckeTooltipInstant = 'true';\n * ```\n *\n * # Styling tooltips\n *\n * By default, the tooltip has `.ck-tooltip` class and its text inner `.ck-tooltip__text`.\n *\n * If your tooltip requires custom styling, using `data-cke-tooltip-class` attribute will add additional class to the balloon\n * displaying the tooltip:\n *\n * ```ts\n * domElement.dataset.ckeTooltipText = 'Tooltip with a red text';\n * domElement.dataset.ckeTooltipClass = 'my-class';\n * ```\n *\n * ```css\n * .ck.ck-tooltip.my-class { color: red }\n * ```\n *\n * **Note**: This class is a singleton. All editor instances re-use the same instance loaded by\n * {@link module:ui/editorui/editorui~EditorUI} of the first editor.\n */\nexport class TooltipManager extends /* #__PURE__ */ DomEmitterMixin() {\n\t/**\n\t * The view rendering text of the tooltip.\n\t */\n\tpublic readonly tooltipTextView!: View & { text: string };\n\n\t/**\n\t * The instance of the balloon panel that renders and positions the tooltip.\n\t */\n\tpublic readonly balloonPanelView!: BalloonPanelView;\n\n\t/**\n\t * A set of default {@link module:utils/dom/position~PositioningFunction positioning functions} used by the `TooltipManager`\n\t * to pin tooltips in different positions.\n\t */\n\tpublic static defaultBalloonPositions = /* #__PURE__ */ BalloonPanelView.generatePositions( {\n\t\theightOffset: 5,\n\t\tsideOffset: 13\n\t} );\n\n\t/**\n\t * Stores the reference to the DOM element the tooltip is attached to. `null` when there's no tooltip\n\t * in the UI.\n\t */\n\tprivate _currentElementWithTooltip: HTMLElement | null = null;\n\n\t/**\n\t * Stores the current tooltip position. `null` when there's no tooltip in the UI.\n\t */\n\tprivate _currentTooltipPosition: TooltipPosition | null = null;\n\n\t/**\n\t * An instance of the mutation observer that keeps track on target element attributes changes.\n\t */\n\tprivate _mutationObserver: MutationObserverWrapper | null = null;\n\n\t/**\n\t * A debounced version of {@link #_pinTooltip}. Tooltips show with a delay to avoid flashing and\n\t * to improve the UX.\n\t */\n\tprivate _pinTooltipDebounced!: DebouncedFunc<( targetDomElement: HTMLElement, data: TooltipData ) => void>;\n\n\t/**\n\t * A debounced version of {@link #_unpinTooltip}. Tooltips hide with a delay to allow hovering of their titles.\n\t */\n\tprivate _unpinTooltipDebounced!: DebouncedFunc<VoidFunction>;\n\n\tprivate readonly _watchdogExcluded!: true;\n\n\t/**\n\t * A set of editors the single tooltip manager instance must listen to.\n\t * This is mostly to handle `EditorUI#update` listeners from individual editors.\n\t */\n\tprivate static _editors = new Set<Editor>();\n\n\t/**\n\t * A reference to the `TooltipManager` instance. The class is a singleton and as such,\n\t * successive attempts at creating instances should return this instance.\n\t */\n\tprivate static _instance: TooltipManager | null = null;\n\n\t/**\n\t * Creates an instance of the tooltip manager.\n\t */\n\tconstructor( editor: Editor ) {\n\t\tsuper();\n\n\t\tTooltipManager._editors.add( editor );\n\n\t\t// TooltipManager must be a singleton. Multiple instances would mean multiple tooltips attached\n\t\t// to the same DOM element with data-cke-tooltip-* attributes.\n\t\tif ( TooltipManager._instance ) {\n\t\t\treturn TooltipManager._instance;\n\t\t}\n\n\t\tTooltipManager._instance = this;\n\n\t\tthis.tooltipTextView = new View( editor.locale ) as any;\n\t\tthis.tooltipTextView.set( 'text', '' );\n\t\tthis.tooltipTextView.setTemplate( {\n\t\t\ttag: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-tooltip__text'\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttext: this.tooltipTextView.bindTemplate.to( 'text' )\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\tthis.balloonPanelView = new BalloonPanelView( editor.locale );\n\t\tthis.balloonPanelView.class = BALLOON_CLASS;\n\t\tthis.balloonPanelView.content.add( this.tooltipTextView );\n\n\t\tthis._mutationObserver = createMutationObserver( () => {\n\t\t\tthis._updateTooltipPosition();\n\t\t} );\n\n\t\tthis._pinTooltipDebounced = debounce( this._pinTooltip, 600 );\n\t\tthis._unpinTooltipDebounced = debounce( this._unpinTooltip, 400 );\n\n\t\tthis.listenTo( global.document, 'keydown', this._onKeyDown.bind( this ), { useCapture: true } );\n\t\tthis.listenTo( global.document, 'mouseenter', this._onEnterOrFocus.bind( this ), { useCapture: true } );\n\t\tthis.listenTo( global.document, 'mouseleave', this._onLeaveOrBlur.bind( this ), { useCapture: true } );\n\n\t\tthis.listenTo( global.document, 'focus', this._onEnterOrFocus.bind( this ), { useCapture: true } );\n\t\tthis.listenTo( global.document, 'blur', this._onLeaveOrBlur.bind( this ), { useCapture: true } );\n\n\t\tthis.listenTo( global.document, 'scroll', this._onScroll.bind( this ), { useCapture: true } );\n\n\t\t// Because this class is a singleton, its only instance is shared across all editors and connects them through the reference.\n\t\t// This causes issues with the ContextWatchdog. When an error is thrown in one editor, the watchdog traverses the references\n\t\t// and (because of shared tooltip manager) figures that the error affects all editors and restarts them all.\n\t\t// This flag, excludes tooltip manager instance from the traversal and brings ContextWatchdog back to normal.\n\t\t// More in https://github.com/ckeditor/ckeditor5/issues/12292.\n\t\tthis._watchdogExcluded = true;\n\t}\n\n\t/**\n\t * Destroys the tooltip manager.\n\t *\n\t * **Note**: The manager singleton cannot be destroyed until all editors that use it are destroyed.\n\t *\n\t * @param editor The editor the manager was created for.\n\t */\n\tpublic destroy( editor: Editor ): void {\n\t\tconst editorBodyViewCollection = editor.ui.view && editor.ui.view.body;\n\n\t\tTooltipManager._editors.delete( editor );\n\t\tthis.stopListening( editor.ui );\n\n\t\t// Prevent the balloon panel from being destroyed in the EditorUI#destroy() cascade. It should be destroyed along\n\t\t// with the last editor only (https://github.com/ckeditor/ckeditor5/issues/12602).\n\t\tif ( editorBodyViewCollection && editorBodyViewCollection.has( this.balloonPanelView ) ) {\n\t\t\teditorBodyViewCollection.remove( this.balloonPanelView );\n\t\t}\n\n\t\tif ( !TooltipManager._editors.size ) {\n\t\t\tthis._unpinTooltip();\n\t\t\tthis.balloonPanelView.destroy();\n\t\t\tthis.stopListening();\n\n\t\t\tTooltipManager._instance = null;\n\t\t}\n\t}\n\n\t/**\n\t * Returns {@link #balloonPanelView} {@link module:utils/dom/position~PositioningFunction positioning functions} for a given position\n\t * name.\n\t *\n\t * @param position Name of the position (`s`, `se`, `sw`, `n`, `e`, or `w`).\n\t * @returns Positioning functions to be used by the {@link #balloonPanelView}.\n\t */\n\tpublic static getPositioningFunctions( position: TooltipPosition ): Array<PositioningFunction> {\n\t\tconst defaultPositions = TooltipManager.defaultBalloonPositions;\n\n\t\treturn {\n\t\t\t// South is most popular. We can use positioning heuristics to avoid clipping by the viewport with the sane fallback.\n\t\t\ts: [\n\t\t\t\tdefaultPositions.southArrowNorth,\n\t\t\t\tdefaultPositions.southArrowNorthEast,\n\t\t\t\tdefaultPositions.southArrowNorthWest\n\t\t\t],\n\t\t\tn: [ defaultPositions.northArrowSouth ],\n\t\t\te: [ defaultPositions.eastArrowWest ],\n\t\t\tw: [ defaultPositions.westArrowEast ],\n\t\t\tsw: [ defaultPositions.southArrowNorthEast ],\n\t\t\tse: [ defaultPositions.southArrowNorthWest ]\n\t\t}[ position ];\n\t}\n\n\t/**\n\t * Handles hiding tooltips on `keydown` in DOM.\n\t *\n\t * @param evt An object containing information about the fired event.\n\t * @param domEvent The DOM event.\n\t */\n\tprivate _onKeyDown( evt: EventInfo, domEvent: KeyboardEvent ) {\n\t\tif ( domEvent.key === 'Escape' && this._currentElementWithTooltip ) {\n\t\t\tthis._unpinTooltip();\n\t\t\tdomEvent.stopPropagation();\n\t\t}\n\t}\n\n\t/**\n\t * Handles displaying tooltips on `mouseenter` and `focus` in DOM.\n\t *\n\t * @param evt An object containing information about the fired event.\n\t * @param domEvent The DOM event.\n\t */\n\tprivate _onEnterOrFocus( evt: EventInfo, { target }: any ) {\n\t\tconst elementWithTooltipAttribute = getDescendantWithTooltip( target );\n\n\t\t// Abort when there's no descendant needing tooltip.\n\t\tif ( !elementWithTooltipAttribute ) {\n\t\t\t// Unpin if element is focused, regardless of whether it contains a label or not.\n\t\t\t// It also prevents tooltips from overlapping the menu bar\n\t\t\tif ( evt.name === 'focus' ) {\n\t\t\t\tthis._unpinTooltip();\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Abort to avoid flashing when, for instance:\n\t\t// * a tooltip is displayed for a focused element, then the same element gets mouseentered,\n\t\t// * a tooltip is displayed for an element via mouseenter, then the focus moves to the same element.\n\t\tif ( elementWithTooltipAttribute === this._currentElementWithTooltip ) {\n\t\t\tthis._unpinTooltipDebounced.cancel();\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis._unpinTooltip();\n\n\t\t// The tooltip should be pinned immediately when the element gets focused using keyboard.\n\t\t// If it is focused using the mouse, the tooltip should be pinned after a delay to prevent flashing.\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/16383\n\t\t// Also, if the element has an attribute `data-cke-tooltip-instant`, the tooltip should be pinned immediately.\n\t\t// This is useful for elements that have their content partially hidden (e.g. a long text in a small container)\n\t\t// and should show a tooltip on hover, like merge field.\n\t\tif (\n\t\t\tevt.name === 'focus' && !elementWithTooltipAttribute.matches( ':hover' ) ||\n\t\t\telementWithTooltipAttribute.matches( '[data-cke-tooltip-instant]' )\n\t\t) {\n\t\t\tthis._pinTooltip( elementWithTooltipAttribute, getTooltipData( elementWithTooltipAttribute ) );\n\t\t} else {\n\t\t\tthis._pinTooltipDebounced( elementWithTooltipAttribute, getTooltipData( elementWithTooltipAttribute ) );\n\t\t}\n\t}\n\n\t/**\n\t * Handles hiding tooltips on `mouseleave` and `blur` in DOM.\n\t *\n\t * @param evt An object containing information about the fired event.\n\t * @param domEvent The DOM event.\n\t */\n\tprivate _onLeaveOrBlur( evt: EventInfo, { target, relatedTarget }: any ) {\n\t\tif ( evt.name === 'mouseleave' ) {\n\t\t\t// Don't act when the event does not concern a DOM element (e.g. a mouseleave out of an entire document),\n\t\t\tif ( !isElement( target ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst balloonElement = this.balloonPanelView.element;\n\t\t\tconst isEnteringBalloon = balloonElement && ( balloonElement === relatedTarget || balloonElement.contains( relatedTarget ) );\n\t\t\tconst isLeavingBalloon = !isEnteringBalloon && target === balloonElement;\n\n\t\t\t// Do not hide the tooltip when the user moves the cursor over it.\n\t\t\tif ( isEnteringBalloon ) {\n\t\t\t\tthis._unpinTooltipDebounced.cancel();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a tooltip is currently visible, don't act for a targets other than the one it is attached to.\n\t\t\t// The only exception is leaving balloon, in this scenario tooltip should be closed.\n\t\t\t// For instance, a random mouseleave far away in the page should not unpin the tooltip that was pinned because\n\t\t\t// of a previous focus. Only leaving the same element should hide the tooltip.\n\t\t\tif ( !isLeavingBalloon && this._currentElementWithTooltip && target !== this._currentElementWithTooltip ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst descendantWithTooltip = getDescendantWithTooltip( target );\n\t\t\tconst relatedDescendantWithTooltip = getDescendantWithTooltip( relatedTarget );\n\n\t\t\t// Unpin when the mouse was leaving element with a tooltip to a place which does not have or has a different tooltip.\n\t\t\t// Note that this should happen whether the tooltip is already visible or not, for instance,\n\t\t\t// it could be invisible but queued (debounced): it should get canceled.\n\t\t\tif ( isLeavingBalloon || ( descendantWithTooltip && descendantWithTooltip !== relatedDescendantWithTooltip ) ) {\n\t\t\t\tthis._pinTooltipDebounced.cancel();\n\n\t\t\t\t// If the currently visible tooltip is instant, unpin it immediately.\n\t\t\t\tif (\n\t\t\t\t\tthis._currentElementWithTooltip && this._currentElementWithTooltip.matches( '[data-cke-tooltip-instant]' ) ||\n\t\t\t\t\tdescendantWithTooltip && descendantWithTooltip.matches( '[data-cke-tooltip-instant]' )\n\t\t\t\t) {\n\t\t\t\t\tthis._unpinTooltip();\n\t\t\t\t} else {\n\t\t\t\t\tthis._unpinTooltipDebounced();\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// If a tooltip is currently visible, don't act for a targets other than the one it is attached to.\n\t\t\t// For instance, a random blur in the web page should not unpin the tooltip that was pinned because of a previous mouseenter.\n\t\t\tif ( this._currentElementWithTooltip && target !== this._currentElementWithTooltip ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Note that unpinning should happen whether the tooltip is already visible or not, for instance, it could be invisible but\n\t\t\t// queued (debounced): it should get canceled (e.g. quick focus then quick blur using the keyboard).\n\t\t\tthis._pinTooltipDebounced.cancel();\n\t\t\tthis._unpinTooltipDebounced();\n\t\t}\n\t}\n\n\t/**\n\t * Handles hiding tooltips on `scroll` in DOM.\n\t *\n\t * @param evt An object containing information about the fired event.\n\t * @param domEvent The DOM event.\n\t */\n\tprivate _onScroll( evt: unknown, { target }: any ) {\n\t\t// No tooltip, no reason to react on scroll.\n\t\tif ( !this._currentElementWithTooltip ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// When scrolling a container that has both the balloon and the current element (common ancestor), the balloon can remain\n\t\t// visible (e.g. scrolling ≤body>). Otherwise, to avoid glitches (clipping, lagging) better just hide the tooltip.\n\t\t// Also, don't do anything when scrolling an unrelated DOM element that has nothing to do with the current element and the balloon.\n\t\tif ( target.contains( this.balloonPanelView.element ) && target.contains( this._currentElementWithTooltip ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._unpinTooltip();\n\t}\n\n\t/**\n\t * Pins the tooltip to a specific DOM element.\n\t *\n\t * @param targetDomElement Element to be pinned to.\n\t * @param options Options for the tooltip.\n\t * @param options.text Text of the tooltip to display.\n\t * @param options.position The position of the tooltip.\n\t * @param options.cssClass Additional CSS class of the balloon with the tooltip.\n\t */\n\tprivate _pinTooltip(\n\t\ttargetDomElement: HTMLElement,\n\t\t{ text, position, cssClass }: TooltipData\n\t): void {\n\t\tthis._unpinTooltip();\n\n\t\t// Use the body collection of the first editor.\n\t\tconst bodyViewCollection = first( TooltipManager._editors.values() )!.ui.view.body;\n\n\t\tif ( !bodyViewCollection.has( this.balloonPanelView ) ) {\n\t\t\tbodyViewCollection.add( this.balloonPanelView );\n\t\t}\n\n\t\tthis.tooltipTextView.text = text;\n\n\t\tthis.balloonPanelView.class = [ BALLOON_CLASS, cssClass ]\n\t\t\t.filter( className => className )\n\t\t\t.join( ' ' );\n\n\t\t// Ensure that all changes to the tooltip are set before pinning it.\n\t\t// Setting class or text after pinning can cause the tooltip to be pinned in the wrong position.\n\t\t// It happens especially often when tooltip has class modified (like adding `ck-tooltip_multi-line`).\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/16365\n\t\tthis.balloonPanelView.pin( {\n\t\t\ttarget: targetDomElement,\n\t\t\tpositions: TooltipManager.getPositioningFunctions( position )\n\t\t} );\n\n\t\tthis._mutationObserver!.attach( targetDomElement );\n\n\t\t// Start responding to changes in editor UI or content layout. For instance, when collaborators change content\n\t\t// and a contextual toolbar attached to a content starts to move (and so should move the tooltip).\n\t\t// Note: Using low priority to let other listeners that position contextual toolbars etc. to react first.\n\t\tfor ( const editor of TooltipManager._editors ) {\n\t\t\tthis.listenTo<EditorUIUpdateEvent>( editor.ui, 'update', this._updateTooltipPosition.bind( this ), { priority: 'low' } );\n\t\t}\n\n\t\tthis._currentElementWithTooltip = targetDomElement;\n\t\tthis._currentTooltipPosition = position;\n\t}\n\n\t/**\n\t * Unpins the tooltip and cancels all queued pinning.\n\t */\n\tprivate _unpinTooltip() {\n\t\tthis._unpinTooltipDebounced.cancel();\n\t\tthis._pinTooltipDebounced.cancel();\n\n\t\tthis.balloonPanelView.unpin();\n\n\t\tfor ( const editor of TooltipManager._editors ) {\n\t\t\tthis.stopListening( editor.ui, 'update' );\n\t\t}\n\n\t\tthis._currentElementWithTooltip = null;\n\t\tthis._currentTooltipPosition = null;\n\t\tthis.tooltipTextView.text = '';\n\n\t\tthis._mutationObserver!.detach();\n\t}\n\n\t/**\n\t * Updates the position of the tooltip so it stays in sync with the element it is pinned to.\n\t *\n\t * Hides the tooltip when the element is no longer visible in DOM or the tooltip text was removed.\n\t */\n\tprivate _updateTooltipPosition() {\n\t\t// The tooltip might get removed by focus listener triggered by the same UI `update` event.\n\t\t// See https://github.com/ckeditor/ckeditor5/pull/16363.\n\t\tif ( !this._currentElementWithTooltip ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst tooltipData = getTooltipData( this._currentElementWithTooltip );\n\n\t\t// This could happen if the tooltip was attached somewhere in a contextual content toolbar and the toolbar\n\t\t// disappeared (e.g. removed an image), or the tooltip text was removed.\n\t\tif ( !isVisible( this._currentElementWithTooltip ) || !tooltipData.text ) {\n\t\t\tthis._unpinTooltip();\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.balloonPanelView.pin( {\n\t\t\ttarget: this._currentElementWithTooltip,\n\t\t\tpositions: TooltipManager.getPositioningFunctions( tooltipData.position )\n\t\t} );\n\t}\n}\n\nexport type TooltipPosition = 's' | 'n' | 'e' | 'w' | 'sw' | 'se';\n\nfunction getDescendantWithTooltip( element: HTMLElement ) {\n\tif ( !isElement( element ) ) {\n\t\treturn null;\n\t}\n\n\treturn element.closest( '[data-cke-tooltip-text]:not([data-cke-tooltip-disabled])' ) as HTMLElement;\n}\n\ninterface TooltipData {\n\ttext: string;\n\tposition: TooltipPosition;\n\tcssClass: string;\n}\n\nfunction getTooltipData( element: HTMLElement ): TooltipData {\n\treturn {\n\t\ttext: element.dataset.ckeTooltipText!,\n\t\tposition: ( element.dataset.ckeTooltipPosition || 's' ) as TooltipPosition,\n\t\tcssClass: element.dataset.ckeTooltipClass || ''\n\t};\n}\n\n// Creates a simple `MutationObserver` instance wrapper that observes changes in the tooltip-related attributes of the given element.\n// Used instead of the `MutationObserver` from the engine for simplicity.\nfunction createMutationObserver( callback: ( ...args: Array<any> ) => unknown ): MutationObserverWrapper {\n\tconst mutationObserver = new MutationObserver( () => {\n\t\tcallback();\n\t} );\n\n\treturn {\n\t\tattach( element ) {\n\t\t\tmutationObserver.observe( element, {\n\t\t\t\tattributes: true,\n\t\t\t\tattributeFilter: [ 'data-cke-tooltip-text', 'data-cke-tooltip-position' ]\n\t\t\t} );\n\t\t},\n\n\t\tdetach() {\n\t\t\tmutationObserver.disconnect();\n\t\t}\n\t};\n}\n\ninterface MutationObserverWrapper {\n\tattach: ( element: Node ) => void;\n\tdetach: () => void;\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/editorui/evaluationbadge\n */\n\nimport type { Editor } from '@ckeditor/ckeditor5-core';\nimport { parseBase64EncodedObject, type Locale } from '@ckeditor/ckeditor5-utils';\n\nimport { View } from '../view.js';\nimport { Badge, type BadgeConfig } from '../badge/badge.js';\n\n/**\n * A helper that enables the \"evaluation badge\" feature in the editor at the bottom of the editable element\n * (editor root, source editing area, etc.) when the editor is focused.\n *\n * @private\n */\nexport class EvaluationBadge extends Badge {\n\tprivate licenseTypeMessage: Record<string, string> = {\n\t\tevaluation: 'For evaluation purposes only',\n\t\ttrial: 'For evaluation purposes only',\n\t\tdevelopment: 'For development purposes only'\n\t};\n\n\tconstructor( editor: Editor ) {\n\t\tsuper( editor, { balloonClass: 'ck-evaluation-badge-balloon' } );\n\t}\n\n\t/**\n\t * Enables \"evaluation badge\" label.\n\t */\n\tprotected override _isEnabled(): boolean {\n\t\tconst editor = this.editor;\n\t\tconst licenseKey = editor.config.get( 'licenseKey' )!;\n\t\tconst licenseType = getLicenseTypeFromLicenseKey( licenseKey );\n\n\t\treturn Boolean( licenseType && this.licenseTypeMessage[ licenseType ] );\n\t}\n\n\t/**\n\t * Creates the content of the \"evaluation badge\".\n\t */\n\tprotected override _createBadgeContent(): View<HTMLElement> {\n\t\tconst licenseKey = this.editor.config.get( 'licenseKey' )!;\n\t\tconst licenseType = getLicenseTypeFromLicenseKey( licenseKey )!;\n\n\t\treturn new EvaluationBadgeView( this.editor.locale, this.licenseTypeMessage[ licenseType ] );\n\t}\n\n\t/**\n\t * Returns the normalized configuration for the \"evaluation badge\".\n\t * It takes 'ui.poweredBy' configuration into account to determine the badge position and side.\n\t */\n\tprotected override _getNormalizedConfig(): BadgeConfig {\n\t\tconst badgeConfig = super._getNormalizedConfig();\n\t\tconst userConfig = this.editor.config.get( 'ui.poweredBy' ) || {};\n\t\tconst position = userConfig.position || badgeConfig.position;\n\t\tconst poweredBySide = userConfig.side || badgeConfig.side;\n\n\t\treturn {\n\t\t\tposition,\n\t\t\tside: poweredBySide === 'left' ? 'right' : 'left',\n\t\t\tverticalOffset: badgeConfig.verticalOffset,\n\t\t\thorizontalOffset: badgeConfig.horizontalOffset\n\t\t};\n\t}\n}\n\n/**\n * A view displaying the \"evaluation badge\".\n */\nclass EvaluationBadgeView extends View<HTMLDivElement> {\n\t/**\n\t * Creates an instance of the \"evaluation badge\" view.\n\t *\n\t * @param locale The localization services instance.\n\t * @param label The label text.\n\t */\n\tconstructor( locale: Locale, label: string ) {\n\t\tsuper( locale );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [ 'ck', 'ck-evaluation-badge' ],\n\t\t\t\t'aria-hidden': true\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'span',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [ 'ck', 'ck-evaluation-badge__label' ]\n\t\t\t\t\t},\n\t\t\t\t\tchildren: [ label ]\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n}\n\n/**\n * Returns the license type based on the license key.\n */\nfunction getLicenseTypeFromLicenseKey( licenseKey: string ): string | null {\n\tif ( licenseKey == 'GPL' ) {\n\t\treturn 'GPL';\n\t}\n\n\tconst licenseContent = parseBase64EncodedObject( licenseKey.split( '.' )[ 1 ] );\n\n\tif ( !licenseContent ) {\n\t\treturn null;\n\t}\n\n\treturn licenseContent.licenseType || 'production';\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/menubar/menubarmenulistitemview\n */\n\nimport type { Locale } from '@ckeditor/ckeditor5-utils';\nimport { ListItemView } from '../list/listitemview.js';\nimport { type MenuBarMenuView } from './menubarmenuview.js';\n\nimport '../../theme/components/menubar/menubarmenulistitem.css';\n\n/**\n * A menu bar list item view, a child of {@link module:ui/menubar/menubarmenulistview~MenuBarMenuListView}.\n *\n * Populate this item with a {@link module:ui/menubar/menubarmenulistitembuttonview~MenuBarMenuListItemButtonView} instance\n * or a {@link module:ui/menubar/menubarmenuview~MenuBarMenuView} instance to create a sub-menu.\n */\nexport class MenuBarMenuListItemView extends ListItemView {\n\t/**\n\t * Creates an instance of the list item view.\n\t *\n\t * @param locale The localization services instance.\n\t */\n\tconstructor( locale: Locale, parentMenuView: MenuBarMenuView ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-menu-bar__menu__item'\n\t\t\t\t]\n\t\t\t},\n\t\t\ton: {\n\t\t\t\t'mouseenter': bind.to( 'mouseenter' )\n\t\t\t}\n\t\t} );\n\n\t\tthis.delegate( 'mouseenter' ).to( parentMenuView );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/menubar/utils\n */\n\nimport { MenuBarMenuListItemView } from './menubarmenulistitemview.js';\nimport { type MenuBarMenuView } from './menubarmenuview.js';\nimport type {\n\tMenuBarView,\n\tMenuBarConfig,\n\tMenuBarMenuMouseEnterEvent,\n\tMenuBarMenuChangeIsOpenEvent,\n\tMenuBarMenuArrowRightEvent,\n\tMenuBarMenuArrowLeftEvent,\n\tMenuBarMenuDefinition,\n\tMenuBarConfigObject,\n\tMenuBarConfigAddedGroup,\n\tMenuBarConfigAddedMenu,\n\tMenuBarConfigAddedPosition,\n\tNormalizedMenuBarConfigObject,\n\tMenuBarConfigAddedItem\n} from './menubarview.js';\nimport { clickOutsideHandler } from '../bindings/clickoutsidehandler.js';\nimport type { ButtonExecuteEvent } from '../button/button.js';\nimport { type ComponentFactory } from '../componentfactory.js';\nimport type { FocusableView } from '../focuscycler.js';\nimport {\n\tlogWarning,\n\ttype Locale,\n\ttype ObservableChangeEvent,\n\ttype PositioningFunction\n} from '@ckeditor/ckeditor5-utils';\nimport { cloneDeep } from 'es-toolkit/compat';\n\nconst NESTED_PANEL_HORIZONTAL_OFFSET = 5;\n\n/**\n * Behaviors of the {@link module:ui/menubar/menubarview~MenuBarView} component.\n * @internal\n */\nexport const MenuBarBehaviors = {\n\t/**\n\t * When the bar is already open:\n\t * * Opens the menu when the user hovers over its button.\n\t * * Closes open menu when another menu's button gets hovered.\n\t */\n\ttoggleMenusAndFocusItemsOnHover( menuBarView: MenuBarView ): void {\n\t\tmenuBarView.on<MenuBarMenuMouseEnterEvent>( 'menu:mouseenter', evt => {\n\t\t\t// This behavior should be activated when one of condition is present:\n\t\t\t// 1. The user opened any submenu of menubar and hover over items in the menu bar.\n\t\t\t// 2. The user focused whole menubar using keyboard interaction and enabled focus borders and hover over items in the menu bar.\n\t\t\tif ( !menuBarView.isFocusBorderEnabled && !menuBarView.isOpen ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( menuBarView.isOpen ) {\n\t\t\t\tfor ( const menuView of menuBarView.menus ) {\n\t\t\t\t\t// @if CK_DEBUG_MENU_BAR // const wasOpen = menuView.isOpen;\n\n\t\t\t\t\tconst pathLeaf = evt.path[ 0 ];\n\t\t\t\t\tconst isListItemContainingMenu = pathLeaf instanceof MenuBarMenuListItemView && pathLeaf.children.first === menuView;\n\n\t\t\t\t\tmenuView.isOpen = ( evt.path.includes( menuView ) || isListItemContainingMenu ) && menuView.isEnabled;\n\n\t\t\t\t\t// @if CK_DEBUG_MENU_BAR // if ( wasOpen !== menuView.isOpen ) {\n\t\t\t\t\t// @if CK_DEBUG_MENU_BAR // console.log( '[BEHAVIOR] toggleMenusAndFocusItemsOnHover(): Toggle',\n\t\t\t\t\t// @if CK_DEBUG_MENU_BAR // \tlogMenu( menuView ), 'isOpen', menuView.isOpen\n\t\t\t\t\t// @if CK_DEBUG_MENU_BAR // );\n\t\t\t\t\t// @if CK_DEBUG_MENU_BAR // }\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t( evt.source as FocusableView ).focus();\n\t\t} );\n\t},\n\n\t/**\n\t * Moves between top-level menus using the arrow left and right keys.\n\t *\n\t * If the menubar has already been open, the arrow keys move focus between top-level menu buttons and open them.\n\t * If the menubar is closed, the arrow keys only move focus between top-level menu buttons.\n\t */\n\tfocusCycleMenusOnArrows( menuBarView: MenuBarView ): void {\n\t\tconst isContentRTL = menuBarView.locale!.uiLanguageDirection === 'rtl';\n\n\t\tmenuBarView.on<MenuBarMenuArrowRightEvent>( 'menu:arrowright', evt => {\n\t\t\tcycleTopLevelMenus( evt.source as MenuBarMenuView, isContentRTL ? -1 : 1 );\n\t\t} );\n\n\t\tmenuBarView.on<MenuBarMenuArrowLeftEvent>( 'menu:arrowleft', evt => {\n\t\t\tcycleTopLevelMenus( evt.source as MenuBarMenuView, isContentRTL ? 1 : -1 );\n\t\t} );\n\n\t\tfunction cycleTopLevelMenus( currentMenuView: MenuBarMenuView, step: number ) {\n\t\t\tconst currentIndex = menuBarView.children.getIndex( currentMenuView );\n\t\t\tconst isCurrentMenuViewOpen = currentMenuView.isOpen;\n\t\t\tconst menusCount = menuBarView.children.length;\n\t\t\tconst menuViewToOpen = menuBarView.children.get( ( currentIndex + menusCount + step ) % menusCount )!;\n\n\t\t\tcurrentMenuView.isOpen = false;\n\n\t\t\tif ( isCurrentMenuViewOpen ) {\n\t\t\t\tmenuViewToOpen.isOpen = true;\n\t\t\t}\n\n\t\t\tmenuViewToOpen.buttonView.focus();\n\t\t}\n\t},\n\n\t/**\n\t * Closes the entire sub-menu structure when the bar is closed. This prevents sub-menus from being open if the user\n\t * closes the entire bar, and then re-opens some top-level menu.\n\t */\n\tcloseMenusWhenTheBarCloses( menuBarView: MenuBarView ): void {\n\t\tmenuBarView.on<ObservableChangeEvent<boolean>>( 'change:isOpen', () => {\n\t\t\tif ( !menuBarView.isOpen ) {\n\t\t\t\tmenuBarView.menus.forEach( menuView => {\n\t\t\t\t\tmenuView.isOpen = false;\n\n\t\t\t\t\t// @if CK_DEBUG_MENU_BAR // console.log( '[BEHAVIOR] closeMenusWhenTheBarCloses(): Closing', logMenu( menuView ) );\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\t/**\n\t * Handles the following case:\n\t * 1. Hover to open a sub-menu (A). The button has focus.\n\t * 2. Press arrow up/down to move focus to another sub-menu (B) button.\n\t * 3. Press arrow right to open the sub-menu (B).\n\t * 4. The sub-menu (A) should close as it would with `toggleMenusAndFocusItemsOnHover()`.\n\t */\n\tcloseMenuWhenAnotherOnTheSameLevelOpens( menuBarView: MenuBarView ): void {\n\t\tmenuBarView.on<MenuBarMenuChangeIsOpenEvent>( 'menu:change:isOpen', ( evt, name, isOpen ) => {\n\t\t\tif ( isOpen ) {\n\t\t\t\tmenuBarView.menus\n\t\t\t\t\t.filter( menuView => {\n\t\t\t\t\t\treturn ( evt.source as any ).parentMenuView === menuView.parentMenuView &&\n\t\t\t\t\t\t\tevt.source !== menuView &&\n\t\t\t\t\t\t\tmenuView.isOpen;\n\t\t\t\t\t} ).forEach( menuView => {\n\t\t\t\t\t\tmenuView.isOpen = false;\n\n\t\t\t\t\t\t// @if CK_DEBUG_MENU_BAR // console.log( '[BEHAVIOR] closeMenuWhenAnotherOpens(): Closing', logMenu( menuView ) );\n\t\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\t/**\n\t * Closes the bar when the user clicked outside of it (page body, editor root, etc.).\n\t */\n\tcloseOnClickOutside( menuBarView: MenuBarView ): void {\n\t\tclickOutsideHandler( {\n\t\t\temitter: menuBarView,\n\t\t\tactivator: () => menuBarView.isOpen,\n\t\t\tcallback: () => menuBarView.close(),\n\t\t\tcontextElements: () => menuBarView.children.map( child => child.element! )\n\t\t} );\n\t},\n\n\t/**\n\t * Tracks the keyboard focus interaction on the menu bar view. It is used to determine if the nested items\n\t * of the menu bar should render focus rings after first interaction with the keyboard.\n\t */\n\tenableFocusHighlightOnInteraction( menuBarView: MenuBarView ): void {\n\t\tlet isKeyPressed: boolean = false;\n\n\t\tmenuBarView.on<ObservableChangeEvent<boolean>>( 'change:isOpen', ( _, evt, isOpen ) => {\n\t\t\tif ( !isOpen ) {\n\t\t\t\t// Keep the focus border if the menu bar was closed by a keyboard interaction (Esc key).\n\t\t\t\t// The user remains in the keyboard navigation mode and can traverse the main categories.\n\t\t\t\t// See https://github.com/ckeditor/ckeditor5/issues/16719.\n\t\t\t\tif ( !isKeyPressed ) {\n\t\t\t\t\tmenuBarView.isFocusBorderEnabled = false;\n\t\t\t\t}\n\n\t\t\t\t// Reset the flag when the menu bar is closed, menu items tend to intercept `keyup` event\n\t\t\t\t// and sometimes, after pressing `enter` on focused item, `isKeyPressed` stuck in `true` state.\n\t\t\t\tisKeyPressed = false;\n\t\t\t}\n\t\t} );\n\n\t\tmenuBarView.listenTo( menuBarView.element!, 'keydown', () => {\n\t\t\tisKeyPressed = true;\n\t\t}, { useCapture: true } );\n\n\t\tmenuBarView.listenTo( menuBarView.element!, 'keyup', () => {\n\t\t\tisKeyPressed = false;\n\t\t}, { useCapture: true } );\n\n\t\tmenuBarView.listenTo( menuBarView.element!, 'focus', () => {\n\t\t\tif ( isKeyPressed ) {\n\t\t\t\tmenuBarView.isFocusBorderEnabled = true;\n\t\t\t}\n\t\t}, { useCapture: true } );\n\t}\n};\n\n/**\n * Behaviors of the {@link module:ui/menubar/menubarmenuview~MenuBarMenuView} component.\n * @internal\n */\nexport const MenuBarMenuBehaviors = {\n\t/**\n\t * If the button of the menu is focused, pressing the arrow down key should open the panel and focus it.\n\t * This is analogous to the {@link module:ui/dropdown/dropdownview~DropdownView}.\n\t */\n\topenAndFocusPanelOnArrowDownKey( menuView: MenuBarMenuView ): void {\n\t\tmenuView.keystrokes.set( 'arrowdown', ( data, cancel ) => {\n\t\t\tif ( menuView.isEnabled && menuView.focusTracker.focusedElement === menuView.buttonView.element ) {\n\t\t\t\tif ( !menuView.isOpen ) {\n\t\t\t\t\tmenuView.isOpen = true;\n\t\t\t\t}\n\n\t\t\t\tmenuView.panelView.focus();\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\t},\n\n\t/**\n\t * Open the menu on the right arrow key press. This allows for navigating to sub-menus using the keyboard.\n\t */\n\topenOnArrowRightKey( menuView: MenuBarMenuView ): void {\n\t\tconst keystroke = menuView.locale!.uiLanguageDirection === 'rtl' ? 'arrowleft' : 'arrowright';\n\n\t\tmenuView.keystrokes.set( keystroke, ( data, cancel ) => {\n\t\t\tif ( menuView.focusTracker.focusedElement !== menuView.buttonView.element || !menuView.isEnabled ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// @if CK_DEBUG_MENU_BAR // console.log( '[BEHAVIOR] openOnArrowRightKey(): Opening', logMenu( menuView ) );\n\n\t\t\tif ( !menuView.isOpen ) {\n\t\t\t\tmenuView.isOpen = true;\n\t\t\t}\n\n\t\t\tmenuView.panelView.focus();\n\t\t\tcancel();\n\t\t} );\n\t},\n\n\t/**\n\t * Opens the menu on its button click. Note that this behavior only opens but never closes the menu (unlike\n\t * {@link module:ui/dropdown/dropdownview~DropdownView}).\n\t */\n\topenOnButtonClick( menuView: MenuBarMenuView ): void {\n\t\tmenuView.buttonView.on<ButtonExecuteEvent>( 'execute', () => {\n\t\t\tmenuView.isOpen = true;\n\t\t} );\n\t},\n\n\t/**\n\t * Toggles the menu on its button click. This behavior is analogous to {@link module:ui/dropdown/dropdownview~DropdownView}.\n\t */\n\ttoggleOnButtonClick( menuView: MenuBarMenuView ): void {\n\t\tmenuView.buttonView.on<ButtonExecuteEvent>( 'execute', () => {\n\t\t\tmenuView.isOpen = !menuView.isOpen;\n\t\t} );\n\t},\n\n\t/**\n\t * Opens the menu and focuses the panel content upon pressing the Enter key.\n\t */\n\topenAndFocusOnEnterKeyPress( menuView: MenuBarMenuView ): void {\n\t\tmenuView.keystrokes.set( 'enter', ( data, cancel ) => {\n\t\t\t// Engage only for Enter key press when the button is focused. The panel can contain\n\t\t\t// other UI components and features that rely on the Enter key press.\n\t\t\tif ( menuView.focusTracker.focusedElement !== menuView.buttonView.element ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmenuView.isOpen = true;\n\t\t\tmenuView.panelView.focus();\n\t\t\tcancel();\n\t\t} );\n\t},\n\n\t/**\n\t * Closes the menu on the right left key press. This allows for navigating to sub-menus using the keyboard.\n\t */\n\tcloseOnArrowLeftKey( menuView: MenuBarMenuView ): void {\n\t\tconst keystroke = menuView.locale!.uiLanguageDirection === 'rtl' ? 'arrowright' : 'arrowleft';\n\n\t\tmenuView.keystrokes.set( keystroke, ( data, cancel ) => {\n\t\t\tif ( menuView.isOpen ) {\n\t\t\t\tmenuView.isOpen = false;\n\t\t\t\tmenuView.focus();\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\t},\n\n\t/**\n\t * Closes the menu on the esc key press. This allows for navigating to sub-menus using the keyboard.\n\t */\n\tcloseOnEscKey( menuView: MenuBarMenuView ): void {\n\t\tmenuView.keystrokes.set( 'esc', ( data, cancel ) => {\n\t\t\tif ( menuView.isOpen ) {\n\t\t\t\tmenuView.isOpen = false;\n\t\t\t\tmenuView.focus();\n\t\t\t\tcancel();\n\t\t\t}\n\t\t} );\n\t},\n\n\t/**\n\t * Closes the menu when its parent menu also closed. This prevents from orphaned open menus when the parent menu re-opens.\n\t */\n\tcloseOnParentClose( menuView: MenuBarMenuView ): void {\n\t\tmenuView.parentMenuView!.on<ObservableChangeEvent<boolean>>( 'change:isOpen', ( evt, name, isOpen ) => {\n\t\t\tif ( !isOpen && evt.source === menuView.parentMenuView ) {\n\t\t\t\t// @if CK_DEBUG_MENU_BAR // console.log( '[BEHAVIOR] closeOnParentClose(): Closing', logMenu( menuView ) );\n\n\t\t\t\tmenuView.isOpen = false;\n\t\t\t}\n\t\t} );\n\t}\n};\n\n// @if CK_DEBUG_MENU_BAR // function logMenu( menuView: MenuBarMenuView ) {\n// @if CK_DEBUG_MENU_BAR //\treturn `\"${ menuView.buttonView.label }\"`;\n// @if CK_DEBUG_MENU_BAR // }\n\n/**\n * Contains every positioning function used by {@link module:ui/menubar/menubarmenuview~MenuBarMenuView} that decides where the\n * {@link module:ui/menubar/menubarmenuview~MenuBarMenuView#panelView} should be placed.\n *\n * Top-level menu positioning functions:\n *\n *\t┌──────┐\n *\t│      │\n *\t├──────┴────────┐\n *\t│               │\n *\t│               │\n *\t│               │\n *\t│            SE │\n *\t└───────────────┘\n *\n *\t         ┌──────┐\n *\t         │      │\n *\t┌────────┴──────┤\n *\t│               │\n *\t│               │\n *\t│               │\n *\t│ SW            │\n *\t└───────────────┘\n *\n *\t┌───────────────┐\n *\t│ NW            │\n *\t│               │\n *\t│               │\n *\t│               │\n *\t└────────┬──────┤\n *\t         │      │\n *\t         └──────┘\n *\n *\t┌───────────────┐\n *\t│            NE │\n *\t│               │\n *\t│               │\n *\t│               │\n *\t├──────┬────────┘\n *\t│      │\n *\t└──────┘\n *\n * Sub-menu positioning functions:\n *\n *\t┌──────┬───────────────┐\n *\t│      │               │\n *\t└──────┤               │\n *\t       │               │\n *\t       │            ES │\n *\t       └───────────────┘\n *\n *\t┌───────────────┬──────┐\n *\t│               │      │\n *\t│               ├──────┘\n *\t│               │\n *\t│ WS            │\n *\t└───────────────┘\n *\n *\t       ┌───────────────┐\n *\t       │            EN │\n *\t       │               │\n *\t┌──────┤               │\n *\t│      │               │\n *\t└──────┴───────────────┘\n *\n *\t┌───────────────┐\n *\t│ WN            │\n *\t│               │\n *\t│               ├──────┐\n *\t│               │      │\n *\t└───────────────┴──────┘\n */\n/**\n * @internal\n */\nexport const MenuBarMenuViewPanelPositioningFunctions: Record<string, PositioningFunction> = {\n\tsouthEast: buttonRect => {\n\t\treturn {\n\t\t\ttop: buttonRect.bottom,\n\t\t\tleft: buttonRect.left,\n\t\t\tname: 'se'\n\t\t};\n\t},\n\tsouthWest: ( buttonRect, panelRect ) => {\n\t\treturn {\n\t\t\ttop: buttonRect.bottom,\n\t\t\tleft: buttonRect.left - panelRect.width + buttonRect.width,\n\t\t\tname: 'sw'\n\t\t};\n\t},\n\tnorthEast: ( buttonRect, panelRect ) => {\n\t\treturn {\n\t\t\ttop: buttonRect.top - panelRect.height,\n\t\t\tleft: buttonRect.left,\n\t\t\tname: 'ne'\n\t\t};\n\t},\n\tnorthWest: ( buttonRect, panelRect ) => {\n\t\treturn {\n\t\t\ttop: buttonRect.top - panelRect.height,\n\t\t\tleft: buttonRect.left - panelRect.width + buttonRect.width,\n\t\t\tname: 'nw'\n\t\t};\n\t},\n\teastSouth: buttonRect => {\n\t\treturn {\n\t\t\ttop: buttonRect.top,\n\t\t\tleft: buttonRect.right - NESTED_PANEL_HORIZONTAL_OFFSET,\n\t\t\tname: 'es'\n\t\t};\n\t},\n\teastNorth: ( buttonRect, panelRect ) => {\n\t\treturn {\n\t\t\ttop: buttonRect.top - panelRect.height,\n\t\t\tleft: buttonRect.right - NESTED_PANEL_HORIZONTAL_OFFSET,\n\t\t\tname: 'en'\n\t\t};\n\t},\n\twestSouth: ( buttonRect, panelRect ) => {\n\t\treturn {\n\t\t\ttop: buttonRect.top,\n\t\t\tleft: buttonRect.left - panelRect.width + NESTED_PANEL_HORIZONTAL_OFFSET,\n\t\t\tname: 'ws'\n\t\t};\n\t},\n\twestNorth: ( buttonRect, panelRect ) => {\n\t\treturn {\n\t\t\ttop: buttonRect.top - panelRect.height,\n\t\t\tleft: buttonRect.left - panelRect.width + NESTED_PANEL_HORIZONTAL_OFFSET,\n\t\t\tname: 'wn'\n\t\t};\n\t}\n} as const;\n\n/**\n * The default items {@link module:core/editor/editorconfig~EditorConfig#menuBar configuration} of the\n * {@link module:ui/menubar/menubarview~MenuBarView} component. It contains names of all menu bar components\n * registered in the {@link module:ui/componentfactory~ComponentFactory component factory} (available in the project).\n *\n * **Note**: Menu bar component names provided by core editor features are prefixed with `menuBar:` in order to distinguish\n * them from components referenced by the {@link module:core/editor/editorconfig~EditorConfig#toolbar toolbar configuration}, for instance,\n * `'menuBar:bold'` is a menu bar button but `'bold'` is a toolbar button.\n *\n * Below is the preset menu bar structure (the default value of `config.menuBar.items` property):\n *\n * ```ts\n * [\n * \t{\n * \t\tmenuId: 'file',\n * \t\tlabel: 'File',\n * \t\tgroups: [\n * \t\t\t{\n * \t\t\t\tgroupId: 'export',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:exportPdf',\n * \t\t\t\t\t'menuBar:exportWord'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'import',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:importWord'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'revisionHistory',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:revisionHistory'\n * \t\t\t\t]\n * \t\t\t}\n * \t\t]\n * \t},\n * \t{\n * \t\tmenuId: 'edit',\n * \t\tlabel: 'Edit',\n * \t\tgroups: [\n * \t\t\t{\n * \t\t\t\tgroupId: 'undo',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:undo',\n * \t\t\t\t\t'menuBar:redo'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'selectAll',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:selectAll'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'findAndReplace',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:findAndReplace'\n * \t\t\t\t]\n * \t\t\t}\n * \t\t]\n * \t},\n * \t{\n * \t\tmenuId: 'view',\n * \t\tlabel: 'View',\n * \t\tgroups: [\n * \t\t\t{\n * \t\t\t\tgroupId: 'sourceEditingEnhanced',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:sourceEditingEnhanced'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'sourceEditing',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:sourceEditing'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'showBlocks',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:showBlocks'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'previewMergeFields',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:previewMergeFields'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'fullscreen',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:fullscreen'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'restrictedEditingException',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:restrictedEditingException'\n * \t\t\t\t]\n * \t\t\t}\n * \t\t]\n * \t},\n * \t{\n * \t\tmenuId: 'insert',\n * \t\tlabel: 'Insert',\n * \t\tgroups: [\n * \t\t\t{\n * \t\t\t\tgroupId: 'insertMainWidgets',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:insertImage',\n * \t\t\t\t\t'menuBar:ckbox',\n * \t\t\t\t\t'menuBar:ckfinder',\n * \t\t\t\t\t'menuBar:insertTable'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'insertInline',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:link',\n * \t\t\t\t\t'menuBar:bookmark',\n * \t\t\t\t\t'menuBar:comment',\n * \t\t\t\t\t'menuBar:insertMergeField',\n * \t\t\t\t\t'menuBar:emoji'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'insertMinorWidgets',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:mediaEmbed',\n * \t\t\t\t\t'menuBar:insertTemplate',\n * \t\t\t\t\t'menuBar:blockQuote',\n * \t\t\t\t\t'menuBar:codeBlock',\n * \t\t\t\t\t'menuBar:htmlEmbed'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'insertStructureWidgets',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:horizontalLine',\n * \t\t\t\t\t'menuBar:pageBreak',\n * \t\t\t\t\t'menuBar:tableOfContents'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'restrictedEditing',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:restrictedEditing'\n * \t\t\t\t]\n * \t\t\t}\n * \t\t]\n * \t},\n * \t{\n * \t\tmenuId: 'format',\n * \t\tlabel: 'Format',\n * \t\tgroups: [\n * \t\t\t{\n * \t\t\t\tgroupId: 'textAndFont',\n * \t\t\t\titems: [\n * \t\t\t\t\t{\n * \t\t\t\t\t\tmenuId: 'text',\n * \t\t\t\t\t\tlabel: 'Text',\n * \t\t\t\t\t\tgroups: [\n * \t\t\t\t\t\t\t{\n * \t\t\t\t\t\t\t\tgroupId: 'basicStyles',\n * \t\t\t\t\t\t\t\titems: [\n * \t\t\t\t\t\t\t\t\t'menuBar:bold',\n * \t\t\t\t\t\t\t\t\t'menuBar:italic',\n * \t\t\t\t\t\t\t\t\t'menuBar:underline',\n * \t\t\t\t\t\t\t\t\t'menuBar:strikethrough',\n * \t\t\t\t\t\t\t\t\t'menuBar:superscript',\n * \t\t\t\t\t\t\t\t\t'menuBar:subscript',\n * \t\t\t\t\t\t\t\t\t'menuBar:code'\n * \t\t\t\t\t\t\t\t]\n * \t\t\t\t\t\t\t},\n * \t\t\t\t\t\t\t{\n * \t\t\t\t\t\t\t\tgroupId: 'textPartLanguage',\n * \t\t\t\t\t\t\t\titems: [\n * \t\t\t\t\t\t\t\t\t'menuBar:textPartLanguage'\n * \t\t\t\t\t\t\t\t]\n * \t\t\t\t\t\t\t}\n * \t\t\t\t\t\t]\n * \t\t\t\t\t},\n * \t\t\t\t\t{\n * \t\t\t\t\t\tmenuId: 'font',\n * \t\t\t\t\t\tlabel: 'Font',\n * \t\t\t\t\t\tgroups: [\n * \t\t\t\t\t\t\t{\n * \t\t\t\t\t\t\t\tgroupId: 'fontProperties',\n * \t\t\t\t\t\t\t\titems: [\n * \t\t\t\t\t\t\t\t\t'menuBar:fontSize',\n * \t\t\t\t\t\t\t\t\t'menuBar:fontFamily'\n * \t\t\t\t\t\t\t\t]\n * \t\t\t\t\t\t\t},\n * \t\t\t\t\t\t\t{\n * \t\t\t\t\t\t\t\tgroupId: 'fontColors',\n * \t\t\t\t\t\t\t\titems: [\n * \t\t\t\t\t\t\t\t\t'menuBar:fontColor',\n * \t\t\t\t\t\t\t\t\t'menuBar:fontBackgroundColor'\n * \t\t\t\t\t\t\t\t]\n * \t\t\t\t\t\t\t},\n * \t\t\t\t\t\t\t{\n * \t\t\t\t\t\t\t\tgroupId: 'highlight',\n * \t\t\t\t\t\t\t\titems: [\n * \t\t\t\t\t\t\t\t\t'menuBar:highlight'\n * \t\t\t\t\t\t\t\t]\n * \t\t\t\t\t\t\t}\n * \t\t\t\t\t\t]\n * \t\t\t\t\t},\n * \t\t\t\t\t'menuBar:heading'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'list',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:bulletedList',\n * \t\t\t\t\t'menuBar:numberedList',\n * \t\t\t\t\t'menuBar:multiLevelList',\n * \t\t\t\t\t'menuBar:todoList'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'indent',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:alignment',\n * \t\t\t\t\t'menuBar:lineHeight',\n * \t\t\t\t\t'menuBar:indent',\n * \t\t\t\t\t'menuBar:outdent'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'caseChange',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:caseChange'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'removeFormat',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:removeFormat'\n * \t\t\t\t]\n * \t\t\t}\n * \t\t]\n * \t},\n * \t{\n * \t\tmenuId: 'tools',\n * \t\tlabel: 'Tools',\n * \t\tgroups: [\n * \t\t\t{\n * \t\t\t\tgroupId: 'aiTools',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:aiAssistant',\n * \t\t\t\t\t'menuBar:aiCommands'\n * \t\t\t\t]\n * \t\t\t},\n * \t\t\t{\n * \t\t\t\tgroupId: 'tools',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:trackChanges',\n * \t\t\t\t\t'menuBar:commentsArchive'\n * \t\t\t\t]\n * \t\t\t}\n * \t\t]\n * \t},\n * \t{\n * \t\tmenuId: 'help',\n * \t\tlabel: 'Help',\n * \t\tgroups: [\n * \t\t\t{\n * \t\t\t\tgroupId: 'help',\n * \t\t\t\titems: [\n * \t\t\t\t\t'menuBar:accessibilityHelp'\n * \t\t\t\t]\n * \t\t\t}\n * \t\t]\n * \t}\n * ];\n * ```\n *\n * The menu bar can be customized using the `config.menuBar.removeItems` and `config.menuBar.addItems` properties.\n */\n// **NOTE: Whenever you make changes to this value, reflect it in the documentation above!**\nexport const DefaultMenuBarItems: MenuBarConfigObject[ 'items' ] = [\n\t{\n\t\tmenuId: 'file',\n\t\tlabel: 'File',\n\t\tgroups: [\n\t\t\t{\n\t\t\t\tgroupId: 'export',\n\t\t\t\titems: [\n\t\t\t\t\t'menuBar:exportPdf',\n\t\t\t\t\t'menuBar:exportWord'\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tgroupId: 'import',\n\t\t\t\titems: [\n\t\t\t\t\t'menuBar:importWord'\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tgroupId: 'revisionHistory',\n\t\t\t\titems: [\n\t\t\t\t\t'menuBar:revisionHistory'\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tmenuId: 'edit',\n\t\tlabel: 'Edit',\n\t\tgroups: [\n\t\t\t{\n\t\t\t\tgroupId: 'undo',\n\t\t\t\titems: [\n\t\t\t\t\t'menuBar:undo',\n\t\t\t\t\t'menuBar:redo'\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tgroupId: 'selectAll',\n\t\t\t\titems: [\n\t\t\t\t\t'menuBar:selectAll'\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tgroupId: 'findAndReplace',\n\t\t\t\titems: [\n\t\t\t\t\t'menuBar:findAndReplace'\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tmenuId: 'view',\n\t\tlabel: 'View',\n\t\tgroups: [\n\t\t\t{\n\t\t\t\tgroupId: 'sourceEditingEnhanced',\n\t\t\t\titems: [\n\t\t\t\t\t'menuBar:sourceEditingEnhanced'\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tgroupId: 'sourceEditing',\n\t\t\t\titems: [\n\t\t\t\t\t'menuBar:sourceEditing'\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tgroupId: 'showBlocks',\n\t\t\t\titems: [\n\t\t\t\t\t'menuBar:showBlocks'\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tgroupId: 'previewMergeFields',\n\t\t\t\titems: [\n\t\t\t\t\t'menuBar:previewMergeFields'\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tgroupId: 'fullscreen',\n\t\t\t\titems: [\n\t\t\t\t\t'menuBar:fullscreen'\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tgroupId: 'restrictedEditing',\n\t\t\t\titems: [\n\t\t\t\t\t'menuBar:restrictedEditing'\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tmenuId: 'insert',\n\t\tlabel: 'Insert',\n\t\tgroups: [\n\t\t\t{\n\t\t\t\tgroupId: 'insertMainWidgets',\n\t\t\t\titems: [\n\t\t\t\t\t'menuBar:insertImage',\n\t\t\t\t\t'menuBar:ckbox',\n\t\t\t\t\t'menuBar:ckfinder',\n\t\t\t\t\t'menuBar:insertTable',\n\t\t\t\t\t'menuBar:insertTableLayout'\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tgroupId: 'insertInline',\n\t\t\t\titems: [\n\t\t\t\t\t'menuBar:link',\n\t\t\t\t\t'menuBar:bookmark',\n\t\t\t\t\t'menuBar:comment',\n\t\t\t\t\t'menuBar:insertMergeField',\n\t\t\t\t\t'menuBar:emoji'\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tgroupId: 'insertMinorWidgets',\n\t\t\t\titems: [\n\t\t\t\t\t'menuBar:mediaEmbed',\n\t\t\t\t\t'menuBar:insertTemplate',\n\t\t\t\t\t'menuBar:specialCharacters',\n\t\t\t\t\t'menuBar:blockQuote',\n\t\t\t\t\t'menuBar:codeBlock',\n\t\t\t\t\t'menuBar:htmlEmbed'\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tgroupId: 'insertStructureWidgets',\n\t\t\t\titems: [\n\t\t\t\t\t'menuBar:horizontalLine',\n\t\t\t\t\t'menuBar:pageBreak',\n\t\t\t\t\t'menuBar:tableOfContents'\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tgroupId: 'restrictedEditingException',\n\t\t\t\titems: [\n\t\t\t\t\t'menuBar:restrictedEditingException'\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tmenuId: 'format',\n\t\tlabel: 'Format',\n\t\tgroups: [\n\t\t\t{\n\t\t\t\tgroupId: 'textAndFont',\n\t\t\t\titems: [\n\t\t\t\t\t{\n\t\t\t\t\t\tmenuId: 'text',\n\t\t\t\t\t\tlabel: 'Text',\n\t\t\t\t\t\tgroups: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgroupId: 'basicStyles',\n\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\t'menuBar:bold',\n\t\t\t\t\t\t\t\t\t'menuBar:italic',\n\t\t\t\t\t\t\t\t\t'menuBar:underline',\n\t\t\t\t\t\t\t\t\t'menuBar:strikethrough',\n\t\t\t\t\t\t\t\t\t'menuBar:superscript',\n\t\t\t\t\t\t\t\t\t'menuBar:subscript',\n\t\t\t\t\t\t\t\t\t'menuBar:code'\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgroupId: 'textPartLanguage',\n\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\t'menuBar:textPartLanguage'\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tmenuId: 'font',\n\t\t\t\t\t\tlabel: 'Font',\n\t\t\t\t\t\tgroups: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgroupId: 'fontProperties',\n\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\t'menuBar:fontSize',\n\t\t\t\t\t\t\t\t\t'menuBar:fontFamily'\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgroupId: 'fontColors',\n\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\t'menuBar:fontColor',\n\t\t\t\t\t\t\t\t\t'menuBar:fontBackgroundColor'\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgroupId: 'highlight',\n\t\t\t\t\t\t\t\titems: [\n\t\t\t\t\t\t\t\t\t'menuBar:highlight'\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t'menuBar:heading'\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tgroupId: 'list',\n\t\t\t\titems: [\n\t\t\t\t\t'menuBar:bulletedList',\n\t\t\t\t\t'menuBar:numberedList',\n\t\t\t\t\t'menuBar:multiLevelList',\n\t\t\t\t\t'menuBar:todoList'\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tgroupId: 'indent',\n\t\t\t\titems: [\n\t\t\t\t\t'menuBar:alignment',\n\t\t\t\t\t'menuBar:lineHeight',\n\t\t\t\t\t'menuBar:indent',\n\t\t\t\t\t'menuBar:outdent'\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tgroupId: 'caseChange',\n\t\t\t\titems: [\n\t\t\t\t\t'menuBar:caseChange'\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tgroupId: 'removeFormat',\n\t\t\t\titems: [\n\t\t\t\t\t'menuBar:removeFormat'\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tmenuId: 'tools',\n\t\tlabel: 'Tools',\n\t\tgroups: [\n\t\t\t{\n\t\t\t\tgroupId: 'aiTools',\n\t\t\t\titems: [\n\t\t\t\t\t'menuBar:aiAssistant',\n\t\t\t\t\t'menuBar:aiCommands'\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tgroupId: 'tools',\n\t\t\t\titems: [\n\t\t\t\t\t'menuBar:trackChanges',\n\t\t\t\t\t'menuBar:commentsArchive'\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t},\n\t{\n\t\tmenuId: 'help',\n\t\tlabel: 'Help',\n\t\tgroups: [\n\t\t\t{\n\t\t\t\tgroupId: 'help',\n\t\t\t\titems: [\n\t\t\t\t\t'menuBar:accessibilityHelp'\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n];\n\n/**\n * Performs a cleanup and normalization of the menu bar configuration.\n */\nexport function normalizeMenuBarConfig( config: Readonly<MenuBarConfig> ): NormalizedMenuBarConfigObject {\n\tlet configObject: NormalizedMenuBarConfigObject;\n\n\t// The integrator specified the config as an object but without items. Let's give them defaults but respect their\n\t// additions and removals.\n\tif ( !( 'items' in config ) || !config.items ) {\n\t\tconfigObject = {\n\t\t\titems: cloneDeep( DefaultMenuBarItems ) as Array<MenuBarMenuDefinition>,\n\t\t\taddItems: [],\n\t\t\tremoveItems: [],\n\t\t\tisVisible: true,\n\t\t\tisUsingDefaultConfig: true,\n\t\t\t...config\n\t\t};\n\t}\n\t// The integrator specified the config as an object and there are items there. Let's take it as it is.\n\telse {\n\t\tconfigObject = {\n\t\t\titems: config.items,\n\t\t\tremoveItems: [],\n\t\t\taddItems: [],\n\t\t\tisVisible: true,\n\t\t\tisUsingDefaultConfig: false,\n\t\t\t...config\n\t\t};\n\t}\n\n\treturn configObject;\n}\n\n/**\n * Processes a normalized menu bar config and returns a config clone with the following modifications:\n *\n * * Removed components that are not available in the component factory,\n * * Removed obsolete separators,\n * * Purged empty menus,\n * * Localized top-level menu labels.\n * @internal\n */\nexport function processMenuBarConfig( {\n\tnormalizedConfig,\n\tlocale,\n\tcomponentFactory,\n\textraItems\n}: {\n\tnormalizedConfig: NormalizedMenuBarConfigObject;\n\tlocale: Locale;\n\tcomponentFactory: ComponentFactory;\n\textraItems: Array<MenuBarConfigAddedItem | MenuBarConfigAddedGroup | MenuBarConfigAddedMenu>;\n} ): NormalizedMenuBarConfigObject {\n\tconst configClone = cloneDeep( normalizedConfig ) as NormalizedMenuBarConfigObject;\n\n\thandleAdditions( normalizedConfig, configClone, extraItems );\n\thandleRemovals( normalizedConfig, configClone );\n\thandleAdditions( normalizedConfig, configClone, configClone.addItems );\n\tpurgeUnavailableComponents( normalizedConfig, configClone, componentFactory );\n\tpurgeEmptyMenus( normalizedConfig, configClone );\n\tlocalizeMenuLabels( configClone, locale );\n\n\treturn configClone;\n}\n\n/**\n * Removes items from the menu bar config based on user `removeItems` configuration. Users can remove\n * individual items, groups, or entire menus. For each removed item, a warning is logged if the item\n * was not found in the configuration.\n */\nfunction handleRemovals(\n\toriginalConfig: NormalizedMenuBarConfigObject,\n\tconfig: NormalizedMenuBarConfigObject\n) {\n\tconst itemsToBeRemoved = config.removeItems;\n\tconst successfullyRemovedItems: Array<string> = [];\n\n\t// Remove top-level menus.\n\tconfig.items = config.items.filter( ( { menuId } ) => {\n\t\tif ( itemsToBeRemoved.includes( menuId ) ) {\n\t\t\tsuccessfullyRemovedItems.push( menuId );\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} );\n\n\twalkConfigMenus( config.items, menuDefinition => {\n\t\t// Remove groups from menus.\n\t\tmenuDefinition.groups = menuDefinition.groups.filter( ( { groupId } ) => {\n\t\t\tif ( itemsToBeRemoved.includes( groupId ) ) {\n\t\t\t\tsuccessfullyRemovedItems.push( groupId );\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} );\n\n\t\t// Remove sub-menus and items from groups.\n\t\tfor ( const groupDefinition of menuDefinition.groups ) {\n\t\t\tgroupDefinition.items = groupDefinition.items.filter( item => {\n\t\t\t\tconst itemId = getIdFromGroupItem( item );\n\n\t\t\t\tif ( itemsToBeRemoved.includes( itemId ) ) {\n\t\t\t\t\tsuccessfullyRemovedItems.push( itemId );\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t} );\n\t\t}\n\t} );\n\n\tfor ( const itemName of itemsToBeRemoved ) {\n\t\tif ( !successfullyRemovedItems.includes( itemName ) ) {\n\t\t\t/**\n\t\t\t * There was a problem processing the configuration of the menu bar. The item with the given\n\t\t\t * name does could not be removed from the menu bar configuration.\n\t\t\t *\n\t\t\t * This warning usually shows up when the {@link module:core/plugin~Plugin} which is supposed\n\t\t\t * to provide a menu bar item has not been loaded or there is a typo in the\n\t\t\t * {@link module:core/editor/editorconfig~EditorConfig#menuBar menu bar configuration}.\n\t\t\t *\n\t\t\t * @error menu-bar-item-could-not-be-removed\n\t\t\t * @param menuBarConfig The full configuration of the menu bar.\n\t\t\t * @param itemName The name of the item that was not removed from the menu bar.\n\t\t\t */\n\t\t\tlogWarning( 'menu-bar-item-could-not-be-removed', {\n\t\t\t\tmenuBarConfig: originalConfig,\n\t\t\t\titemName\n\t\t\t} );\n\t\t}\n\t}\n}\n\n/**\n * Adds provided items to config. It allows for adding menus, groups, and items at arbitrary\n * positions in the menu bar. If the position does not exist, a warning is logged.\n */\nfunction handleAdditions(\n\toriginalConfig: NormalizedMenuBarConfigObject,\n\tconfig: NormalizedMenuBarConfigObject,\n\titems: Array<MenuBarConfigAddedItem | MenuBarConfigAddedGroup | MenuBarConfigAddedMenu>\n) {\n\tconst successFullyAddedItems: typeof items = [];\n\n\tif ( items.length == 0 ) {\n\t\treturn;\n\t}\n\n\tfor ( const itemToAdd of items ) {\n\t\tconst relation = getRelationFromPosition( itemToAdd.position );\n\t\tconst relativeId = getRelativeIdFromPosition( itemToAdd.position );\n\n\t\t// Adding a menu.\n\t\tif ( isMenuBarMenuAddition( itemToAdd ) ) {\n\t\t\tif ( !relativeId ) {\n\t\t\t\t// Adding a top-level menu at the beginning of the menu bar.\n\t\t\t\tif ( relation === 'start' ) {\n\t\t\t\t\tconfig.items.unshift( itemToAdd.menu );\n\t\t\t\t\tsuccessFullyAddedItems.push( itemToAdd );\n\t\t\t\t}\n\t\t\t\t// Adding a top-level menu at the end of the menu bar.\n\t\t\t\telse if ( relation === 'end' ) {\n\t\t\t\t\tconfig.items.push( itemToAdd.menu );\n\t\t\t\t\tsuccessFullyAddedItems.push( itemToAdd );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst topLevelMenuDefinitionIndex = config.items.findIndex( menuDefinition => menuDefinition.menuId === relativeId );\n\n\t\t\t\t// Adding a top-level menu somewhere between existing menu bar menus.\n\t\t\t\tif ( topLevelMenuDefinitionIndex != -1 ) {\n\t\t\t\t\tif ( relation === 'before' ) {\n\t\t\t\t\t\tconfig.items.splice( topLevelMenuDefinitionIndex, 0, itemToAdd.menu );\n\t\t\t\t\t\tsuccessFullyAddedItems.push( itemToAdd );\n\t\t\t\t\t} else if ( relation === 'after' ) {\n\t\t\t\t\t\tconfig.items.splice( topLevelMenuDefinitionIndex + 1, 0, itemToAdd.menu );\n\t\t\t\t\t\tsuccessFullyAddedItems.push( itemToAdd );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Adding a sub-menu to an existing items group.\n\t\t\t\telse {\n\t\t\t\t\tconst wasAdded = addMenuOrItemToGroup( config, itemToAdd.menu, relativeId, relation );\n\n\t\t\t\t\tif ( wasAdded ) {\n\t\t\t\t\t\tsuccessFullyAddedItems.push( itemToAdd );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Adding a group.\n\t\telse if ( isMenuBarMenuGroupAddition( itemToAdd ) ) {\n\t\t\twalkConfigMenus( config.items, menuDefinition => {\n\t\t\t\tif ( menuDefinition.menuId === relativeId ) {\n\t\t\t\t\t// Add a group at the start of a menu.\n\t\t\t\t\tif ( relation === 'start' ) {\n\t\t\t\t\t\tmenuDefinition.groups.unshift( itemToAdd.group );\n\t\t\t\t\t\tsuccessFullyAddedItems.push( itemToAdd );\n\t\t\t\t\t}\n\t\t\t\t\t// Add a group at the end of a menu.\n\t\t\t\t\telse if ( relation === 'end' ) {\n\t\t\t\t\t\tmenuDefinition.groups.push( itemToAdd.group );\n\t\t\t\t\t\tsuccessFullyAddedItems.push( itemToAdd );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst relativeGroupIndex = menuDefinition.groups.findIndex( group => group.groupId === relativeId );\n\n\t\t\t\t\tif ( relativeGroupIndex !== -1 ) {\n\t\t\t\t\t\t// Add a group before an existing group in a menu.\n\t\t\t\t\t\tif ( relation === 'before' ) {\n\t\t\t\t\t\t\tmenuDefinition.groups.splice( relativeGroupIndex, 0, itemToAdd.group );\n\t\t\t\t\t\t\tsuccessFullyAddedItems.push( itemToAdd );\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Add a group after an existing group in a menu.\n\t\t\t\t\t\telse if ( relation === 'after' ) {\n\t\t\t\t\t\t\tmenuDefinition.groups.splice( relativeGroupIndex + 1, 0, itemToAdd.group );\n\t\t\t\t\t\t\tsuccessFullyAddedItems.push( itemToAdd );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\t// Adding an item to an existing items group.\n\t\telse {\n\t\t\tconst wasAdded = addMenuOrItemToGroup( config, itemToAdd.item, relativeId, relation );\n\n\t\t\tif ( wasAdded ) {\n\t\t\t\tsuccessFullyAddedItems.push( itemToAdd );\n\t\t\t}\n\t\t}\n\t}\n\n\tfor ( const addedItemConfig of items ) {\n\t\tif ( !successFullyAddedItems.includes( addedItemConfig ) ) {\n\t\t\t/**\n\t\t\t * There was a problem processing the configuration of the menu bar. The configured item could not be added\n\t\t\t * because the position it was supposed to be added to does not exist.\n\t\t\t *\n\t\t\t * This warning usually shows up when the {@link module:core/plugin~Plugin} which is supposed\n\t\t\t * to provide a menu bar item has not been loaded or there is a typo in the\n\t\t\t * {@link module:core/editor/editorconfig~EditorConfig#menuBar menu bar configuration}.\n\t\t\t *\n\t\t\t * @error menu-bar-item-could-not-be-removed\n\t\t\t * @param {object} menuBarConfig The full configuration of the menu bar.\n\t\t\t * @param {object} addedItemConfig The name of the item that was not removed from the menu bar.\n\t\t\t */\n\t\t\tlogWarning( 'menu-bar-item-could-not-be-added', {\n\t\t\t\tmenuBarConfig: originalConfig,\n\t\t\t\taddedItemConfig\n\t\t\t} );\n\t\t}\n\t}\n}\n\n/**\n * Handles adding a sub-menu or an item into a group. The logic is the same for both cases.\n */\nfunction addMenuOrItemToGroup(\n\tconfig: NormalizedMenuBarConfigObject,\n\titemOrMenuToAdd: string | MenuBarMenuDefinition,\n\trelativeId: string | null,\n\trelation: 'start' | 'end' | 'before' | 'after'\n): boolean {\n\tlet wasAdded = false;\n\n\twalkConfigMenus( config.items, menuDefinition => {\n\t\tfor ( const { groupId, items: groupItems } of menuDefinition.groups ) {\n\t\t\t// Avoid infinite loops.\n\t\t\tif ( wasAdded ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( groupId === relativeId ) {\n\t\t\t\t// Adding an item/menu at the beginning of a group.\n\t\t\t\tif ( relation === 'start' ) {\n\t\t\t\t\tgroupItems.unshift( itemOrMenuToAdd );\n\t\t\t\t\twasAdded = true;\n\t\t\t\t}\n\t\t\t\t// Adding an item/menu at the end of a group.\n\t\t\t\telse if ( relation === 'end' ) {\n\t\t\t\t\tgroupItems.push( itemOrMenuToAdd );\n\t\t\t\t\twasAdded = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Adding an item/menu relative to an existing item/menu.\n\t\t\t\tconst relativeItemIndex = groupItems.findIndex( groupItem => {\n\t\t\t\t\treturn getIdFromGroupItem( groupItem ) === relativeId;\n\t\t\t\t} );\n\n\t\t\t\tif ( relativeItemIndex !== -1 ) {\n\t\t\t\t\tif ( relation === 'before' ) {\n\t\t\t\t\t\tgroupItems.splice( relativeItemIndex, 0, itemOrMenuToAdd );\n\t\t\t\t\t\twasAdded = true;\n\t\t\t\t\t} else if ( relation === 'after' ) {\n\t\t\t\t\t\tgroupItems.splice( relativeItemIndex + 1, 0, itemOrMenuToAdd );\n\t\t\t\t\t\twasAdded = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} );\n\n\treturn wasAdded;\n}\n\n/**\n * Removes components from the menu bar configuration that are not available in the factory and would\n * not be instantiated. Warns about missing components if the menu bar configuration was specified by the user.\n */\nfunction purgeUnavailableComponents(\n\toriginalConfig: NormalizedMenuBarConfigObject,\n\tconfig: NormalizedMenuBarConfigObject,\n\tcomponentFactory: ComponentFactory\n) {\n\twalkConfigMenus( config.items, menuDefinition => {\n\t\tfor ( const groupDefinition of menuDefinition.groups ) {\n\t\t\tgroupDefinition.items = groupDefinition.items.filter( item => {\n\t\t\t\tconst isItemUnavailable = typeof item === 'string' && !componentFactory.has( item );\n\n\t\t\t\t// The default configuration contains all possible editor features. But integrators' editors rarely load\n\t\t\t\t// every possible feature. This is why we do not want to log warnings about unavailable items for the default config\n\t\t\t\t// because they would show up in almost every integration. If the configuration has been provided by\n\t\t\t\t// the integrator, on the other hand, then these warnings bring value.\n\t\t\t\tif ( isItemUnavailable && !config.isUsingDefaultConfig ) {\n\t\t\t\t\t/**\n\t\t\t\t\t * There was a problem processing the configuration of the menu bar. The item with the given\n\t\t\t\t\t * name does not exist so it was omitted when rendering the menu bar.\n\t\t\t\t\t *\n\t\t\t\t\t * This warning usually shows up when the {@link module:core/plugin~Plugin} which is supposed\n\t\t\t\t\t * to provide a menu bar item has not been loaded or there is a typo in the\n\t\t\t\t\t * {@link module:core/editor/editorconfig~EditorConfig#menuBar menu bar configuration}.\n\t\t\t\t\t *\n\t\t\t\t\t * Make sure the plugin responsible for this menu bar item is loaded and the menu bar configuration\n\t\t\t\t\t * is correct, e.g. {@link module:basic-styles/bold/boldui~BoldUI} is loaded for the `'menuBar:bold'`\n\t\t\t\t\t * menu bar item.\n\t\t\t\t\t *\n\t\t\t\t\t * @error menu-bar-item-unavailable\n\t\t\t\t\t * @param {object} menuBarConfig The full configuration of the menu bar.\n\t\t\t\t\t * @param {object} parentMenuConfig The config of the menu the unavailable component was defined in.\n\t\t\t\t\t * @param {string} componentName The name of the unavailable component.\n\t\t\t\t\t */\n\t\t\t\t\tlogWarning( 'menu-bar-item-unavailable', {\n\t\t\t\t\t\tmenuBarConfig: originalConfig,\n\t\t\t\t\t\tparentMenuConfig: cloneDeep( menuDefinition ),\n\t\t\t\t\t\tcomponentName: item\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\treturn !isItemUnavailable;\n\t\t\t} );\n\t\t}\n\t} );\n}\n\n/**\n * Removes empty menus from the menu bar configuration to improve the visual UX. Such menus can occur\n * when some plugins responsible for providing menu bar items have not been loaded and some part of\n * the configuration populated menus using these components exclusively.\n */\nfunction purgeEmptyMenus(\n\toriginalConfig: NormalizedMenuBarConfigObject,\n\tconfig: NormalizedMenuBarConfigObject\n) {\n\tconst isUsingDefaultConfig = config.isUsingDefaultConfig;\n\tlet wasSubMenuPurged = false;\n\n\t// Purge top-level menus.\n\tconfig.items = config.items.filter( menuDefinition => {\n\t\tif ( !menuDefinition.groups.length ) {\n\t\t\twarnAboutEmptyMenu( originalConfig, menuDefinition, isUsingDefaultConfig );\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} );\n\n\t// Warn if there were no top-level menus left in the menu bar after purging.\n\tif ( !config.items.length ) {\n\t\twarnAboutEmptyMenu( originalConfig, originalConfig, isUsingDefaultConfig );\n\n\t\treturn;\n\t}\n\n\t// Purge sub-menus and groups.\n\twalkConfigMenus( config.items, menuDefinition => {\n\t\t// Get rid of empty groups.\n\t\tmenuDefinition.groups = menuDefinition.groups.filter( groupDefinition => {\n\t\t\tif ( !groupDefinition.items.length ) {\n\t\t\t\twasSubMenuPurged = true;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t} );\n\n\t\t// Get rid of empty sub-menus.\n\t\tfor ( const groupDefinition of menuDefinition.groups ) {\n\t\t\tgroupDefinition.items = groupDefinition.items.filter( item => {\n\t\t\t\t// If no groups were left after removing empty ones.\n\t\t\t\tif ( isMenuDefinition( item ) && !item.groups.length ) {\n\t\t\t\t\twarnAboutEmptyMenu( originalConfig, item, isUsingDefaultConfig );\n\t\t\t\t\twasSubMenuPurged = true;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t} );\n\t\t}\n\t} );\n\n\tif ( wasSubMenuPurged ) {\n\t\t// The config is walked from the root to the leaves so if anything gets removed, we need to re-run the\n\t\t// whole process because it could've affected parents.\n\t\tpurgeEmptyMenus( originalConfig, config );\n\t}\n}\n\nfunction warnAboutEmptyMenu(\n\toriginalConfig: NormalizedMenuBarConfigObject,\n\temptyMenuConfig: MenuBarMenuDefinition | NormalizedMenuBarConfigObject,\n\tisUsingDefaultConfig: boolean\n) {\n\tif ( isUsingDefaultConfig ) {\n\t\treturn;\n\t}\n\n\t/**\n\t * There was a problem processing the configuration of the menu bar. One of the menus\n\t * is empty so it was omitted when rendering the menu bar.\n\t *\n\t * This warning usually shows up when some {@link module:core/plugin~Plugin plugins} responsible for\n\t * providing menu bar items have not been loaded and the\n\t * {@link module:core/editor/editorconfig~EditorConfig#menuBar menu bar configuration} was not updated.\n\t *\n\t * Make sure all necessary editor plugins are loaded and/or update the menu bar configuration\n\t * to account for the missing menu items.\n\t *\n\t * @error menu-bar-menu-empty\n\t * @param {object} menuBarConfig The full configuration of the menu bar.\n\t * @param {object} emptyMenuConfig The definition of the menu that has no child items.\n\t */\n\tlogWarning( 'menu-bar-menu-empty', {\n\t\tmenuBarConfig: originalConfig,\n\t\temptyMenuConfig\n\t} );\n}\n\n/**\n * Localizes the user-config using pre-defined localized category labels.\n */\nfunction localizeMenuLabels( config: NormalizedMenuBarConfigObject, locale: Locale ) {\n\tconst t = locale.t;\n\tconst localizedCategoryLabels: Record<string, string> = {\n\t\t// Top-level categories.\n\t\t'File': t( {\n\t\t\tstring: 'File',\n\t\t\tid: 'MENU_BAR_MENU_FILE'\n\t\t} ),\n\t\t'Edit': t( {\n\t\t\tstring: 'Edit',\n\t\t\tid: 'MENU_BAR_MENU_EDIT'\n\t\t} ),\n\t\t'View': t( {\n\t\t\tstring: 'View',\n\t\t\tid: 'MENU_BAR_MENU_VIEW'\n\t\t} ),\n\t\t'Insert': t( {\n\t\t\tstring: 'Insert',\n\t\t\tid: 'MENU_BAR_MENU_INSERT'\n\t\t} ),\n\t\t'Format': t( {\n\t\t\tstring: 'Format',\n\t\t\tid: 'MENU_BAR_MENU_FORMAT'\n\t\t} ),\n\t\t'Tools': t( {\n\t\t\tstring: 'Tools',\n\t\t\tid: 'MENU_BAR_MENU_TOOLS'\n\t\t} ),\n\t\t'Help': t( {\n\t\t\tstring: 'Help',\n\t\t\tid: 'MENU_BAR_MENU_HELP'\n\t\t} ),\n\n\t\t// Sub-menus.\n\t\t'Text': t( {\n\t\t\tstring: 'Text',\n\t\t\tid: 'MENU_BAR_MENU_TEXT'\n\t\t} ),\n\t\t'Font': t( {\n\t\t\tstring: 'Font',\n\t\t\tid: 'MENU_BAR_MENU_FONT'\n\t\t} )\n\t};\n\n\twalkConfigMenus( config.items, definition => {\n\t\tif ( definition.label in localizedCategoryLabels ) {\n\t\t\tdefinition.label = localizedCategoryLabels[ definition.label ];\n\t\t}\n\t} );\n}\n\n/**\n * Recursively visits all menu definitions in the config and calls the callback for each of them.\n */\nfunction walkConfigMenus(\n\tdefinition: NormalizedMenuBarConfigObject[ 'items' ] | MenuBarMenuDefinition,\n\tcallback: ( definition: MenuBarMenuDefinition ) => void\n) {\n\tif ( Array.isArray( definition ) ) {\n\t\tfor ( const topLevelMenuDefinition of definition ) {\n\t\t\twalk( topLevelMenuDefinition );\n\t\t}\n\t}\n\n\tfunction walk( menuDefinition: MenuBarMenuDefinition ) {\n\t\tcallback( menuDefinition );\n\n\t\tfor ( const groupDefinition of menuDefinition.groups ) {\n\t\t\tfor ( const groupItem of groupDefinition.items ) {\n\t\t\t\tif ( isMenuDefinition( groupItem ) ) {\n\t\t\t\t\twalk( groupItem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction isMenuBarMenuAddition( definition: any ): definition is MenuBarConfigAddedMenu {\n\treturn typeof definition === 'object' && 'menu' in definition;\n}\n\nfunction isMenuBarMenuGroupAddition( definition: any ): definition is MenuBarConfigAddedGroup {\n\treturn typeof definition === 'object' && 'group' in definition;\n}\n\nfunction getRelationFromPosition( position: MenuBarConfigAddedPosition ): 'start' | 'end' | 'before' | 'after' {\n\tif ( position.startsWith( 'start' ) ) {\n\t\treturn 'start';\n\t} else if ( position.startsWith( 'end' ) ) {\n\t\treturn 'end';\n\t} else if ( position.startsWith( 'after' ) ) {\n\t\treturn 'after';\n\t} else {\n\t\treturn 'before';\n\t}\n}\n\nfunction getRelativeIdFromPosition( position: MenuBarConfigAddedPosition ): string | null {\n\tconst match = position.match( /^[^:]+:(.+)/ );\n\n\tif ( match ) {\n\t\treturn match[ 1 ];\n\t}\n\n\treturn null;\n}\n\nfunction getIdFromGroupItem( item: string | MenuBarMenuDefinition ): string {\n\treturn typeof item === 'string' ? item : item.menuId;\n}\n\nfunction isMenuDefinition( definition: any ): definition is MenuBarMenuDefinition {\n\treturn typeof definition === 'object' && 'menuId' in definition;\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/editorui/editorui\n */\n\nimport { ComponentFactory } from '../componentfactory.js';\nimport { TooltipManager } from '../tooltipmanager.js';\nimport { PoweredBy } from './poweredby.js';\nimport { EvaluationBadge } from './evaluationbadge.js';\nimport { AriaLiveAnnouncer } from '../arialiveannouncer.js';\n\nimport { type EditorUIView } from './editoruiview.js';\nimport { type ToolbarView } from '../toolbar/toolbarview.js';\nimport type { View, UIViewRenderEvent } from '../view.js';\n\nimport {\n\tObservableMixin,\n\tDomEmitterMixin,\n\tglobal,\n\tisVisible,\n\tFocusTracker,\n\tgetVisualViewportOffset,\n\ttype EventInfo,\n\ttype CollectionAddEvent,\n\ttype CollectionRemoveEvent,\n\ttype ObservableSetEvent,\n\ttype DomEmitter\n} from '@ckeditor/ckeditor5-utils';\n\nimport type { Editor, ViewportOffsetConfig } from '@ckeditor/ckeditor5-core';\nimport type { ViewDocumentLayoutChangedEvent, ViewScrollToTheSelectionEvent } from '@ckeditor/ckeditor5-engine';\nimport type {\n\tMenuBarView,\n\tMenuBarConfigAddedGroup,\n\tMenuBarConfigAddedItem,\n\tMenuBarConfigAddedMenu\n} from '../menubar/menubarview.js';\nimport { normalizeMenuBarConfig } from '../menubar/utils.js';\n\n/**\n * A class providing the minimal interface that is required to successfully bootstrap any editor UI.\n */\nexport abstract class EditorUI extends /* #__PURE__ */ ObservableMixin() {\n\t/**\n\t * The editor that the UI belongs to.\n\t */\n\tpublic readonly editor: Editor;\n\n\t/**\n\t * An instance of the {@link module:ui/componentfactory~ComponentFactory}, a registry used by plugins\n\t * to register factories of specific UI components.\n\t */\n\tpublic readonly componentFactory: ComponentFactory;\n\n\t/**\n\t * Stores the information about the editor UI focus and propagates it so various plugins and components\n\t * are unified as a focus group.\n\t */\n\tpublic readonly focusTracker: FocusTracker;\n\n\t/**\n\t * Manages the tooltips displayed on mouseover and focus across the UI.\n\t */\n\tpublic readonly tooltipManager: TooltipManager;\n\n\t/**\n\t * A helper that enables the \"powered by\" feature in the editor and renders a link to the project's webpage.\n\t */\n\tpublic readonly poweredBy: PoweredBy;\n\n\t/**\n\t * A helper that enables the \"evaluation badge\" feature in the editor.\n\t */\n\tpublic readonly evaluationBadge: EvaluationBadge;\n\n\t/**\n\t * A helper that manages the content of an `aria-live` regions used by editor features to announce status changes\n\t * to screen readers.\n\t */\n\tpublic readonly ariaLiveAnnouncer: AriaLiveAnnouncer;\n\n\t/**\n\t * Indicates the UI is ready. Set `true` after {@link #event:ready} event is fired.\n\t *\n\t * @readonly\n\t * @default false\n\t */\n\tpublic isReady: boolean = false;\n\n\tpublic abstract get view(): EditorUIView;\n\n\t/**\n\t * Stores viewport offsets from every direction.\n\t *\n\t * Viewport offset can be used to constrain balloons or other UI elements into an element smaller than the viewport.\n\t * This can be useful if there are any other absolutely positioned elements that may interfere with editor UI.\n\t *\n\t * Example `editor.ui.viewportOffset` returns:\n\t *\n\t * ```js\n\t * {\n\t * \ttop: 50,\n\t * \tright: 50,\n\t * \tbottom: 50,\n\t * \tleft: 50,\n\t * \tvisualTop: 50\n\t * }\n\t * ```\n\t *\n\t * This property can be overriden after editor already being initialized:\n\t *\n\t * ```js\n\t * editor.ui.viewportOffset = {\n\t * \ttop: 100,\n\t * \tright: 0,\n\t * \tbottom: 0,\n\t * \tleft: 0\n\t * };\n\t * ```\n\t *\n\t * @observable\n\t */\n\tpublic declare viewportOffset: ViewportOffset;\n\n\t/**\n\t * Stores all editable elements used by the editor instance.\n\t */\n\tprivate _editableElementsMap = new Map<string, HTMLElement>();\n\n\t/**\n\t * All available & focusable toolbars.\n\t */\n\tprivate _focusableToolbarDefinitions: Array<FocusableToolbarDefinition> = [];\n\n\t/**\n\t * All additional menu bar items, groups or menus that have their default location defined.\n\t */\n\tprivate _extraMenuBarElements: Array<MenuBarConfigAddedItem | MenuBarConfigAddedGroup | MenuBarConfigAddedMenu> = [];\n\n\t/**\n\t * The last focused element to which focus should return on `Esc` press.\n\t */\n\tprivate _lastFocusedForeignElement: HTMLElement | null = null;\n\n\t/**\n\t * The DOM emitter instance used for visual viewport watching.\n\t */\n\tprivate _domEmitter?: DomEmitter;\n\n\t/**\n\t * Creates an instance of the editor UI class.\n\t *\n\t * @param editor The editor instance.\n\t */\n\tconstructor( editor: Editor ) {\n\t\tsuper();\n\n\t\tconst editingView = editor.editing.view;\n\n\t\tthis.editor = editor;\n\t\tthis.componentFactory = new ComponentFactory( editor );\n\t\tthis.focusTracker = new FocusTracker();\n\t\tthis.tooltipManager = new TooltipManager( editor );\n\t\tthis.poweredBy = new PoweredBy( editor );\n\t\tthis.evaluationBadge = new EvaluationBadge( editor );\n\t\tthis.ariaLiveAnnouncer = new AriaLiveAnnouncer( editor );\n\n\t\tthis._initViewportOffset( this._readViewportOffsetFromConfig() );\n\n\t\tthis.once<EditorUIReadyEvent>( 'ready', () => {\n\t\t\tthis._bindBodyCollectionWithFocusTracker();\n\n\t\t\tthis.isReady = true;\n\t\t} );\n\n\t\t// Informs UI components that should be refreshed after layout change.\n\t\tthis.listenTo<ViewDocumentLayoutChangedEvent>( editingView.document, 'layoutChanged', this.update.bind( this ) );\n\t\tthis.listenTo<ViewScrollToTheSelectionEvent>( editingView, 'scrollToTheSelection', this._handleScrollToTheSelection.bind( this ) );\n\n\t\tthis._initFocusTracking();\n\t\tthis._initVisualViewportSupport();\n\t}\n\n\t/**\n\t * The main (outermost) DOM element of the editor UI.\n\t *\n\t * For example, in {@link module:editor-classic/classiceditor~ClassicEditor} it is a `<div>` which\n\t * wraps the editable element and the toolbar. In {@link module:editor-inline/inlineeditor~InlineEditor}\n\t * it is the editable element itself (as there is no other wrapper). However, in\n\t * {@link module:editor-decoupled/decouplededitor~DecoupledEditor} it is set to `null` because this editor does not\n\t * come with a single \"main\" HTML element (its editable element and toolbar are separate).\n\t *\n\t * This property can be understood as a shorthand for retrieving the element that a specific editor integration\n\t * considers to be its main DOM element.\n\t */\n\tpublic get element(): HTMLElement | null {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Fires the {@link module:ui/editorui/editorui~EditorUI#event:update `update`} event.\n\t *\n\t * This method should be called when the editor UI (e.g. positions of its balloons) needs to be updated due to\n\t * some environmental change which CKEditor 5 is not aware of (e.g. resize of a container in which it is used).\n\t */\n\tpublic update(): void {\n\t\tthis.fire<EditorUIUpdateEvent>( 'update' );\n\t}\n\n\t/**\n\t * Destroys the UI.\n\t */\n\tpublic destroy(): void {\n\t\tthis.stopListening();\n\n\t\tthis.focusTracker.destroy();\n\t\tthis.tooltipManager.destroy( this.editor );\n\t\tthis.poweredBy.destroy();\n\t\tthis.evaluationBadge.destroy();\n\n\t\t// Clean–up the references to the CKEditor instance stored in the native editable DOM elements.\n\t\tfor ( const domElement of this._editableElementsMap.values() ) {\n\t\t\t( domElement as any ).ckeditorInstance = null;\n\t\t\tthis.editor.keystrokes.stopListening( domElement );\n\t\t}\n\n\t\tthis._editableElementsMap = new Map();\n\t\tthis._focusableToolbarDefinitions = [];\n\n\t\tif ( this._domEmitter ) {\n\t\t\tthis._domEmitter.stopListening();\n\t\t}\n\t}\n\n\t/**\n\t * Stores the native DOM editable element used by the editor under a unique name.\n\t *\n\t * Also, registers the element in the editor to maintain the accessibility of the UI. When the user is editing text in a focusable\n\t * editable area, they can use the <kbd>Alt</kbd> + <kbd>F10</kbd> keystroke to navigate over editor toolbars. See {@link #addToolbar}.\n\t *\n\t * @param rootName The unique name of the editable element.\n\t * @param domElement The native DOM editable element.\n\t */\n\tpublic setEditableElement( rootName: string, domElement: HTMLElement ): void {\n\t\tthis._editableElementsMap.set( rootName, domElement );\n\n\t\t// Put a reference to the CKEditor instance in the editable native DOM element.\n\t\t// It helps 3rd–party software (browser extensions, other libraries) access and recognize\n\t\t// CKEditor 5 instances (editing roots) and use their API (there is no global editor\n\t\t// instance registry).\n\t\tif ( !( domElement as any ).ckeditorInstance ) {\n\t\t\t( domElement as any ).ckeditorInstance = this.editor;\n\t\t}\n\n\t\t// Register the element, so it becomes available for Alt+F10 and Esc navigation.\n\t\tthis.focusTracker.add( domElement );\n\n\t\tconst setUpKeystrokeHandler = () => {\n\t\t\t// The editing view of the editor is already listening to keystrokes from DOM roots (see: KeyObserver).\n\t\t\t// Do not duplicate listeners.\n\t\t\tif ( this.editor.editing.view.getDomRoot( rootName ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.editor.keystrokes.listenTo( domElement );\n\t\t};\n\n\t\t// For editable elements set by features after EditorUI is ready (e.g. source editing).\n\t\tif ( this.isReady ) {\n\t\t\tsetUpKeystrokeHandler();\n\t\t}\n\t\t// For editable elements set while the editor is being created (e.g. DOM roots).\n\t\telse {\n\t\t\tthis.once<EditorUIReadyEvent>( 'ready', setUpKeystrokeHandler );\n\t\t}\n\t}\n\n\t/**\n\t * Removes the editable from the editor UI. Removes all handlers added by {@link #setEditableElement}.\n\t *\n\t * @param rootName The name of the editable element to remove.\n\t */\n\tpublic removeEditableElement( rootName: string ): void {\n\t\tconst domElement = this._editableElementsMap.get( rootName );\n\n\t\tif ( !domElement ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._editableElementsMap.delete( rootName );\n\n\t\tthis.editor.keystrokes.stopListening( domElement );\n\t\tthis.focusTracker.remove( domElement );\n\n\t\t( domElement as any ).ckeditorInstance = null;\n\t}\n\n\t/**\n\t * Returns the editable editor element with the given name or null if editable does not exist.\n\t *\n\t * @param rootName The editable name.\n\t */\n\tpublic getEditableElement( rootName: string = 'main' ): HTMLElement | undefined {\n\t\treturn this._editableElementsMap.get( rootName );\n\t}\n\n\t/**\n\t * Returns array of names of all editor editable elements.\n\t */\n\tpublic getEditableElementsNames(): IterableIterator<string> {\n\t\treturn this._editableElementsMap.keys();\n\t}\n\n\t/**\n\t * Adds a toolbar to the editor UI. Used primarily to maintain the accessibility of the UI.\n\t *\n\t * Focusable toolbars can be accessed (focused) by users by pressing the <kbd>Alt</kbd> + <kbd>F10</kbd> keystroke.\n\t * Successive keystroke presses navigate over available toolbars.\n\t *\n\t * @param toolbarView A instance of the toolbar to be registered.\n\t */\n\tpublic addToolbar( toolbarView: ToolbarView, options: FocusableToolbarOptions = {} ): void {\n\t\tif ( toolbarView.isRendered ) {\n\t\t\tthis.focusTracker.add( toolbarView );\n\t\t\tthis.editor.keystrokes.listenTo( toolbarView.element! );\n\t\t} else {\n\t\t\ttoolbarView.once<UIViewRenderEvent>( 'render', () => {\n\t\t\t\tthis.focusTracker.add( toolbarView );\n\t\t\t\tthis.editor.keystrokes.listenTo( toolbarView.element! );\n\t\t\t} );\n\t\t}\n\n\t\tthis._focusableToolbarDefinitions.push( { toolbarView, options } );\n\t}\n\n\t/**\n\t * Registers an extra menu bar element, which could be a single item, a group of items, or a menu containing groups.\n\t *\n\t * ```ts\n\t * // Register a new menu bar item.\n\t * editor.ui.extendMenuBar( {\n\t *   item: 'menuBar:customFunctionButton',\n\t *   position: 'after:menuBar:bold'\n\t * } );\n\t *\n\t * // Register a new menu bar group.\n\t * editor.ui.extendMenuBar( {\n\t *   group: {\n\t *     groupId: 'customGroup',\n\t *     items: [\n\t *       'menuBar:customFunctionButton'\n\t *     ]\n\t *   },\n\t *   position: 'start:help'\n\t * } );\n\t *\n\t * // Register a new menu bar menu.\n\t * editor.ui.extendMenuBar( {\n\t *   menu: {\n\t *     menuId: 'customMenu',\n\t *     label: 'customMenu',\n\t *     groups: [\n\t *       {\n\t *         groupId: 'customGroup',\n\t *         items: [\n\t *           'menuBar:customFunctionButton'\n\t *         ]\n\t *       }\n\t *     ]\n\t *   },\n\t *   position: 'after:help'\n\t * } );\n\t * ```\n\t */\n\tpublic extendMenuBar(\n\t\tconfig: MenuBarConfigAddedItem | MenuBarConfigAddedGroup | MenuBarConfigAddedMenu\n\t): void {\n\t\tthis._extraMenuBarElements.push( config );\n\t}\n\n\t/**\n\t * Initializes menu bar.\n\t */\n\tpublic initMenuBar( menuBarView: MenuBarView ): void {\n\t\tconst menuBarViewElement = menuBarView.element!;\n\n\t\tthis.focusTracker.add( menuBarViewElement );\n\t\tthis.editor.keystrokes.listenTo( menuBarViewElement );\n\n\t\tconst normalizedMenuBarConfig = normalizeMenuBarConfig( this.editor.config.get( 'menuBar' ) || {} );\n\n\t\tmenuBarView.fillFromConfig( normalizedMenuBarConfig, this.componentFactory, this._extraMenuBarElements );\n\n\t\tthis.editor.keystrokes.set( 'Esc', ( data, cancel ) => {\n\t\t\tif ( !menuBarViewElement.contains( this.editor.ui.focusTracker.focusedElement ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Bring focus back to where it came from before focusing the toolbar:\n\t\t\t// If it came from outside the engine view (e.g. source editing), move it there.\n\t\t\tif ( this._lastFocusedForeignElement ) {\n\t\t\t\tthis._lastFocusedForeignElement.focus();\n\t\t\t\tthis._lastFocusedForeignElement = null;\n\t\t\t}\n\t\t\t// Else just focus the view editing.\n\t\t\telse {\n\t\t\t\tthis.editor.editing.view.focus();\n\t\t\t}\n\n\t\t\tcancel();\n\t\t} );\n\n\t\tthis.editor.keystrokes.set( 'Alt+F9', ( data, cancel ) => {\n\t\t\t// If menu bar is already focused do nothing.\n\t\t\tif ( menuBarViewElement.contains( this.editor.ui.focusTracker.focusedElement ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._saveLastFocusedForeignElement();\n\n\t\t\tmenuBarView.isFocusBorderEnabled = true;\n\t\t\tmenuBarView.focus();\n\t\t\tcancel();\n\t\t} );\n\t}\n\n\t/**\n\t * Returns viewport offsets object:\n\t *\n\t * ```js\n\t * {\n\t * \ttop: Number,\n\t * \tright: Number,\n\t * \tbottom: Number,\n\t * \tleft: Number\n\t * }\n\t * ```\n\t *\n\t * Only top property is currently supported.\n\t */\n\tprivate _readViewportOffsetFromConfig() {\n\t\tconst editor = this.editor;\n\t\tconst viewportOffsetConfig = editor.config.get( 'ui.viewportOffset' );\n\n\t\tif ( viewportOffsetConfig ) {\n\t\t\treturn viewportOffsetConfig;\n\t\t}\n\n\t\t// Not present in EditorConfig type, because it's legacy. Hence the `as` expression.\n\t\tconst legacyOffsetConfig = editor.config.get( 'toolbar.viewportTopOffset' ) as number | undefined;\n\n\t\t// Fall back to deprecated toolbar config.\n\t\tif ( legacyOffsetConfig ) {\n\t\t\t/**\n\t\t\t * The {@link module:core/editor/editorconfig~EditorConfig#toolbar `EditorConfig#toolbar.viewportTopOffset`}\n\t\t\t * property has been deprecated and will be removed in the near future. Please use\n\t\t\t * {@link module:core/editor/editorconfig~EditorConfig#ui `EditorConfig#ui.viewportOffset`} instead.\n\t\t\t *\n\t\t\t * @error editor-ui-deprecated-viewport-offset-config\n\t\t\t */\n\t\t\tconsole.warn(\n\t\t\t\t'editor-ui-deprecated-viewport-offset-config: ' +\n\t\t\t\t'The `toolbar.vieportTopOffset` configuration option is deprecated. ' +\n\t\t\t\t'It will be removed from future CKEditor versions. Use `ui.viewportOffset.top` instead.'\n\t\t\t);\n\n\t\t\treturn { top: legacyOffsetConfig };\n\t\t}\n\n\t\t// More keys to come in the future.\n\t\treturn { top: 0 };\n\t}\n\n\t/**\n\t * Starts listening for <kbd>Alt</kbd> + <kbd>F10</kbd> and <kbd>Esc</kbd> keystrokes in the context of focusable\n\t * {@link #setEditableElement editable elements} and {@link #addToolbar toolbars}\n\t * to allow users navigate across the UI.\n\t */\n\tprivate _initFocusTracking(): void {\n\t\tconst editor = this.editor;\n\n\t\tlet candidateDefinitions: Array<FocusableToolbarDefinition>;\n\n\t\t// Focus the next focusable toolbar on <kbd>Alt</kbd> + <kbd>F10</kbd>.\n\t\teditor.keystrokes.set( 'Alt+F10', ( data, cancel ) => {\n\t\t\tthis._saveLastFocusedForeignElement();\n\n\t\t\tconst currentFocusedToolbarDefinition = this._getCurrentFocusedToolbarDefinition();\n\n\t\t\t// * When focusing a toolbar for the first time, set the array of definitions for successive presses of Alt+F10.\n\t\t\t// This ensures, the navigation works always the same and no pair of toolbars takes over\n\t\t\t// (e.g. image and table toolbars when a selected image is inside a cell).\n\t\t\t// * It could be that the focus went to the toolbar by clicking a toolbar item (e.g. a dropdown). In this case,\n\t\t\t// there were no candidates so they must be obtained (#12339).\n\t\t\tif ( !currentFocusedToolbarDefinition || !candidateDefinitions ) {\n\t\t\t\tcandidateDefinitions = this._getFocusableCandidateToolbarDefinitions();\n\t\t\t}\n\n\t\t\t// In a single Alt+F10 press, check all candidates but if none were focused, don't go any further.\n\t\t\t// This prevents an infinite loop.\n\t\t\tfor ( let i = 0; i < candidateDefinitions.length; i++ ) {\n\t\t\t\tconst candidateDefinition = candidateDefinitions.shift()!;\n\n\t\t\t\t// Put the first definition to the back of the array. This allows circular navigation over all toolbars\n\t\t\t\t// on successive presses of Alt+F10.\n\t\t\t\tcandidateDefinitions.push( candidateDefinition );\n\n\t\t\t\t// Don't focus the same toolbar again. If you did, this would move focus from the nth focused toolbar item back to the\n\t\t\t\t// first item as per ToolbarView#focus() if the user navigated inside the toolbar.\n\t\t\t\tif (\n\t\t\t\t\tcandidateDefinition !== currentFocusedToolbarDefinition &&\n\t\t\t\t\tthis._focusFocusableCandidateToolbar( candidateDefinition )\n\t\t\t\t) {\n\t\t\t\t\t// Clean up after a current visible toolbar when switching to the next one.\n\t\t\t\t\tif ( currentFocusedToolbarDefinition && currentFocusedToolbarDefinition.options.afterBlur ) {\n\t\t\t\t\t\tcurrentFocusedToolbarDefinition.options.afterBlur();\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcancel();\n\t\t} );\n\n\t\t// Blur the focused toolbar on <kbd>Esc</kbd> and bring the focus back to its origin.\n\t\teditor.keystrokes.set( 'Esc', ( data, cancel ) => {\n\t\t\tconst focusedToolbarDef = this._getCurrentFocusedToolbarDefinition();\n\n\t\t\tif ( !focusedToolbarDef ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Bring focus back to where it came from before focusing the toolbar:\n\t\t\t// 1. If it came from outside the engine view (e.g. source editing), move it there.\n\t\t\tif ( this._lastFocusedForeignElement ) {\n\t\t\t\tthis._lastFocusedForeignElement.focus();\n\t\t\t\tthis._lastFocusedForeignElement = null;\n\t\t\t}\n\t\t\t// 2. There are two possibilities left:\n\t\t\t//   2.1. It could be that the focus went from an editable element in the view (root or nested).\n\t\t\t//   2.2. It could be the focus went straight to the toolbar before even focusing the editing area.\n\t\t\t// In either case, just focus the view editing. The focus will land where it belongs.\n\t\t\telse {\n\t\t\t\teditor.editing.view.focus();\n\t\t\t}\n\n\t\t\t// Clean up after the toolbar if there is anything to do there.\n\t\t\tif ( focusedToolbarDef.options.afterBlur ) {\n\t\t\t\tfocusedToolbarDef.options.afterBlur();\n\t\t\t}\n\n\t\t\tcancel();\n\t\t} );\n\t}\n\n\t/**\n\t * Saves last focused element that doen not belong to editing view to restore focus on `Esc`.\n\t */\n\tprivate _saveLastFocusedForeignElement() {\n\t\tconst focusedElement = this.focusTracker.focusedElement as HTMLElement;\n\n\t\t// Focus moved out of a DOM element that\n\t\t// * is not a toolbar,\n\t\t// * does not belong to the editing view (e.g. source editing).\n\t\tif (\n\t\t\tArray.from( this._editableElementsMap.values() ).includes( focusedElement ) &&\n\t\t\t!Array.from( this.editor.editing.view.domRoots.values() ).includes( focusedElement )\n\t\t) {\n\t\t\tthis._lastFocusedForeignElement = focusedElement;\n\t\t}\n\t}\n\n\t/**\n\t * Returns definitions of toolbars that could potentially be focused, sorted by their importance for the user.\n\t *\n\t * Focusable toolbars candidates are either:\n\t * * already visible,\n\t * * have `beforeFocus()` set in their {@link module:ui/editorui/editorui~FocusableToolbarDefinition definition} that suggests that\n\t * they might show up when called. Keep in mind that determining whether a toolbar will show up (and become focusable) is impossible\n\t * at this stage because it depends on its implementation, that in turn depends on the editing context (selection).\n\t *\n\t * **Note**: Contextual toolbars take precedence over regular toolbars.\n\t */\n\tprivate _getFocusableCandidateToolbarDefinitions(): Array<FocusableToolbarDefinition> {\n\t\tconst definitions: Array<FocusableToolbarDefinition> = [];\n\n\t\tfor ( const toolbarDef of this._focusableToolbarDefinitions ) {\n\t\t\tconst { toolbarView, options } = toolbarDef;\n\n\t\t\tif ( isVisible( toolbarView.element ) || options.beforeFocus ) {\n\t\t\t\tdefinitions.push( toolbarDef );\n\t\t\t}\n\t\t}\n\n\t\t// Contextual and already visible toolbars have higher priority. If both are true, the toolbar will always focus first.\n\t\t// For instance, a selected widget toolbar vs inline editor toolbar: both are visible but the widget toolbar is contextual.\n\t\tdefinitions.sort( ( defA, defB ) => getToolbarDefinitionWeight( defA ) - getToolbarDefinitionWeight( defB ) );\n\n\t\treturn definitions;\n\t}\n\n\t/**\n\t * Returns a definition of the toolbar that is currently visible and focused (one of its children has focus).\n\t *\n\t * `null` is returned when no toolbar is currently focused.\n\t */\n\tprivate _getCurrentFocusedToolbarDefinition(): FocusableToolbarDefinition | null {\n\t\tfor ( const definition of this._focusableToolbarDefinitions ) {\n\t\t\tif ( definition.toolbarView.element && definition.toolbarView.element.contains( this.focusTracker.focusedElement ) ) {\n\t\t\t\treturn definition;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Focuses a focusable toolbar candidate using its definition.\n\t *\n\t * @param candidateToolbarDefinition A definition of the toolbar to focus.\n\t * @returns `true` when the toolbar candidate was focused. `false` otherwise.\n\t */\n\tprivate _focusFocusableCandidateToolbar( candidateToolbarDefinition: FocusableToolbarDefinition ): boolean {\n\t\tconst { toolbarView, options: { beforeFocus } } = candidateToolbarDefinition;\n\n\t\tif ( beforeFocus ) {\n\t\t\tbeforeFocus();\n\t\t}\n\n\t\t// If it didn't show up after beforeFocus(), it's not focusable at all.\n\t\tif ( !isVisible( toolbarView.element ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttoolbarView.focus();\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Provides an integration between {@link #viewportOffset} and {@link module:utils/dom/scroll~scrollViewportToShowTarget}.\n\t * It allows the UI-agnostic engine method to consider user-configured viewport offsets specific for the integration.\n\t *\n\t * @param evt The `scrollToTheSelection` event info.\n\t * @param data The payload carried by the `scrollToTheSelection` event.\n\t */\n\tprivate _handleScrollToTheSelection(\n\t\tevt: EventInfo<'scrollToTheSelection'>,\n\t\tdata: ViewScrollToTheSelectionEvent[ 'args' ][ 0 ]\n\t): void {\n\t\tconst configuredViewportOffset = {\n\t\t\ttop: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\t...this.viewportOffset\n\t\t};\n\n\t\tdata.viewportOffset.top += configuredViewportOffset.top;\n\t\tdata.viewportOffset.bottom += configuredViewportOffset.bottom;\n\t\tdata.viewportOffset.left += configuredViewportOffset.left;\n\t\tdata.viewportOffset.right += configuredViewportOffset.right;\n\t}\n\n\t/**\n\t * Ensures that the focus tracker is aware of all views' DOM elements in the body collection.\n\t */\n\tprivate _bindBodyCollectionWithFocusTracker() {\n\t\tconst body = this.view.body;\n\n\t\tfor ( const view of body ) {\n\t\t\tthis.focusTracker.add( view.element! );\n\t\t}\n\n\t\tbody.on<CollectionAddEvent<View>>( 'add', ( evt, view ) => {\n\t\t\tthis.focusTracker.add( view.element! );\n\t\t} );\n\n\t\tbody.on<CollectionRemoveEvent<View>>( 'remove', ( evt, view ) => {\n\t\t\tthis.focusTracker.remove( view.element! );\n\t\t} );\n\t}\n\n\t/**\n\t * Set initial viewport offset and setup visualTop augmentation.\n\t */\n\tprivate _initViewportOffset( viewportOffsetConfig: ViewportOffsetConfig ) {\n\t\t// Augment the viewport offset set from outside the editor with the visualTop property.\n\t\tthis.on<ObservableSetEvent<ViewportOffset>>( 'set:viewportOffset', ( evt, name, value ) => {\n\t\t\tconst visualTop = this._getVisualViewportTopOffset( value );\n\n\t\t\t// Update only if there is a change in a value, so we do not trigger\n\t\t\t// listeners to the viewportOffset observable.\n\t\t\tif ( value.visualTop !== visualTop ) {\n\t\t\t\tevt.return = { ...value, visualTop };\n\t\t\t}\n\t\t} );\n\n\t\t// Set the initial value after augmenting the setter.\n\t\tthis.set( 'viewportOffset', viewportOffsetConfig );\n\t}\n\n\t/**\n\t * Listen to visual viewport changes and update the viewportOffset with the visualTop property\n\t * according to the visible part of it (visual viewport).\n\t */\n\tprivate _initVisualViewportSupport() {\n\t\tif ( !global.window.visualViewport ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst updateViewport = () => {\n\t\t\tconst visualTop = this._getVisualViewportTopOffset( this.viewportOffset );\n\n\t\t\t// Update only if there is a change in a value, so we do not trigger\n\t\t\t// listeners to the viewportOffset observable.\n\t\t\tif ( this.viewportOffset.visualTop !== visualTop ) {\n\t\t\t\tthis.viewportOffset = { ...this.viewportOffset, visualTop };\n\t\t\t}\n\t\t};\n\n\t\t// Listen to the changes in the visual viewport to adjust the visualTop of viewport offset.\n\t\tthis._domEmitter = new ( DomEmitterMixin() )();\n\t\tthis._domEmitter.listenTo( global.window.visualViewport, 'scroll', updateViewport );\n\t\tthis._domEmitter.listenTo( global.window.visualViewport, 'resize', updateViewport );\n\t}\n\n\t/**\n\t * Calculate the viewport top offset according to the visible part of it (visual viewport).\n\t */\n\tprivate _getVisualViewportTopOffset( viewportOffset: { top?: number } ): number {\n\t\tconst visualViewportOffsetTop = getVisualViewportOffset().top;\n\t\tconst viewportTopOffset = viewportOffset.top || 0;\n\n\t\treturn visualViewportOffsetTop > viewportTopOffset ? 0 : viewportTopOffset - visualViewportOffsetTop;\n\t}\n}\n\n/**\n * Fired when the editor UI is ready.\n *\n * Fired before {@link module:engine/controller/datacontroller~DataController#event:ready}.\n *\n * @eventName ~EditorUI#ready\n */\nexport type EditorUIReadyEvent = {\n\tname: 'ready';\n\targs: [];\n};\n\n/**\n * Fired whenever the UI (all related components) should be refreshed.\n *\n * **Note:**: The event is fired after each {@link module:engine/view/document~ViewDocument#event:layoutChanged}.\n * It can also be fired manually via the {@link module:ui/editorui/editorui~EditorUI#update} method.\n *\n * @eventName ~EditorUI#update\n */\nexport type EditorUIUpdateEvent = {\n\tname: 'update';\n\targs: [];\n};\n\n/**\n * A definition of a focusable toolbar. Used by {@link module:ui/editorui/editorui~EditorUI#addToolbar}.\n */\nexport interface FocusableToolbarDefinition {\n\n\t/**\n\t * An instance of a focusable toolbar view.\n\t */\n\ttoolbarView: ToolbarView;\n\n\t/**\n\t * Options of a focusable toolbar view:\n\t *\n\t * * `isContextual`: Marks the higher priority toolbar. For example when there are 2 visible toolbars,\n\t * it allows to distinguish which toolbar should be focused first after the `alt+f10` keystroke\n\t * * `beforeFocus`: A callback executed before the `ToolbarView` gains focus upon the `Alt+F10` keystroke.\n\t * * `afterBlur`: A callback executed after `ToolbarView` loses focus upon `Esc` keystroke but before\n\t * the focus goes back to the `origin`.\n\t */\n\toptions: FocusableToolbarOptions;\n}\n\nexport interface FocusableToolbarOptions {\n\n\t/**\n\t * Set `true` if the toolbar is attached to the content of the editor. Such toolbar takes\n\t * a precedence over other toolbars when a user pressed <kbd>Alt</kbd> + <kbd>F10</kbd>.\n\t */\n\tisContextual?: boolean;\n\n\t/**\n\t * Specify a callback executed before the toolbar instance DOM element gains focus\n\t * upon the <kbd>Alt</kbd> + <kbd>F10</kbd> keystroke.\n\t */\n\tbeforeFocus?: () => void;\n\n\t/**\n\t * Specify a callback executed after the toolbar instance DOM element loses focus upon\n\t * <kbd>Esc</kbd> keystroke but before the focus goes back to the {@link ~EditorUI#setEditableElement editable element}.\n\t */\n\tafterBlur?: () => void;\n}\n\nexport interface ViewportOffset extends ViewportOffsetConfig {\n\n\t/**\n\t * The top offset of the visual viewport.\n\t *\n\t * This value is calculated based on the visual viewport position.\n\t */\n\tvisualTop?: number;\n}\n\n/**\n * Returns a number (weight) for a toolbar definition. Visible toolbars have a higher priority and so do\n * contextual toolbars (displayed in the context of a content, for instance, an image toolbar).\n *\n * A standard invisible toolbar is the heaviest. A visible contextual toolbar is the lightest.\n *\n * @param toolbarDef A toolbar definition to be weighted.\n */\nfunction getToolbarDefinitionWeight( toolbarDef: FocusableToolbarDefinition ): number {\n\tconst { toolbarView, options } = toolbarDef;\n\tlet weight = 10;\n\n\t// Prioritize already visible toolbars. They should get focused first.\n\tif ( isVisible( toolbarView.element ) ) {\n\t\tweight--;\n\t}\n\n\t// Prioritize contextual toolbars. They are displayed at the selection.\n\tif ( options.isContextual ) {\n\t\tweight -= 2;\n\t}\n\n\treturn weight;\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/editorui/editoruiview\n */\n\nimport { View } from '../view.js';\nimport { BodyCollection } from './bodycollection.js';\nimport { type EditableUIView } from '../editableui/editableuiview.js';\n\nimport type { Locale, LocaleTranslate } from '@ckeditor/ckeditor5-utils';\n\nimport '../../theme/components/editorui/editorui.css';\nimport { type MenuBarView } from '../menubar/menubarview.js';\nimport { type ToolbarView } from '../toolbar/toolbarview.js';\n\n/**\n * The editor UI view class. Base class for the editor main views.\n */\nexport abstract class EditorUIView extends View {\n\t/**\n\t * Collection of the child views, detached from the DOM\n\t * structure of the editor, like panels, icons etc.\n\t */\n\tpublic readonly body: BodyCollection;\n\n\tdeclare public locale: Locale;\n\tdeclare public t: LocaleTranslate;\n\n\tpublic abstract get editable(): EditableUIView;\n\n\t/**\n\t * Menu bar view instance. Initialized by default in:\n\t *\n\t * * balloon editor;\n\t * * decoupled editor;\n\t * * multiroot editor.\n\t */\n\tpublic menuBarView?: MenuBarView;\n\n\t/**\n\t * Toolbar view instance. Initialized by default in:\n\t *\n\t * * classic editor;\n\t * * decoupled editor;\n\t * * inline editor;\n\t * * multiroot editor.\n\t */\n\tpublic toolbar?: ToolbarView;\n\n\t/**\n\t * Creates an instance of the editor UI view class.\n\t *\n\t * @param locale The locale instance.\n\t */\n\tconstructor( locale: Locale ) {\n\t\tsuper( locale );\n\n\t\tthis.body = new BodyCollection( locale );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tthis.body.attachToDom();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tthis.body.detachFromDom();\n\n\t\treturn super.destroy();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/editorui/boxed/boxededitoruiview\n */\n\nimport { EditorUIView } from '../editoruiview.js';\nimport { LabelView } from '../../label/labelview.js';\nimport { type ViewCollection } from '../../viewcollection.js';\n\nimport type { Locale } from '@ckeditor/ckeditor5-utils';\n\n/**\n * The boxed editor UI view class. This class represents an editor interface\n * consisting of a toolbar and an editable area, enclosed within a box.\n */\nexport abstract class BoxedEditorUIView extends EditorUIView {\n\t/**\n\t * Collection of the child views located in the top (`.ck-editor__top`)\n\t * area of the UI.\n\t */\n\tpublic readonly top: ViewCollection;\n\n\t/**\n\t * Collection of the child views located in the main (`.ck-editor__main`)\n\t * area of the UI.\n\t */\n\tpublic readonly main: ViewCollection;\n\n\t/**\n\t * Voice label of the UI.\n\t */\n\tprivate readonly _voiceLabelView: LabelView;\n\n\t/**\n\t * Creates an instance of the boxed editor UI view class.\n\t *\n\t * @param locale The locale instance..\n\t */\n\tconstructor( locale: Locale ) {\n\t\tsuper( locale );\n\n\t\tthis.top = this.createCollection();\n\t\tthis.main = this.createCollection();\n\t\tthis._voiceLabelView = this._createVoiceLabel();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-reset',\n\t\t\t\t\t'ck-editor',\n\t\t\t\t\t'ck-rounded-corners'\n\t\t\t\t],\n\t\t\t\trole: 'application',\n\t\t\t\tdir: locale.uiLanguageDirection,\n\t\t\t\tlang: locale.uiLanguage,\n\t\t\t\t'aria-labelledby': this._voiceLabelView.id\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\tthis._voiceLabelView,\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t\t'ck-editor__top',\n\t\t\t\t\t\t\t'ck-reset_all'\n\t\t\t\t\t\t],\n\t\t\t\t\t\trole: 'presentation'\n\t\t\t\t\t},\n\t\t\t\t\tchildren: this.top\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t\t'ck-editor__main'\n\t\t\t\t\t\t],\n\t\t\t\t\t\trole: 'presentation'\n\t\t\t\t\t},\n\t\t\t\t\tchildren: this.main\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * Creates a voice label view instance.\n\t */\n\tprivate _createVoiceLabel() {\n\t\tconst t = this.t;\n\t\tconst voiceLabel = new LabelView();\n\n\t\tvoiceLabel.text = t( 'Rich Text Editor' );\n\n\t\tvoiceLabel.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-voice-label'\n\t\t\t}\n\t\t} );\n\n\t\treturn voiceLabel;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/editableui/editableuiview\n */\n\nimport { View } from '../view.js';\n\nimport type { EditingView } from '@ckeditor/ckeditor5-engine';\nimport type { Locale, ObservableChangeEvent } from '@ckeditor/ckeditor5-utils';\n\n/**\n * The editable UI view class.\n */\nexport class EditableUIView extends View {\n\t/**\n\t * The name of the editable UI view.\n\t */\n\tpublic name: string | null = null;\n\n\t/**\n\t * Controls whether the editable is focused, i.e. the user is typing in it.\n\t *\n\t * @observable\n\t */\n\tdeclare public isFocused: boolean;\n\n\t/**\n\t * The editing view instance the editable is related to. Editable uses the editing\n\t * view to dynamically modify its certain DOM attributes after {@link #render rendering}.\n\t *\n\t * **Note**: The DOM attributes are performed by the editing view and not UI\n\t * {@link module:ui/view~View#bindTemplate template bindings} because once rendered,\n\t * the editable DOM element must remain under the full control of the engine to work properly.\n\t */\n\tprotected _editingView: EditingView;\n\n\t/**\n\t * The element which is the main editable element (usually the one with `contentEditable=\"true\"`).\n\t */\n\tprotected _editableElement: HTMLElement | null | undefined;\n\n\t/**\n\t * Whether an external {@link #_editableElement} was passed into the constructor, which also means\n\t * the view will not render its {@link #template}.\n\t */\n\tprivate _hasExternalElement: boolean;\n\n\t/**\n\t * Creates an instance of EditableUIView class.\n\t *\n\t * @param locale The locale instance.\n\t * @param editingView The editing view instance the editable is related to.\n\t * @param editableElement The editable element. If not specified, this view\n\t * should create it. Otherwise, the existing element should be used.\n\t */\n\tconstructor(\n\t\tlocale: Locale,\n\t\teditingView: EditingView,\n\t\teditableElement?: HTMLElement\n\t) {\n\t\tsuper( locale );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-content',\n\t\t\t\t\t'ck-editor__editable',\n\t\t\t\t\t'ck-rounded-corners'\n\t\t\t\t],\n\t\t\t\tlang: locale.contentLanguage,\n\t\t\t\tdir: locale.contentLanguageDirection\n\t\t\t}\n\t\t} );\n\n\t\tthis.set( 'isFocused', false );\n\n\t\tthis._editableElement = editableElement;\n\t\tthis._hasExternalElement = !!this._editableElement;\n\t\tthis._editingView = editingView;\n\t}\n\n\t/**\n\t * Renders the view by either applying the {@link #template} to the existing\n\t * {@link module:ui/editableui/editableuiview~EditableUIView#_editableElement} or assigning {@link #element}\n\t * as {@link module:ui/editableui/editableuiview~EditableUIView#_editableElement}.\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tif ( this._hasExternalElement ) {\n\t\t\tthis.template!.apply( this.element = this._editableElement! );\n\t\t} else {\n\t\t\tthis._editableElement = this.element;\n\t\t}\n\n\t\tthis.on<ObservableChangeEvent>( 'change:isFocused', () => this._updateIsFocusedClasses() );\n\t\tthis._updateIsFocusedClasses();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tif ( this._hasExternalElement ) {\n\t\t\tthis.template!.revert( this._editableElement! );\n\t\t}\n\n\t\tsuper.destroy();\n\t}\n\n\t/**\n\t * Whether an external {@link #_editableElement} was passed into the constructor, which also means\n\t * the view will not render its {@link #template}.\n\t */\n\tpublic get hasExternalElement(): boolean {\n\t\treturn this._hasExternalElement;\n\t}\n\n\t/**\n\t * Updates the `ck-focused` and `ck-blurred` CSS classes on the {@link #element} according to\n\t * the {@link #isFocused} property value using the {@link #_editingView editing view} API.\n\t */\n\tprivate _updateIsFocusedClasses() {\n\t\tconst editingView = this._editingView;\n\n\t\tif ( editingView.isRenderingInProgress ) {\n\t\t\tupdateAfterRender( this );\n\t\t} else {\n\t\t\tupdate( this );\n\t\t}\n\n\t\tfunction update( view: EditableUIView ) {\n\t\t\teditingView.change( writer => {\n\t\t\t\tconst viewRoot = editingView.document.getRoot( view.name! )!;\n\n\t\t\t\twriter.addClass( view.isFocused ? 'ck-focused' : 'ck-blurred', viewRoot );\n\t\t\t\twriter.removeClass( view.isFocused ? 'ck-blurred' : 'ck-focused', viewRoot );\n\t\t\t} );\n\t\t}\n\n\t\t// In a case of a multi-root editor, a callback will be attached more than once (one callback for each root).\n\t\t// While executing one callback the `isRenderingInProgress` observable is changing what causes executing another\n\t\t// callback and render is called inside the already pending render.\n\t\t// We need to be sure that callback is executed only when the value has changed from `true` to `false`.\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/1676.\n\t\tfunction updateAfterRender( view: EditableUIView ) {\n\t\t\teditingView.once<ObservableChangeEvent<boolean>>( 'change:isRenderingInProgress', ( evt, name, value ) => {\n\t\t\t\tif ( !value ) {\n\t\t\t\t\tupdate( view );\n\t\t\t\t} else {\n\t\t\t\t\tupdateAfterRender( view );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/editableui/inline/inlineeditableuiview\n */\n\nimport { EditableUIView } from '../editableuiview.js';\n\nimport type { EditingView } from '@ckeditor/ckeditor5-engine';\nimport type { Locale } from '@ckeditor/ckeditor5-utils';\n\n/**\n * The inline editable UI class implementing an inline {@link module:ui/editableui/editableuiview~EditableUIView}.\n */\nexport class InlineEditableUIView extends EditableUIView {\n\t/**\n\t * The cached options object passed to the constructor.\n\t */\n\tprivate readonly _options: InlineEditableUIViewOptions;\n\n\t/**\n\t * Creates an instance of the InlineEditableUIView class.\n\t *\n\t * @param locale The locale instance.\n\t * @param editingView The editing view instance the editable is related to.\n\t * @param editableElement The editable element. If not specified, the\n\t * {@link module:ui/editableui/editableuiview~EditableUIView}\n\t * will create it. Otherwise, the existing element will be used.\n\t * @param options Additional configuration of the view.\n\t * @param options.label The label of the editable for assistive technologies. If not provided, a default label is used or,\n\t * the existing `aria-label` attribute value from the specified `editableElement` is preserved.\n\t */\n\tconstructor(\n\t\tlocale: Locale,\n\t\teditingView: EditingView,\n\t\teditableElement?: HTMLElement,\n\t\toptions: InlineEditableUIViewOptions = {}\n\t) {\n\t\tsuper( locale, editingView, editableElement );\n\n\t\tthis._options = options;\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\trole: 'textbox',\n\t\t\t\tclass: 'ck-editor__editable_inline'\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tconst editingView = this._editingView;\n\n\t\teditingView.change( writer => {\n\t\t\tconst viewRoot = editingView.document.getRoot( this.name! );\n\n\t\t\twriter.setAttribute( 'aria-label', this.getEditableAriaLabel(), viewRoot! );\n\t\t} );\n\t}\n\n\t/**\n\t * Returns a normalized label for the editable view based on the environment.\n\t */\n\tpublic getEditableAriaLabel(): string {\n\t\tconst t = this.locale!.t;\n\t\tconst label = this._options.label;\n\t\tconst editableElement = this._editableElement;\n\t\tconst editableName = this.name!;\n\n\t\tif ( typeof label == 'string' ) {\n\t\t\treturn label;\n\t\t} else if ( typeof label === 'object' ) {\n\t\t\treturn label[ editableName ];\n\t\t} else if ( typeof label === 'function' ) {\n\t\t\treturn label( this );\n\t\t} else if ( editableElement ) {\n\t\t\tconst existingLabel = editableElement.getAttribute( 'aria-label' );\n\n\t\t\tif ( existingLabel ) {\n\t\t\t\treturn existingLabel;\n\t\t\t}\n\t\t}\n\n\t\treturn t( 'Rich Text Editor. Editing area: %0', editableName );\n\t}\n}\n\nexport type InlineEditableUIViewOptions = {\n\tlabel?: ( ( view: InlineEditableUIView ) => string ) | string | Record<string, string>;\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/formrow/formrowview\n */\n\nimport { View } from '../view.js';\nimport { type ViewCollection } from '../viewcollection.js';\nimport { type LabelView } from '../label/labelview.js';\nimport { toArray, type ArrayOrItem, type Locale } from '@ckeditor/ckeditor5-utils';\n\nimport '../../theme/components/formrow/formrow.css';\n\n/**\n * The class representing a single row in a form,\n */\nexport class FormRowView extends View {\n\t/**\n\t * An additional CSS class added to the {@link #element}.\n\t *\n\t * @observable\n\t */\n\tpublic declare class: Array<string>;\n\n\t/**\n\t * A collection of row items (buttons, dropdowns, etc.).\n\t */\n\tpublic readonly children: ViewCollection;\n\n\t/**\n\t * The role property reflected by the `role` DOM attribute of the {@link #element}.\n\t *\n\t * **Note**: Used only when a `labelView` is passed to constructor `options`.\n\t *\n\t * @observable\n\t * @internal\n\t */\n\tpublic declare _role: string | null;\n\n\t/**\n\t * The ARIA property reflected by the `aria-labelledby` DOM attribute of the {@link #element}.\n\t *\n\t * **Note**: Used only when a `labelView` is passed to constructor `options`.\n\t *\n\t * @observable\n\t * @internal\n\t */\n\tpublic declare _ariaLabelledBy: string | null;\n\n\t/**\n\t * Creates an instance of the form row class.\n\t *\n\t * @param locale The locale instance.\n\t * @param options.labelView When passed, the row gets the `group` and `aria-labelledby`\n\t * DOM attributes and gets described by the label.\n\t */\n\tconstructor( locale: Locale, options: { children?: Array<View>; class?: ArrayOrItem<string>; labelView?: LabelView } = {} ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.set( 'class', [\n\t\t\t'ck',\n\t\t\t'ck-form__row',\n\t\t\t...toArray( options.class || [] )\n\t\t] );\n\t\tthis.children = this.createCollection();\n\n\t\tif ( options.children ) {\n\t\t\toptions.children.forEach( child => this.children.add( child ) );\n\t\t}\n\n\t\tthis.set( '_role', null );\n\t\tthis.set( '_ariaLabelledBy', null );\n\n\t\tif ( options.labelView ) {\n\t\t\tthis.set( {\n\t\t\t\t_role: 'group',\n\t\t\t\t_ariaLabelledBy: options.labelView.id\n\t\t\t} );\n\t\t}\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: bind.to( 'class', classes => classes.join( ' ' ) ),\n\t\t\t\trole: bind.to( '_role' ),\n\t\t\t\t'aria-labelledby': bind.to( '_ariaLabelledBy' )\n\t\t\t},\n\t\t\tchildren: this.children\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/iframe/iframeview\n */\n\nimport { View } from '../view.js';\n\nimport type { Locale } from '@ckeditor/ckeditor5-utils';\n\n/**\n * The iframe view class.\n *\n * ```ts\n * const iframe = new IframeView();\n *\n * iframe.render();\n * document.body.appendChild( iframe.element );\n *\n * iframe.on( 'loaded', () => {\n * \tconsole.log( 'The iframe has loaded', iframe.element.contentWindow );\n * } );\n *\n * iframe.element.src = 'https://ckeditor.com';\n * ```\n */\nexport class IframeView extends View<HTMLIFrameElement> {\n\t/**\n\t * Creates a new instance of the iframe view.\n\t *\n\t * @param locale The locale instance.\n\t */\n\tconstructor( locale?: Locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'iframe',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-reset_all'\n\t\t\t\t],\n\t\t\t\t// It seems that we need to allow scripts in order to be able to listen to events.\n\t\t\t\t// TODO: Research that. Perhaps the src must be set?\n\t\t\t\tsandbox: 'allow-same-origin allow-scripts'\n\t\t\t},\n\t\t\ton: {\n\t\t\t\tload: bind.to( 'loaded' )\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Renders the iframe's {@link #element} and returns a `Promise` for asynchronous\n\t * child `contentDocument` loading process.\n\t *\n\t * @returns A promise which resolves once the iframe `contentDocument` has\n\t * been {@link #event:loaded}.\n\t */\n\tpublic override render(): Promise<unknown> {\n\t\treturn new Promise( resolve => {\n\t\t\tthis.on<IframeViewLoadedEvent>( 'loaded', resolve );\n\n\t\t\treturn super.render();\n\t\t} );\n\t}\n}\n\n/**\n * Fired when the DOM iframe's `contentDocument` finished loading.\n *\n * @eventName ~IframeView#loaded\n */\nexport type IframeViewLoadedEvent = {\n\tname: 'loaded';\n\targs: [];\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/labeledinput/labeledinputview\n */\n\nimport { View } from '../view.js';\nimport { LabelView } from '../label/labelview.js';\n\nimport type { InputView, InputViewInputEvent } from '../input/inputview.js';\n\nimport { uid, type Locale } from '@ckeditor/ckeditor5-utils';\n\nimport '../../theme/components/labeledinput/labeledinput.css';\n\n/**\n * The labeled input view class.\n */\nexport class LabeledInputView extends View {\n\t/**\n\t * The label view.\n\t */\n\tpublic readonly labelView: LabelView;\n\n\t/**\n\t * The input view.\n\t */\n\tpublic readonly inputView: InputView;\n\n\t/**\n\t * The status view for the {@link #inputView}. It displays {@link #errorText} and\n\t * {@link #infoText}.\n\t */\n\tpublic readonly statusView: View;\n\n\t/**\n\t * The text of the label.\n\t *\n\t * @observable\n\t */\n\tdeclare public label: string | undefined;\n\n\t/**\n\t * The value of the input.\n\t *\n\t * @observable\n\t */\n\tdeclare public value: string | undefined;\n\n\t/**\n\t * Controls whether the component is in read-only mode.\n\t *\n\t * @observable\n\t */\n\tdeclare public isReadOnly: boolean;\n\n\t/**\n\t * The validation error text. When set, it will be displayed\n\t * next to the {@link #inputView} as a typical validation error message.\n\t * Set it to `null` to hide the message.\n\t *\n\t * **Note:** Setting this property to anything but `null` will automatically\n\t * make the {@link module:ui/inputtext/inputtextview~InputTextView#hasError `hasError`}\n\t * of the {@link #inputView} `true`.\n\t *\n\t * **Note:** Typing in the {@link #inputView} which fires the\n\t * {@link module:ui/inputtext/inputtextview~InputTextView#event:input `input` event}\n\t * resets this property back to `null`, indicating that the input field can be re–validated.\n\t *\n\t * @observable\n\t */\n\tdeclare public errorText: string | null;\n\n\t/**\n\t * The additional information text displayed next to the {@link #inputView} which can\n\t * be used to inform the user about the purpose of the input, provide help or hints.\n\t *\n\t * Set it to `null` to hide the message.\n\t *\n\t * **Note:** This text will be displayed in the same place as {@link #errorText} but the\n\t * latter always takes precedence: if the {@link #errorText} is set, it replaces\n\t * {@link #errorText} for as long as the value of the input is invalid.\n\t *\n\t * @observable\n\t */\n\tdeclare public infoText: string | null;\n\n\t/**\n\t * The combined status text made of {@link #errorText} and {@link #infoText}.\n\t * Note that when present, {@link #errorText} always takes precedence in the\n\t * status.\n\t *\n\t * @see #errorText\n\t * @see #infoText\n\t * @see #statusView\n\t * @private\n\t * @observable\n\t */\n\tdeclare public _statusText: string | null;\n\n\t/**\n\t * Creates an instance of the labeled input view class.\n\t *\n\t * @param locale The locale instance.\n\t * @param InputView Constructor of the input view.\n\t */\n\tconstructor(\n\t\tlocale: Locale | undefined,\n\t\tInputView: new ( locale: Locale | undefined, statusUid: string ) => InputView\n\t) {\n\t\tsuper( locale );\n\n\t\tconst inputUid = `ck-input-${ uid() }`;\n\t\tconst statusUid = `ck-status-${ uid() }`;\n\n\t\tthis.set( 'label', undefined );\n\t\tthis.set( 'value', undefined );\n\t\tthis.set( 'isReadOnly', false );\n\t\tthis.set( 'errorText', null );\n\t\tthis.set( 'infoText', null );\n\n\t\tthis.labelView = this._createLabelView( inputUid );\n\t\tthis.inputView = this._createInputView( InputView, inputUid, statusUid );\n\t\tthis.statusView = this._createStatusView( statusUid );\n\n\t\tthis.bind( '_statusText' ).to(\n\t\t\tthis, 'errorText',\n\t\t\tthis, 'infoText',\n\t\t\t( errorText, infoText ) => errorText || infoText\n\t\t);\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-labeled-input',\n\t\t\t\t\tbind.if( 'isReadOnly', 'ck-disabled' )\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\tthis.labelView,\n\t\t\t\tthis.inputView,\n\t\t\t\tthis.statusView\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * Creates label view class instance and bind with view.\n\t *\n\t * @param id Unique id to set as labelView#for attribute.\n\t */\n\tprivate _createLabelView( id: string ) {\n\t\tconst labelView = new LabelView( this.locale );\n\n\t\tlabelView.for = id;\n\t\tlabelView.bind( 'text' ).to( this, 'label' );\n\n\t\treturn labelView;\n\t}\n\n\t/**\n\t * Creates input view class instance and bind with view.\n\t *\n\t * @param InputView Input view constructor.\n\t * @param inputUid Unique id to set as inputView#id attribute.\n\t * @param statusUid Unique id of the status for the input's `aria-describedby` attribute.\n\t */\n\tprivate _createInputView(\n\t\tInputView: new ( locale: Locale | undefined, statusUid: string ) => InputView,\n\t\tinputUid: string,\n\t\tstatusUid: string\n\t) {\n\t\tconst inputView = new InputView( this.locale, statusUid );\n\n\t\tinputView.id = inputUid;\n\t\tinputView.ariaDescribedById = statusUid;\n\t\tinputView.bind( 'value' ).to( this );\n\t\tinputView.bind( 'isReadOnly' ).to( this );\n\t\tinputView.bind( 'hasError' ).to( this, 'errorText', value => !!value );\n\n\t\tinputView.on<InputViewInputEvent>( 'input', () => {\n\t\t\t// UX: Make the error text disappear and disable the error indicator as the user\n\t\t\t// starts fixing the errors.\n\t\t\tthis.errorText = null;\n\t\t} );\n\n\t\treturn inputView;\n\t}\n\n\t/**\n\t * Creates the status view instance. It displays {@link #errorText} and {@link #infoText}\n\t * next to the {@link #inputView}. See {@link #_statusText}.\n\t *\n\t * @param statusUid Unique id of the status, shared with the input's `aria-describedby` attribute.\n\t */\n\tprivate _createStatusView( statusUid: string ) {\n\t\tconst statusView = new View( this.locale );\n\t\tconst bind = this.bindTemplate;\n\n\t\tstatusView.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-labeled-input__status',\n\t\t\t\t\tbind.if( 'errorText', 'ck-labeled-input__status_error' ),\n\t\t\t\t\tbind.if( '_statusText', 'ck-hidden', value => !value )\n\t\t\t\t],\n\t\t\t\tid: statusUid,\n\t\t\t\trole: bind.if( 'errorText', 'alert' )\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttext: bind.to( '_statusText' )\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\treturn statusView;\n\t}\n\n\t/**\n\t * Moves the focus to the input and selects the value.\n\t */\n\tpublic select(): void {\n\t\tthis.inputView.select();\n\t}\n\n\t/**\n\t * Focuses the input.\n\t */\n\tpublic focus(): void {\n\t\tthis.inputView.focus();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/search/filtergroupanditemnames\n */\n\nimport { type ButtonView } from '../button/buttonview.js';\nimport { type ButtonLabelWithHighlightView } from '../highlightedtext/buttonlabelwithhighlightview.js';\nimport { type LabelWithHighlightView } from '../highlightedtext/labelwithhighlightview.js';\nimport { type ViewCollection } from '../viewcollection.js';\nimport { type ListItemGroupView } from '../list/listitemgroupview.js';\nimport { type ListItemView } from '../list/listitemview.js';\nimport { type ListSeparatorView } from '../list/listseparatorview.js';\n\n/**\n * A filter function that returns matching item and group names in the list view.\n */\nexport function filterGroupAndItemNames(\n\tregExp: RegExp | null,\n\titems: ViewCollection<ListItemGroupView | ListItemView | ListSeparatorView>\n): {\n\t\tresultsCount: number;\n\t\ttotalItemsCount: number;\n\t} {\n\tlet totalItemsCount = 0;\n\tlet resultsCount = 0;\n\n\tfor ( const groupView of items ) {\n\t\tconst group = groupView as ListItemGroupView;\n\t\tconst groupItems = group.items as ViewCollection<ListItemView>;\n\t\tconst isGroupLabelMatching = regExp && !!group.label.match( regExp );\n\n\t\t( group.labelView as LabelWithHighlightView ).highlightText( isGroupLabelMatching ? regExp : null );\n\n\t\tfor ( const listItemView of groupItems ) {\n\t\t\tconst buttonView = listItemView.children.first as ButtonView;\n\t\t\tconst labelView = buttonView.labelView as ButtonLabelWithHighlightView;\n\n\t\t\tif ( !regExp ) {\n\t\t\t\tlistItemView.isVisible = true;\n\t\t\t\tlabelView.highlightText( null );\n\t\t\t} else {\n\t\t\t\tconst isItemLabelMatching = !!buttonView.label!.match( regExp );\n\n\t\t\t\tlabelView.highlightText( isItemLabelMatching ? regExp : null );\n\n\t\t\t\tlistItemView.isVisible = isGroupLabelMatching || isItemLabelMatching;\n\t\t\t}\n\t\t}\n\n\t\tconst visibleInGroupCount = groupItems.filter( listItemView => listItemView.isVisible ).length;\n\n\t\ttotalItemsCount += group.items.length;\n\t\tresultsCount += isGroupLabelMatching ? group.items.length : visibleInGroupCount;\n\t\tgroup.isVisible = isGroupLabelMatching || !!visibleInGroupCount;\n\t}\n\n\treturn {\n\t\tresultsCount,\n\t\ttotalItemsCount\n\t};\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/notification/notification\n */\n\nimport { ContextPlugin } from '@ckeditor/ckeditor5-core';\n\n/**\n * The Notification plugin.\n *\n * This plugin sends a few types of notifications: `success`, `info` and `warning`. The notifications need to be\n * handled and displayed by a plugin responsible for showing the UI of the notifications. Using this plugin for dispatching\n * notifications makes it possible to switch the notifications UI.\n *\n * Note that every unhandled and not stopped `warning` notification will be displayed as a system alert.\n * See {@link module:ui/notification/notification~Notification#showWarning}.\n */\nexport class Notification extends ContextPlugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'Notification' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\t// Each unhandled and not stopped `show:warning` event is displayed as a system alert.\n\t\tthis.on<NotificationShowWarningEvent>( 'show:warning', ( evt, data ) => {\n\t\t\twindow.alert( data.message ); // eslint-disable-line no-alert\n\t\t}, { priority: 'lowest' } );\n\t}\n\n\t/**\n\t * Shows a success notification.\n\t *\n\t * By default, it fires the {@link #event:show:success `show:success` event} with the given `data`. The event namespace can be extended\n\t * using the `data.namespace` option. For example:\n\t *\n\t * ```ts\n\t * showSuccess( 'Image is uploaded.', {\n\t * \tnamespace: 'upload:image'\n\t * } );\n\t * ```\n\t *\n\t * will fire the `show:success:upload:image` event.\n\t *\n\t * You can provide the title of the notification:\n\t *\n\t * ```ts\n\t * showSuccess( 'Image is uploaded.', {\n\t * \ttitle: 'Image upload success'\n\t * } );\n\t * ```\n\t *\n\t * @param message The content of the notification.\n\t * @param data Additional data.\n\t * @param data.namespace Additional event namespace.\n\t * @param data.title The title of the notification.\n\t */\n\tpublic showSuccess(\n\t\tmessage: string,\n\t\tdata: { namespace?: string; title?: string } = {}\n\t): void {\n\t\tthis._showNotification( {\n\t\t\tmessage,\n\t\t\ttype: 'success',\n\t\t\tnamespace: data.namespace,\n\t\t\ttitle: data.title\n\t\t} );\n\t}\n\n\t/**\n\t * Shows an information notification.\n\t *\n\t * By default, it fires the {@link #event:show:info `show:info` event} with the given `data`. The event namespace can be extended\n\t * using the `data.namespace` option. For example:\n\t *\n\t * ```ts\n\t * showInfo( 'Editor is offline.', {\n\t * \tnamespace: 'editor:status'\n\t * } );\n\t * ```\n\t *\n\t * will fire the `show:info:editor:status` event.\n\t *\n\t * You can provide the title of the notification:\n\t *\n\t * ```ts\n\t * showInfo( 'Editor is offline.', {\n\t * \ttitle: 'Network information'\n\t * } );\n\t * ```\n\t *\n\t * @param message The content of the notification.\n\t * @param data Additional data.\n\t * @param data.namespace Additional event namespace.\n\t * @param data.title The title of the notification.\n\t */\n\tpublic showInfo(\n\t\tmessage: string,\n\t\tdata: { namespace?: string; title?: string } = {}\n\t): void {\n\t\tthis._showNotification( {\n\t\t\tmessage,\n\t\t\ttype: 'info',\n\t\t\tnamespace: data.namespace,\n\t\t\ttitle: data.title\n\t\t} );\n\t}\n\n\t/**\n\t * Shows a warning notification.\n\t *\n\t * By default, it fires the {@link #event:show:warning `show:warning` event}\n\t * with the given `data`. The event namespace can be extended using the `data.namespace` option. For example:\n\t *\n\t * ```ts\n\t * showWarning( 'Image upload error.', {\n\t * \tnamespace: 'upload:image'\n\t * } );\n\t * ```\n\t *\n\t * will fire the `show:warning:upload:image` event.\n\t *\n\t * You can provide the title of the notification:\n\t *\n\t * ```ts\n\t * showWarning( 'Image upload error.', {\n\t * \ttitle: 'Upload failed'\n\t * } );\n\t * ```\n\t *\n\t * Note that each unhandled and not stopped `warning` notification will be displayed as a system alert.\n\t * The plugin responsible for displaying warnings should `stop()` the event to prevent displaying it as an alert:\n\t *\n\t * ```ts\n\t * notifications.on( 'show:warning', ( evt, data ) => {\n\t * \t// Do something with the data.\n\t *\n\t * \t// Stop this event to prevent displaying it as an alert.\n\t * \tevt.stop();\n\t * } );\n\t * ```\n\t *\n\t * You can attach many listeners to the same event and `stop()` this event in a listener with a low priority:\n\t *\n\t * ```ts\n\t * notifications.on( 'show:warning', ( evt, data ) => {\n\t * \t// Show the warning in the UI, but do not stop it.\n\t * } );\n\t *\n\t * notifications.on( 'show:warning', ( evt, data ) => {\n\t * \t// Log the warning to some error tracker.\n\t *\n\t * \t// Stop this event to prevent displaying it as an alert.\n\t * \tevt.stop();\n\t * }, { priority: 'low' } );\n\t * ```\n\t *\n\t * @param message The content of the notification.\n\t * @param data Additional data.\n\t * @param data.namespace Additional event namespace.\n\t * @param data.title The title of the notification.\n\t */\n\tpublic showWarning(\n\t\tmessage: string,\n\t\tdata: { namespace?: string; title?: string } = {}\n\t): void {\n\t\tthis._showNotification( {\n\t\t\tmessage,\n\t\t\ttype: 'warning',\n\t\t\tnamespace: data.namespace,\n\t\t\ttitle: data.title\n\t\t} );\n\t}\n\n\t/**\n\t * Fires the `show` event with the specified type, namespace and message.\n\t *\n\t * @param data The message data.\n\t * @param data.message The content of the notification.\n\t * @param data.type The type of the message.\n\t * @param data.namespace Additional event namespace.\n\t * @param data.title The title of the notification.\n\t */\n\tprivate _showNotification( data: {\n\t\tmessage: string;\n\t\ttype: NotificationEventType;\n\t\tnamespace?: string;\n\t\ttitle?: string;\n\t} ): void {\n\t\tconst event = data.namespace ?\n\t\t\t`show:${ data.type }:${ data.namespace }` as const :\n\t\t\t`show:${ data.type }` as const;\n\n\t\tthis.fire<NotificationShowTypeEvent<typeof data.type>>( event, {\n\t\t\tmessage: data.message,\n\t\t\ttype: data.type,\n\t\t\ttitle: data.title || ''\n\t\t} );\n\t}\n}\n\nexport type NotificationEventType = 'success' | 'info' | 'warning';\n\n/**\n * Fired when one of the `showSuccess()`, `showInfo()`, `showWarning()` methods is called.\n *\n * @eventName ~Notification#show\n * @param data The notification data.\n */\nexport type NotificationShowEvent = {\n\tname: 'show';\n\targs: [ data: NotificationShowEventData ];\n};\n\n/**\n * Fired when the `showSuccess()` method is called.\n *\n * @eventName ~Notification#show:success\n * @param data The notification data.\n */\nexport type NotificationShowSuccessEvent = NotificationShowTypeEvent<'success'>;\n\n/**\n * Fired when the `showInfo()` method is called.\n *\n * @eventName ~Notification#show:info\n * @param data The notification data.\n */\nexport type NotificationShowInfoEvent = NotificationShowTypeEvent<'info'>;\n\n/**\n * Fired when the `showWarning()` method is called.\n *\n * When this event is not handled or stopped by `event.stop()`, the `data.message` of this event will\n * be automatically displayed as a system alert.\n *\n * @eventName ~Notification#show:warning\n * @param data The notification data.\n */\nexport type NotificationShowWarningEvent = NotificationShowTypeEvent<'warning'>;\n\nexport type NotificationShowTypeEvent<NotificationType extends NotificationEventType> = {\n\tname: `show:${ NotificationType }` | `show:${ NotificationType }:${ string }`;\n\targs: [ data: NotificationShowEventData<NotificationType> ];\n};\n\nexport type NotificationShowEventData<NotificationType extends NotificationEventType = NotificationEventType> = {\n\n\t/**\n\t * The content of the notification.\n\t */\n\tmessage: string;\n\n\t/**\n\t * The title of the notification.\n\t */\n\ttitle: string;\n\n\t/**\n\t * The type of the notification.\n\t */\n\ttype: NotificationType;\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/model\n */\n\nimport { ObservableMixin } from '@ckeditor/ckeditor5-utils';\nimport { extend } from 'es-toolkit/compat';\n\n/**\n * The base MVC model class.\n */\nexport class UIModel extends /* #__PURE__ */ ObservableMixin() {\n\t[ x: string ]: unknown;\n\n\t/**\n\t * Creates a new Model instance.\n\t *\n\t * @param attributes The model state attributes to be defined during the instance creation.\n\t * @param properties The (out of state) properties to be appended to the instance during creation.\n\t */\n\tconstructor( attributes?: Record<string, unknown>, properties?: Record<string, unknown> ) {\n\t\tsuper();\n\n\t\t// Extend this instance with the additional (out of state) properties.\n\t\tif ( properties ) {\n\t\t\textend( this, properties );\n\t\t}\n\n\t\t// Initialize the attributes.\n\t\tif ( attributes ) {\n\t\t\tthis.set( attributes );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/panel/balloon/contextualballoon\n */\n\nimport { BalloonPanelView } from './balloonpanelview.js';\nimport { View } from '../../view.js';\nimport { ButtonView } from '../../button/buttonview.js';\nimport type { ButtonExecuteEvent } from '../../button/button.js';\nimport { type ViewCollection } from '../../viewcollection.js';\n\nimport { Plugin, type Editor } from '@ckeditor/ckeditor5-core';\nimport {\n\tCKEditorError,\n\tFocusTracker,\n\tRect,\n\ttoUnit,\n\ttype Locale,\n\ttype ObservableChangeEvent,\n\ttype DomOptimalPositionOptions,\n\ttype DecoratedMethodEvent\n} from '@ckeditor/ckeditor5-utils';\nimport { IconNextArrow, IconPreviousArrow } from '@ckeditor/ckeditor5-icons';\n\nimport '../../../theme/components/panel/balloonrotator.css';\nimport '../../../theme/components/panel/fakepanel.css';\n\nconst toPx = /* #__PURE__ */ toUnit( 'px' );\n\n/**\n * Provides the common contextual balloon for the editor.\n *\n * The role of this plugin is to unify the contextual balloons logic, simplify views management and help\n * avoid the unnecessary complexity of handling multiple {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView}\n * instances in the editor.\n *\n * This plugin allows for creating single or multiple panel stacks.\n *\n * Each stack may have multiple views, with the one on the top being visible. When the visible view is removed from the stack,\n * the previous view becomes visible.\n *\n * It might be useful to implement nested navigation in a balloon. For instance, a toolbar view may contain a link button.\n * When you click it, a link view (which lets you set the URL) is created and put on top of the toolbar view, so the link panel\n * is displayed. When you finish editing the link and close (remove) the link view, the toolbar view is visible again.\n *\n * However, there are cases when there are multiple independent balloons to be displayed, for instance, if the selection\n * is inside two inline comments at the same time. For such cases, you can create two independent panel stacks.\n * The contextual balloon plugin will create a navigation bar to let the users switch between these panel stacks using the \"Next\"\n * and \"Previous\" buttons.\n *\n * If there are no views in the current stack, the balloon panel will try to switch to the next stack. If there are no\n * panels in any stack, the balloon panel will be hidden.\n *\n * **Note**: To force the balloon panel to show only one view, even if there are other stacks, use the `singleViewMode=true` option\n * when {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon#add adding} a view to a panel.\n *\n * From the implementation point of view, the contextual ballon plugin is reusing a single\n * {@link module:ui/panel/balloon/balloonpanelview~BalloonPanelView} instance to display multiple contextual balloon\n * panels in the editor. It also creates a special {@link module:ui/panel/balloon/contextualballoon~RotatorView rotator view},\n * used to manage multiple panel stacks. Rotator view is a child of the balloon panel view and the parent of the specific\n * view you want to display. If there is more than one panel stack to be displayed, the rotator view will add a\n * navigation bar. If there is only one stack, the rotator view is transparent (it does not add any UI elements).\n */\nexport class ContextualBalloon extends Plugin {\n\t/**\n\t * The {@link module:utils/dom/position~DomOptimalPositionOptions#limiter position limiter}\n\t * for the {@link #view balloon}, used when no `limiter` has been passed into {@link #add}\n\t * or {@link #updatePosition}.\n\t *\n\t * By default, a function that obtains the farthest DOM\n\t * {@link module:engine/view/rooteditableelement~ViewRootEditableElement}\n\t * of the {@link module:engine/view/document~ViewDocument#selection}.\n\t */\n\tpublic positionLimiter: DomOptimalPositionOptions[ 'limiter' ];\n\n\tpublic visibleStack?: string;\n\n\t/**\n\t * The currently visible view or `null` when there are no views in any stack.\n\t *\n\t * @readonly\n\t * @observable\n\t */\n\tdeclare public visibleView: View | null;\n\n\t/**\n\t * A total number of all stacks in the balloon.\n\t *\n\t * @private\n\t * @readonly\n\t * @observable\n\t */\n\tdeclare public _numberOfStacks: number;\n\n\t/**\n\t * A flag that controls the single view mode.\n\t *\n\t * @private\n\t * @readonly\n\t * @observable\n\t */\n\tdeclare public _singleViewMode: boolean;\n\n\t/**\n\t * The map of views and their stacks.\n\t */\n\tprivate _viewToStack = new Map<View, Stack>();\n\n\t/**\n\t * The map of IDs and stacks.\n\t */\n\tprivate _idToStack = new Map<string, Stack>();\n\n\t/**\n\t * The common balloon panel view.\n\t */\n\tprivate _view: BalloonPanelView | null = null;\n\n\t/**\n\t * Rotator view embedded in the contextual balloon.\n\t * Displays the currently visible view in the balloon and provides navigation for switching stacks.\n\t */\n\tprivate _rotatorView: RotatorView | null = null;\n\n\t/**\n\t * Displays fake panels under the balloon panel view when multiple stacks are added to the balloon.\n\t */\n\tprivate _fakePanelsView: FakePanelsView | null = null;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'ContextualBalloon' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor: Editor ) {\n\t\tsuper( editor );\n\n\t\tthis.positionLimiter = () => {\n\t\t\tconst view = this.editor.editing.view;\n\t\t\tconst viewDocument = view.document;\n\t\t\tconst editableElement = viewDocument.selection.editableElement;\n\n\t\t\tif ( editableElement ) {\n\t\t\t\treturn view.domConverter.mapViewToDom( editableElement.root ) as HTMLElement;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tthis.decorate( 'getPositionOptions' );\n\n\t\tthis.set( 'visibleView', null );\n\t\tthis.set( '_numberOfStacks', 0 );\n\t\tthis.set( '_singleViewMode', false );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\n\t\tif ( this._view ) {\n\t\t\tthis._view.destroy();\n\t\t}\n\n\t\tif ( this._rotatorView ) {\n\t\t\tthis._rotatorView.destroy();\n\t\t}\n\n\t\tif ( this._fakePanelsView ) {\n\t\t\tthis._fakePanelsView.destroy();\n\t\t}\n\t}\n\n\t/**\n\t * The common balloon panel view.\n\t */\n\tpublic get view(): BalloonPanelView {\n\t\tif ( !this._view ) {\n\t\t\tthis._createPanelView();\n\t\t}\n\n\t\treturn this._view!;\n\t}\n\n\t/**\n\t * Returns `true` when the given view is in one of the stacks. Otherwise returns `false`.\n\t */\n\tpublic hasView( view: View ): boolean {\n\t\treturn Array.from( this._viewToStack.keys() ).includes( view );\n\t}\n\n\t/**\n\t * Adds a new view to the stack and makes it visible if the current stack is visible\n\t * or it is the first view in the balloon.\n\t *\n\t * @param data The configuration of the view.\n\t * @param data.stackId The ID of the stack that the view is added to. Defaults to `'main'`.\n\t * @param data.view The content of the balloon.\n\t * @param data.position Positioning options.\n\t * @param data.balloonClassName An additional CSS class added to the {@link #view balloon} when visible.\n\t * @param data.withArrow Whether the {@link #view balloon} should be rendered with an arrow. Defaults to `true`.\n\t * @param data.singleViewMode Whether the view should be the only visible view even if other stacks were added. Defaults to `false`.\n\t */\n\tpublic add( data: ViewConfiguration ): void {\n\t\tif ( !this._view ) {\n\t\t\tthis._createPanelView();\n\t\t}\n\n\t\tif ( this.hasView( data.view ) ) {\n\t\t\t/**\n\t\t\t * Trying to add configuration of the same view more than once.\n\t\t\t *\n\t\t\t * @error contextualballoon-add-view-exist\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'contextualballoon-add-view-exist',\n\t\t\t\t[ this, data ]\n\t\t\t);\n\t\t}\n\n\t\tconst stackId = data.stackId || 'main';\n\n\t\t// If new stack is added, creates it and show view from this stack.\n\t\tif ( !this._idToStack.has( stackId ) ) {\n\t\t\tthis._idToStack.set( stackId, new Map( [ [ data.view, data ] ] ) );\n\t\t\tthis._viewToStack.set( data.view, this._idToStack.get( stackId )! );\n\t\t\tthis._numberOfStacks = this._idToStack.size;\n\n\t\t\tif ( !this._visibleStack || data.singleViewMode ) {\n\t\t\t\tthis.showStack( stackId );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst stack = this._idToStack.get( stackId )!;\n\n\t\tif ( data.singleViewMode ) {\n\t\t\tthis.showStack( stackId );\n\t\t}\n\n\t\t// Add new view to the stack.\n\t\tstack.set( data.view, data );\n\t\tthis._viewToStack.set( data.view, stack );\n\n\t\t// And display it if is added to the currently visible stack.\n\t\tif ( stack === this._visibleStack ) {\n\t\t\tthis._showView( data );\n\t\t}\n\t}\n\n\t/**\n\t * Removes the given view from the stack. If the removed view was visible,\n\t * the view preceding it in the stack will become visible instead.\n\t * When there is no view in the stack, the next stack will be displayed.\n\t * When there are no more stacks, the balloon will hide.\n\t *\n\t * @param view A view to be removed from the balloon.\n\t */\n\tpublic remove( view: View ): void {\n\t\tif ( !this.hasView( view ) ) {\n\t\t\t/**\n\t\t\t * Trying to remove the configuration of the view not defined in the stack.\n\t\t\t *\n\t\t\t * @error contextualballoon-remove-view-not-exist\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'contextualballoon-remove-view-not-exist',\n\t\t\t\t[ this, view ]\n\t\t\t);\n\t\t}\n\n\t\tconst stack = this._viewToStack.get( view )!;\n\n\t\tif ( this._singleViewMode && this.visibleView === view ) {\n\t\t\tthis._singleViewMode = false;\n\t\t}\n\n\t\t// When visible view will be removed we need to show a preceding view or next stack\n\t\t// if a view is the only view in the stack.\n\t\tif ( this.visibleView === view ) {\n\t\t\tif ( stack.size === 1 ) {\n\t\t\t\tif ( this._idToStack.size > 1 ) {\n\t\t\t\t\tthis._showNextStack();\n\t\t\t\t} else {\n\t\t\t\t\tthis.view.hide();\n\t\t\t\t\tthis.visibleView = null;\n\t\t\t\t\tthis._rotatorView!.hideView();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._showView( Array.from( stack.values() )[ stack.size - 2 ] );\n\t\t\t}\n\t\t}\n\n\t\tif ( stack.size === 1 ) {\n\t\t\tthis._idToStack.delete( this._getStackId( stack ) );\n\t\t\tthis._numberOfStacks = this._idToStack.size;\n\t\t} else {\n\t\t\tstack.delete( view );\n\t\t}\n\n\t\tthis._viewToStack.delete( view );\n\t}\n\n\t/**\n\t * Updates the position of the balloon using the position data of the first visible view in the stack.\n\t * When new position data is given, the position data of the currently visible view will be updated.\n\t *\n\t * @param position Position options.\n\t */\n\tpublic updatePosition( position?: Partial<DomOptimalPositionOptions> ): void {\n\t\tif ( position ) {\n\t\t\tthis._visibleStack.get( this.visibleView! )!.position = position;\n\t\t}\n\n\t\tthis.view.pin( this.getPositionOptions()! );\n\t\tthis._fakePanelsView!.updatePosition();\n\t}\n\n\t/**\n\t * Returns position options of the last view in the stack.\n\t * This keeps the balloon in the same position when the view is changed.\n\t */\n\tpublic getPositionOptions(): Partial<DomOptimalPositionOptions> | undefined {\n\t\tlet position = Array.from( this._visibleStack.values() ).pop()!.position;\n\n\t\tif ( position ) {\n\t\t\t// Use the default limiter if none has been specified.\n\t\t\tif ( !position.limiter ) {\n\t\t\t\t// Don't modify the original options object.\n\t\t\t\tposition = Object.assign( {}, position, {\n\t\t\t\t\tlimiter: this.positionLimiter\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t// Don't modify the original options object.\n\t\t\tposition = Object.assign( {}, position, {\n\t\t\t\tviewportOffsetConfig: {\n\t\t\t\t\t...this.editor.ui.viewportOffset,\n\t\t\t\t\ttop: this.editor.ui.viewportOffset.visualTop\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Shows the last view from the stack of a given ID.\n\t */\n\tpublic showStack( id: string ): void {\n\t\tthis.visibleStack = id;\n\t\tconst stack = this._idToStack.get( id );\n\n\t\tif ( !stack ) {\n\t\t\t/**\n\t\t\t * Trying to show a stack that does not exist.\n\t\t\t *\n\t\t\t * @error contextualballoon-showstack-stack-not-exist\n\t\t\t */\n\t\t\tthrow new CKEditorError(\n\t\t\t\t'contextualballoon-showstack-stack-not-exist',\n\t\t\t\tthis\n\t\t\t);\n\t\t}\n\n\t\tif ( this._visibleStack === stack ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._showView( Array.from( stack.values() ).pop()! );\n\t}\n\n\t/**\n\t * Initializes view instances.\n\t */\n\tprivate _createPanelView(): void {\n\t\tthis._view = new BalloonPanelView( this.editor.locale );\n\n\t\tthis.editor.ui.view.body.add( this._view );\n\n\t\tthis._rotatorView = this._createRotatorView();\n\t\tthis._fakePanelsView = this._createFakePanelsView();\n\t}\n\n\t/**\n\t * Returns the stack of the currently visible view.\n\t */\n\tprivate get _visibleStack() {\n\t\treturn this._viewToStack.get( this.visibleView! )!;\n\t}\n\n\t/**\n\t * Returns the ID of the given stack.\n\t */\n\tprivate _getStackId( stack: Stack ) {\n\t\tconst entry = Array.from( this._idToStack.entries() ).find( entry => entry[ 1 ] === stack )!;\n\n\t\treturn entry[ 0 ];\n\t}\n\n\t/**\n\t * Shows the last view from the next stack.\n\t */\n\tprivate _showNextStack() {\n\t\tconst stacks = Array.from( this._idToStack.values() );\n\n\t\tlet nextIndex = stacks.indexOf( this._visibleStack ) + 1;\n\n\t\tif ( !stacks[ nextIndex ] ) {\n\t\t\tnextIndex = 0;\n\t\t}\n\n\t\tthis.showStack( this._getStackId( stacks[ nextIndex ] ) );\n\t}\n\n\t/**\n\t * Shows the last view from the previous stack.\n\t */\n\tprivate _showPrevStack() {\n\t\tconst stacks = Array.from( this._idToStack.values() );\n\n\t\tlet nextIndex = stacks.indexOf( this._visibleStack ) - 1;\n\n\t\tif ( !stacks[ nextIndex ] ) {\n\t\t\tnextIndex = stacks.length - 1;\n\t\t}\n\n\t\tthis.showStack( this._getStackId( stacks[ nextIndex ] ) );\n\t}\n\n\t/**\n\t * Creates a rotator view.\n\t */\n\tprivate _createRotatorView() {\n\t\tconst view = new RotatorView( this.editor.locale );\n\t\tconst t = this.editor.locale.t;\n\n\t\tthis.view.content.add( view );\n\n\t\t// Hide navigation when there is only a one stack & not in single view mode.\n\t\tview.bind( 'isNavigationVisible' ).to( this, '_numberOfStacks', this, '_singleViewMode', ( value, isSingleViewMode ) => {\n\t\t\treturn !isSingleViewMode && value > 1;\n\t\t} );\n\n\t\t// Update balloon position after toggling navigation.\n\t\tview.on<ObservableChangeEvent>( 'change:isNavigationVisible', () => ( this.updatePosition() ), { priority: 'low' } );\n\n\t\t// Update stacks counter value.\n\t\tview.bind( 'counter' ).to( this, 'visibleView', this, '_numberOfStacks', ( visibleView, numberOfStacks ) => {\n\t\t\tif ( numberOfStacks < 2 ) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tconst current = Array.from( this._idToStack.values() ).indexOf( this._visibleStack ) + 1;\n\n\t\t\treturn t( '%0 of %1', [ current, numberOfStacks ] );\n\t\t} );\n\n\t\tview.buttonNextView.on<ButtonExecuteEvent>( 'execute', () => {\n\t\t\t// When current view has a focus then move focus to the editable before removing it,\n\t\t\t// otherwise editor will lost focus.\n\t\t\tif ( view.focusTracker.isFocused ) {\n\t\t\t\tthis.editor.editing.view.focus();\n\t\t\t}\n\n\t\t\tthis._showNextStack();\n\t\t} );\n\n\t\tview.buttonPrevView.on<ButtonExecuteEvent>( 'execute', () => {\n\t\t\t// When current view has a focus then move focus to the editable before removing it,\n\t\t\t// otherwise editor will lost focus.\n\t\t\tif ( view.focusTracker.isFocused ) {\n\t\t\t\tthis.editor.editing.view.focus();\n\t\t\t}\n\n\t\t\tthis._showPrevStack();\n\t\t} );\n\n\t\treturn view;\n\t}\n\n\t/**\n\t * Creates a fake panels view.\n\t */\n\tprivate _createFakePanelsView() {\n\t\tconst view = new FakePanelsView( this.editor.locale, this.view );\n\n\t\tview.bind( 'numberOfPanels' ).to( this, '_numberOfStacks', this, '_singleViewMode', ( number, isSingleViewMode ) => {\n\t\t\tconst showPanels = !isSingleViewMode && number >= 2;\n\n\t\t\treturn showPanels ? Math.min( number - 1, 2 ) : 0;\n\t\t} );\n\n\t\tview.listenTo<ObservableChangeEvent>( this.view, 'change:top', () => view.updatePosition() );\n\t\tview.listenTo<ObservableChangeEvent>( this.view, 'change:left', () => view.updatePosition() );\n\n\t\tthis.editor.ui.view.body.add( view );\n\n\t\treturn view;\n\t}\n\n\t/**\n\t * Sets the view as the content of the balloon and attaches the balloon using position\n\t * options of the first view.\n\t *\n\t * @param data Configuration.\n\t * @param data.view The view to show in the balloon.\n\t * @param data.balloonClassName Additional class name which will be added to the {@link #view balloon}.\n\t * @param data.withArrow Whether the {@link #view balloon} should be rendered with an arrow.\n\t */\n\tprivate _showView( { view, balloonClassName = '', withArrow = true, singleViewMode = false }: ViewConfiguration ) {\n\t\tthis.view.class = balloonClassName;\n\t\tthis.view.withArrow = withArrow;\n\n\t\tthis._rotatorView!.showView( view );\n\t\tthis.visibleView = view;\n\t\tthis.view.pin( this.getPositionOptions()! );\n\t\tthis._fakePanelsView!.updatePosition();\n\n\t\tif ( singleViewMode ) {\n\t\t\tthis._singleViewMode = true;\n\t\t}\n\t}\n}\n\n/**\n * An event fired when the {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon} is about to get the position of the balloon.\n *\n * @eventName ~ContextualBalloon#getPositionOptions\n */\nexport type ContextualBalloonGetPositionOptionsEvent = DecoratedMethodEvent<ContextualBalloon, 'getPositionOptions'>;\n\n/**\n * The configuration of the view.\n */\nexport interface ViewConfiguration {\n\n\t/**\n\t * The ID of the stack that the view is added to.\n\t *\n\t * @default 'main'\n\t */\n\tstackId?: string;\n\n\t/**\n\t * The content of the balloon.\n\t */\n\tview: View;\n\n\t/**\n\t * Positioning options.\n\t */\n\tposition?: Partial<DomOptimalPositionOptions>;\n\n\t/**\n\t * An additional CSS class added to the {@link #view balloon} when visible.\n\t */\n\tballoonClassName?: string;\n\n\t/**\n\t * Whether the {@link #view balloon} should be rendered with an arrow.\n\t *\n\t * @default true\n\t */\n\twithArrow?: boolean;\n\n\t/**\n\t * Whether the view should be the only visible view even if other stacks were added.\n\t *\n\t * @default false\n\t */\n\tsingleViewMode?: boolean;\n}\n\ntype Stack = Map<View, ViewConfiguration>;\n\n/**\n * Rotator view is a helper class for the {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon ContextualBalloon}.\n * It is used for displaying the last view from the current stack and providing navigation buttons for switching stacks.\n * See the {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon ContextualBalloon} documentation to learn more.\n * @internal\n */\nexport class RotatorView extends View {\n\t/**\n\t * Used for checking if a view is focused or not.\n\t */\n\tpublic readonly focusTracker: FocusTracker;\n\n\t/**\n\t * Navigation button for switching the stack to the previous one.\n\t */\n\tpublic readonly buttonPrevView: ButtonView;\n\n\t/**\n\t * Navigation button for switching the stack to the next one.\n\t */\n\tpublic readonly buttonNextView: ButtonView;\n\n\t/**\n\t * A collection of the child views that creates the rotator content.\n\t */\n\tpublic readonly content: ViewCollection;\n\n\t/**\n\t * Defines whether navigation is visible or not.\n\t *\n\t * @observable\n\t */\n\tdeclare public isNavigationVisible: boolean;\n\n\t/**\n\t * @observable\n\t */\n\tdeclare public counter: string;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale: Locale ) {\n\t\tsuper( locale );\n\n\t\tconst t = locale.t;\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.set( 'isNavigationVisible', true );\n\n\t\tthis.focusTracker = new FocusTracker();\n\t\tthis.buttonPrevView = this._createButtonView( t( 'Previous' ), IconPreviousArrow );\n\t\tthis.buttonNextView = this._createButtonView( t( 'Next' ), IconNextArrow );\n\t\tthis.content = this.createCollection();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-balloon-rotator'\n\t\t\t\t],\n\t\t\t\t'z-index': '-1'\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'ck-balloon-rotator__navigation',\n\t\t\t\t\t\t\tbind.to( 'isNavigationVisible', value => value ? '' : 'ck-hidden' )\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\tthis.buttonPrevView,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttag: 'span',\n\n\t\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t\t\t'ck-balloon-rotator__counter'\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttext: bind.to( 'counter' )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\tthis.buttonNextView\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: 'ck-balloon-rotator__content'\n\t\t\t\t\t},\n\t\t\t\t\tchildren: this.content\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tthis.focusTracker.add( this.element! );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\n\t\tthis.focusTracker.destroy();\n\t}\n\n\t/**\n\t * Shows a given view.\n\t *\n\t * @param view The view to show.\n\t */\n\tpublic showView( view: View ): void {\n\t\tthis.hideView();\n\t\tthis.content.add( view );\n\t}\n\n\t/**\n\t * Hides the currently displayed view.\n\t */\n\tpublic hideView(): void {\n\t\tthis.content.clear();\n\t}\n\n\t/**\n\t * Creates a navigation button view.\n\t *\n\t * @param label The button label.\n\t * @param icon The button icon.\n\t */\n\tprivate _createButtonView( label: string, icon: string ) {\n\t\tconst view = new ButtonView( this.locale );\n\n\t\tview.set( {\n\t\t\tlabel,\n\t\t\ticon,\n\t\t\ttooltip: true\n\t\t} );\n\n\t\treturn view;\n\t}\n}\n\n/**\n * Displays additional layers under the balloon when multiple stacks are added to the balloon.\n */\nclass FakePanelsView extends View {\n\t/**\n\t * Collection of the child views which creates fake panel content.\n\t */\n\tpublic readonly content: ViewCollection;\n\n\t/**\n\t * Fake panels top offset.\n\t *\n\t * @observable\n\t */\n\tdeclare public top: number;\n\n\t/**\n\t * Fake panels left offset.\n\t *\n\t * @observable\n\t */\n\tdeclare public left: number;\n\n\t/**\n\t * Fake panels height.\n\t *\n\t * @observable\n\t */\n\tdeclare public height: number;\n\n\t/**\n\t * Fake panels width.\n\t *\n\t * @observable\n\t */\n\tdeclare public width: number;\n\n\t/**\n\t * Number of rendered fake panels.\n\t *\n\t * @observable\n\t */\n\tdeclare public numberOfPanels: number;\n\n\t/**\n\t * Context.\n\t */\n\tprivate readonly _balloonPanelView: BalloonPanelView;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale: Locale, balloonPanelView: BalloonPanelView ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.set( 'top', 0 );\n\t\tthis.set( 'left', 0 );\n\t\tthis.set( 'height', 0 );\n\t\tthis.set( 'width', 0 );\n\t\tthis.set( 'numberOfPanels', 0 );\n\n\t\tthis.content = this.createCollection();\n\t\tthis._balloonPanelView = balloonPanelView;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-fake-panel',\n\t\t\t\t\tbind.to( 'numberOfPanels', number => number ? '' : 'ck-hidden' )\n\t\t\t\t],\n\t\t\t\tstyle: {\n\t\t\t\t\ttop: bind.to( 'top', toPx ),\n\t\t\t\t\tleft: bind.to( 'left', toPx ),\n\t\t\t\t\twidth: bind.to( 'width', toPx ),\n\t\t\t\t\theight: bind.to( 'height', toPx )\n\t\t\t\t}\n\t\t\t},\n\t\t\tchildren: this.content\n\t\t} );\n\n\t\tthis.on<ObservableChangeEvent<number>>( 'change:numberOfPanels', ( evt, name, next, prev ) => {\n\t\t\tif ( next > prev ) {\n\t\t\t\tthis._addPanels( next - prev );\n\t\t\t} else {\n\t\t\t\tthis._removePanels( prev - next );\n\t\t\t}\n\n\t\t\tthis.updatePosition();\n\t\t} );\n\t}\n\n\tprivate _addPanels( number: number ) {\n\t\twhile ( number-- ) {\n\t\t\tconst view = new View();\n\n\t\t\tview.setTemplate( { tag: 'div' } );\n\n\t\t\tthis.content.add( view );\n\t\t\tthis.registerChild( view );\n\t\t}\n\t}\n\n\tprivate _removePanels( number: number ) {\n\t\twhile ( number-- ) {\n\t\t\tconst view = this.content.last!;\n\n\t\t\tthis.content.remove( view );\n\t\t\tthis.deregisterChild( view );\n\t\t\tview.destroy();\n\t\t}\n\t}\n\n\t/**\n\t * Updates coordinates of fake panels.\n\t */\n\tpublic updatePosition() {\n\t\tif ( this.numberOfPanels ) {\n\t\t\tconst { top, left } = this._balloonPanelView;\n\t\t\tconst { width, height } = new Rect( this._balloonPanelView.element! );\n\n\t\t\tObject.assign( this, { top, left, width, height } );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/panel/sticky/stickypanelview\n */\n\nimport { View } from '../../view.js';\nimport { Template } from '../../template.js';\n\nimport { type ViewCollection } from '../../viewcollection.js';\n\nimport {\n\ttype Locale,\n\ttype ObservableChangeEvent,\n\tRect,\n\ttoUnit,\n\tgetVisualViewportOffset,\n\tglobal\n} from '@ckeditor/ckeditor5-utils';\n\n// @if CK_DEBUG_STICKYPANEL // const {\n// @if CK_DEBUG_STICKYPANEL // \tdefault: RectDrawer,\n// @if CK_DEBUG_STICKYPANEL // \tdiagonalStylesBlack\n// @if CK_DEBUG_STICKYPANEL // } = require( '@ckeditor/ckeditor5-utils/tests/_utils/rectdrawer' );\n\nimport '../../../theme/components/panel/stickypanel.css';\n\nconst toPx = /* #__PURE__ */ toUnit( 'px' );\n\n/**\n * The sticky panel view class.\n */\nexport class StickyPanelView extends View {\n\t/**\n\t * Collection of the child views which creates balloon panel contents.\n\t */\n\tpublic readonly content: ViewCollection;\n\n\t/**\n\t * Controls whether the sticky panel should be active.\n\t *\n\t * @readonly\n\t * @observable\n\t */\n\tdeclare public isActive: boolean;\n\n\t/**\n\t * Controls whether the sticky panel is in the \"sticky\" state.\n\t *\n\t * @readonly\n\t * @observable\n\t */\n\tdeclare public isSticky: boolean;\n\n\t/**\n\t * The limiter element for the sticky panel instance. Its bounding rect limits\n\t * the \"stickyness\" of the panel, i.e. when the panel reaches the bottom\n\t * edge of the limiter, it becomes sticky to that edge and does not float\n\t * off the limiter. It is mandatory for the panel to work properly and once\n\t * set, it cannot be changed.\n\t *\n\t * @readonly\n\t * @observable\n\t */\n\tdeclare public limiterElement: HTMLElement | null;\n\n\t/**\n\t * The offset from the bottom edge of {@link #limiterElement}\n\t * which stops the panel from stickying any further to prevent limiter's content\n\t * from being completely covered.\n\t *\n\t * @readonly\n\t * @observable\n\t * @default 50\n\t */\n\tdeclare public limiterBottomOffset: number;\n\n\t/**\n\t * The offset from the top edge of the web browser's viewport which makes the\n\t * panel become sticky. The default value is `0`, which means the panel becomes\n\t * sticky when it's upper edge touches the top of the page viewport.\n\t *\n\t * This attribute is useful when the web page has UI elements positioned to the top\n\t * either using `position: fixed` or `position: sticky`, which would cover the\n\t * sticky panel or vice–versa (depending on the `z-index` hierarchy).\n\t *\n\t * Bound to {@link module:ui/editorui/editorui~EditorUI#viewportOffset `EditorUI#viewportOffset`}.\n\t *\n\t * If {@link module:core/editor/editorconfig~EditorConfig#ui `EditorConfig#ui.viewportOffset.top`} is defined, then\n\t * it will override the default value.\n\t *\n\t * @observable\n\t * @default 0\n\t */\n\tdeclare public viewportTopOffset: number;\n\n\t/**\n\t * The panel which accepts children into {@link #content} collection.\n\t * Also an element which is positioned when {@link #isSticky}.\n\t */\n\tpublic contentPanelElement: HTMLElement;\n\n\t/**\n\t * Controls the `margin-left` CSS style of the panel.\n\t *\n\t * @private\n\t * @readonly\n\t * @observable\n\t */\n\tdeclare public _marginLeft: string | null;\n\n\t/**\n\t * Set `true` if the sticky panel reached the bottom edge of the\n\t * {@link #limiterElement}.\n\t *\n\t * @private\n\t * @readonly\n\t * @observable\n\t */\n\tdeclare public _isStickyToTheBottomOfLimiter: boolean;\n\n\t/**\n\t * The `top` CSS position of the panel when it is sticky to the top of the viewport or scrollable\n\t * ancestors of the {@link #limiterElement}.\n\t *\n\t * @private\n\t * @readonly\n\t * @observable\n\t */\n\tdeclare public _stickyTopOffset: number | null;\n\n\t/**\n\t * The `bottom` CSS position of the panel when it is sticky to the bottom of the {@link #limiterElement}.\n\t *\n\t * @private\n\t * @readonly\n\t * @observable\n\t */\n\tdeclare public _stickyBottomOffset: number | null;\n\n\t/**\n\t * A dummy element which visually fills the space as long as the\n\t * actual panel is sticky. It prevents flickering of the UI.\n\t */\n\tprivate _contentPanelPlaceholder: HTMLElement;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale?: Locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.set( 'isActive', false );\n\t\tthis.set( 'isSticky', false );\n\t\tthis.set( 'limiterElement', null );\n\t\tthis.set( 'limiterBottomOffset', 50 );\n\t\tthis.set( 'viewportTopOffset', 0 );\n\n\t\tthis.set( '_marginLeft', null );\n\t\tthis.set( '_isStickyToTheBottomOfLimiter', false );\n\n\t\tthis.set( '_stickyTopOffset', null );\n\t\tthis.set( '_stickyBottomOffset', null );\n\n\t\tthis.content = this.createCollection();\n\n\t\tthis._contentPanelPlaceholder = new Template( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-sticky-panel__placeholder'\n\t\t\t\t],\n\t\t\t\tstyle: {\n\t\t\t\t\tdisplay: bind.to( 'isSticky', isSticky => isSticky ? 'block' : 'none' ),\n\t\t\t\t\theight: bind.to( 'isSticky', isSticky => {\n\t\t\t\t\t\treturn isSticky ? toPx( this._contentPanelRect.height ) : null;\n\t\t\t\t\t} )\n\t\t\t\t}\n\t\t\t}\n\t\t} ).render() as HTMLElement;\n\n\t\tthis.contentPanelElement = new Template( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-sticky-panel__content',\n\t\t\t\t\t// Toggle class of the panel when \"sticky\" state changes in the view.\n\t\t\t\t\tbind.if( 'isSticky', 'ck-sticky-panel__content_sticky' ),\n\t\t\t\t\tbind.if( '_isStickyToTheBottomOfLimiter', 'ck-sticky-panel__content_sticky_bottom-limit' )\n\t\t\t\t],\n\t\t\t\tstyle: {\n\t\t\t\t\twidth: bind.to( 'isSticky', isSticky => {\n\t\t\t\t\t\treturn isSticky ? toPx( this._contentPanelPlaceholder.getBoundingClientRect().width ) : null;\n\t\t\t\t\t} ),\n\n\t\t\t\t\ttop: bind.to( '_stickyTopOffset', value => value ? toPx( value ) : value ),\n\t\t\t\t\tbottom: bind.to( '_stickyBottomOffset', value => value ? toPx( value ) : value ),\n\n\t\t\t\t\tmarginLeft: bind.to( '_marginLeft' )\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tchildren: this.content\n\t\t} ).render() as HTMLElement;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-sticky-panel'\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\tthis._contentPanelPlaceholder,\n\t\t\t\tthis.contentPanelElement\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\t// Check if the panel should go into the sticky state immediately.\n\t\tthis.checkIfShouldBeSticky();\n\n\t\t// Update sticky state of the panel as the window and ancestors are being scrolled.\n\t\tthis.listenTo( global.document, 'scroll', () => {\n\t\t\tthis.checkIfShouldBeSticky();\n\t\t}, { useCapture: true } );\n\n\t\t// Synchronize with `model.isActive` because sticking an inactive panel is pointless.\n\t\tthis.listenTo<ObservableChangeEvent>( this, 'change:isActive', () => {\n\t\t\tthis.checkIfShouldBeSticky();\n\t\t} );\n\n\t\tif ( global.window.visualViewport ) {\n\t\t\tthis.listenTo( global.window.visualViewport, 'scroll', () => {\n\t\t\t\tthis.checkIfShouldBeSticky();\n\t\t\t} );\n\n\t\t\tthis.listenTo( global.window.visualViewport, 'resize', () => {\n\t\t\t\tthis.checkIfShouldBeSticky();\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Analyzes the environment to decide whether the panel should be sticky or not.\n\t * Then handles the positioning of the panel.\n\t */\n\tpublic checkIfShouldBeSticky(): void {\n\t\t// @if CK_DEBUG_STICKYPANEL // RectDrawer.clear();\n\n\t\tif ( !this.limiterElement || !this.isActive ) {\n\t\t\tthis._unstick();\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst limiterRect = new Rect( this.limiterElement );\n\t\tlet visibleLimiterRect = limiterRect.getVisible();\n\n\t\tif ( visibleLimiterRect ) {\n\t\t\tconst windowRect = new Rect( global.window );\n\n\t\t\twindowRect.top += this.viewportTopOffset;\n\t\t\twindowRect.height -= this.viewportTopOffset;\n\n\t\t\tvisibleLimiterRect = visibleLimiterRect.getIntersection( windowRect );\n\t\t}\n\n\t\tconst {\n\t\t\tleft: visualViewportOffsetLeft,\n\t\t\ttop: visualViewportOffsetTop\n\t\t} = getVisualViewportOffset();\n\n\t\tlimiterRect.moveBy( visualViewportOffsetLeft, visualViewportOffsetTop );\n\n\t\tif ( visibleLimiterRect ) {\n\t\t\tvisibleLimiterRect.moveBy( visualViewportOffsetLeft, visualViewportOffsetTop );\n\t\t}\n\n\t\t// Stick the panel only if\n\t\t// * the limiter's ancestors are intersecting with each other so that some of their rects are visible,\n\t\t// * and the limiter's top edge is above the visible ancestors' top edge.\n\t\tif ( visibleLimiterRect && limiterRect.top < visibleLimiterRect.top ) {\n\t\t\t// Check if there's a change the panel can be sticky to the bottom of the limiter.\n\t\t\tif ( this._contentPanelRect.height + this.limiterBottomOffset > visibleLimiterRect.height ) {\n\t\t\t\tconst stickyBottomOffset = Math.max( limiterRect.bottom - visibleLimiterRect.bottom, 0 ) + this.limiterBottomOffset;\n\t\t\t\t// @if CK_DEBUG_STICKYPANEL // const stickyBottomOffsetRect = new Rect( {\n\t\t\t\t// @if CK_DEBUG_STICKYPANEL // \ttop: limiterRect.bottom - stickyBottomOffset, left: 0, right: 2000,\n\t\t\t\t// @if CK_DEBUG_STICKYPANEL // \tbottom: limiterRect.bottom - stickyBottomOffset, width: 2000, height: 1\n\t\t\t\t// @if CK_DEBUG_STICKYPANEL // } );\n\t\t\t\t// @if CK_DEBUG_STICKYPANEL // RectDrawer.draw( stickyBottomOffsetRect,\n\t\t\t\t// @if CK_DEBUG_STICKYPANEL // \t{ outlineWidth: '1px', opacity: '.8', outlineColor: 'black' },\n\t\t\t\t// @if CK_DEBUG_STICKYPANEL // \t'Sticky bottom offset',\n\t\t\t\t// @if CK_DEBUG_STICKYPANEL // \t{ visualViewportOrigin: true }\n\t\t\t\t// @if CK_DEBUG_STICKYPANEL // );\n\n\t\t\t\t// Check if sticking the panel to the bottom of the limiter does not cause it to suddenly\n\t\t\t\t// move upwards if there's not enough space for it.\n\t\t\t\t// To avoid toolbar flickering we are adding 1 for potential style change (sticky has all borders set,\n\t\t\t\t// non-sticky lacks bottom border).\n\t\t\t\tif ( this._contentPanelRect.height + stickyBottomOffset + 1 < limiterRect.height ) {\n\t\t\t\t\tthis._stickToBottomOfLimiter( stickyBottomOffset );\n\t\t\t\t} else {\n\t\t\t\t\tthis._unstick();\n\t\t\t\t}\n\t\t\t} else if ( this._contentPanelRect.height + this.limiterBottomOffset < limiterRect.height ) {\n\t\t\t\tthis._stickToTopOfAncestors( visibleLimiterRect.top );\n\t\t\t} else {\n\t\t\t\tthis._unstick();\n\t\t\t}\n\t\t} else {\n\t\t\tthis._unstick();\n\t\t}\n\n\t\t// @if CK_DEBUG_STICKYPANEL // console.clear();\n\t\t// @if CK_DEBUG_STICKYPANEL // console.log( 'isSticky', this.isSticky );\n\t\t// @if CK_DEBUG_STICKYPANEL // console.log( '_isStickyToTheBottomOfLimiter', this._isStickyToTheBottomOfLimiter );\n\t\t// @if CK_DEBUG_STICKYPANEL // console.log( '_stickyTopOffset', this._stickyTopOffset );\n\t\t// @if CK_DEBUG_STICKYPANEL // console.log( '_stickyBottomOffset', this._stickyBottomOffset );\n\t\t// @if CK_DEBUG_STICKYPANEL // if ( visibleLimiterRect ) {\n\t\t// @if CK_DEBUG_STICKYPANEL // \tRectDrawer.draw( visibleLimiterRect,\n\t\t// @if CK_DEBUG_STICKYPANEL // \t\t{ ...diagonalStylesBlack,\n\t\t// @if CK_DEBUG_STICKYPANEL // \t\t\toutlineWidth: '3px', opacity: '.8', outlineColor: 'orange', outlineOffset: '-3px',\n\t\t// @if CK_DEBUG_STICKYPANEL // \t\t\tbackgroundColor: 'rgba(0, 0, 255, .2)', zIndex: 2000 },\n\t\t// @if CK_DEBUG_STICKYPANEL // \t\t'visibleLimiterRect',\n\t\t// @if CK_DEBUG_STICKYPANEL // \t\t{ visualViewportOrigin: true }\n\t\t// @if CK_DEBUG_STICKYPANEL // \t);\n\t\t// @if CK_DEBUG_STICKYPANEL // }\n\t}\n\n\t/**\n\t * Sticks the panel at the given CSS `top` offset.\n\t *\n\t * @private\n\t * @param topOffset\n\t */\n\tprivate _stickToTopOfAncestors( topOffset: number ) {\n\t\tthis.isSticky = true;\n\t\tthis._isStickyToTheBottomOfLimiter = false;\n\t\tthis._stickyTopOffset = topOffset;\n\t\tthis._stickyBottomOffset = null;\n\t\tthis._marginLeft = toPx( -global.window.scrollX + getVisualViewportOffset().left );\n\t}\n\n\t/**\n\t * Sticks the panel at the bottom of the limiter with a given CSS `bottom` offset.\n\t *\n\t * @private\n\t * @param stickyBottomOffset\n\t */\n\tprivate _stickToBottomOfLimiter( stickyBottomOffset: number ) {\n\t\tthis.isSticky = true;\n\t\tthis._isStickyToTheBottomOfLimiter = true;\n\t\tthis._stickyTopOffset = null;\n\t\tthis._stickyBottomOffset = stickyBottomOffset;\n\t\tthis._marginLeft = toPx( -global.window.scrollX + getVisualViewportOffset().left );\n\t}\n\n\t/**\n\t * Unsticks the panel putting it back to its original position.\n\t *\n\t * @private\n\t */\n\tprivate _unstick() {\n\t\tthis.isSticky = false;\n\t\tthis._isStickyToTheBottomOfLimiter = false;\n\t\tthis._stickyTopOffset = null;\n\t\tthis._stickyBottomOffset = null;\n\t\tthis._marginLeft = null;\n\t}\n\n\t/**\n\t * Returns the bounding rect of the {@link #contentPanelElement}.\n\t *\n\t * @private\n\t */\n\tprivate get _contentPanelRect(): Rect {\n\t\treturn new Rect( this.contentPanelElement );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/search/text/searchtextqueryview\n */\nimport { IconCancel, IconLoupe } from '@ckeditor/ckeditor5-icons';\nimport { ButtonView } from '../../button/buttonview.js';\nimport { IconView } from '../../icon/iconview.js';\nimport { LabeledFieldView, type LabeledFieldViewCreator } from '../../labeledfield/labeledfieldview.js';\nimport { createLabeledInputText } from '../../labeledfield/utils.js';\nimport { type InputBase } from '../../input/inputbase.js';\nimport type { Locale } from '@ckeditor/ckeditor5-utils';\n\n/**\n * A search input field for the {@link module:ui/search/text/searchtextview~SearchTextView} component.\n *\n * @internal\n * @extends module:ui/labeledfield/labeledfieldview~LabeledFieldView\n */\nexport class SearchTextQueryView<\n\tTQueryFieldView extends InputBase<HTMLInputElement | HTMLTextAreaElement>\n> extends LabeledFieldView<TQueryFieldView> {\n\t/**\n\t * The loupe icon displayed next to the {@link #fieldView}.\n\t */\n\tpublic iconView?: IconView;\n\n\t/**\n\t * The button that clears and focuses the {@link #fieldView}.\n\t */\n\tpublic resetButtonView?: ButtonView;\n\n\t/**\n\t * A reference to the view configuration.\n\t */\n\tprivate readonly _viewConfig: SearchTextQueryViewConfig<TQueryFieldView>;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale: Locale, config: SearchTextQueryViewConfig<TQueryFieldView> ) {\n\t\tconst t = locale.t;\n\t\tconst viewConfig = Object.assign( {}, {\n\t\t\tshowResetButton: true,\n\t\t\tshowIcon: true,\n\t\t\tcreator: createLabeledInputText\n\t\t}, config );\n\n\t\tsuper( locale, viewConfig.creator as any );\n\n\t\tthis.label = config.label;\n\t\tthis._viewConfig = viewConfig;\n\n\t\tif ( this._viewConfig.showIcon ) {\n\t\t\tthis.iconView = new IconView();\n\t\t\tthis.iconView.content = IconLoupe;\n\t\t\tthis.fieldWrapperChildren.add( this.iconView, 0 );\n\n\t\t\tthis.extendTemplate( {\n\t\t\t\tattributes: {\n\t\t\t\t\tclass: 'ck-search__query_with-icon'\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\tif ( this._viewConfig.showResetButton ) {\n\t\t\tthis.resetButtonView = new ButtonView( locale );\n\t\t\tthis.resetButtonView.set( {\n\t\t\t\tlabel: t( 'Clear' ),\n\t\t\t\ticon: IconCancel,\n\t\t\t\tclass: 'ck-search__reset',\n\t\t\t\tisVisible: false,\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tthis.resetButtonView.on( 'execute', () => {\n\t\t\t\tthis.reset();\n\t\t\t\tthis.focus();\n\t\t\t\tthis.fire<SearchTextQueryViewResetEvent>( 'reset' );\n\t\t\t} );\n\n\t\t\tthis.resetButtonView.bind( 'isVisible' ).to( this.fieldView, 'isEmpty', isEmpty => !isEmpty );\n\n\t\t\tthis.fieldWrapperChildren.add( this.resetButtonView );\n\n\t\t\tthis.extendTemplate( {\n\t\t\t\tattributes: {\n\t\t\t\t\tclass: 'ck-search__query_with-reset'\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Resets the search field to its default state.\n\t */\n\tpublic reset(): void {\n\t\tthis.fieldView.reset();\n\n\t\tif ( this._viewConfig.showResetButton ) {\n\t\t\tthis.resetButtonView!.isVisible = false;\n\t\t}\n\t}\n}\n\n/**\n * An event fired when the field is reset using the\n * {@link module:ui/search/text/searchtextqueryview~SearchTextQueryView#resetButtonView}.\n *\n * @eventName ~SearchTextQueryView#reset\n */\nexport type SearchTextQueryViewResetEvent = {\n\tname: 'reset';\n\targs: [];\n};\n\n/**\n * The configuration of the {@link module:ui/search/text/searchtextqueryview~SearchTextQueryView} view.\n */\nexport interface SearchTextQueryViewConfig<TConfigSearchField extends InputBase<HTMLInputElement | HTMLTextAreaElement>> {\n\n\t/**\n\t * The human-readable label of the search field.\n\t */\n\tlabel: string;\n\n\t/**\n\t * Determines whether the button that resets the search should be visible.\n\t *\n\t * @default true\n\t */\n\tshowResetButton?: boolean;\n\n\t/**\n\t * Determines whether the loupe icon should be visible.\n\t *\n\t * @default true\n\t */\n\tshowIcon?: boolean;\n\n\t/**\n\t * The function that creates the search field input view. By default, a plain\n\t * {@link module:ui/inputtext/inputtextview~InputTextView} is used for this purpose.\n\t */\n\tcreator?: LabeledFieldViewCreator<TConfigSearchField>;\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/search/searchinfoview\n*/\n\nimport type { FocusableView } from '../focuscycler.js';\nimport { View } from '../view.js';\n\n/**\n * A view displaying an information text related to different states of {@link module:ui/search/text/searchtextview~SearchTextView}.\n *\n * @internal\n */\nexport class SearchInfoView extends View implements FocusableView {\n\t/**\n\t * Controls whether the view is visible.\n\t *\n\t * @observable\n\t * @default false\n\t */\n\tdeclare public isVisible: boolean;\n\n\t/**\n\t * Controls the primary line of text in the info.\n\t *\n\t * @observable\n\t * @default ''\n\t */\n\tdeclare public primaryText: string;\n\n\t/**\n\t * Controls the secondary line of text in the info.\n\t *\n\t * @observable\n\t * @default ''\n\t */\n\tdeclare public secondaryText: string;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.set( {\n\t\t\tisVisible: false,\n\t\t\tprimaryText: '',\n\t\t\tsecondaryText: ''\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-search__info',\n\t\t\t\t\tbind.if( 'isVisible', 'ck-hidden', value => !value )\n\t\t\t\t],\n\t\t\t\ttabindex: -1\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'span',\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext: [ bind.to( 'primaryText' ) ]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'span',\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext: [ bind.to( 'secondaryText' ) ]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * Focuses the view\n\t */\n\tpublic focus(): void {\n\t\tthis.element!.focus();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/search/searchresultsview\n */\n\nimport { View } from '../view.js';\nimport { type ViewCollection } from '../viewcollection.js';\nimport { FocusTracker, type Locale } from '@ckeditor/ckeditor5-utils';\nimport { FocusCycler, type FocusableView } from '../focuscycler.js';\n\n/**\n * A sub-component of {@link module:ui/search/text/searchtextview~SearchTextView}. It hosts the filtered and the information views.\n */\nexport class SearchResultsView extends View implements FocusableView {\n\t/**\n\t * Tracks information about the DOM focus in the view.\n\t *\n\t * @readonly\n\t */\n\tpublic focusTracker: FocusTracker;\n\n\t/**\n\t * The collection of the child views inside of the list item {@link #element}.\n\t *\n\t * @readonly\n\t */\n\tpublic children: ViewCollection<FocusableView>;\n\n\t/**\n\t * Provides the focus management (keyboard navigation) in the view.\n\t *\n\t * @readonly\n\t */\n\tprotected _focusCycler: FocusCycler;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale: Locale ) {\n\t\tsuper( locale );\n\n\t\tthis.children = this.createCollection();\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-search__results'\n\t\t\t\t],\n\t\t\t\ttabindex: -1\n\t\t\t},\n\t\t\tchildren: this.children\n\t\t} );\n\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this.children,\n\t\t\tfocusTracker: this.focusTracker\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tfor ( const child of this.children ) {\n\t\t\tthis.focusTracker.add( child.element! );\n\t\t}\n\t}\n\n\t/**\n\t * Focuses the view.\n\t */\n\tpublic focus(): void {\n\t\tthis._focusCycler.focusFirst();\n\t}\n\n\t/**\n\t * Focuses the first child view.\n\t */\n\tpublic focusFirst(): void {\n\t\tthis._focusCycler.focusFirst();\n\t}\n\n\t/**\n\t * Focuses the last child view.\n\t */\n\tpublic focusLast(): void {\n\t\tthis._focusCycler.focusLast();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/search/text/searchtextview\n*/\n\nimport { FocusTracker, KeystrokeHandler, type Locale } from '@ckeditor/ckeditor5-utils';\nimport { View } from '../../view.js';\nimport { SearchTextQueryView, type SearchTextQueryViewConfig } from './searchtextqueryview.js';\nimport { SearchInfoView } from '../searchinfoview.js';\nimport { SearchResultsView } from '../searchresultsview.js';\nimport { FocusCycler, type FocusableView } from '../../focuscycler.js';\nimport { escapeRegExp } from 'es-toolkit/compat';\n\nimport { type FilteredView } from '../filteredview.js';\nimport { type ViewCollection } from '../../viewcollection.js';\nimport { type InputBase } from '../../input/inputbase.js';\nimport { type InputTextView } from '../../inputtext/inputtextview.js';\n\nimport '../../../theme/components/search/search.css';\n\n/**\n * A search component that allows filtering of an arbitrary view based on a search query\n * specified by the user in a text field.\n *\n *```ts\n * // This view must specify the `filter()` and `focus()` methods.\n * const filteredView = ...;\n *\n * const searchView = new SearchTextView( locale, {\n * \tsearchFieldLabel: 'Search list items',\n * \tfilteredView\n * } );\n *\n * view.render();\n *\n * document.body.append( view.element );\n * ```\n */\nexport class SearchTextView<\n\tTQueryFieldView extends InputBase<HTMLInputElement | HTMLTextAreaElement> = InputTextView\n> extends View {\n\t/**\n\t * Tracks information about the DOM focus in the view.\n\t *\n\t * @readonly\n\t */\n\tpublic focusTracker: FocusTracker;\n\n\t/**\n\t * An instance of the keystroke handler managing user interaction and accessibility.\n\t *\n\t * @readonly\n\t */\n\tpublic keystrokes: KeystrokeHandler;\n\n\t/**\n\t * A view hosting the {@link #filteredView} passed in the configuration and the {@link #infoView}.\n\t */\n\tpublic resultsView: SearchResultsView;\n\n\t/**\n\t * The view that is filtered by the search query.\n\t */\n\tpublic filteredView: FilteredView;\n\n\t/**\n\t * The view that displays the information about the search results.\n\t */\n\tpublic infoView: FocusableView | undefined;\n\n\t/**\n\t * The view that allows the user to enter the search query.\n\t */\n\tpublic queryView: SearchTextQueryView<TQueryFieldView>;\n\n\t/**\n\t * Controls whether the component is in read-only mode.\n\t *\n\t * @default true\n\t * @observable\n\t */\n\tdeclare public isEnabled: boolean;\n\n\t/**\n\t * The number of results found for the current search query. Updated upon the {@link #search} event.\n\t *\n\t * @default 0\n\t * @observable\n\t */\n\tdeclare public resultsCount: number;\n\n\t/**\n\t * The number of the items that can be searched in the {@link #filteredView}. Updated upon the {@link #search} event.\n\t *\n\t * @default 0\n\t * @observable\n\t */\n\tdeclare public totalItemsCount: number;\n\n\t/**\n\t * The collection of children of the view.\n\t *\n\t * @readonly\n\t */\n\tdeclare public readonly children: ViewCollection;\n\n\t/**\n\t * The collection of focusable children of the view. Used by the focus management logic.\n\t *\n\t * @readonly\n\t */\n\tdeclare public readonly focusableChildren: ViewCollection<FocusableView>;\n\n\tpublic declare locale: Locale;\n\n\t/**\n\t * Provides the focus management (keyboard navigation) between {@link #queryView} and {@link #filteredView}.\n\t *\n\t * @readonly\n\t */\n\tpublic focusCycler: FocusCycler;\n\n\t/**\n\t * The cached configuration object.\n\t *\n\t * @internal\n\t */\n\tprotected _config: SearchTextViewConfig<TQueryFieldView>;\n\n\t/**\n\t * Creates an instance of the {@link module:ui/search/text/searchtextview~SearchTextView} class.\n\t *\n\t * @param locale The localization services instance.\n\t * @param config Configuration of the view.\n\t */\n\tconstructor( locale: Locale, config: SearchTextViewConfig<TQueryFieldView> ) {\n\t\tsuper( locale );\n\n\t\tthis._config = config;\n\n\t\tthis.filteredView = config.filteredView;\n\t\tthis.queryView = this._createSearchTextQueryView();\n\t\tthis.focusTracker = new FocusTracker();\n\t\tthis.keystrokes = new KeystrokeHandler();\n\t\tthis.resultsView = new SearchResultsView( locale );\n\t\tthis.children = this.createCollection();\n\t\tthis.focusableChildren = this.createCollection( [ this.queryView, this.resultsView ] );\n\n\t\tthis.set( 'isEnabled', true );\n\t\tthis.set( 'resultsCount', 0 );\n\t\tthis.set( 'totalItemsCount', 0 );\n\n\t\tif ( config.infoView && config.infoView.instance ) {\n\t\t\tthis.infoView = config.infoView.instance;\n\t\t} else {\n\t\t\tthis.infoView = new SearchInfoView();\n\t\t\tthis._enableDefaultInfoViewBehavior();\n\n\t\t\tthis.on( 'render', () => {\n\t\t\t\t// Initial search that determines if there are any searchable items\n\t\t\t\t// and displays the corresponding info text.\n\t\t\t\tthis.search( '' );\n\t\t\t} );\n\t\t}\n\n\t\tthis.resultsView.children.addMany( [ this.infoView, this.filteredView ] );\n\n\t\tthis.focusCycler = new FocusCycler( {\n\t\t\tfocusables: this.focusableChildren,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate form fields backwards using the Shift + Tab keystroke.\n\t\t\t\tfocusPrevious: 'shift + tab',\n\n\t\t\t\t// Navigate form fields forwards using the Tab key.\n\t\t\t\tfocusNext: 'tab'\n\t\t\t}\n\t\t} );\n\n\t\tthis.on<SearchTextViewSearchEvent>( 'search', ( evt, { resultsCount, totalItemsCount } ) => {\n\t\t\tthis.resultsCount = resultsCount;\n\t\t\tthis.totalItemsCount = totalItemsCount;\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-search',\n\t\t\t\t\tconfig.class || null\n\t\t\t\t],\n\n\t\t\t\ttabindex: '-1'\n\t\t\t},\n\t\t\tchildren: this.children\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tthis.children.addMany( [\n\t\t\tthis.queryView,\n\t\t\tthis.resultsView\n\t\t] );\n\n\t\tconst stopPropagation = ( data: Event ) => data.stopPropagation();\n\n\t\tfor ( const focusableChild of this.focusableChildren ) {\n\t\t\tthis.focusTracker.add( focusableChild.element as HTMLElement );\n\t\t}\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element as HTMLElement );\n\n\t\t// Since the form is in the dropdown panel which is a child of the toolbar, the toolbar's\n\t\t// keystroke handler would take over the key management in the URL input. We need to prevent\n\t\t// this ASAP. Otherwise, the basic caret movement using the arrow keys will be impossible.\n\t\tthis.keystrokes.set( 'arrowright', stopPropagation );\n\t\tthis.keystrokes.set( 'arrowleft', stopPropagation );\n\t\tthis.keystrokes.set( 'arrowup', stopPropagation );\n\t\tthis.keystrokes.set( 'arrowdown', stopPropagation );\n\t}\n\n\t/**\n\t * Focuses the {@link #queryView}.\n\t */\n\tpublic focus(): void {\n\t\tthis.queryView.focus();\n\t}\n\n\t/**\n\t * Resets the component to its initial state.\n\t */\n\tpublic reset(): void {\n\t\tthis.queryView.reset();\n\t\tthis.search( '' );\n\t\tthis.filteredView.element!.scrollTo( 0, 0 );\n\t}\n\n\t/**\n\t * Searches the {@link #filteredView} for the given query.\n\t *\n\t * @internal\n\t * @param query The search query string.\n\t */\n\tpublic search( query: string ): void {\n\t\tconst regExp = query ? new RegExp( escapeRegExp( query ), 'ig' ) : null;\n\t\tconst filteringResults = this.filteredView.filter( regExp );\n\n\t\tthis.fire<SearchTextViewSearchEvent>( 'search', { query, ...filteringResults } );\n\t}\n\n\t/**\n\t * Creates a search field view based on configured creator..\n\t */\n\tprivate _createSearchTextQueryView(): SearchTextQueryView<TQueryFieldView> {\n\t\tconst queryView = new SearchTextQueryView<TQueryFieldView>( this.locale, this._config.queryView );\n\n\t\tthis.listenTo( queryView.fieldView, 'input', () => {\n\t\t\tthis.search( queryView.fieldView.element!.value );\n\t\t} );\n\n\t\tqueryView.on( 'reset', () => this.reset() );\n\t\tqueryView.bind( 'isEnabled' ).to( this );\n\n\t\treturn queryView;\n\t}\n\n\t/**\n\t * Initializes the default {@link #infoView} behavior with default text labels when no custom info view\n\t * was specified in the view config.\n\t */\n\tprivate _enableDefaultInfoViewBehavior(): void {\n\t\tconst t = this.locale.t;\n\t\tconst infoView = this.infoView as SearchInfoView;\n\n\t\tthis.on<SearchTextViewSearchEvent>( 'search', ( evt, data ) => {\n\t\t\tif ( !data.resultsCount ) {\n\t\t\t\tconst defaultTextConfig = this._config.infoView && this._config.infoView.text;\n\t\t\t\tlet primaryText, secondaryText;\n\n\t\t\t\tif ( data.totalItemsCount ) {\n\t\t\t\t\tif ( defaultTextConfig?.notFound ) {\n\t\t\t\t\t\tprimaryText = defaultTextConfig.notFound.primary;\n\t\t\t\t\t\tsecondaryText = defaultTextConfig.notFound.secondary;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprimaryText = t( 'No results found' );\n\t\t\t\t\t\tsecondaryText = '';\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ( defaultTextConfig?.noSearchableItems ) {\n\t\t\t\t\t\tprimaryText = defaultTextConfig.noSearchableItems.primary;\n\t\t\t\t\t\tsecondaryText = defaultTextConfig.noSearchableItems.secondary;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprimaryText = t( 'No searchable items' );\n\t\t\t\t\t\tsecondaryText = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tinfoView.set( {\n\t\t\t\t\tprimaryText: normalizeInfoText( primaryText, data ),\n\t\t\t\t\tsecondaryText: normalizeInfoText( secondaryText!, data ),\n\t\t\t\t\tisVisible: true\n\t\t\t\t} );\n\t\t\t} else {\n\t\t\t\tinfoView.set( {\n\t\t\t\t\tisVisible: false\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\tfunction normalizeInfoText(\n\t\t\ttext: SearchTextViewDefaultInfoText,\n\t\t\t{ query, resultsCount, totalItemsCount }: SearchTextViewSearchEvent[ 'args' ][ 0 ]\n\t\t) {\n\t\t\treturn typeof text === 'function' ? text( query, resultsCount, totalItemsCount ) : text;\n\t\t}\n\t}\n}\n\n/**\n * The configuration of the {@link module:ui/search/text/searchtextview~SearchTextView} class.\n */\nexport interface SearchTextViewConfig<TConfigSearchField extends InputBase<HTMLInputElement | HTMLTextAreaElement>> {\n\n\t/**\n\t * The configuration of the view's query field.\n\t */\n\tqueryView: SearchTextQueryViewConfig<TConfigSearchField>;\n\n\t/**\n\t * The view that is filtered by the search query.\n\t */\n\tfilteredView: FilteredView;\n\n\t/**\n\t * The view that displays the information about the search results.\n\t */\n\tinfoView?: {\n\n\t\t/**\n\t\t * The view that displays the information about the search results. If not specified,\n\t\t * {@link module:ui/search/searchinfoview~SearchInfoView} is used.\n\t\t */\n\t\tinstance?: FocusableView;\n\n\t\t/**\n\t\t * The configuration of text labels displayed in the {@link #infoView} in different states\n\t\t * of the search component.\n\t\t *\n\t\t * **Note**: This configuration is only used when the {@link #infoView} is **not** specified.\n\t\t * In other cases, please use the {@link module:ui/search/searchview~SearchTextViewSearchEvent} to bring about\n\t\t * your own info text logic.\n\t\t */\n\t\ttext?: {\n\t\t\tnotFound?: {\n\t\t\t\tprimary: SearchTextViewDefaultInfoText;\n\t\t\t\tsecondary?: SearchTextViewDefaultInfoText;\n\t\t\t};\n\t\t\tnoSearchableItems?: {\n\t\t\t\tprimary: SearchTextViewDefaultInfoText;\n\t\t\t\tsecondary?: SearchTextViewDefaultInfoText;\n\t\t\t};\n\t\t};\n\t};\n\n\t/**\n\t * The custom CSS class name to be added to the search view element.\n\t */\n\tclass?: string;\n}\n\n/**\n * Describes value of a info text configuration in {@link module:ui/search/text/searchtextview~SearchTextViewConfig}.\n * A string or a function that returns a string with the information about the search results.\n */\nexport type SearchTextViewDefaultInfoText = string | ( ( query: string, resultsCount: number, totalItemsCount: number ) => string );\n\n/**\n * An event fired when the search query changes fired by {@link module:ui/search/text/searchtextview~SearchTextView#search}.\n *\n * @eventName ~SearchTextView#search\n */\nexport type SearchTextViewSearchEvent = {\n\tname: 'search';\n\targs: [ SearchTextViewSearchEventData ];\n};\n\nexport type SearchTextViewSearchEventData = {\n\n\t/**\n\t * The search query string.\n\t */\n\tquery: string;\n\n\t/**\n\t * The number of results found for the current search query.\n\t */\n\tresultsCount: number;\n\n\t/**\n\t * The number of the items that can be searched.\n\t */\n\ttotalItemsCount: number;\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/autocomplete/autocompleteview\n*/\n\nimport { getOptimalPosition, type PositioningFunction, type Locale, global, toUnit, Rect } from '@ckeditor/ckeditor5-utils';\nimport { SearchTextView, type SearchTextViewConfig } from '../search/text/searchtextview.js';\nimport { type SearchResultsView } from '../search/searchresultsview.js';\nimport { type InputBase } from '../input/inputbase.js';\nimport type { FilteredViewExecuteEvent } from '../search/filteredview.js';\n\nimport '../../theme/components/autocomplete/autocomplete.css';\n\n/**\n * The autocomplete component's view class. It extends the {@link module:ui/search/text/searchtextview~SearchTextView} class\n * with a floating {@link #resultsView} that shows up when the user starts typing and hides when they blur\n * the component.\n */\nexport class AutocompleteView<\n\tTQueryFieldView extends InputBase<HTMLInputElement | HTMLTextAreaElement>\n> extends SearchTextView<TQueryFieldView> {\n\t/**\n\t * The configuration of the autocomplete view.\n\t */\n\tprotected override _config: AutocompleteViewConfig<TQueryFieldView>;\n\n\tdeclare public resultsView: AutocompleteResultsView;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale: Locale, config: AutocompleteViewConfig<TQueryFieldView> ) {\n\t\tsuper( locale, config );\n\n\t\tthis._config = config;\n\n\t\tconst toPx = toUnit( 'px' );\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [ 'ck-autocomplete' ]\n\t\t\t}\n\t\t} );\n\n\t\tconst bindResultsView = this.resultsView.bindTemplate;\n\n\t\tthis.resultsView.set( 'isVisible', false );\n\t\tthis.resultsView.set( '_position', 's' );\n\t\tthis.resultsView.set( '_width', 0 );\n\n\t\tthis.resultsView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\tbindResultsView.if( 'isVisible', 'ck-hidden', value => !value ),\n\t\t\t\t\tbindResultsView.to( '_position', value => `ck-search__results_${ value }` )\n\t\t\t\t],\n\t\t\t\tstyle: {\n\t\t\t\t\twidth: bindResultsView.to( '_width', toPx )\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// Update the visibility of the results view when the user focuses or blurs the component.\n\t\t// This is also integration for the `resetOnBlur` configuration.\n\t\tthis.focusTracker.on( 'change:isFocused', ( evt, name, isFocused ) => {\n\t\t\tthis._updateResultsVisibility();\n\n\t\t\tif ( isFocused ) {\n\t\t\t\t// Reset the scroll position of the results view whenever the autocomplete reopens.\n\t\t\t\tthis.resultsView.element!.scrollTop = 0;\n\t\t\t} else if ( config.resetOnBlur ) {\n\t\t\t\tthis.queryView.reset();\n\t\t\t}\n\t\t} );\n\n\t\t// Update the visibility of the results view when the user types in the query field.\n\t\t// This is an integration for `queryMinChars` configuration.\n\t\t// This is an integration for search results changing length and the #resultsView requiring to be repositioned.\n\t\tthis.on( 'search', () => {\n\t\t\tthis._updateResultsVisibility();\n\t\t\tthis._updateResultsViewWidthAndPosition();\n\t\t} );\n\n\t\t// Hide the results view when the user presses the ESC key.\n\t\tthis.keystrokes.set( 'esc', ( evt, cancel ) => {\n\t\t\t// Let the DOM event pass through if the focus is in the query view.\n\t\t\tif ( !this.resultsView.isVisible ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Focus the query view first and only then close the results view. Otherwise, if the focus\n\t\t\t// was in the results view, it will get lost.\n\t\t\tthis.queryView.focus();\n\t\t\tthis.resultsView.isVisible = false;\n\t\t\tcancel();\n\t\t} );\n\n\t\t// Update the position of the results view when the user scrolls the page.\n\t\t// TODO: This needs to be debounced down the road.\n\t\tthis.listenTo( global.document, 'scroll', () => {\n\t\t\tthis._updateResultsViewWidthAndPosition();\n\t\t} );\n\n\t\t// Hide the results when the component becomes disabled.\n\t\tthis.on( 'change:isEnabled', () => {\n\t\t\tthis._updateResultsVisibility();\n\t\t} );\n\n\t\t// Update the value of the query field when the user selects a result.\n\t\tthis.filteredView.on<FilteredViewExecuteEvent>( 'execute', ( evt, { value } ) => {\n\t\t\t// Focus the query view first to avoid losing the focus.\n\t\t\tthis.focus();\n\n\t\t\t// Resetting the view will ensure that the #queryView will update its empty state correctly.\n\t\t\t// This prevents bugs related to dynamic labels or auto-grow when re-setting the same value\n\t\t\t// to #queryView.fieldView.value (which does not trigger empty state change) to an\n\t\t\t// #queryView.fieldView.element that has been changed by the user.\n\t\t\tthis.reset();\n\n\t\t\t// Update the value of the query field.\n\t\t\tthis.queryView.fieldView.value = this.queryView.fieldView.element!.value = value;\n\n\t\t\t// Finally, hide the results view. The focus has been moved earlier so this is safe.\n\t\t\tthis.resultsView.isVisible = false;\n\t\t} );\n\n\t\t// Update the position and width of the results view when it becomes visible.\n\t\tthis.resultsView.on( 'change:isVisible', () => {\n\t\t\tthis._updateResultsViewWidthAndPosition();\n\t\t} );\n\t}\n\n\t/**\n\t * Updates the position of the results view on demand.\n\t */\n\tprivate _updateResultsViewWidthAndPosition() {\n\t\tif ( !this.resultsView.isVisible ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.resultsView._width = new Rect( this.queryView.fieldView.element! ).width;\n\n\t\tconst optimalResultsPosition = AutocompleteView._getOptimalPosition( {\n\t\t\telement: this.resultsView.element!,\n\t\t\ttarget: this.queryView.element!,\n\t\t\tfitInViewport: true,\n\t\t\tpositions: AutocompleteView.defaultResultsPositions\n\t\t} );\n\n\t\t// _getOptimalPosition will return null if there is no optimal position found (e.g. target is off the viewport).\n\t\tthis.resultsView._position = optimalResultsPosition ? optimalResultsPosition.name : 's';\n\t}\n\n\t/**\n\t * Updates the visibility of the results view on demand.\n\t */\n\tprivate _updateResultsVisibility() {\n\t\tconst queryMinChars = typeof this._config.queryMinChars === 'undefined' ? 0 : this._config.queryMinChars;\n\t\tconst queryLength = this.queryView.fieldView.element!.value.length;\n\n\t\tthis.resultsView.isVisible = this.focusTracker.isFocused && this.isEnabled && queryLength >= queryMinChars;\n\t}\n\n\t/**\n\t * Positions for the autocomplete results view. Two positions are defined by default:\n\t * * `s` - below the search field,\n\t * * `n` - above the search field.\n\t */\n\tpublic static defaultResultsPositions: Array<PositioningFunction> = [\n\t\t( fieldRect => {\n\t\t\treturn {\n\t\t\t\ttop: fieldRect.bottom,\n\t\t\t\tleft: fieldRect.left,\n\t\t\t\tname: 's'\n\t\t\t};\n\t\t} ) as PositioningFunction,\n\t\t( ( fieldRect, resultsRect ) => {\n\t\t\treturn {\n\t\t\t\ttop: fieldRect.top - resultsRect.height,\n\t\t\t\tleft: fieldRect.left,\n\t\t\t\tname: 'n'\n\t\t\t};\n\t\t} ) as PositioningFunction\n\t];\n\n\t/**\n\t * A function used to calculate the optimal position for the dropdown panel.\n\t */\n\tprivate static _getOptimalPosition = getOptimalPosition;\n}\n\n/**\n * An interface describing additional properties of the floating search results view used by the autocomplete plugin.\n */\nexport interface AutocompleteResultsView extends SearchResultsView {\n\n\t/**\n\t * Controls the visibility of the results view.\n\t *\n\t * @observable\n\t */\n\tisVisible: boolean;\n\n\t/**\n\t * Controls the position (CSS class suffix) of the results view.\n\t *\n\t * @internal\n\t*/\n\t_position?: string;\n\n\t/**\n\t * The observable property determining the CSS width of the results view.\n\t *\n\t * @internal\n\t */\n\t_width: number;\n}\n\nexport interface AutocompleteViewConfig<\n\tTConfigInputCreator extends InputBase<HTMLInputElement | HTMLTextAreaElement>\n> extends SearchTextViewConfig<TConfigInputCreator> {\n\n\t/**\n\t * When set `true`, the query view will be reset when the autocomplete view loses focus.\n\t */\n\tresetOnBlur?: boolean;\n\n\t/**\n\t * Minimum number of characters that need to be typed before the search is performed.\n\t *\n\t * @default 0\n\t */\n\tqueryMinChars?: number;\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/highlightedtext/highlightedtextview\n */\n\nimport { View } from '../view.js';\nimport { escape } from 'es-toolkit/compat';\n\nimport '../../theme/components/highlightedtext/highlightedtext.css';\n\n/**\n * A class representing a view that displays a text which subset can be highlighted using the\n * {@link #highlightText} method.\n */\nexport class HighlightedTextView extends View {\n\t/**\n\t * The text that can be highlighted using the {@link #highlightText} method.\n\t *\n\t * **Note:** When this property changes, the previous highlighting is removed.\n\t *\n\t * @observable\n\t */\n\tdeclare public text: string | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.set( 'text', undefined );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: [ 'ck', 'ck-highlighted-text' ]\n\t\t\t}\n\t\t} );\n\n\t\tthis.on( 'render', () => {\n\t\t\t// Classic setTemplate binding for #text will not work because highlightText() replaces the\n\t\t\t// pre-rendered DOM text node new a new one (and <mark> elements).\n\t\t\tthis.on( 'change:text', () => {\n\t\t\t\tthis._updateInnerHTML( this.text );\n\t\t\t} );\n\n\t\t\tthis._updateInnerHTML( this.text );\n\t\t} );\n\t}\n\n\t/**\n\t * Highlights view's {@link #text} according to the specified `RegExp`. If the passed RegExp is `null`, the\n\t * highlighting is removed\n\t *\n\t * @param regExp\n\t */\n\tpublic highlightText( regExp: RegExp | null ): void {\n\t\tthis._updateInnerHTML( markText( this.text || '', regExp ) );\n\t}\n\n\t/**\n\t * Updates element's `innerHTML` with the passed content.\n\t */\n\tprivate _updateInnerHTML( newInnerHTML: string | undefined ) {\n\t\tthis.element!.innerHTML = newInnerHTML || '';\n\t}\n}\n\n/**\n * Replaces `regExp` occurrences with `<mark>` tags in a text.\n *\n * @param text A text to get marked.\n * @param regExp An optional `RegExp`. If not passed, this is a pass-through function.\n * @returns A text with `RegExp` occurrences marked by `<mark>`.\n */\nfunction markText( text: string, regExp?: RegExp | null ) {\n\tif ( !regExp ) {\n\t\treturn escape( text );\n\t}\n\n\tconst textParts: Array<{ text: string; isMatch: boolean }> = [];\n\tlet lastMatchEnd = 0;\n\tlet matchInfo = regExp.exec( text );\n\n\t// Iterate over all matches and create an array of text parts. The idea is to mark which parts are query matches\n\t// so that later on they can be highlighted.\n\twhile ( matchInfo !== null ) {\n\t\tconst curMatchStart = matchInfo.index;\n\t\t// Detect if there was something between last match and this one.\n\t\tif ( curMatchStart !== lastMatchEnd ) {\n\t\t\ttextParts.push( {\n\t\t\t\ttext: text.substring( lastMatchEnd, curMatchStart ),\n\t\t\t\tisMatch: false\n\t\t\t} );\n\t\t}\n\n\t\ttextParts.push( {\n\t\t\ttext: matchInfo[ 0 ],\n\t\t\tisMatch: true\n\t\t} );\n\n\t\tlastMatchEnd = regExp.lastIndex;\n\t\tmatchInfo = regExp.exec( text );\n\t}\n\n\t// Your match might not be the last part of a string. Be sure to add any plain text following the last match.\n\tif ( lastMatchEnd !== text.length ) {\n\t\ttextParts.push( {\n\t\t\ttext: text.substring( lastMatchEnd ),\n\t\t\tisMatch: false\n\t\t} );\n\t}\n\n\tconst outputHtml = textParts\n\t\t// The entire text should be escaped.\n\t\t.map( part => {\n\t\t\tpart.text = escape( part.text );\n\t\t\treturn part;\n\t\t} )\n\t\t// Only matched text should be wrapped with HTML mark element.\n\t\t.map( part => part.isMatch ? `<mark>${ part.text }</mark>` : part.text )\n\t\t.join( '' );\n\n\treturn outputHtml;\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/highlightedtext/buttonlabelwithhighlightview\n */\n\nimport { type ButtonLabel } from '../button/buttonlabel.js';\nimport { HighlightedTextView } from './highlightedtextview.js';\n\n/**\n * A button label view that can highlight a text fragment.\n */\nexport class ButtonLabelWithHighlightView extends HighlightedTextView implements ButtonLabel {\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public style: string | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public text: string | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public id: string | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.set( {\n\t\t\tstyle: undefined,\n\t\t\ttext: undefined,\n\t\t\tid: undefined\n\t\t} );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-button__label'\n\t\t\t\t],\n\t\t\t\tstyle: bind.to( 'style' ),\n\t\t\t\tid: bind.to( 'id' )\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/highlightedtext/labelwithhighlightview\n */\n\nimport { HighlightedTextView } from './highlightedtextview.js';\nimport { type LabelView } from '../label/labelview.js';\nimport { uid } from '@ckeditor/ckeditor5-utils';\n\n/**\n * A label view that can highlight a text fragment.\n */\nexport class LabelWithHighlightView extends HighlightedTextView implements LabelView {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic readonly id: string;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdeclare public for: string | undefined;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.set( 'for', undefined );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.id = `ck-editor__label_${ uid() }`;\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-label'\n\t\t\t\t],\n\t\t\t\tid: this.id,\n\t\t\t\tfor: bind.to( 'for' )\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/spinner/spinnerview\n */\n\nimport { View } from '../view.js';\n\nimport '../../theme/components/spinner/spinner.css';\n\n/**\n * The spinner view class.\n */\nexport class SpinnerView extends View {\n\t/**\n\t * Controls whether the spinner is visible.\n\t *\n\t * @observable\n\t * @default false\n\t */\n\tdeclare public isVisible: boolean;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.set( 'isVisible', false );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'span',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-spinner-container',\n\t\t\t\t\tbind.if( 'isVisible', 'ck-hidden', value => !value )\n\t\t\t\t]\n\t\t\t},\n\t\t\tchildren: [ {\n\t\t\t\ttag: 'span',\n\t\t\t\tattributes: {\n\t\t\t\t\tclass: [ 'ck', 'ck-spinner' ]\n\t\t\t\t}\n\t\t\t} ]\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/toolbar/balloon/balloontoolbar\n */\n\nimport { ContextualBalloon } from '../../panel/balloon/contextualballoon.js';\nimport { ToolbarView, type ToolbarViewGroupedItemsUpdateEvent } from '../toolbarview.js';\nimport { BalloonPanelView } from '../../panel/balloon/balloonpanelview.js';\nimport { normalizeToolbarConfig } from '../normalizetoolbarconfig.js';\n\nimport type {\n\tEditorUIReadyEvent,\n\tEditorUIUpdateEvent\n} from '../../editorui/editorui.js';\n\nimport {\n\tPlugin,\n\ttype Editor,\n\ttype EditorReadyEvent\n} from '@ckeditor/ckeditor5-core';\n\nimport {\n\tFocusTracker,\n\tRect,\n\tResizeObserver,\n\tenv,\n\tglobal,\n\ttoUnit,\n\ttype ObservableChangeEvent\n} from '@ckeditor/ckeditor5-utils';\n\nimport {\n\tObserver,\n\ttype ModelDocumentSelection,\n\ttype ModelDocumentSelectionChangeRangeEvent,\n\ttype ModelSchema\n} from '@ckeditor/ckeditor5-engine';\n\nimport { debounce, type DebouncedFunc } from 'es-toolkit/compat';\n\nconst toPx = /* #__PURE__ */ toUnit( 'px' );\n\n/**\n * The contextual toolbar.\n *\n * It uses the {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon plugin}.\n */\nexport class BalloonToolbar extends Plugin {\n\t/**\n\t * The toolbar view displayed in the balloon.\n\t */\n\tpublic readonly toolbarView: ToolbarView;\n\n\t/**\n\t * Tracks the focus of the {@link module:ui/editorui/editorui~EditorUI#getEditableElement editable element}\n\t * and the {@link #toolbarView}. When both are blurred then the toolbar should hide.\n\t */\n\tpublic readonly focusTracker: FocusTracker;\n\n\t/**\n\t * A cached and normalized `config.balloonToolbar` object.\n\t */\n\tprivate _balloonConfig: ReturnType<typeof normalizeToolbarConfig>;\n\n\t/**\n\t * An instance of the resize observer that allows to respond to changes in editable's geometry\n\t * so the toolbar can stay within its boundaries (and group toolbar items that do not fit).\n\t *\n\t * **Note**: Used only when `shouldNotGroupWhenFull` was **not** set in the\n\t * {@link module:core/editor/editorconfig~EditorConfig#balloonToolbar configuration}.\n\t *\n\t * **Note:** Created in {@link #init}.\n\t */\n\tprivate _resizeObserver: ResizeObserver | null = null;\n\n\t/**\n\t * The contextual balloon plugin instance.\n\t */\n\tprivate readonly _balloon: ContextualBalloon;\n\n\t/**\n\t * Fires `_selectionChangeDebounced` event using `es-toolkit#debounce`.\n\t *\n\t * This event is an internal plugin event which is fired 200 ms after model selection last change.\n\t * This is to makes easy test debounced action without need to use `setTimeout`.\n\t *\n\t * This function is stored as a plugin property to make possible to cancel\n\t * trailing debounced invocation on destroy.\n\t */\n\tprivate readonly _fireSelectionChangeDebounced: DebouncedFunc<() => unknown>;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'BalloonToolbar' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ ContextualBalloon ] as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor: Editor ) {\n\t\tsuper( editor );\n\n\t\tthis._balloonConfig = normalizeToolbarConfig( editor.config.get( 'balloonToolbar' ) );\n\t\tthis.toolbarView = this._createToolbarView();\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\t// Track focusable elements in the toolbar and the editable elements.\n\t\tthis._trackFocusableEditableElements();\n\t\tthis.focusTracker.add( this.toolbarView );\n\n\t\t// Register the toolbar so it becomes available for Alt+F10 and Esc navigation.\n\t\teditor.ui.addToolbar( this.toolbarView, {\n\t\t\tbeforeFocus: () => this.show( true ),\n\t\t\tafterBlur: () => this.hide(),\n\t\t\tisContextual: true\n\t\t} );\n\n\t\tthis._balloon = editor.plugins.get( ContextualBalloon );\n\t\tthis._fireSelectionChangeDebounced = debounce( () => this.fire( '_selectionChangeDebounced' ), 200 );\n\n\t\t// The appearance of the BalloonToolbar method is event–driven.\n\t\t// It is possible to stop the #show event and this prevent the toolbar from showing up.\n\t\tthis.decorate( 'show' );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tconst editor = this.editor;\n\t\tconst selection = editor.model.document.selection;\n\n\t\t// Show/hide the toolbar on editable focus/blur.\n\t\tthis.listenTo<ObservableChangeEvent<boolean>>( this.focusTracker, 'change:isFocused', ( evt, name, isFocused ) => {\n\t\t\tconst isToolbarVisible = this._balloon.visibleView === this.toolbarView;\n\n\t\t\tif ( !isFocused && isToolbarVisible ) {\n\t\t\t\tthis.hide();\n\t\t\t} else if ( isFocused ) {\n\t\t\t\tthis.show();\n\t\t\t}\n\t\t} );\n\n\t\t// Hide the toolbar when the selection is changed by a direct change or has changed to collapsed.\n\t\tthis.listenTo<ModelDocumentSelectionChangeRangeEvent>( selection, 'change:range', ( evt, data ) => {\n\t\t\tif ( data.directChange || selection.isCollapsed ) {\n\t\t\t\tthis.hide();\n\t\t\t}\n\n\t\t\t// Fire internal `_selectionChangeDebounced` event to use it for showing\n\t\t\t// the toolbar after the selection stops changing.\n\t\t\tthis._fireSelectionChangeDebounced();\n\t\t} );\n\n\t\t// Show the toolbar when the selection stops changing.\n\t\tthis.listenTo( this, '_selectionChangeDebounced', () => {\n\t\t\tif ( this.editor.editing.view.document.isFocused ) {\n\t\t\t\tthis.show();\n\t\t\t}\n\t\t} );\n\n\t\tif ( !this._balloonConfig.shouldNotGroupWhenFull ) {\n\t\t\tthis.listenTo<EditorReadyEvent>( editor, 'ready', () => {\n\t\t\t\tconst editableElement = editor.ui.view.editable.element!;\n\n\t\t\t\t// Set #toolbarView's max-width on the initialization and update it on the editable resize.\n\t\t\t\tthis._resizeObserver = new ResizeObserver( editableElement, entry => {\n\t\t\t\t\t// The max-width equals 90% of the editable's width for the best user experience.\n\t\t\t\t\t// The value keeps the balloon very close to the boundaries of the editable and limits the cases\n\t\t\t\t\t// when the balloon juts out from the editable element it belongs to.\n\t\t\t\t\tthis.toolbarView.maxWidth = toPx( entry.contentRect.width * .9 );\n\t\t\t\t} );\n\t\t\t} );\n\t\t}\n\n\t\t// Listen to the toolbar view and whenever it changes its geometry due to some items being\n\t\t// grouped or ungrouped, update the position of the balloon because a shorter/longer toolbar\n\t\t// means the balloon could be pointing at the wrong place. Once updated, the balloon will point\n\t\t// at the right selection in the content again.\n\t\t// https://github.com/ckeditor/ckeditor5/issues/6444\n\t\tthis.listenTo<ToolbarViewGroupedItemsUpdateEvent>( this.toolbarView, 'groupedItemsUpdate', () => {\n\t\t\tthis._updatePosition();\n\t\t} );\n\n\t\t// Creates toolbar components based on given configuration.\n\t\t// This needs to be done when all plugins are ready.\n\t\teditor.ui.once<EditorUIReadyEvent>( 'ready', () => {\n\t\t\tthis.toolbarView.fillFromConfig( this._balloonConfig, this.editor.ui.componentFactory );\n\t\t} );\n\t}\n\n\t/**\n\t * Creates the toolbar view instance.\n\t */\n\tprivate _createToolbarView() {\n\t\tconst t = this.editor.locale.t;\n\t\tconst shouldGroupWhenFull = !this._balloonConfig.shouldNotGroupWhenFull;\n\t\tconst toolbarView = new ToolbarView( this.editor.locale, {\n\t\t\tshouldGroupWhenFull,\n\t\t\tisFloating: true\n\t\t} );\n\n\t\ttoolbarView.ariaLabel = t( 'Editor contextual toolbar' );\n\t\ttoolbarView.render();\n\n\t\treturn toolbarView;\n\t}\n\n\t/**\n\t * Shows the toolbar and attaches it to the selection.\n\t *\n\t * Fires {@link #event:show} event which can be stopped to prevent the toolbar from showing up.\n\t *\n\t * @param showForCollapsedSelection When set `true`, the toolbar will show despite collapsed selection in the\n\t * editing view.\n\t */\n\tpublic show( showForCollapsedSelection: boolean = false ): void {\n\t\tconst editor = this.editor;\n\t\tconst selection = editor.model.document.selection;\n\t\tconst schema = editor.model.schema;\n\n\t\t// Do not add the toolbar to the balloon stack twice.\n\t\tif ( this._balloon.hasView( this.toolbarView ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not show the toolbar when the selection is collapsed.\n\t\tif ( selection.isCollapsed && !showForCollapsedSelection ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not show the toolbar when there is more than one range in the selection and they fully contain selectable elements.\n\t\t// See https://github.com/ckeditor/ckeditor5/issues/6443.\n\t\tif ( selectionContainsOnlyMultipleSelectables( selection, schema ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not show the toolbar when all components inside are disabled\n\t\t// see https://github.com/ckeditor/ckeditor5-ui/issues/269.\n\t\tif ( Array.from( this.toolbarView.items ).every( ( item: any ) => item.isEnabled !== undefined && !item.isEnabled ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Update the toolbar position when the editor ui should be refreshed.\n\t\tthis.listenTo<EditorUIUpdateEvent>( this.editor.ui, 'update', () => {\n\t\t\tthis._updatePosition();\n\t\t} );\n\n\t\t// Add the toolbar to the common editor contextual balloon.\n\t\tthis._balloon.add( {\n\t\t\tview: this.toolbarView,\n\t\t\tposition: this._getBalloonPositionData(),\n\t\t\tballoonClassName: 'ck-toolbar-container'\n\t\t} );\n\t}\n\n\t/**\n\t * Hides the toolbar.\n\t */\n\tpublic hide(): void {\n\t\tif ( this._balloon.hasView( this.toolbarView ) ) {\n\t\t\tthis.stopListening( this.editor.ui, 'update' );\n\t\t\tthis._balloon.remove( this.toolbarView );\n\t\t}\n\t}\n\n\t/**\n\t * Add or remove editable elements to the focus tracker. It watches added and removed roots\n\t * and adds or removes their editable elements to the focus tracker.\n\t */\n\tprivate _trackFocusableEditableElements() {\n\t\tconst { editor, focusTracker } = this;\n\t\tconst { editing } = editor;\n\n\t\tediting.view.addObserver( class TrackEditableElements extends Observer {\n\t\t\t/**\n\t\t\t * @inheritDoc\n\t\t\t */\n\t\t\tpublic observe( domElement: HTMLElement ) {\n\t\t\t\tfocusTracker.add( domElement );\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * @inheritDoc\n\t\t\t */\n\t\t\tpublic stopObserving( domElement: HTMLElement ) {\n\t\t\t\tfocusTracker.remove( domElement );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Returns positioning options for the {@link #_balloon}. They control the way balloon is attached\n\t * to the selection.\n\t */\n\tprivate _getBalloonPositionData() {\n\t\tconst editor = this.editor;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\t\tconst viewSelection = viewDocument.selection;\n\n\t\t// Get direction of the selection.\n\t\tconst isBackward = viewDocument.selection.isBackward;\n\n\t\treturn {\n\t\t\t// Because the target for BalloonPanelView is a Rect (not DOMRange), it's geometry will stay fixed\n\t\t\t// as the window scrolls. To let the BalloonPanelView follow such Rect, is must be continuously\n\t\t\t// computed and hence, the target is defined as a function instead of a static value.\n\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/195\n\t\t\ttarget: () => {\n\t\t\t\tconst range = isBackward ? viewSelection.getFirstRange() : viewSelection.getLastRange();\n\t\t\t\tconst rangeRects = Rect.getDomRangeRects( view.domConverter.viewRangeToDom( range! ) );\n\n\t\t\t\t// Select the proper range rect depending on the direction of the selection.\n\t\t\t\tif ( isBackward ) {\n\t\t\t\t\treturn rangeRects[ 0 ];\n\t\t\t\t} else {\n\t\t\t\t\t// Ditch the zero-width \"orphan\" rect in the next line for the forward selection if there's\n\t\t\t\t\t// another one preceding it. It is not rendered as a selection by the web browser anyway.\n\t\t\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/308\n\t\t\t\t\tif ( rangeRects.length > 1 && rangeRects[ rangeRects.length - 1 ].width === 0 ) {\n\t\t\t\t\t\trangeRects.pop();\n\t\t\t\t\t}\n\n\t\t\t\t\treturn rangeRects[ rangeRects.length - 1 ];\n\t\t\t\t}\n\t\t\t},\n\t\t\tpositions: this._getBalloonPositions( isBackward )\n\t\t};\n\t}\n\n\t/**\n\t * Updates the position of the {@link #_balloon} to make up for changes:\n\t *\n\t * * in the geometry of the selection it is attached to (e.g. the selection moved in the viewport or expanded or shrunk),\n\t * * or the geometry of the balloon toolbar itself (e.g. the toolbar has grouped or ungrouped some items and it is shorter or longer).\n\t */\n\tprivate _updatePosition() {\n\t\tthis._balloon.updatePosition( this._getBalloonPositionData() );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\n\t\tthis.stopListening();\n\t\tthis._fireSelectionChangeDebounced.cancel();\n\t\tthis.toolbarView.destroy();\n\t\tthis.focusTracker.destroy();\n\n\t\tif ( this._resizeObserver ) {\n\t\t\tthis._resizeObserver.destroy();\n\t\t}\n\t}\n\n\t/**\n\t * Returns toolbar positions for the given direction of the selection.\n\t */\n\tprivate _getBalloonPositions( isBackward: boolean ) {\n\t\tconst isSafariIniOS = env.isSafari && env.isiOS;\n\n\t\t// https://github.com/ckeditor/ckeditor5/issues/7707\n\t\tconst positions = isSafariIniOS ? BalloonPanelView.generatePositions( {\n\t\t\t// 20px when zoomed out. Less then 20px when zoomed in; the \"radius\" of the native selection handle gets\n\t\t\t// smaller as the user zooms in. No less than the default v-offset, though.\n\t\t\theightOffset: Math.max(\n\t\t\t\tBalloonPanelView.arrowHeightOffset,\n\t\t\t\tMath.round( 20 / global.window.visualViewport!.scale )\n\t\t\t)\n\t\t} ) : BalloonPanelView.defaultPositions;\n\n\t\treturn isBackward ? [\n\t\t\tpositions.northWestArrowSouth,\n\t\t\tpositions.northWestArrowSouthWest,\n\t\t\tpositions.northWestArrowSouthEast,\n\t\t\tpositions.northWestArrowSouthMiddleEast,\n\t\t\tpositions.northWestArrowSouthMiddleWest,\n\t\t\tpositions.southWestArrowNorth,\n\t\t\tpositions.southWestArrowNorthWest,\n\t\t\tpositions.southWestArrowNorthEast,\n\t\t\tpositions.southWestArrowNorthMiddleWest,\n\t\t\tpositions.southWestArrowNorthMiddleEast\n\t\t] : [\n\t\t\tpositions.southEastArrowNorth,\n\t\t\tpositions.southEastArrowNorthEast,\n\t\t\tpositions.southEastArrowNorthWest,\n\t\t\tpositions.southEastArrowNorthMiddleEast,\n\t\t\tpositions.southEastArrowNorthMiddleWest,\n\t\t\tpositions.northEastArrowSouth,\n\t\t\tpositions.northEastArrowSouthEast,\n\t\t\tpositions.northEastArrowSouthWest,\n\t\t\tpositions.northEastArrowSouthMiddleEast,\n\t\t\tpositions.northEastArrowSouthMiddleWest\n\t\t];\n\t}\n}\n\n/**\n * Returns \"true\" when the selection has multiple ranges and each range contains a selectable element\n * and nothing else.\n */\nfunction selectionContainsOnlyMultipleSelectables( selection: ModelDocumentSelection, schema: ModelSchema ) {\n\t// It doesn't contain multiple objects if there is only one range.\n\tif ( selection.rangeCount === 1 ) {\n\t\treturn false;\n\t}\n\n\treturn [ ...selection.getRanges() ].every( range => {\n\t\tconst element = range.getContainedElement();\n\n\t\treturn element && schema.isSelectable( element );\n\t} );\n}\n\n/**\n * This event is fired just before the toolbar shows up. Stopping this event will prevent this.\n *\n * @eventName ~BalloonToolbar#show\n */\nexport type BalloonToolbarShowEvent = {\n\tname: 'show';\n\targs: [];\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/toolbar/block/blockbuttonview\n */\n\nimport { ButtonView } from '../../button/buttonview.js';\n\nimport { toUnit, type Locale } from '@ckeditor/ckeditor5-utils';\n\nimport '../../../theme/components/toolbar/blocktoolbar.css';\n\nconst toPx = /* #__PURE__ */ toUnit( 'px' );\n\n/**\n * The block button view class.\n *\n * This view represents a button attached next to block element where the selection is anchored.\n *\n * See {@link module:ui/toolbar/block/blocktoolbar~BlockToolbar}.\n */\nexport class BlockButtonView extends ButtonView {\n\t/**\n\t * Top offset.\n\t *\n\t * @observable\n\t */\n\tdeclare public top: number;\n\n\t/**\n\t * Left offset.\n\t *\n\t * @observable\n\t */\n\tdeclare public left: number;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale?: Locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t// Hide button on init.\n\t\tthis.isVisible = false;\n\n\t\tthis.isToggleable = true;\n\n\t\tthis.set( 'top', 0 );\n\t\tthis.set( 'left', 0 );\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-block-toolbar-button',\n\t\t\t\tstyle: {\n\t\t\t\t\ttop: bind.to( 'top', val => toPx( val ) ),\n\t\t\t\t\tleft: bind.to( 'left', val => toPx( val ) )\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/toolbar/block/blocktoolbar\n */\n\nimport {\n\tPlugin,\n\ttype Editor\n} from '@ckeditor/ckeditor5-core';\n\nimport {\n\ttype EventInfo,\n\tgetAncestors,\n\tglobal,\n\tRect,\n\tResizeObserver,\n\ttoUnit,\n\ttype ObservableChangeEvent\n} from '@ckeditor/ckeditor5-utils';\n\nimport type { ModelDocumentSelectionChangeRangeEvent } from '@ckeditor/ckeditor5-engine';\n\nimport { BlockButtonView } from './blockbuttonview.js';\nimport { BalloonPanelView } from '../../panel/balloon/balloonpanelview.js';\nimport { ToolbarView, NESTED_TOOLBAR_ICONS } from '../toolbarview.js';\nimport { clickOutsideHandler } from '../../bindings/clickoutsidehandler.js';\nimport { normalizeToolbarConfig } from '../normalizetoolbarconfig.js';\n\nimport { type ButtonView } from '../../button/buttonview.js';\nimport type { ButtonExecuteEvent } from '../../button/button.js';\nimport type { EditorUIReadyEvent, EditorUIUpdateEvent } from '../../editorui/editorui.js';\n\nconst toPx = /* #__PURE__ */ toUnit( 'px' );\n\n/**\n * The block toolbar plugin.\n *\n * This plugin provides a button positioned next to the block of content where the selection is anchored.\n * Upon clicking the button, a dropdown providing access to editor features shows up, as configured in\n * {@link module:core/editor/editorconfig~EditorConfig#blockToolbar}.\n *\n * By default, the button is displayed next to all elements marked in {@link module:engine/model/schema~ModelSchema}\n * as `$block` for which the toolbar provides at least one option.\n *\n * By default, the button is attached so its right boundary is touching the\n * {@link module:engine/view/editableelement~ViewEditableElement}:\n *\n * ```\n *  __ |\n * |  ||  This is a block of content that the\n *  ¯¯ |  button is attached to. This is a\n *     |  block of content that the button is\n *     |  attached to.\n * ```\n *\n * The position of the button can be adjusted using the CSS `transform` property:\n *\n * ```css\n * .ck-block-toolbar-button {\n * \ttransform: translateX( -10px );\n * }\n * ```\n *\n * ```\n *  __   |\n * |  |  |  This is a block of content that the\n *  ¯¯   |  button is attached to. This is a\n *       |  block of content that the button is\n *       |  attached to.\n * ```\n *\n * **Note**: If you plan to run the editor in a right–to–left (RTL) language, keep in mind the button\n * will be attached to the **right** boundary of the editable area. In that case, make sure the\n * CSS position adjustment works properly by adding the following styles:\n *\n * ```css\n * .ck[dir=\"rtl\"] .ck-block-toolbar-button {\n * \ttransform: translateX( 10px );\n * }\n * ```\n */\nexport class BlockToolbar extends Plugin {\n\t/**\n\t * The toolbar view.\n\t */\n\tpublic readonly toolbarView: ToolbarView;\n\n\t/**\n\t * The balloon panel view, containing the {@link #toolbarView}.\n\t */\n\tpublic readonly panelView: BalloonPanelView;\n\n\t/**\n\t * The button view that opens the {@link #toolbarView}.\n\t */\n\tpublic readonly buttonView: BlockButtonView;\n\n\t/**\n\t * An instance of the resize observer that allows to respond to changes in editable's geometry\n\t * so the toolbar can stay within its boundaries (and group toolbar items that do not fit).\n\t *\n\t * **Note**: Used only when `shouldNotGroupWhenFull` was **not** set in the\n\t * {@link module:core/editor/editorconfig~EditorConfig#blockToolbar configuration}.\n\t */\n\tprivate _resizeObserver: ResizeObserver | null = null;\n\n\t/**\n\t * A cached and normalized `config.blockToolbar` object.\n\t */\n\tprivate _blockToolbarConfig: ReturnType<typeof normalizeToolbarConfig>;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'BlockToolbar' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor: Editor ) {\n\t\tsuper( editor );\n\n\t\tthis._blockToolbarConfig = normalizeToolbarConfig( this.editor.config.get( 'blockToolbar' ) );\n\t\tthis.toolbarView = this._createToolbarView();\n\t\tthis.panelView = this._createPanelView();\n\t\tthis.buttonView = this._createButtonView();\n\n\t\t// Close the #panelView upon clicking outside of the plugin UI.\n\t\tclickOutsideHandler( {\n\t\t\temitter: this.panelView,\n\t\t\tcontextElements: [ this.panelView.element!, this.buttonView.element! ],\n\t\t\tactivator: () => this.panelView.isVisible,\n\t\t\tcallback: () => this._hidePanel()\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\n\t\tconst editBlockText = t( 'Click to edit block' );\n\t\tconst dragToMoveText = t( 'Drag to move' );\n\t\tconst editBlockLabel = t( 'Edit block' );\n\n\t\tconst isDragDropBlockToolbarPluginLoaded = editor.plugins.has( 'DragDropBlockToolbar' );\n\t\tconst label = isDragDropBlockToolbarPluginLoaded ? `${ editBlockText }\\n${ dragToMoveText }` : editBlockLabel;\n\n\t\tthis.buttonView.label = label;\n\n\t\tif ( isDragDropBlockToolbarPluginLoaded ) {\n\t\t\tthis.buttonView.element!.dataset.ckeTooltipClass = 'ck-tooltip_multi-line';\n\t\t}\n\n\t\t// Hides panel on a direct selection change.\n\t\tthis.listenTo<ModelDocumentSelectionChangeRangeEvent>( editor.model.document.selection, 'change:range', ( evt, data ) => {\n\t\t\tif ( data.directChange ) {\n\t\t\t\tthis._hidePanel();\n\t\t\t}\n\t\t} );\n\n\t\tthis.listenTo<EditorUIUpdateEvent>( editor.ui, 'update', () => this._updateButton() );\n\t\t// `low` priority is used because of https://github.com/ckeditor/ckeditor5-core/issues/133.\n\t\tthis.listenTo<ObservableChangeEvent>( editor, 'change:isReadOnly', () => this._updateButton(), { priority: 'low' } );\n\t\tthis.listenTo<ObservableChangeEvent>( editor.ui.focusTracker, 'change:isFocused', () => this._updateButton() );\n\n\t\t// Reposition button on resize.\n\t\tthis.listenTo<ObservableChangeEvent<boolean>>( this.buttonView, 'change:isVisible', ( evt, name, isVisible ) => {\n\t\t\tif ( isVisible ) {\n\t\t\t\t// Keep correct position of button and panel on window#resize.\n\t\t\t\tthis.buttonView.listenTo( window, 'resize', () => this._updateButton() );\n\t\t\t} else {\n\t\t\t\t// Stop repositioning button when is hidden.\n\t\t\t\tthis.buttonView.stopListening( window, 'resize' );\n\n\t\t\t\t// Hide the panel when the button disappears.\n\t\t\t\tthis._hidePanel();\n\t\t\t}\n\t\t} );\n\n\t\t// Reposition button on scroll.\n\t\tthis._repositionButtonOnScroll();\n\n\t\t// Register the toolbar so it becomes available for Alt+F10 and Esc navigation.\n\t\teditor.ui.addToolbar( this.toolbarView, {\n\t\t\tbeforeFocus: () => this._showPanel(),\n\t\t\tafterBlur: () => this._hidePanel()\n\t\t} );\n\n\t\t// Fills the toolbar with its items based on the configuration.\n\t\t// This needs to be done after all plugins are ready.\n\t\teditor.ui.once<EditorUIReadyEvent>( 'ready', () => {\n\t\t\tthis.toolbarView.fillFromConfig( this._blockToolbarConfig, this.editor.ui.componentFactory );\n\n\t\t\t// Hide panel before executing each button in the panel.\n\t\t\tfor ( const item of this.toolbarView.items ) {\n\t\t\t\titem.on<ButtonExecuteEvent>( 'execute', () => this._hidePanel( true ), { priority: 'high' } );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\n\t\t// Destroy created UI components as they are not automatically destroyed (see ckeditor5#1341).\n\t\tthis.panelView.destroy();\n\t\tthis.buttonView.destroy();\n\t\tthis.toolbarView.destroy();\n\n\t\tif ( this._resizeObserver ) {\n\t\t\tthis._resizeObserver.destroy();\n\t\t}\n\t}\n\n\t/**\n\t * Creates the {@link #toolbarView}.\n\t */\n\tprivate _createToolbarView(): ToolbarView {\n\t\tconst t = this.editor.locale.t;\n\t\tconst shouldGroupWhenFull = !this._blockToolbarConfig.shouldNotGroupWhenFull;\n\t\tconst toolbarView = new ToolbarView( this.editor.locale, {\n\t\t\tshouldGroupWhenFull,\n\t\t\tisFloating: true\n\t\t} );\n\n\t\ttoolbarView.ariaLabel = t( 'Editor block content toolbar' );\n\n\t\treturn toolbarView;\n\t}\n\n\t/**\n\t * Creates the {@link #panelView}.\n\t */\n\tprivate _createPanelView(): BalloonPanelView {\n\t\tconst editor = this.editor;\n\t\tconst panelView = new BalloonPanelView( editor.locale );\n\n\t\tpanelView.content.add( this.toolbarView );\n\t\tpanelView.class = 'ck-toolbar-container';\n\t\teditor.ui.view.body.add( panelView );\n\n\t\t// Close #panelView on `Esc` press.\n\t\tthis.toolbarView.keystrokes.set( 'Esc', ( evt, cancel ) => {\n\t\t\tthis._hidePanel( true );\n\t\t\tcancel();\n\t\t} );\n\n\t\treturn panelView;\n\t}\n\n\t/**\n\t * Creates the {@link #buttonView}.\n\t */\n\tprivate _createButtonView(): BlockButtonView {\n\t\tconst editor = this.editor;\n\t\tconst t = editor.t;\n\t\tconst buttonView = new BlockButtonView( editor.locale );\n\t\tconst iconFromConfig = this._blockToolbarConfig.icon;\n\n\t\tconst icon = NESTED_TOOLBAR_ICONS[ iconFromConfig! ] || iconFromConfig || NESTED_TOOLBAR_ICONS.dragIndicator;\n\n\t\tbuttonView.set( {\n\t\t\tlabel: t( 'Edit block' ),\n\t\t\ticon,\n\t\t\twithText: false\n\t\t} );\n\n\t\t// Bind the panelView observable properties to the buttonView.\n\t\tbuttonView.bind( 'isOn' ).to( this.panelView, 'isVisible' );\n\t\tbuttonView.bind( 'tooltip' ).to( this.panelView, 'isVisible', isVisible => !isVisible );\n\n\t\t// Toggle the panelView upon buttonView#execute.\n\t\tthis.listenTo<ButtonExecuteEvent>( buttonView, 'execute', () => {\n\t\t\tif ( !this.panelView.isVisible ) {\n\t\t\t\tthis._showPanel();\n\t\t\t} else {\n\t\t\t\tthis._hidePanel( true );\n\t\t\t}\n\t\t} );\n\n\t\t// Hide the panelView when the buttonView is disabled. `isEnabled` flag might be changed when\n\t\t// user scrolls the viewport and the button is no longer visible. In such case, the panel should be hidden\n\t\t// otherwise it will be displayed in the wrong place.\n\t\tthis.listenTo<ObservableChangeEvent<boolean>>( buttonView, 'change:isEnabled', ( evt, name, isEnabled ) => {\n\t\t\tif ( !isEnabled && this.panelView.isVisible ) {\n\t\t\t\tthis._hidePanel( false );\n\t\t\t}\n\t\t} );\n\n\t\teditor.ui.view.body.add( buttonView );\n\n\t\treturn buttonView;\n\t}\n\n\t/**\n\t * Shows or hides the button.\n\t * When all the conditions for displaying the button are matched, it shows the button. Hides otherwise.\n\t */\n\tprivate _updateButton() {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst view = editor.editing.view;\n\n\t\t// Hides the button when the editor is not focused.\n\t\tif ( !editor.ui.focusTracker.isFocused ) {\n\t\t\tthis._hideButton();\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Hides the button when the selection is in non-editable place.\n\t\tif ( !editor.model.canEditAt( editor.model.document.selection ) ) {\n\t\t\tthis._hideButton();\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Get the first selected block, button will be attached to this element.\n\t\tconst modelTarget = Array.from( model.document.selection.getSelectedBlocks() )[ 0 ];\n\n\t\t// Hides the button when there is no enabled item in toolbar for the current block element.\n\t\tif ( !modelTarget || Array.from( this.toolbarView.items ).every( ( item: any ) => !item.isEnabled ) ) {\n\t\t\tthis._hideButton();\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Get DOM target element.\n\t\tconst domTarget = view.domConverter.mapViewToDom( editor.editing.mapper.toViewElement( modelTarget )! );\n\n\t\t// Show block button.\n\t\tthis.buttonView.isVisible = true;\n\n\t\t// Make sure that the block toolbar panel is resized properly.\n\t\tthis._setupToolbarResize();\n\n\t\t// Attach block button to target DOM element.\n\t\tthis._attachButtonToElement( domTarget as any );\n\n\t\t// When panel is opened then refresh it position to be properly aligned with block button.\n\t\tif ( this.panelView.isVisible ) {\n\t\t\tthis._showPanel();\n\t\t}\n\t}\n\n\t/**\n\t * Hides the button.\n\t */\n\tprivate _hideButton() {\n\t\tthis.buttonView.isVisible = false;\n\t}\n\n\t/**\n\t * Shows the {@link #toolbarView} attached to the {@link #buttonView}.\n\t * If the toolbar is already visible, then it simply repositions it.\n\t */\n\tprivate _showPanel() {\n\t\t// Usually, the only way to show the toolbar is by pressing the block button. It makes it impossible for\n\t\t// the toolbar to show up when the button is invisible (feature does not make sense for the selection then).\n\t\t// The toolbar navigation using Alt+F10 does not access the button but shows the panel directly using this method.\n\t\t// So we need to check whether this is possible first.\n\t\tif ( !this.buttonView.isVisible ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst wasVisible = this.panelView.isVisible;\n\n\t\t// So here's the thing: If there was no initial panelView#show() or these two were in different order, the toolbar\n\t\t// positioning will break in RTL editors. Weird, right? What you show know is that the toolbar\n\t\t// grouping works thanks to:\n\t\t//\n\t\t// * the ResizeObserver, which kicks in as soon as the toolbar shows up in DOM (becomes visible again).\n\t\t// * the observable ToolbarView#maxWidth, which triggers re-grouping when changed.\n\t\t//\n\t\t// Here are the possible scenarios:\n\t\t//\n\t\t// 1. (WRONG ❌) If the #maxWidth is set when the toolbar is invisible, it won't affect item grouping (no DOMRects, no grouping).\n\t\t//    Then, when panelView.pin() is called, the position of the toolbar will be calculated for the old\n\t\t//    items grouping state, and when finally ResizeObserver kicks in (hey, the toolbar is visible now, right?)\n\t\t//    it will group/ungroup some items and the length of the toolbar will change. But since in RTL the toolbar\n\t\t//    is attached on the right side and the positioning uses CSS \"left\", it will result in the toolbar shifting\n\t\t//    to the left and being displayed in the wrong place.\n\t\t// 2. (WRONG ❌) If the panelView.pin() is called first and #maxWidth set next, then basically the story repeats. The balloon\n\t\t//    calculates the position for the old toolbar grouping state, then the toolbar re-groups items and because\n\t\t//    it is positioned using CSS \"left\" it will move.\n\t\t// 3. (RIGHT ✅) We show the panel first (the toolbar does re-grouping but it does not matter), then the #maxWidth\n\t\t//    is set allowing the toolbar to re-group again and finally panelView.pin() does the positioning when the\n\t\t//    items grouping state is stable and final.\n\t\t//\n\t\t// https://github.com/ckeditor/ckeditor5/issues/6449, https://github.com/ckeditor/ckeditor5/issues/6575\n\t\tthis.panelView.show();\n\n\t\tconst editableElement = this._getSelectedEditableElement();\n\n\t\tthis.toolbarView.maxWidth = this._getToolbarMaxWidth( editableElement );\n\n\t\tthis.panelView.pin( {\n\t\t\ttarget: this.buttonView.element!,\n\t\t\tlimiter: editableElement\n\t\t} );\n\n\t\tif ( !wasVisible ) {\n\t\t\t( this.toolbarView.items.get( 0 ) as any ).focus();\n\t\t}\n\t}\n\n\t/**\n\t * Returns currently selected editable, based on the model selection.\n\t */\n\tprivate _getSelectedEditableElement(): HTMLElement {\n\t\tconst selectedModelRootName = this.editor.model.document.selection.getFirstRange()!.root.rootName!;\n\n\t\treturn this.editor.ui.getEditableElement( selectedModelRootName )!;\n\t}\n\n\t/**\n\t * Hides the {@link #toolbarView}.\n\t *\n\t * @param focusEditable When `true`, the editable will be focused after hiding the panel.\n\t */\n\tprivate _hidePanel( focusEditable?: boolean ) {\n\t\tthis.panelView.isVisible = false;\n\n\t\tif ( focusEditable ) {\n\t\t\tthis.editor.editing.view.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Repositions the button on scroll.\n\t */\n\tprivate _repositionButtonOnScroll() {\n\t\tconst { buttonView } = this;\n\n\t\tlet pendingAnimationFrame = false;\n\n\t\t// Reposition the button on scroll, but do it only once per animation frame to avoid performance issues.\n\t\tconst repositionOnScroll = ( evt: EventInfo, domEvt: Event ) => {\n\t\t\tif ( pendingAnimationFrame ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// It makes no sense to reposition the button when the user scrolls the dropdown or any other\n\t\t\t// nested scrollable element. The button should be repositioned only when the user scrolls the\n\t\t\t// editable or any other scrollable parent of the editable. Leaving it as it is buggy on Chrome\n\t\t\t// where scrolling nested scrollables is not properly handled.\n\t\t\t// See more: https://github.com/ckeditor/ckeditor5/issues/17067\n\t\t\tconst editableElement = this._getSelectedEditableElement();\n\n\t\t\tif (\n\t\t\t\tdomEvt.target !== global.document &&\n\t\t\t\t!getAncestors( editableElement ).includes( domEvt.target as HTMLElement )\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tpendingAnimationFrame = true;\n\t\t\tglobal.window.requestAnimationFrame( () => {\n\t\t\t\tthis._updateButton();\n\t\t\t\tpendingAnimationFrame = false;\n\t\t\t} );\n\t\t};\n\n\t\t// Watch scroll event only when the button is visible, it prevents attaching the scroll event listener\n\t\t// to the document when the button is not visible.\n\t\tbuttonView.on<ObservableChangeEvent<boolean>>( 'change:isVisible', ( evt, name, isVisible ) => {\n\t\t\tif ( isVisible ) {\n\t\t\t\tbuttonView.listenTo( global.document, 'scroll', repositionOnScroll, {\n\t\t\t\t\tuseCapture: true,\n\t\t\t\t\tusePassive: true\n\t\t\t\t} );\n\t\t\t} else {\n\t\t\t\tbuttonView.stopListening( global.document, 'scroll', repositionOnScroll );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Attaches the {@link #buttonView} to the target block of content.\n\t *\n\t * @param targetElement Target element.\n\t */\n\tprivate _attachButtonToElement( targetElement: HTMLElement ) {\n\t\tconst buttonElement = this.buttonView.element!;\n\t\tconst editableElement = this._getSelectedEditableElement();\n\n\t\tconst contentStyles = window.getComputedStyle( targetElement );\n\n\t\tconst editableRect = new Rect( editableElement );\n\t\tconst contentPaddingTop = parseInt( contentStyles.paddingTop, 10 );\n\t\t// When line height is not an integer then treat it as \"normal\".\n\t\t// MDN says that 'normal' == ~1.2 on desktop browsers.\n\t\tconst contentLineHeight = parseInt( contentStyles.lineHeight, 10 ) || parseInt( contentStyles.fontSize, 10 ) * 1.2;\n\n\t\tconst buttonRect = new Rect( buttonElement );\n\t\tconst contentRect = new Rect( targetElement );\n\n\t\tlet positionLeft;\n\n\t\tif ( this.editor.locale.uiLanguageDirection === 'ltr' ) {\n\t\t\tpositionLeft = editableRect.left - buttonRect.width;\n\t\t} else {\n\t\t\tpositionLeft = editableRect.right;\n\t\t}\n\n\t\tconst positionTop = contentRect.top + contentPaddingTop + ( contentLineHeight - buttonRect.height ) / 2;\n\n\t\tbuttonRect.moveTo( positionLeft, positionTop );\n\n\t\tconst absoluteButtonRect = buttonRect.toAbsoluteRect();\n\n\t\tthis.buttonView.top = absoluteButtonRect.top;\n\t\tthis.buttonView.left = absoluteButtonRect.left;\n\n\t\tthis._clipButtonToViewport( this.buttonView, editableElement );\n\t}\n\n\t/**\n\t * Clips the button element to the viewport of the editable element.\n\t *\n\t * \t* If the button overflows the editable viewport, it is clipped to make it look like it's cut off by the editable scrollable region.\n\t * \t* If the button is fully hidden by the top of the editable, it is not clickable but still visible in the DOM.\n\t *\n\t * @param buttonView The button view to clip.\n\t * @param editableElement The editable element whose viewport is used for clipping.\n\t */\n\tprivate _clipButtonToViewport(\n\t\tbuttonView: ButtonView,\n\t\teditableElement: HTMLElement\n\t) {\n\t\tconst absoluteButtonRect = new Rect( buttonView.element! );\n\t\tconst scrollViewportRect = new Rect( editableElement ).getVisible();\n\n\t\t// Sets polygon clip path for the button element, if there is no argument provided, the clip path is removed.\n\t\tconst setButtonClipping = ( ...paths: Array<string> ) => {\n\t\t\tbuttonView.element!.style.clipPath = paths.length ? `polygon(${ paths.join( ',' ) })` : '';\n\t\t};\n\n\t\t// Hide the button if it's fully hidden by the top of the editable.\n\t\t// Note that the button is still visible in the DOM, but it's not clickable. It's because we don't\n\t\t// want to hide the button completely, as there are plenty of `isVisible` watchers which toggles\n\t\t// the button scroll listeners.\n\t\tconst markAsHidden = ( isHidden: boolean ) => {\n\t\t\tbuttonView.isEnabled = !isHidden;\n\t\t\tbuttonView.element!.style.pointerEvents = isHidden ? 'none' : '';\n\t\t};\n\n\t\tif ( scrollViewportRect && scrollViewportRect.bottom < absoluteButtonRect.bottom ) {\n\t\t\t// Calculate the delta between the button bottom and the editable bottom, and clip the button\n\t\t\t// to make it look like it's cut off by the editable scrollable region.\n\t\t\tconst delta = Math.min(\n\t\t\t\tabsoluteButtonRect.height,\n\t\t\t\tabsoluteButtonRect.bottom - scrollViewportRect.bottom\n\t\t\t);\n\n\t\t\tmarkAsHidden( delta >= absoluteButtonRect.height );\n\t\t\tsetButtonClipping(\n\t\t\t\t'0 0',\n\t\t\t\t'100% 0',\n\t\t\t\t`100% calc(100% - ${ toPx( delta ) })`,\n\t\t\t\t`0 calc(100% - ${ toPx( delta ) }`\n\t\t\t);\n\t\t} else if ( scrollViewportRect && scrollViewportRect.top > absoluteButtonRect.top ) {\n\t\t\t// Calculate the delta between the button top and the editable top, and clip the button\n\t\t\t// to make it look like it's cut off by the editable scrollable region.\n\t\t\tconst delta = Math.min(\n\t\t\t\tabsoluteButtonRect.height,\n\t\t\t\tscrollViewportRect.top - absoluteButtonRect.top\n\t\t\t);\n\n\t\t\tmarkAsHidden( delta >= absoluteButtonRect.height );\n\t\t\tsetButtonClipping(\n\t\t\t\t`0 ${ toPx( delta ) }`,\n\t\t\t\t`100% ${ toPx( delta ) }`,\n\t\t\t\t'100% 100%',\n\t\t\t\t'0 100%'\n\t\t\t);\n\t\t} else {\n\t\t\t// Reset the clip path if button is fully visible.\n\t\t\tmarkAsHidden( false );\n\t\t\tsetButtonClipping();\n\t\t}\n\t}\n\n\t/**\n\t * Creates a resize observer that observes selected editable and resizes the toolbar panel accordingly.\n\t */\n\tprivate _setupToolbarResize() {\n\t\tconst editableElement = this._getSelectedEditableElement();\n\n\t\t// Do this only if the automatic grouping is turned on.\n\t\tif ( !this._blockToolbarConfig.shouldNotGroupWhenFull ) {\n\t\t\t// If resize observer is attached to a different editable than currently selected editable, re-attach it.\n\t\t\tif ( this._resizeObserver && this._resizeObserver.element !== editableElement ) {\n\t\t\t\tthis._resizeObserver.destroy();\n\t\t\t\tthis._resizeObserver = null;\n\t\t\t}\n\n\t\t\tif ( !this._resizeObserver ) {\n\t\t\t\tthis._resizeObserver = new ResizeObserver( editableElement, () => {\n\t\t\t\t\tthis.toolbarView.maxWidth = this._getToolbarMaxWidth( editableElement );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the {@link #toolbarView} max-width, based on given `editableElement` width plus the distance between the farthest\n\t * edge of the {@link #buttonView} and the editable.\n\t *\n\t * @returns A maximum width that toolbar can have, in pixels.\n\t */\n\tprivate _getToolbarMaxWidth( editableElement: HTMLElement ) {\n\t\tconst editableRect = new Rect( editableElement );\n\t\tconst buttonRect = new Rect( this.buttonView.element! );\n\t\tconst isRTL = this.editor.locale.uiLanguageDirection === 'rtl';\n\t\tconst offset = isRTL ? ( buttonRect.left - editableRect.right ) + buttonRect.width : editableRect.left - buttonRect.left;\n\n\t\treturn toPx( editableRect.width + offset );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/menubar/menubarmenubuttonview\n */\n\nimport { IconDropdownArrow } from '@ckeditor/ckeditor5-icons';\nimport { IconView } from '../icon/iconview.js';\nimport { ListItemButtonView } from '../button/listitembuttonview.js';\nimport type { Locale } from '@ckeditor/ckeditor5-utils';\n\nimport '../../theme/components/menubar/menubarmenubutton.css';\n\n/**\n * A menu {@link module:ui/menubar/menubarmenuview~MenuBarMenuView#buttonView} class. Buttons like this one\n * open both top-level bar menus as well as sub-menus.\n */\nexport class MenuBarMenuButtonView extends ListItemButtonView {\n\t/**\n\t * An icon that displays an arrow to indicate a direction of the menu.\n\t */\n\tpublic readonly arrowView: IconView;\n\n\t/**\n\t * Creates an instance of the menu bar button view.\n\t *\n\t * @param locale The localization services instance.\n\t */\n\tconstructor( locale: Locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.set( {\n\t\t\twithText: true,\n\t\t\trole: 'menuitem'\n\t\t} );\n\n\t\tthis.arrowView = this._createArrowView();\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-menu-bar__menu__button'\n\t\t\t\t],\n\t\t\t\t'aria-haspopup': true,\n\t\t\t\t'aria-expanded': this.bindTemplate.to( 'isOn', value => String( value ) ),\n\t\t\t\t'data-cke-tooltip-disabled': bind.to( 'isOn' )\n\t\t\t},\n\t\t\ton: {\n\t\t\t\t'mouseenter': bind.to( 'mouseenter' )\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tthis.children.add( this.arrowView );\n\t}\n\n\t/**\n\t * Creates the {@link #arrowView} instance.\n\t */\n\tprivate _createArrowView() {\n\t\tconst arrowView = new IconView();\n\n\t\tarrowView.content = IconDropdownArrow;\n\t\tarrowView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: 'ck-menu-bar__menu__button__arrow'\n\t\t\t}\n\t\t} );\n\n\t\treturn arrowView;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/menubar/menubarmenupanelview\n */\n\nimport { type Locale } from '@ckeditor/ckeditor5-utils';\nimport type { FocusableView } from '../focuscycler.js';\nimport { type ViewCollection } from '../viewcollection.js';\nimport { View } from '../view.js';\n\nimport '../../theme/components/menubar/menubarmenupanel.css';\n\n/**\n * A view representing a {@link module:ui/menubar/menubarmenuview~MenuBarMenuView#panelView} of a menu.\n */\nexport class MenuBarMenuPanelView extends View implements FocusableView {\n\t/**\n\t * Collection of the child views in this panel.\n\t */\n\tpublic readonly children: ViewCollection<FocusableView>;\n\n\t/**\n\t * Controls whether the panel is visible.\n\t *\n\t * @observable\n\t */\n\tdeclare public isVisible: boolean;\n\n\t/**\n\t * The name of the position of the panel, relative to the parent.\n\t *\n\t * This property is reflected in the CSS class suffix set to {@link #element} that controls\n\t * the position of the panel.\n\t *\n\t * @observable\n\t * @default 'se'\n\t */\n\tdeclare public position: MenuBarMenuPanelPosition;\n\n\t/**\n\t * Creates an instance of the menu panel view.\n\t *\n\t * @param locale The localization services instance.\n\t */\n\tconstructor( locale?: Locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.set( 'isVisible', false );\n\t\tthis.set( 'position', 'se' );\n\n\t\tthis.children = this.createCollection();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-reset',\n\t\t\t\t\t'ck-menu-bar__menu__panel',\n\t\t\t\t\tbind.to( 'position', value => `ck-menu-bar__menu__panel_position_${ value }` ),\n\t\t\t\t\tbind.if( 'isVisible', 'ck-hidden', value => !value )\n\t\t\t\t],\n\t\t\t\ttabindex: '-1'\n\t\t\t},\n\n\t\t\tchildren: this.children,\n\n\t\t\ton: {\n\t\t\t\t// Drag and drop in the panel should not break the selection in the editor.\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-ui/issues/228\n\t\t\t\tselectstart: bind.to( evt => {\n\t\t\t\t\tif ( ( evt.target as HTMLElement ).tagName.toLocaleLowerCase() === 'input' ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t} )\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Focuses the first child of the panel (default) or the last one if the `direction` is `-1`.\n\t */\n\tpublic focus( direction: -1 | 1 = 1 ): void {\n\t\tif ( this.children.length ) {\n\t\t\tif ( direction === 1 ) {\n\t\t\t\tthis.children.first!.focus();\n\t\t\t} else {\n\t\t\t\tthis.children.last!.focus();\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * The names of the positions of the {@link module:ui/menubar/menubarmenupanelview~MenuBarMenuPanelView}.\n *\n * They are reflected as CSS class suffixes on the panel view element.\n */\nexport type MenuBarMenuPanelPosition = 'se' | 'sw' | 'ne' | 'nw' | 'w' | 'ws' | 'e' | 'es';\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/menubar/menubarmenuview\n */\n\nimport {\n\tFocusTracker,\n\tKeystrokeHandler,\n\tgetOptimalPosition,\n\ttype Locale,\n\ttype PositioningFunction,\n\ttype ObservableChangeEvent\n} from '@ckeditor/ckeditor5-utils';\nimport { MenuBarMenuButtonView } from './menubarmenubuttonview.js';\nimport { MenuBarMenuBehaviors, MenuBarMenuViewPanelPositioningFunctions } from './utils.js';\nimport type { FocusableView } from '../focuscycler.js';\nimport { View } from '../view.js';\nimport {\n\tMenuBarMenuPanelView,\n\ttype MenuBarMenuPanelPosition\n} from './menubarmenupanelview.js';\n\nimport '../../theme/components/menubar/menubarmenu.css';\n\n/**\n * A menu view for the {@link module:ui/menubar/menubarview~MenuBarView}. Menus are building blocks of the menu bar,\n * they host other sub-menus and menu items (buttons) that users can interact with.\n */\nexport class MenuBarMenuView extends View implements FocusableView {\n\t/**\n\t * Button of the menu view.\n\t */\n\tpublic readonly buttonView: MenuBarMenuButtonView;\n\n\t/**\n\t * Panel of the menu. It hosts children of the menu.\n\t */\n\tpublic readonly panelView: MenuBarMenuPanelView;\n\n\t/**\n\t * Tracks information about the DOM focus in the menu.\n\t */\n\tpublic readonly focusTracker: FocusTracker;\n\n\t/**\n\t * Instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}. It manages\n\t * keystrokes of the menu.\n\t */\n\tpublic readonly keystrokes: KeystrokeHandler;\n\n\t/**\n\t * Controls whether the menu is open, i.e. shows or hides the {@link #panelView panel}.\n\t *\n\t * @observable\n\t */\n\tdeclare public isOpen: boolean;\n\n\t/**\n\t * Controls whether the menu is enabled, i.e. its {@link #buttonView} can be clicked.\n\t *\n\t * @observable\n\t */\n\tdeclare public isEnabled: boolean;\n\n\t/**\n\t * (Optional) The additional CSS class set on the menu {@link #element}.\n\t *\n\t * @observable\n\t */\n\tdeclare public class: string | undefined;\n\n\t/**\n\t * The name of the position of the {@link #panelView}, relative to the menu.\n\t *\n\t * **Note**: The value is updated each time the panel gets {@link #isOpen open}.\n\t *\n\t * @observable\n\t * @default 'w'\n\t */\n\tdeclare public panelPosition: MenuBarMenuPanelPosition;\n\n\t/**\n\t * The parent menu view of the menu. It is `null` for top-level menus.\n\t *\n\t * See {@link module:ui/menubar/menubarview~MenuBarView#registerMenu}.\n\t */\n\tdeclare public parentMenuView: MenuBarMenuView | null;\n\n\t/**\n\t * Creates an instance of the menu view.\n\t *\n\t * @param locale The localization services instance.\n\t */\n\tconstructor( locale: Locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.buttonView = new MenuBarMenuButtonView( locale );\n\t\tthis.buttonView.delegate( 'mouseenter' ).to( this );\n\t\tthis.buttonView.bind( 'isOn', 'isEnabled' ).to( this, 'isOpen', 'isEnabled' );\n\n\t\tthis.panelView = new MenuBarMenuPanelView( locale );\n\t\tthis.panelView.bind( 'isVisible' ).to( this, 'isOpen' );\n\n\t\tthis.keystrokes = new KeystrokeHandler();\n\t\tthis.focusTracker = new FocusTracker();\n\n\t\tthis.set( 'isOpen', false );\n\t\tthis.set( 'isEnabled', true );\n\t\tthis.set( 'panelPosition', 'w' );\n\t\tthis.set( 'class', undefined );\n\t\tthis.set( 'parentMenuView', null );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-menu-bar__menu',\n\t\t\t\t\tbind.to( 'class' ),\n\t\t\t\t\tbind.if( 'isEnabled', 'ck-disabled', value => !value ),\n\t\t\t\t\tbind.if( 'parentMenuView', 'ck-menu-bar__menu_top-level', value => !value )\n\t\t\t\t]\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\tthis.buttonView,\n\t\t\t\tthis.panelView\n\t\t\t]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tthis.focusTracker.add( this.buttonView.element! );\n\t\tthis.focusTracker.add( this.panelView.element! );\n\n\t\t// Listen for keystrokes coming from within #element.\n\t\tthis.keystrokes.listenTo( this.element! );\n\n\t\tMenuBarMenuBehaviors.closeOnEscKey( this );\n\n\t\tthis._repositionPanelOnOpen();\n\t}\n\n\t// For now, this method cannot be called in the render process because the `parentMenuView` may be assigned\n\t// after the rendering process.\n\t//\n\t// TODO: We should reconsider the way we handle this logic.\n\t/**\n\t * Attach all keyboard behaviors for the menu bar view.\n\t *\n\t * @internal\n\t */\n\tpublic _attachBehaviors(): void {\n\t\t// Top-level menus.\n\t\tif ( !this.parentMenuView ) {\n\t\t\tthis._propagateArrowKeystrokeEvents();\n\n\t\t\tMenuBarMenuBehaviors.openAndFocusPanelOnArrowDownKey( this );\n\t\t\tMenuBarMenuBehaviors.toggleOnButtonClick( this );\n\t\t} else {\n\t\t\tMenuBarMenuBehaviors.openOnButtonClick( this );\n\t\t\tMenuBarMenuBehaviors.openOnArrowRightKey( this );\n\t\t\tMenuBarMenuBehaviors.closeOnArrowLeftKey( this );\n\t\t\tMenuBarMenuBehaviors.openAndFocusOnEnterKeyPress( this );\n\t\t\tMenuBarMenuBehaviors.closeOnParentClose( this );\n\t\t}\n\t}\n\n\t/**\n\t * Fires `arrowright` and `arrowleft` events when the user pressed corresponding arrow keys.\n\t */\n\tprivate _propagateArrowKeystrokeEvents(): void {\n\t\tthis.keystrokes.set( 'arrowright', ( data, cancel ) => {\n\t\t\tthis.fire( 'arrowright' );\n\t\t\tcancel();\n\t\t} );\n\n\t\tthis.keystrokes.set( 'arrowleft', ( data, cancel ) => {\n\t\t\tthis.fire( 'arrowleft' );\n\t\t\tcancel();\n\t\t} );\n\t}\n\n\t/**\n\t * Sets the position of the panel when the menu opens. The panel is positioned\n\t * so that it optimally uses the available space in the viewport.\n\t */\n\tprivate _repositionPanelOnOpen(): void {\n\t\t// Let the menu control the position of the panel. The position must be updated every time the menu is open.\n\t\tthis.on<ObservableChangeEvent<boolean>>( 'change:isOpen', ( evt, name, isOpen ) => {\n\t\t\tif ( !isOpen ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst optimalPanelPosition = MenuBarMenuView._getOptimalPosition( {\n\t\t\t\telement: this.panelView.element!,\n\t\t\t\ttarget: this.buttonView.element!,\n\t\t\t\tfitInViewport: true,\n\t\t\t\tpositions: this._panelPositions\n\t\t\t} );\n\n\t\t\tthis.panelView.position = (\n\t\t\t\toptimalPanelPosition ? optimalPanelPosition.name : this._defaultMenuPositionName\n\t\t\t) as MenuBarMenuPanelPosition;\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic focus(): void {\n\t\tthis.buttonView.focus();\n\t}\n\n\t/**\n\t * Positioning functions for the {@link #panelView} . They change depending on the role of the menu (top-level vs sub-menu) in\n\t * the {@link module:ui/menubar/menubarview~MenuBarView menu bar} and the UI language direction.\n\t */\n\tpublic get _panelPositions(): Array<PositioningFunction> {\n\t\tconst {\n\t\t\tsouthEast, southWest, northEast, northWest,\n\t\t\twestSouth, eastSouth, westNorth, eastNorth\n\t\t} = MenuBarMenuViewPanelPositioningFunctions;\n\n\t\tif ( this.locale!.uiLanguageDirection === 'ltr' ) {\n\t\t\tif ( this.parentMenuView ) {\n\t\t\t\treturn [ eastSouth, eastNorth, westSouth, westNorth ];\n\t\t\t} else {\n\t\t\t\treturn [ southEast, southWest, northEast, northWest ];\n\t\t\t}\n\t\t} else {\n\t\t\tif ( this.parentMenuView ) {\n\t\t\t\treturn [ westSouth, westNorth, eastSouth, eastNorth ];\n\t\t\t} else {\n\t\t\t\treturn [ southWest, southEast, northWest, northEast ];\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * The default position of the panel when the menu is opened.\n\t * It is used when the optimal position cannot be calculated.\n\t */\n\tprivate get _defaultMenuPositionName(): MenuBarMenuPanelPosition {\n\t\tif ( this.locale!.uiLanguageDirection === 'ltr' ) {\n\t\t\tif ( this.parentMenuView ) {\n\t\t\t\treturn 'es';\n\t\t\t} else {\n\t\t\t\treturn 'se';\n\t\t\t}\n\t\t} else {\n\t\t\tif ( this.parentMenuView ) {\n\t\t\t\treturn 'ws';\n\t\t\t} else {\n\t\t\t\treturn 'sw';\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A function used to calculate the optimal position for the dropdown panel.\n\t *\n\t * Referenced for unit testing purposes.\n\t */\n\tprivate static _getOptimalPosition = getOptimalPosition;\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/menubar/menubarmenulistview\n */\n\nimport type { Locale } from '@ckeditor/ckeditor5-utils';\nimport { type View } from '../view.js';\n\nimport { ListItemView } from '../list/listitemview.js';\nimport { ListView } from '../list/listview.js';\nimport { ListItemButtonView } from '../button/listitembuttonview.js';\nimport { ButtonView } from '../button/buttonview.js';\n\n/**\n * A list of menu bar items, a child of {@link module:ui/menubar/menubarmenuview~MenuBarMenuView#panelView}.\n *\n * Use this class to create a list of items (options, buttons) to be displayed in a menu bar.\n *\n * To populate this list, use {@link module:ui/menubar/menubarmenulistitemview~MenuBarMenuListItemView} instances.\n */\nexport class MenuBarMenuListView extends ListView {\n\t/**\n\t * Creates an instance of the list view.\n\t *\n\t * @param locale The localization services instance.\n\t */\n\tconstructor( locale: Locale ) {\n\t\tsuper( locale );\n\n\t\tthis.role = 'menu';\n\t\tthis.items.on( 'change', this._setItemsCheckSpace.bind( this ) );\n\t}\n\n\t/**\n\t * This method adds empty space if there is any toggleable item in the list.\n\t * It makes the list properly aligned.\n\t */\n\tprivate _setItemsCheckSpace() {\n\t\tconst hasAnyToggleableItem = (\n\t\t\tArray\n\t\t\t\t.from( this.items )\n\t\t\t\t.some( item => {\n\t\t\t\t\tconst listButtonView = pickListButtonMenuViewIfPresent( item );\n\n\t\t\t\t\treturn listButtonView && listButtonView.isToggleable;\n\t\t\t\t} )\n\t\t);\n\n\t\tthis.items.forEach( item => {\n\t\t\tconst listButtonView = pickListButtonMenuViewIfPresent( item );\n\n\t\t\tif ( listButtonView ) {\n\t\t\t\tlistButtonView.hasCheckSpace = hasAnyToggleableItem;\n\t\t\t}\n\t\t} );\n\t}\n}\n\n/**\n * Picks the first button menu view from the given item if present.\n *\n * @param item The item to check for a button menu view.\n * @returns The first button menu view found in the item, or `null` if not found.\n */\nfunction pickListButtonMenuViewIfPresent( item: View ) {\n\tif ( !( item instanceof ListItemView ) ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\titem\n\t\t\t.children\n\t\t\t.map( child => isNestedMenuLikeView( child ) ? child.buttonView : child )\n\t\t\t.find( item => item instanceof ListItemButtonView ) as ListItemButtonView | undefined\n\t);\n}\n\n/**\n * Checks if the given item is a nested menu-like view. `MenuBarMenuView` imports this file\n * so to avoid circular dependencies, this function is defined in more generic way.\n *\n * @param item The item to check.\n * @returns `true` if the item is a nested menu-like view, `false` otherwise.\n */\nfunction isNestedMenuLikeView( item: any ): item is { buttonView: ButtonView } {\n\treturn (\n\t\ttypeof item === 'object' &&\n\t\t\t'buttonView' in item &&\n\t\t\titem.buttonView instanceof ButtonView\n\t);\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/menubar/menubarmenulistitemfiledialogbuttonview\n */\n\nimport type { Locale } from '@ckeditor/ckeditor5-utils';\nimport { FileDialogListItemButtonView } from '../button/filedialogbuttonview.js';\n\nimport '../../theme/components/menubar/menubarmenulistitembutton.css';\n\n/**\n * A menu bar list file dialog button view. Buttons like this one execute user actions.\n *\n * This component provides a button that opens the native file selection dialog.\n */\nexport class MenuBarMenuListItemFileDialogButtonView extends FileDialogListItemButtonView {\n\t/**\n\t * Creates an instance of the menu bar list button view.\n\t *\n\t * @param locale The localization services instance.\n\t */\n\tconstructor( locale: Locale ) {\n\t\tsuper( locale );\n\n\t\tthis.set( {\n\t\t\twithText: true,\n\t\t\twithKeystroke: true,\n\t\t\ttooltip: false,\n\t\t\trole: 'menuitem'\n\t\t} );\n\n\t\tthis.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [ 'ck-menu-bar__menu__item__button' ]\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module ui/menubar/menubarview\n */\n\nimport {\n\tlogWarning,\n\ttype BaseEvent,\n\ttype Locale,\n\ttype ObservableChangeEvent\n} from '@ckeditor/ckeditor5-utils';\nimport { type FocusableView } from '../focuscycler.js';\nimport { View } from '../view.js';\nimport { isObject } from 'es-toolkit/compat';\nimport { ListItemView } from '../list/listitemview.js';\nimport { ListSeparatorView } from '../list/listseparatorview.js';\nimport { type ViewCollection } from '../viewcollection.js';\nimport { type ComponentFactory } from '../componentfactory.js';\n\nimport { MenuBarMenuView } from './menubarmenuview.js';\nimport { MenuBarMenuListView } from './menubarmenulistview.js';\nimport { MenuBarMenuListItemView } from './menubarmenulistitemview.js';\nimport { MenuBarMenuListItemButtonView } from './menubarmenulistitembuttonview.js';\nimport { MenuBarMenuListItemFileDialogButtonView } from './menubarmenulistitemfiledialogbuttonview.js';\nimport {\n\tMenuBarBehaviors,\n\tprocessMenuBarConfig\n} from './utils.js';\n\nconst EVENT_NAME_DELEGATES = [ 'mouseenter', 'arrowleft', 'arrowright', 'change:isOpen' ] as const;\n\nimport '../../theme/components/menubar/menubar.css';\n\n/**\n * The application menu bar component. It brings a set of top-level menus (and sub-menus) that can be used\n * to organize and access a large number of buttons.\n */\nexport class MenuBarView extends View implements FocusableView {\n\t/**\n\t * Collection of the child views inside the {@link #element}.\n\t */\n\tpublic children: ViewCollection<MenuBarMenuView>;\n\n\t/**\n\t * Indicates whether any of top-level menus are open in the menu bar. To close\n\t * the menu bar use the {@link #close} method.\n\t *\n\t * @observable\n\t */\n\tdeclare public isOpen: boolean;\n\n\t/**\n\t * Indicates whether the menu bar has been interacted with using the keyboard.\n\t *\n\t * It is useful for showing focus outlines while hovering over the menu bar when\n\t * interaction with the keyboard was detected.\n\t *\n\t * @observable\n\t */\n\tdeclare public isFocusBorderEnabled: boolean;\n\n\t/**\n\t * A list of {@link module:ui/menubar/menubarmenuview~MenuBarMenuView} instances registered in the menu bar.\n\t *\n\t * @observable\n\t */\n\tpublic menus: Array<MenuBarMenuView> = [];\n\n\t/**\n\t * Creates an instance of the menu bar view.\n\t *\n\t * @param locale The localization services instance.\n\t */\n\tconstructor( locale: Locale ) {\n\t\tsuper( locale );\n\n\t\tconst t = locale.t;\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.set( {\n\t\t\tisOpen: false,\n\t\t\tisFocusBorderEnabled: false\n\t\t} );\n\n\t\tthis._setupIsOpenUpdater();\n\n\t\tthis.children = this.createCollection();\n\n\t\t// @if CK_DEBUG_MENU_BAR // // Logs events in the main event bus of the component.\n\t\t// @if CK_DEBUG_MENU_BAR // this.on( 'menu', ( evt, data ) => {\n\t\t// @if CK_DEBUG_MENU_BAR // \tconsole.log( `MenuBarView:${ evt.name }`, evt.path.map( view => view.element ) );\n\t\t// @if CK_DEBUG_MENU_BAR // } );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-menu-bar',\n\t\t\t\t\tbind.if( 'isFocusBorderEnabled', 'ck-menu-bar_focus-border-enabled' )\n\t\t\t\t],\n\t\t\t\t'aria-label': t( 'Editor menu bar' ),\n\t\t\t\trole: 'menubar'\n\t\t\t},\n\t\t\tchildren: this.children\n\t\t} );\n\t}\n\n\t/**\n\t * A utility that expands a plain menu bar configuration into a structure of menus (also: sub-menus)\n\t * and items using a given {@link module:ui/componentfactory~ComponentFactory component factory}.\n\t *\n\t * See the {@link module:core/editor/editorconfig~EditorConfig#menuBar menu bar} in the editor\n\t * configuration reference to learn how to configure the menu bar.\n\t */\n\tpublic fillFromConfig(\n\t\tconfig: NormalizedMenuBarConfigObject,\n\t\tcomponentFactory: ComponentFactory,\n\t\textraItems: Array<MenuBarConfigAddedItem | MenuBarConfigAddedGroup | MenuBarConfigAddedMenu> = []\n\t): void {\n\t\tconst locale = this.locale!;\n\t\tconst processedConfig = processMenuBarConfig( {\n\t\t\tnormalizedConfig: config,\n\t\t\tlocale,\n\t\t\tcomponentFactory,\n\t\t\textraItems\n\t\t} );\n\n\t\tconst topLevelCategoryMenuViews = processedConfig.items.map( menuDefinition => this._createMenu( {\n\t\t\tcomponentFactory,\n\t\t\tmenuDefinition\n\t\t} ) );\n\n\t\tthis.children.addMany( topLevelCategoryMenuViews );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tMenuBarBehaviors.toggleMenusAndFocusItemsOnHover( this );\n\t\tMenuBarBehaviors.closeMenusWhenTheBarCloses( this );\n\t\tMenuBarBehaviors.closeMenuWhenAnotherOnTheSameLevelOpens( this );\n\t\tMenuBarBehaviors.focusCycleMenusOnArrows( this );\n\t\tMenuBarBehaviors.closeOnClickOutside( this );\n\t\tMenuBarBehaviors.enableFocusHighlightOnInteraction( this );\n\t}\n\n\t/**\n\t * Focuses the menu bar.\n\t */\n\tpublic focus(): void {\n\t\tif ( this.children.first ) {\n\t\t\tthis.children.first.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Closes all menus in the bar.\n\t */\n\tpublic close(): void {\n\t\tfor ( const topLevelCategoryMenuView of this.children ) {\n\t\t\ttopLevelCategoryMenuView.isOpen = false;\n\t\t}\n\t}\n\n\t/**\n\t * Disables all menus in the bar.\n\t */\n\tpublic disable(): void {\n\t\tfor ( const topLevelCategoryMenuView of this.children ) {\n\t\t\ttopLevelCategoryMenuView.isEnabled = false;\n\t\t}\n\t}\n\n\t/**\n\t * Enables all menus in the bar.\n\t */\n\tpublic enable(): void {\n\t\tfor ( const topLevelCategoryMenuView of this.children ) {\n\t\t\ttopLevelCategoryMenuView.isEnabled = true;\n\t\t}\n\t}\n\n\t/**\n\t * Registers a menu view in the menu bar. Every {@link module:ui/menubar/menubarmenuview~MenuBarMenuView} instance must be registered\n\t * in the menu bar to be properly managed.\n\t */\n\tpublic registerMenu( menuView: MenuBarMenuView, parentMenuView: MenuBarMenuView | null = null ): void {\n\t\tif ( parentMenuView ) {\n\t\t\tmenuView.delegate( ...EVENT_NAME_DELEGATES ).to( parentMenuView );\n\t\t\tmenuView.parentMenuView = parentMenuView;\n\t\t} else {\n\t\t\tmenuView.delegate( ...EVENT_NAME_DELEGATES ).to( this, name => 'menu:' + name );\n\t\t}\n\n\t\tmenuView._attachBehaviors();\n\n\t\tthis.menus.push( menuView );\n\t}\n\n\t/**\n\t * Creates a {@link module:ui/menubar/menubarmenuview~MenuBarMenuView} based on the given definition.\n\t */\n\tprivate _createMenu( { componentFactory, menuDefinition, parentMenuView }: {\n\t\tcomponentFactory: ComponentFactory;\n\t\tmenuDefinition: MenuBarMenuDefinition;\n\t\tparentMenuView?: MenuBarMenuView;\n\t} ) {\n\t\tconst locale = this.locale!;\n\t\tconst menuView = new MenuBarMenuView( locale );\n\n\t\tthis.registerMenu( menuView, parentMenuView );\n\n\t\tmenuView.buttonView.set( {\n\t\t\tlabel: menuDefinition.label\n\t\t} );\n\n\t\t// Defer the creation of the menu structure until it gets open. This is a performance optimization\n\t\t// that shortens the time needed to create the editor.\n\t\tmenuView.once<ObservableChangeEvent<boolean>>( 'change:isOpen', () => {\n\t\t\tconst listView = new MenuBarMenuListView( locale );\n\t\t\tlistView.ariaLabel = menuDefinition.label;\n\t\t\tmenuView.panelView.children.add( listView );\n\n\t\t\tlistView.items.addMany( this._createMenuItems( { menuDefinition, parentMenuView: menuView, componentFactory } ) );\n\t\t} );\n\n\t\treturn menuView;\n\t}\n\n\t/**\n\t * Creates a {@link module:ui/menubar/menubarmenuview~MenuBarMenuView} items based on the given definition.\n\t */\n\tprivate _createMenuItems( { menuDefinition, parentMenuView, componentFactory }: {\n\t\tmenuDefinition: MenuBarMenuDefinition;\n\t\tcomponentFactory: ComponentFactory;\n\t\tparentMenuView: MenuBarMenuView;\n\t} ): Array<MenuBarMenuListItemView | ListSeparatorView> {\n\t\tconst locale = this.locale!;\n\t\tconst items = [];\n\n\t\tfor ( const menuGroupDefinition of menuDefinition.groups ) {\n\t\t\tfor ( const itemDefinition of menuGroupDefinition.items ) {\n\t\t\t\tconst menuItemView = new MenuBarMenuListItemView( locale, parentMenuView );\n\n\t\t\t\tif ( isObject( itemDefinition ) ) {\n\t\t\t\t\tmenuItemView.children.add( this._createMenu( {\n\t\t\t\t\t\tcomponentFactory,\n\t\t\t\t\t\tmenuDefinition: itemDefinition,\n\t\t\t\t\t\tparentMenuView\n\t\t\t\t\t} ) );\n\t\t\t\t} else {\n\t\t\t\t\tconst componentView = this._createMenuItemContentFromFactory( {\n\t\t\t\t\t\tcomponentName: itemDefinition,\n\t\t\t\t\t\tcomponentFactory,\n\t\t\t\t\t\tparentMenuView\n\t\t\t\t\t} );\n\n\t\t\t\t\tif ( !componentView ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tmenuItemView.children.add( componentView );\n\t\t\t\t}\n\n\t\t\t\titems.push( menuItemView );\n\t\t\t}\n\n\t\t\t// Separate groups with a separator.\n\t\t\tif ( menuGroupDefinition !== menuDefinition.groups[ menuDefinition.groups.length - 1 ] ) {\n\t\t\t\titems.push( new ListSeparatorView( locale ) );\n\t\t\t}\n\t\t}\n\n\t\treturn items;\n\t}\n\n\t/**\n\t * Uses the component factory to create a content of the menu item (a button or a sub-menu).\n\t */\n\tprivate _createMenuItemContentFromFactory( { componentName, parentMenuView, componentFactory }: {\n\t\tcomponentName: string;\n\t\tcomponentFactory: ComponentFactory;\n\t\tparentMenuView: MenuBarMenuView;\n\t} ): MenuBarMenuView | MenuBarMenuListItemButtonView | null {\n\t\tconst componentView = componentFactory.create( componentName );\n\n\t\tif ( !(\n\t\t\tcomponentView instanceof MenuBarMenuView ||\n\t\t\tcomponentView instanceof MenuBarMenuListItemButtonView ||\n\t\t\tcomponentView instanceof MenuBarMenuListItemFileDialogButtonView\n\t\t) ) {\n\t\t\t/**\n\t\t\t * Adding unsupported components to the {@link module:ui/menubar/menubarview~MenuBarView} is not possible.\n\t\t\t *\n\t\t\t * A component should be either a {@link module:ui/menubar/menubarmenuview~MenuBarMenuView} (sub-menu) or a\n\t\t\t * {@link module:ui/menubar/menubarmenulistitembuttonview~MenuBarMenuListItemButtonView} (button).\n\t\t\t *\n\t\t\t * @error menu-bar-component-unsupported\n\t\t\t * @param {string} componentName A name of the unsupported component used in the configuration.\n\t\t\t * @param {module:ui/view~View} componentView An unsupported component view.\n\t\t\t */\n\t\t\tlogWarning( 'menu-bar-component-unsupported', {\n\t\t\t\tcomponentName,\n\t\t\t\tcomponentView\n\t\t\t} );\n\n\t\t\treturn null;\n\t\t}\n\n\t\tthis._registerMenuTree( componentView, parentMenuView );\n\n\t\t// Close the whole menu bar when a component is executed.\n\t\tcomponentView.on( 'execute', () => {\n\t\t\tthis.close();\n\t\t} );\n\n\t\treturn componentView;\n\t}\n\n\t/**\n\t * Checks component and its children recursively and calls {@link #registerMenu}\n\t * for each item that is {@link module:ui/menubar/menubarmenuview~MenuBarMenuView}.\n\t *\n\t * @internal\n\t */\n\tprivate _registerMenuTree( componentView: MenuBarMenuView | MenuBarMenuListItemButtonView, parentMenuView: MenuBarMenuView ) {\n\t\tif ( !( componentView instanceof MenuBarMenuView ) ) {\n\t\t\tcomponentView.delegate( 'mouseenter' ).to( parentMenuView );\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.registerMenu( componentView, parentMenuView );\n\n\t\tconst menuBarItemsList = componentView.panelView.children\n\t\t\t.filter( child => child instanceof MenuBarMenuListView )[ 0 ] as MenuBarMenuListView | undefined;\n\n\t\tif ( !menuBarItemsList ) {\n\t\t\tcomponentView.delegate( 'mouseenter' ).to( parentMenuView );\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst nonSeparatorItems = menuBarItemsList.items.filter( item => item instanceof ListItemView ) as Array<ListItemView>;\n\n\t\tfor ( const item of nonSeparatorItems ) {\n\t\t\tthis._registerMenuTree(\n\t\t\t\titem.children.get( 0 ) as MenuBarMenuView | MenuBarMenuListItemButtonView,\n\t\t\t\tcomponentView\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Manages the state of the {@link #isOpen} property of the menu bar. Because the state is a sum of individual\n\t * top-level menus' states, it's necessary to listen to their changes and update the state accordingly.\n\t *\n\t * Additionally, it prevents from unnecessary changes of `isOpen` when one top-level menu opens and another closes\n\t * (regardless of in which order), maintaining a stable `isOpen === true` in that situation.\n\t */\n\tprivate _setupIsOpenUpdater() {\n\t\tlet closeTimeout: ReturnType<typeof setTimeout>;\n\n\t\t// TODO: This is not the prettiest approach but at least it's simple.\n\t\tthis.on<MenuBarMenuChangeIsOpenEvent>( 'menu:change:isOpen', ( evt, name, isOpen ) => {\n\t\t\tclearTimeout( closeTimeout );\n\n\t\t\tif ( isOpen ) {\n\t\t\t\tthis.isOpen = true;\n\t\t\t} else {\n\t\t\t\tcloseTimeout = setTimeout( () => {\n\t\t\t\t\tthis.isOpen = Array.from( this.children ).some( menuView => menuView.isOpen );\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t} );\n\t}\n}\n\nexport type MenuBarConfig = MenuBarConfigObject;\n\nexport type MenuBarConfigObject = {\n\titems?: Array<MenuBarMenuDefinition>;\n\tremoveItems?: Array<string>;\n\taddItems?: Array<MenuBarConfigAddedItem | MenuBarConfigAddedGroup | MenuBarConfigAddedMenu>;\n\tisVisible?: boolean;\n};\n\nexport type NormalizedMenuBarConfigObject = Required<MenuBarConfigObject> & {\n\tisUsingDefaultConfig: boolean;\n};\n\nexport type MenuBarMenuGroupDefinition = {\n\tgroupId: string;\n\titems: Array<MenuBarMenuDefinition | string>;\n};\n\nexport type MenuBarMenuDefinition = {\n\tmenuId: string;\n\tlabel: string;\n\tgroups: Array<MenuBarMenuGroupDefinition>;\n};\n\nexport type MenuBarConfigAddedPosition =\n\t`start:${ string }` | `end:${ string }` | 'start' | 'end' | `after:${ string }` | `before:${ string }`;\n\nexport type MenuBarConfigAddedItem = {\n\titem: string;\n\tposition: MenuBarConfigAddedPosition;\n};\n\nexport type MenuBarConfigAddedGroup = {\n\tgroup: MenuBarMenuGroupDefinition;\n\tposition: MenuBarConfigAddedPosition;\n};\n\nexport type MenuBarConfigAddedMenu = {\n\tmenu: MenuBarMenuDefinition;\n\tposition: MenuBarConfigAddedPosition;\n};\n\n/**\n * Any namespaced event fired by menu a {@link module:ui/menubar/menubarview~MenuBarView#menus menu view instance} of the\n * {@link module:ui/menubar/menubarview~MenuBarView menu bar}.\n */\nexport interface MenuBarMenuEvent extends BaseEvent {\n\tname: `menu:${ string }` | `menu:change:${ string }`;\n}\n\n/**\n * A `mouseenter` event originating from a {@link module:ui/menubar/menubarview~MenuBarView#menus menu view instance} of the\n * {@link module:ui/menubar/menubarview~MenuBarView menu bar}.\n */\nexport interface MenuBarMenuMouseEnterEvent extends MenuBarMenuEvent {\n\tname: 'menu:mouseenter';\n}\n\n/**\n * An `arrowleft` event originating from a {@link module:ui/menubar/menubarview~MenuBarView#menus menu view instance} of the\n * {@link module:ui/menubar/menubarview~MenuBarView menu bar}.\n */\nexport interface MenuBarMenuArrowLeftEvent extends MenuBarMenuEvent {\n\tname: 'menu:arrowleft';\n}\n\n/**\n * An `arrowright` event originating from a {@link module:ui/menubar/menubarview~MenuBarView#menus menu view instance} of the\n * {@link module:ui/menubar/menubarview~MenuBarView menu bar}.\n */\nexport interface MenuBarMenuArrowRightEvent extends MenuBarMenuEvent {\n\tname: 'menu:arrowright';\n}\n\n/**\n * A `change:isOpen` event originating from a {@link module:ui/menubar/menubarview~MenuBarView#menus menu view instance} of the\n * {@link module:ui/menubar/menubarview~MenuBarView menu bar}.\n */\nexport interface MenuBarMenuChangeIsOpenEvent extends MenuBarMenuEvent {\n\tname: 'menu:change:isOpen';\n\targs: [ name: string, value: boolean, oldValue: boolean ];\n}\n"],"names":["ViewCollection","Collection","_parentElement","initialItems","idProperty","on","evt","view","index","_renderViewIntoCollectionParent","element","remove","destroy","map","setParent","elementOrDocFragment","delegate","events","length","isStringArray","CKEditorError","to","dest","evtName","stopDelegating","isRendered","render","insertBefore","children","subject","arr","every","a","xhtmlNs","Template","EmitterMixin","ns","tag","text","attributes","eventListeners","_isRendered","_revertData","def","Object","assign","normalize","clone","node","_renderNode","intoFragment","apply","getEmptyRevertData","isApplying","revertData","revert","_revertTemplateFromNode","getViews","search","child","isView","isTemplate","bind","observable","emitter","eventNameOrFunctionOrAttribute","callback","TemplateToBinding","eventNameOrFunction","attribute","if","valueIfTrue","TemplateIfBinding","extend","template","extendTemplate","data","isInvalid","_renderText","_renderElement","document","createElementNS","_renderAttributes","_renderElementChildren","_setUpListeners","textContent","createTextNode","hasTemplateBinding","_bindToObservable","schema","updater","getTextUpdater","join","attrName","domAttrValue","getAttribute","attrValue","attrNs","isNamespaced","valueToBind","value","shouldExtend","unshift","getAttributeUpdater","_renderStyleAttribute","val","reduce","prev","next","concat","arrayValueReducer","isFalsy","setAttributeNS","styles","styleName","styleValue","getStyleUpdater","style","container","createDocumentFragment","childIndex","isViewCollection","appendChild","isNode","childRevertData","push","childNodes","key","revertBindings","schemaItem","domEvtName","domSelector","split","activateDomEventListener","bindings","syncValueSchemaValue","filter","item","templateBinding","activateAttributeListener","binding","revertBinding","removeAttribute","setAttribute","i","TemplateBinding","getValue","listenTo","stopListening","domEvt","target","matches","fire","Array","isArray","some","getValueSchemaValue","values","set","el","removeAttributeNS","cloneDeepWith","normalizePlainTextDefinition","normalizeTextDefinition","normalizeListeners","normalizeAttributes","toArray","arrayify","listeners","l","obj","cur","extendObjectValueArray","ext","childDef","View","isObject","DomEmitterMixin","ObservableMixin","locale","t","_viewCollections","_unboundChildren","_bindTemplate","createCollection","collection","decorate","bindTemplate","views","add","registerChild","isIterable","deregisterChild","setTemplate","definition","c","AriaLiveAnnouncerPoliteness","POLITE","ASSERTIVE","AriaLiveAnnouncer","editor","once","politeness","announce","announcement","ui","AriaLiveAnnouncerView","body","isUnsafeHTML","politenessRegionView","regionViews","find","AriaLiveAnnouncerRegionView","class","_domConverter","_pruneAnnouncementsInterval","clearInterval","htmlProcessor","domConverter","setInterval","_listElement","firstChild","trim","messageListItem","createElement","setContentOf","innerText","querySelector","clickOutsideHandler","activator","contextElements","listenerOptions","path","composedPath","contextElementsList","contextElement","contains","includes","CssTransitionDisablerMixin","Mixin","disableCssTransitions","_isCssTransitionsDisabled","enableCssTransitions","args","initializeCssTransitionDisablerMixin","DraggableViewMixin","DraggableMixin","_onDragBound","_onDrag","_onDragEndBound","_onDragEnd","_lastDraggingCoordinates","x","y","_attachListeners","_onDragStart","_attachDragListeners","global","_detachDragListeners","_isHandleElementPressed","MouseEvent","clientX","clientY","touches","isDragging","newX","newY","preventDefault","deltaX","Math","round","deltaY","dragHandleElement","HTMLElement","submitHandler","useCapture","addKeyboardHandlingForGrid","keystrokeHandler","focusTracker","gridItems","numberOfColumns","uiLanguageDirection","getNumberOfColumns","getGridItemFocuser","focusedElementIndex","getLeftElementIndex","getRightElementIndex","nextIndex","floor","getIndexToFocus","focusedElement","getIndex","nextIndexToFocus","get","focus","stopPropagation","elementIndex","collectionLength","LabelView","id","undefined","uid","for","AccessibilityHelpContentView","keystrokes","helpLabel","role","tabindex","_createCategories","from","categories","categoryDefinition","elements","label","groups","groupDefinition","_createGroup","flat","description","splice","definitionAndDescriptionElements","sort","b","localeCompare","keystrokeDefinition","_createGroupRow","dt","dd","normalizedKeystrokeDefinition","normalizeKeystrokeDefinition","keystroke","keystrokeAlternativeHTMLs","keystrokeAlternative","keystrokeToEnvKbd","innerHTML","mayRequireFn","env","isMac","getEnvKeystrokeText","part","IconView","presentationalAttributeNames","viewBox","_updateXMLContent","_colorFillPaths","content","parsed","DOMParser","parseFromString","svg","name","removeChild","fillColor","querySelectorAll","forEach","fill","ButtonLabelView","ButtonView","labelView","iconView","keystrokeView","_focusDelayed","ariaLabelUid","_setupLabelView","_createKeystrokeView","_getTooltipString","type","click","isEnabled","isOn","isToggleable","isCheckableRole","String","isSafari","delay","mousedown","mouseup","cancel","icon","prop","newIcon","oldIcon","withKeystroke","tooltip","Function","FormHeaderView","options","FocusCycler","focusables","actions","methodName","keystrokeHandlerOptions","focusFirst","priority","focusLast","first","isDomFocusable","last","slice","_getDomFocusableItem","previous","current","viewIndex","focused","_focus","focusNext","focusPrevious","chain","chainedFocusCycler","getCurrentFocusedView","oldCurrent","stop","unchain","otherFocusCycler","direction","step","focusableItem","focusableItemCandidate","isFocusable","isVisible","isViewWithFocusCycler","focusCycler","DialogActionsView","_focusTracker","_focusables","KeystrokeHandler","FocusTracker","setButtons","definitions","button","property","onExecute","onCreate","_updateFocusCyclableItems","v","DialogContentView","reset","DialogViewPosition","SCREEN_CENTER","EDITOR_CENTER","EDITOR_TOP_SIDE","EDITOR_TOP_CENTER","EDITOR_BOTTOM_CENTER","EDITOR_ABOVE_CENTER","EDITOR_BELOW_CENTER","toPx","toUnit","DialogView","parts","headerView","closeButtonView","actionsView","defaultOffset","contentView","wasMoved","_getCurrentDomRoot","_getViewportOffset","_focusCycler","getCurrentDomRoot","getViewportOffset","isModal","top","left","visibility","defaultPrevented","source","moveBy","window","_isVisible","updatePosition","_isTransparent","setTimeout","setupParts","title","hasCloseButton","actionButtons","_createCloseButton","ariaLabel","addMany","moveTo","viewportRect","_getViewportRect","dialogRect","_getDialogRect","width","right","_moveTo","_left","_top","_moveOffScreen","parentNode","configuredPosition","position","domRootRect","_getVisibleDomRootRect","leftCoordinate","contentLanguageDirection","height","bottom","visibleDomRootRect","Rect","getVisible","getIntersection","firstElementChild","viewportOffset","focusable","buttonView","IconCancel","Dialog","Plugin","_visibleDialogPlugin","_onHide","pluginName","isOfficialPlugin","_initShowHideListeners","_initFocusToggler","_initMultiRootIntegration","isOpen","accessibility","addKeystrokeInfos","categoryId","_unlockBodyScroll","_show","onShow","_hide","isFocused","editing","model","changedRoots","differ","getChangedRoots","changes","state","show","dialogDefinition","hide","className","onHide","getDomRoot","selection","anchor","root","rootName","_lockBodyScroll","documentElement","classList","ListItemButtonView","_checkIconHolderView","CheckIconHolderView","hasCheckSpace","_hasCheck","_watchCheckIconHolderMount","propertyName","hasCheck","_checkIconView","_createCheckIconView","_watchCheckIconMount","has","IconCheck","MenuBarMenuListItemButtonView","withText","AccessibilityHelp","requires","init","componentFactory","_createButton","_toggleDialog","_setupRootLabels","ButtonClass","dialog","plugins","IconAccessibility","editingView","change","writer","roots","addAriaLabelTextToRoot","modelRoot","viewRoot","getRoot","currentAriaLabel","newAriaLabel","segment","keystrokeInfos","BodyCollection","_bodyCollectionContainer","_bodyWrapper","bodyCollectionContainer","attachToDom","dir","isConnected","detachFromDom","childElementCount","POSITION_OFF_SCREEN","config","withArrow","BalloonPanelView","_pinWhenIsVisibleCallback","_resizeObserver","attachTo","getDomElement","defaultPositions","positionOptions","positions","southArrowNorth","southArrowNorthMiddleWest","southArrowNorthMiddleEast","southArrowNorthWest","southArrowNorthEast","northArrowSouth","northArrowSouthMiddleWest","northArrowSouthMiddleEast","northArrowSouthWest","northArrowSouthEast","viewportStickyNorth","limiter","fitInViewport","optimalPosition","_getOptimalPosition","parseInt","pin","unpin","_startPinning","_stopPinning","targetElement","limiterElement","scrollTarget","isWithinScrollTarget","isLimiterWithinScrollTarget","isText","parentElement","checkVisibility","ResizeObserver","generatePositions","sideOffset","arrowSideOffset","heightOffset","arrowHeightOffset","stickyVerticalOffset","northWestArrowSouthWest","targetRect","balloonRect","getNorthTop","northWestArrowSouthMiddleWest","northWestArrowSouth","northWestArrowSouthMiddleEast","northWestArrowSouthEast","northEastArrowSouthWest","northEastArrowSouthMiddleWest","northEastArrowSouth","northEastArrowSouthMiddleEast","northEastArrowSouthEast","southWestArrowNorthWest","getSouthTop","southWestArrowNorthMiddleWest","southWestArrowNorth","southWestArrowNorthMiddleEast","southWestArrowNorthEast","southEastArrowNorthWest","southEastArrowNorthMiddleWest","southEastArrowNorth","southEastArrowNorthMiddleEast","southEastArrowNorthEast","westArrowEast","eastArrowWest","boundaryRect","visibleBoundaryRect","getOptimalPosition","object","isElement","isRange","commonAncestorContainer","NARROW_ROOT_HEIGHT_THRESHOLD","NARROW_ROOT_WIDTH_THRESHOLD","Badge","_balloonView","_showBalloonThrottled","throttle","_showBalloon","leading","_lastFocusedEditableElement","_balloonClass","balloonClass","_handleEditorReady","balloon","_isEnabled","_updateLastFocusedEditableElement","_hideBalloon","_getNormalizedConfig","side","verticalOffset","horizontalOffset","attachOptions","_getBalloonAttachOptions","_createBalloonView","_createBadgeContent","badgeConfig","positioningFunction","getLowerRightCornerPosition","getLowerLeftCornerPosition","editableEditorElements","getEditableElementsNames","getEditableElement","focusedEditableElement","getLowerCornerPosition","rootRect","getBalloonLeft","visibleEditableElementRect","editableElementRect","balloonTop","balloonLeft","newBalloonPositionRect","newBalloonPositionVisibleRect","getArea","DEFAULT_LABEL","PoweredBy","forceVisible","licenseKey","licenseContent","parseBase64EncodedObject","whiteLabel","PoweredByView","userConfig","IconProjectLogo","isColorInherited","href","dragstart","SwitchButtonView","toggleSwitchView","_createToggleView","FileDialogButtonView","FileDialogViewMixin","FileDialogListItemButtonView","FileDialogView","_fileInputView","FileInputView","open","accept","multiple","files","CollapsibleView","childViews","_createButtonView","hidden","_collapsibleAriaLabelUid","IconDropdownArrow","isCollapsed","getLocalizedColorOptions","localizedColorNames","Black","Grey","White","Red","Orange","Yellow","Green","Aquamarine","Turquoise","Blue","Purple","colorOption","normalizeColorOptions","normalizeSingleColorDefinition","option","color","hasBorder","ColorTileView","IconColorTileCheck","backgroundColor","isMediaForcedColors","ColorGridView","columns","items","colorDefinitions","viewStyleAttribute","gridTemplateColumns","colorTile","selectedColor","convertColor","outputFormat","colorObject","parseColorString","space","canConvertParsedColor","fromColorSpace","toColorSpace","convertedColorChannels","hexValue","formatColorOutput","convertToHex","registerCustomElement","elementName","constructor","customElements","define","format","colorString","startsWith","parsedHex","parse","alpha","parsedColor","keys","convert","LabeledFieldView","fieldView","statusView","fieldWrapperChildren","viewCreator","viewUid","statusUid","_createLabelView","_createStatusView","errorText","infoText","InputBase","placeholder","readonly","input","_updateIsEmpty","_setDomElementValue","select","isEmpty","isInputElementEmpty","domElement","InputView","inputmode","InputTextView","InputNumberView","min","max","TextareaView","_isUpdateAutoGrowHeightPending","_validateMinMaxRows","resize","rows","wasVisible","_updateAutoGrowHeight","requestAnimationFrame","contentRect","shouldScroll","viewElement","offsetParent","singleLineContentClone","getTextareaElementClone","fullTextValueClone","singleLineContentStyles","ownerDocument","defaultView","getComputedStyle","verticalPaddings","parseFloat","paddingTop","paddingBottom","borders","getBorderWidths","lineHeight","verticalBorder","singleLineAreaDefaultHeight","numberOfLines","scrollHeight","maxHeight","maxRows","minHeight","minRows","_height","scrollTop","textareaView","cloneNode","overflow","tabIndex","DropdownPanelView","selectstart","tagName","toLocaleLowerCase","logWarning","childView","dropdownPanel","lastChild","DropdownView","panelView","listView","toolbarView","menuView","panelPosition","optimalPanelPosition","_panelPositions","_defaultPanelPositionName","closeDropdown","south","north","southEast","southWest","northEast","northWest","southMiddleEast","southMiddleWest","northMiddleEast","northMiddleWest","defaultPanelPositions","buttonRect","panelRect","DropdownButtonView","arrowView","_createArrowView","DropdownMenuListItemButtonView","DropdownMenuButtonView","ListItemView","ListSeparatorView","ListItemGroupView","nestedList","ListView","ariaLabelledBy","firstListItem","_listItemGroupToChangeListeners","WeakMap","_registerFocusableItemsGroup","_registerFocusableListItem","removed","_deregisterFocusableItemsGroup","_deregisterFocusableListItem","added","reverse","_getOnGroupItemsChangeCallback","groupView","groupIndex","registeredChildIndex","groupItemsChangeCallback","off","delete","DropdownMenuListView","NESTED_PANEL_HORIZONTAL_OFFSET","DropdownMenuPanelPositioningFunctions","eastSouth","eastNorth","westSouth","westNorth","DropdownMenuListItemView","parentMenuView","DropdownRootMenuBehaviors","toggleMenusAndFocusItemsOnHover","rootList","pathLeaf","menus","isListItemContainingMenu","closeMenuWhenAnotherOnTheSameLevelOpens","evtMenu","DropdownMenuBehaviors","openOnArrowRightKey","openOnButtonClick","openAndFocusOnEnterKeyPress","closeOnArrowLeftKey","closeOnEscKey","closeOnParentClose","DropdownMenuNestedMenuPanelView","DropdownMenuNestedMenuView","DELEGATED_EVENTS","_bodyCollection","bodyCollection","_handleParentMenuView","_attachBehaviors","_mountPanelOnOpen","_removePanelFromBody","_addPanelToBody","DropdownMenuRootListView","_definition","_cachedMenus","_cachedButtons","buttons","_createStructure","closeMenus","menu","createdView","listItemView","targetListView","ToolbarSeparatorView","ToolbarLineBreakView","normalizeToolbarConfig","removeItems","predefinedConfigOptions","NESTED_TOOLBAR_ICONS","alignLeft","IconAlignLeft","bold","IconBold","importExport","IconImportExport","paragraph","IconParagraph","plus","IconPlus","IconText","threeVerticalDots","IconThreeVerticalDots","pilcrow","IconPilcrow","dragIndicator","IconDragIndicator","ToolbarView","itemsView","_behavior","shouldGroupWhenFull","ItemsView","isRtl","classes","isFloating","maxWidth","DynamicGrouping","StaticLayout","fillFromConfig","itemsOrConfig","factory","_buildItemsFromConfig","switchBehavior","newBehaviorType","clear","refreshItems","normalizedRemoveItems","itemsToAdd","_cleanItemsConfiguration","_createNestedToolbarDropdown","create","filteredItems","idx","indexOf","_cleanSeparatorsAndLineBreaks","nonSeparatorPredicate","count","firstCommandItemIndex","findIndex","lastCommandItemIndex","isDuplicated","dropdownView","createDropdown","addToolbarToDropdown","isGrouping","bindTo","using","viewChildren","viewFocusables","viewItemsView","viewFocusTracker","viewLocale","ungroupedItems","groupedItems","groupedItemsDropdown","resizeObserver","cachedPadding","shouldUpdateGroupingOnNextResize","_createGroupedItemsDropdown","changeData","removedItem","currentIndex","addedItem","_updateGrouping","_enableGroupingOnResize","_enableGroupingOnMaxWidthChange","initialGroupedItemsCount","wereItemsGrouped","_areItemsOverflowing","_groupLastItem","_ungroupFirstItem","lastChildRect","toolbarRect","computedStyle","paddingProperty","Number","previousWidth","entry","dropdown","tooltipPosition","SplitButtonView","actionView","actionButton","_createActionView","ButtonClassOrInstance","addDefaultBehaviors","addMenuToDropdown","addMenuToOpenDropdown","dropdownMenuRootListView","buttonsOrCallback","addToolbarToOpenDropdown","enableActiveItemFocusOnDropdownOpen","focusChildOnDropdownOpen","isCompact","isVertical","addListToDropdown","itemsOrCallback","addListToOpenDropdown","bindViewCollectionItemsToDefinitions","childSelectorCallback","childToFocus","priorities","low","closeDropdownOnClickOutside","closeDropdownOnExecute","closeDropdownOnBlur","focusDropdownContentsOnArrows","focusDropdownButtonOnClose","focusDropdownPanelOnOpen","getFocusTrackerTreeElements","externalViews","flatMap","activeElement","listItems","bindDropdownToggleableButtonsAlignment","toggleableButtonsCount","pickListItemButtonIfPresent","pickListItemToggleableButtonIfPresent","listItemButtonView","updateAllButtonsCheckSpace","hasSpace","listItem","listItemButton","prevToggleable","currentToggleable","createLabeledInputText","labeledFieldView","inputView","ariaDescribedById","createLabeledInputNumber","inputMode","createLabeledTextarea","createLabeledDropdown","waitingTime","ColorPickerView","hexInputRow","_debounceColorPickerEvent","_config","_hexColor","_createInputRow","hideInput","debounce","newValue","return","convertColorToCommonHexFormat","picker","HexBase","_createSlidersView","styleSheetForFocusedColorPicker","shadowRoot","addEventListener","event","detail","isGecko","isiOS","isBlink","firstSlider","slidersView","colorPickersChildren","sliders","slider","SliderView","colorInput","_createColorInput","ColorPickerInputRowView","labeledInput","pickerColor","substring","inputValue","maybeHexColor","tryParseHexColor","isValid","resetValidationStatus","getParsedColor","inputColor","ret","toLowerCase","HashView","hashLessColor","replace","test","DocumentColorCollection","hasColor","ColorGridsFragmentView","documentColors","documentColorsCount","staticColorsGrid","documentColorsGrid","colorPickerButtonView","removeColorButtonView","_documentColorsLabel","_removeButtonLabel","_colorPickerLabel","colors","removeButtonLabel","documentColorsLabel","colorPickerLabel","_createRemoveColorButton","updateDocumentColors","attributeName","maxCount","getRoots","range","createRangeIn","getItems","is","hasAttribute","_addColorToDocumentColors","updateSelectedColors","_createStaticColorsGrid","_createDocumentColorsGrid","_createColorPickerButton","_addColorSelectorElementsToFocusTracker","addColorPickerButton","IconColorPalette","IconEraser","colorGrid","colorObj","predefinedColor","ColorPickerFragmentView","colorPickerView","saveButtonView","cancelButtonView","actionBarView","_colorPickerViewConfig","colorPickerViewConfig","_createActionButtons","_createActionBarView","_addColorPickersElementsToFocusTracker","_stopPropagationOnArrowsKeys","_executeOnEnterPress","_executeUponColorChange","actionBarRow","ColorSelectorView","colorGridsFragmentView","colorPickerFragmentView","appendUI","_appendColorGridsFragment","_appendColorPickerFragment","showColorPickerFragment","_isColorPickerFragmentVisible","_isColorGridsFragmentVisible","showColorGridsFragment","ComponentFactory","_components","Map","names","originalName","getNormalized","BALLOON_CLASS","TooltipManager","tooltipTextView","balloonPanelView","defaultBalloonPositions","_currentElementWithTooltip","_currentTooltipPosition","_mutationObserver","_pinTooltipDebounced","_unpinTooltipDebounced","_watchdogExcluded","_editors","Set","_instance","createMutationObserver","_updateTooltipPosition","_pinTooltip","_unpinTooltip","_onKeyDown","_onEnterOrFocus","_onLeaveOrBlur","_onScroll","editorBodyViewCollection","size","getPositioningFunctions","s","n","e","w","sw","se","domEvent","elementWithTooltipAttribute","getDescendantWithTooltip","getTooltipData","relatedTarget","balloonElement","isEnteringBalloon","isLeavingBalloon","descendantWithTooltip","relatedDescendantWithTooltip","targetDomElement","cssClass","bodyViewCollection","attach","detach","tooltipData","closest","dataset","ckeTooltipText","ckeTooltipPosition","ckeTooltipClass","mutationObserver","MutationObserver","observe","attributeFilter","disconnect","EvaluationBadge","licenseTypeMessage","evaluation","trial","development","licenseType","getLicenseTypeFromLicenseKey","Boolean","EvaluationBadgeView","poweredBySide","MenuBarMenuListItemView","MenuBarBehaviors","menuBarView","isFocusBorderEnabled","focusCycleMenusOnArrows","isContentRTL","cycleTopLevelMenus","currentMenuView","isCurrentMenuViewOpen","menusCount","menuViewToOpen","closeMenusWhenTheBarCloses","closeOnClickOutside","close","enableFocusHighlightOnInteraction","isKeyPressed","_","MenuBarMenuBehaviors","openAndFocusPanelOnArrowDownKey","toggleOnButtonClick","MenuBarMenuViewPanelPositioningFunctions","DefaultMenuBarItems","menuId","groupId","normalizeMenuBarConfig","configObject","cloneDeep","addItems","isUsingDefaultConfig","processMenuBarConfig","normalizedConfig","extraItems","configClone","handleAdditions","handleRemovals","purgeUnavailableComponents","purgeEmptyMenus","localizeMenuLabels","originalConfig","itemsToBeRemoved","successfullyRemovedItems","walkConfigMenus","menuDefinition","itemId","getIdFromGroupItem","itemName","menuBarConfig","successFullyAddedItems","itemToAdd","relation","getRelationFromPosition","relativeId","getRelativeIdFromPosition","isMenuBarMenuAddition","topLevelMenuDefinitionIndex","wasAdded","addMenuOrItemToGroup","isMenuBarMenuGroupAddition","group","relativeGroupIndex","addedItemConfig","itemOrMenuToAdd","groupItems","relativeItemIndex","groupItem","isItemUnavailable","parentMenuConfig","componentName","wasSubMenuPurged","warnAboutEmptyMenu","isMenuDefinition","emptyMenuConfig","localizedCategoryLabels","string","topLevelMenuDefinition","walk","match","EditorUI","tooltipManager","poweredBy","evaluationBadge","ariaLiveAnnouncer","isReady","_editableElementsMap","_focusableToolbarDefinitions","_extraMenuBarElements","_lastFocusedForeignElement","_domEmitter","_initViewportOffset","_readViewportOffsetFromConfig","_bindBodyCollectionWithFocusTracker","update","_handleScrollToTheSelection","_initFocusTracking","_initVisualViewportSupport","ckeditorInstance","setEditableElement","setUpKeystrokeHandler","removeEditableElement","addToolbar","extendMenuBar","initMenuBar","menuBarViewElement","normalizedMenuBarConfig","_saveLastFocusedForeignElement","viewportOffsetConfig","legacyOffsetConfig","console","warn","candidateDefinitions","currentFocusedToolbarDefinition","_getCurrentFocusedToolbarDefinition","_getFocusableCandidateToolbarDefinitions","candidateDefinition","shift","_focusFocusableCandidateToolbar","afterBlur","focusedToolbarDef","domRoots","toolbarDef","beforeFocus","defA","defB","getToolbarDefinitionWeight","candidateToolbarDefinition","configuredViewportOffset","visualTop","_getVisualViewportTopOffset","visualViewport","updateViewport","visualViewportOffsetTop","getVisualViewportOffset","viewportTopOffset","weight","isContextual","EditorUIView","toolbar","BoxedEditorUIView","main","_voiceLabelView","_createVoiceLabel","lang","uiLanguage","voiceLabel","EditableUIView","_editingView","_editableElement","_hasExternalElement","editableElement","contentLanguage","_updateIsFocusedClasses","hasExternalElement","isRenderingInProgress","updateAfterRender","addClass","removeClass","InlineEditableUIView","_options","getEditableAriaLabel","editableName","existingLabel","FormRowView","_role","_ariaLabelledBy","IframeView","sandbox","load","Promise","resolve","LabeledInputView","inputUid","_createInputView","filterGroupAndItemNames","regExp","totalItemsCount","resultsCount","isGroupLabelMatching","highlightText","isItemLabelMatching","visibleInGroupCount","Notification","ContextPlugin","alert","message","showSuccess","_showNotification","namespace","showInfo","showWarning","UIModel","properties","ContextualBalloon","positionLimiter","visibleStack","_viewToStack","_idToStack","_view","_rotatorView","_fakePanelsView","viewDocument","mapViewToDom","_createPanelView","hasView","stackId","_numberOfStacks","_visibleStack","singleViewMode","showStack","stack","_showView","_singleViewMode","visibleView","_showNextStack","hideView","_getStackId","getPositionOptions","pop","_createRotatorView","_createFakePanelsView","entries","stacks","_showPrevStack","RotatorView","isSingleViewMode","numberOfStacks","buttonNextView","buttonPrevView","FakePanelsView","number","showPanels","balloonClassName","showView","IconPreviousArrow","IconNextArrow","_balloonPanelView","_addPanels","_removePanels","numberOfPanels","StickyPanelView","contentPanelElement","_contentPanelPlaceholder","display","isSticky","_contentPanelRect","getBoundingClientRect","marginLeft","checkIfShouldBeSticky","isActive","_unstick","limiterRect","visibleLimiterRect","windowRect","visualViewportOffsetLeft","limiterBottomOffset","stickyBottomOffset","_stickToBottomOfLimiter","_stickToTopOfAncestors","topOffset","_isStickyToTheBottomOfLimiter","_stickyTopOffset","_stickyBottomOffset","_marginLeft","scrollX","SearchTextQueryView","resetButtonView","_viewConfig","viewConfig","showResetButton","showIcon","creator","IconLoupe","SearchInfoView","primaryText","secondaryText","SearchResultsView","SearchTextView","resultsView","filteredView","infoView","queryView","_createSearchTextQueryView","focusableChildren","instance","_enableDefaultInfoViewBehavior","focusableChild","scrollTo","query","RegExp","escapeRegExp","filteringResults","defaultTextConfig","notFound","primary","secondary","noSearchableItems","normalizeInfoText","AutocompleteView","bindResultsView","_updateResultsVisibility","resetOnBlur","_updateResultsViewWidthAndPosition","_width","optimalResultsPosition","defaultResultsPositions","_position","queryMinChars","queryLength","fieldRect","resultsRect","HighlightedTextView","_updateInnerHTML","markText","newInnerHTML","escape","textParts","lastMatchEnd","matchInfo","exec","curMatchStart","isMatch","lastIndex","outputHtml","ButtonLabelWithHighlightView","LabelWithHighlightView","SpinnerView","BalloonToolbar","_balloonConfig","_balloon","_fireSelectionChangeDebounced","_createToolbarView","_trackFocusableEditableElements","isToolbarVisible","directChange","shouldNotGroupWhenFull","editable","_updatePosition","showForCollapsedSelection","selectionContainsOnlyMultipleSelectables","_getBalloonPositionData","addObserver","TrackEditableElements","Observer","stopObserving","viewSelection","isBackward","getFirstRange","getLastRange","rangeRects","getDomRangeRects","viewRangeToDom","_getBalloonPositions","isSafariIniOS","scale","rangeCount","getRanges","getContainedElement","isSelectable","BlockButtonView","BlockToolbar","_blockToolbarConfig","_hidePanel","editBlockText","dragToMoveText","editBlockLabel","isDragDropBlockToolbarPluginLoaded","_updateButton","_repositionButtonOnScroll","_showPanel","iconFromConfig","_hideButton","canEditAt","modelTarget","getSelectedBlocks","domTarget","mapper","toViewElement","_setupToolbarResize","_attachButtonToElement","_getSelectedEditableElement","_getToolbarMaxWidth","selectedModelRootName","focusEditable","pendingAnimationFrame","repositionOnScroll","getAncestors","usePassive","buttonElement","contentStyles","editableRect","contentPaddingTop","contentLineHeight","fontSize","positionLeft","positionTop","absoluteButtonRect","toAbsoluteRect","_clipButtonToViewport","scrollViewportRect","setButtonClipping","paths","clipPath","markAsHidden","isHidden","pointerEvents","delta","isRTL","offset","MenuBarMenuButtonView","MenuBarMenuPanelView","MenuBarMenuView","_repositionPanelOnOpen","_propagateArrowKeystrokeEvents","_defaultMenuPositionName","MenuBarMenuListView","_setItemsCheckSpace","hasAnyToggleableItem","listButtonView","pickListButtonMenuViewIfPresent","isNestedMenuLikeView","MenuBarMenuListItemFileDialogButtonView","EVENT_NAME_DELEGATES","MenuBarView","_setupIsOpenUpdater","processedConfig","topLevelCategoryMenuViews","_createMenu","topLevelCategoryMenuView","disable","enable","registerMenu","_createMenuItems","menuGroupDefinition","itemDefinition","menuItemView","componentView","_createMenuItemContentFromFactory","_registerMenuTree","menuBarItemsList","nonSeparatorItems","closeTimeout","clearTimeout"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105],"debugId":null}}]
}