# Generated by Django 4.2.23 on 2025-09-30 05:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tags', '0002_alter_tag_name'),
        ('genres', '0002_alter_genre_name'),
        ('novel', '0007_novel_metadata_fields'),
    ]

    operations = [
        migrations.AlterField(
            model_name='bookmark',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='When was this bookmark created?'),
        ),
        migrations.AlterField(
            model_name='bookmark',
            name='novel',
            field=models.ForeignKey(help_text='The novel that is being bookmarked.', on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to='novel.novel'),
        ),
        migrations.AlterField(
            model_name='bookmark',
            name='user',
            field=models.ForeignKey(help_text='The user who is bookmarking the novel.', on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='featurednovel',
            name='featured_at',
            field=models.DateTimeField(auto_now_add=True, help_text='When was this novel featured?'),
        ),
        migrations.AlterField(
            model_name='featurednovel',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Is this feature currently active?'),
        ),
        migrations.AlterField(
            model_name='featurednovel',
            name='novel',
            field=models.ForeignKey(help_text="The novel that we're featuring.", on_delete=django.db.models.deletion.CASCADE, related_name='featured_entries', to='novel.novel'),
        ),
        migrations.AlterField(
            model_name='novel',
            name='author',
            field=models.ForeignKey(help_text='The brilliant author behind the novel.', on_delete=django.db.models.deletion.CASCADE, related_name='novels', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='novel',
            name='collections',
            field=models.PositiveIntegerField(default=0, help_text='How many users have this novel in their collection?'),
        ),
        migrations.AlterField(
            model_name='novel',
            name='cover_image',
            field=models.ImageField(blank=True, help_text='The cover image of the novel. A picture is worth a thousand words!', null=True, upload_to='novel_covers/'),
        ),
        migrations.AlterField(
            model_name='novel',
            name='cover_image_large',
            field=models.ImageField(blank=True, help_text='A larger version of the cover image.', null=True, upload_to='novel_covers_large/'),
        ),
        migrations.AlterField(
            model_name='novel',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='When was this novel first created?'),
        ),
        migrations.AlterField(
            model_name='novel',
            name='genres',
            field=models.ManyToManyField(blank=True, help_text='Genres that this novel belongs to.', related_name='novels', to='genres.genre'),
        ),
        migrations.AlterField(
            model_name='novel',
            name='language',
            field=models.CharField(default='English', help_text='Primary language of the novel.', max_length=50),
        ),
        migrations.AlterField(
            model_name='novel',
            name='last_updated',
            field=models.DateTimeField(auto_now=True, help_text='When was this novel last updated?'),
        ),
        migrations.AlterField(
            model_name='novel',
            name='likes',
            field=models.PositiveIntegerField(default=0, help_text='How many users have liked this novel? ‚ù§Ô∏è'),
        ),
        migrations.AlterField(
            model_name='novel',
            name='rating',
            field=models.DecimalField(decimal_places=1, default=0.0, help_text='The average rating of the novel. Out of 5 stars! ‚≠ê', max_digits=3),
        ),
        migrations.AlterField(
            model_name='novel',
            name='reviews_count',
            field=models.PositiveIntegerField(default=0, help_text='The total number of reviews for this novel.'),
        ),
        migrations.AlterField(
            model_name='novel',
            name='short_synopsis',
            field=models.CharField(blank=True, help_text='A shorter version of the synopsis for previews.', max_length=500),
        ),
        migrations.AlterField(
            model_name='novel',
            name='slug',
            field=models.SlugField(blank=True, help_text='A URL-friendly version of the title. Auto-generated if you leave it blank!', max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name='novel',
            name='status',
            field=models.CharField(choices=[('Draft', 'Draft'), ('Completed', 'Completed')], default='Draft', help_text='The current status of the novel.', max_length=20),
        ),
        migrations.AlterField(
            model_name='novel',
            name='synopsis',
            field=models.TextField(blank=True, help_text='The full summary of the novel. Get your readers hooked!'),
        ),
        migrations.AlterField(
            model_name='novel',
            name='tags',
            field=models.ManyToManyField(blank=True, help_text='Tags that describe the novel.', related_name='novels', to='tags.tag'),
        ),
        migrations.AlterField(
            model_name='novel',
            name='title',
            field=models.CharField(help_text='The title of the novel. Make it catchy! üé£', max_length=255),
        ),
        migrations.AlterField(
            model_name='novel',
            name='views',
            field=models.PositiveIntegerField(default=0, help_text='How many times has this novel been viewed? üëÅÔ∏è'),
        ),
    ]
