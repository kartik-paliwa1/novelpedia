{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///home/matei/NovelPedia/App/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"file":"bytesToString.mjs","sources":["file:///home/matei/NovelPedia/App/node_modules/%40aws-amplify/core/src/utils/convert/base64/bytesToString.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function bytesToString(input) {\n    return Array.from(input, byte => String.fromCodePoint(byte)).join('');\n}\n"],"names":[],"mappings":"AAAA,qEAAA;AACA,sCAAA;;;;AACO,SAAS,aAAa,CAAC,KAAK,EAAE;IACjC,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,GAAE,IAAI,GAAI,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;AACzE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"file":"base64Encoder.mjs","sources":["file:///home/matei/NovelPedia/App/node_modules/%40aws-amplify/core/src/utils/convert/base64/base64Encoder.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getBtoa } from '../../globalHelpers';\nimport { bytesToString } from './bytesToString';\nexport const base64Encoder = {\n    /**\n     * Convert input to base64-encoded string\n     * @param input - string to convert to base64\n     * @param options - encoding options that can optionally produce a base64url string\n     * @returns base64-encoded string\n     */\n    convert(input, options = {\n        urlSafe: false,\n        skipPadding: false,\n    }) {\n        const inputStr = typeof input === 'string' ? input : bytesToString(input);\n        let encodedStr = getBtoa()(inputStr);\n        // urlSafe char replacement and skipPadding options conform to the base64url spec\n        // https://datatracker.ietf.org/doc/html/rfc4648#section-5\n        if (options.urlSafe) {\n            encodedStr = encodedStr.replace(/\\+/g, '-').replace(/\\//g, '_');\n        }\n        if (options.skipPadding) {\n            encodedStr = encodedStr.replace(/=/g, '');\n        }\n        return encodedStr;\n    },\n};\n"],"names":[],"mappings":";;;;;;;AAAA,qEAAA;AACA,sCAAA;AAGY,MAAC,aAAa,GAAG;IAC7B;;;;;KAKA,GACI,OAAO,EAAC,KAAK,EAAE,OAAO,GAAG;QACrB,OAAO,EAAE,KAAK;QACd,WAAW,EAAE,KAAK;IAC1B,CAAK,EAAE;QACC,MAAM,QAAQ,GAAG,OAAO,KAAK,KAAK,QAAQ,GAAG,KAAK,+MAAG,gBAAA,AAAa,EAAC,KAAK,CAAC;QACzE,IAAI,UAAU,mMAAG,UAAA,AAAO,EAAE,EAAC,QAAQ,CAAC;QAC5C,iFAAA;QACA,0DAAA;QACQ,IAAI,OAAO,CAAC,OAAO,EAAE;YACjB,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;QACnE;QACA,IAAI,OAAO,CAAC,WAAW,EAAE;YACrB,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;QAC7C;QACA,OAAO,UAAU;IACrB,CAAC;AACL","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"file":"getDeviceName.mjs","sources":["file:///home/matei/NovelPedia/App/node_modules/%40aws-amplify/core/src/utils/deviceName/getDeviceName.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Retrieves the device name using the User-Agent Client Hints API if available,\n * falling back to the traditional userAgent string if not.\n *\n * @returns {Promise<string>} A promise that resolves with a string representing the device name.\n *\n * Example Output:\n * navigator.userAgentData:\n *   'macOS 14.2.1 arm macOS Not A(Brand/99.0.0.0;Google Chrome/121.0.6167.160;Chromium/121.0.6167.160'\n * navigator.userAgent:\n *   'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0'\n */\nexport const getDeviceName = async () => {\n    const { userAgentData } = navigator;\n    if (!userAgentData)\n        return navigator.userAgent;\n    const { platform = '', platformVersion = '', model = '', architecture = '', fullVersionList = [], } = await userAgentData.getHighEntropyValues([\n        'platform',\n        'platformVersion',\n        'architecture',\n        'model',\n        'fullVersionList',\n    ]);\n    const versionList = fullVersionList\n        .map((v) => `${v.brand}/${v.version}`)\n        .join(';');\n    const deviceName = [\n        platform,\n        platformVersion,\n        architecture,\n        model,\n        platform,\n        versionList,\n    ]\n        .filter(value => value)\n        .join(' ');\n    return deviceName || navigator.userAgent;\n};\n"],"names":[],"mappings":"AAAA,qEAAA;AACA,sCAAA;AACA;;;;;;;;;;;CAWA;;;AACY,MAAC,aAAa,GAAG,YAAY;IACrC,MAAM,EAAE,aAAa,EAAE,GAAG,SAAS;IACnC,IAAI,CAAC,aAAa,EACd,OAAO,SAAS,CAAC,SAAS;IAC9B,MAAM,EAAE,QAAQ,GAAG,EAAE,EAAE,eAAe,GAAG,EAAE,EAAE,KAAK,GAAG,EAAE,EAAE,YAAY,GAAG,EAAE,EAAE,eAAe,GAAG,EAAE,EAAG,GAAG,MAAM,aAAa,CAAC,oBAAoB,CAAC;QAC3I,UAAU;QACV,iBAAiB;QACjB,cAAc;QACd,OAAO;QACP,iBAAiB;KACpB,CAAC;IACF,MAAM,WAAW,GAAG,gBACf,GAAG,CAAC,CAAC,CAAC,GAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,EACpC,IAAI,CAAC,GAAG,CAAC;IACd,MAAM,UAAU,GAAG;QACf,QAAQ;QACR,eAAe;QACf,YAAY;QACZ,KAAK;QACL,QAAQ;QACR,WAAW;KACnB,CACS,MAAM,EAAC,KAAK,GAAI,KAAK,EACrB,IAAI,CAAC,GAAG,CAAC;IACd,OAAO,UAAU,IAAI,SAAS,CAAC,SAAS;AAC5C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"file":"cryptoSecureRandomInt.mjs","sources":["file:///home/matei/NovelPedia/App/node_modules/%40aws-amplify/core/src/utils/cryptoSecureRandomInt.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getCrypto } from './globalHelpers';\n/*\n * Cryptographically secure pseudorandom number generator\n * As Math.random() is cryptographically not safe to use\n */\nexport function cryptoSecureRandomInt() {\n    const crypto = getCrypto();\n    const randomResult = crypto.getRandomValues(new Uint32Array(1))[0];\n    return randomResult;\n}\n"],"names":[],"mappings":";;;;;AAAA,qEAAA;AACA,sCAAA;AAEA;;;CAGA,GACO,SAAS,qBAAqB,GAAG;IACpC,MAAM,MAAM,mMAAG,YAAA,AAAS,EAAE;IAC1B,MAAM,YAAY,GAAG,MAAM,CAAC,eAAe,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClE,OAAO,YAAY;AACvB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"file":"WordArray.mjs","sources":["file:///home/matei/NovelPedia/App/node_modules/%40aws-amplify/core/src/utils/WordArray.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { cryptoSecureRandomInt } from './cryptoSecureRandomInt';\n/**\n * Hex encoding strategy.\n * Converts a word array to a hex string.\n * @param {WordArray} wordArray The word array.\n * @return {string} The hex string.\n * @static\n */\nfunction hexStringify(wordArray) {\n    // Shortcuts\n    const { words } = wordArray;\n    const { sigBytes } = wordArray;\n    // Convert\n    const hexChars = [];\n    for (let i = 0; i < sigBytes; i++) {\n        const bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n        hexChars.push((bite >>> 4).toString(16));\n        hexChars.push((bite & 0x0f).toString(16));\n    }\n    return hexChars.join('');\n}\nexport class WordArray {\n    constructor(words, sigBytes) {\n        this.words = [];\n        let Words = words;\n        Words = this.words = Words || [];\n        if (sigBytes !== undefined) {\n            this.sigBytes = sigBytes;\n        }\n        else {\n            this.sigBytes = Words.length * 4;\n        }\n    }\n    random(nBytes) {\n        const words = [];\n        for (let i = 0; i < nBytes; i += 4) {\n            words.push(cryptoSecureRandomInt());\n        }\n        return new WordArray(words, nBytes);\n    }\n    toString() {\n        return hexStringify(this);\n    }\n}\n"],"names":[],"mappings":";;;;;AAAA,qEAAA;AACA,sCAAA;AAEA;;;;;;CAMA,GACA,SAAS,YAAY,CAAC,SAAS,EAAE;IACjC,YAAA;IACI,MAAM,EAAE,KAAK,EAAE,GAAG,SAAS;IAC3B,MAAM,EAAE,QAAQ,EAAE,GAAG,SAAS;IAClC,UAAA;IACI,MAAM,QAAQ,GAAG,EAAE;IACnB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,CAAE;QAC/B,MAAM,IAAI,GAAG,AAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,KAAM,EAAE,GAAG,AAAC,CAAC,GAAG,CAAC,GAAI,CAAC,CAAC,EAAI,IAAI;QAC3D,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;QACxC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,IAAI,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC7C;IACA,OAAO,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC;AAC5B;AACO,MAAM,SAAS,CAAC;IACnB,WAAW,CAAC,KAAK,EAAE,QAAQ,CAAE;QACzB,IAAI,CAAC,KAAK,GAAG,EAAE;QACf,IAAI,KAAK,GAAG,KAAK;QACjB,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,EAAE;QAChC,IAAI,QAAQ,KAAK,SAAS,EAAE;YACxB,IAAI,CAAC,QAAQ,GAAG,QAAQ;QAC5B,OACK;YACD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC;QACpC;IACJ;IACA,MAAM,CAAC,MAAM,EAAE;QACX,MAAM,KAAK,GAAG,EAAE;QAChB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,CAAE;YAChC,KAAK,CAAC,IAAI,CAAC,uNAAA,AAAqB,EAAE,CAAC;QACvC;QACA,OAAO,IAAI,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC;IACvC;IACA,QAAQ,GAAG;QACP,OAAO,YAAY,CAAC,IAAI,CAAC;IAC7B;AACJ","ignoreList":[0],"debugId":null}}]
}